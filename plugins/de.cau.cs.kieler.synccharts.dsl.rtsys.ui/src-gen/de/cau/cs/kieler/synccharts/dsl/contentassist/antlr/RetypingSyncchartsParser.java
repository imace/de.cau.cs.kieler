/*
* generated by Xtext
*/
package de.cau.cs.kieler.synccharts.dsl.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.CharStream;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.cau.cs.kieler.synccharts.dsl.services.RetypingSyncchartsGrammarAccess;

public class RetypingSyncchartsParser extends AbstractContentAssistParser {
	
	@Inject
	private RetypingSyncchartsGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.cau.cs.kieler.synccharts.dsl.contentassist.antlr.internal.InternalRetypingSyncchartsLexer createLexer(CharStream stream) {
		return new de.cau.cs.kieler.synccharts.dsl.contentassist.antlr.internal.InternalRetypingSyncchartsLexer(stream);
	}
	
	@Override
	protected de.cau.cs.kieler.synccharts.dsl.contentassist.antlr.internal.InternalRetypingSyncchartsParser createParser() {
		de.cau.cs.kieler.synccharts.dsl.contentassist.antlr.internal.InternalRetypingSyncchartsParser result = new de.cau.cs.kieler.synccharts.dsl.contentassist.antlr.internal.InternalRetypingSyncchartsParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				{
					put(grammarAccess.getStateAccess().getAlternatives_0(), "rule__State__Alternatives_0");
					put(grammarAccess.getStateTypeAccess().getAlternatives(), "rule__StateType__Alternatives");
					put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
					put(grammarAccess.getStateAccess().getGroup_0_1(), "rule__State__Group_0_1__0");
					put(grammarAccess.getStateAccess().getGroup_0_2(), "rule__State__Group_0_2__0");
					put(grammarAccess.getStateAccess().getGroup_0_4(), "rule__State__Group_0_4__0");
					put(grammarAccess.getStateAccess().getGroup_0_5(), "rule__State__Group_0_5__0");
					put(grammarAccess.getStateAccess().getGroup_0_7(), "rule__State__Group_0_7__0");
					put(grammarAccess.getStateAccess().getGroup_0_8(), "rule__State__Group_0_8__0");
					put(grammarAccess.getStateAccess().getGroup_0_9(), "rule__State__Group_0_9__0");
					put(grammarAccess.getStateAccess().getGroup_0_10(), "rule__State__Group_0_10__0");
					put(grammarAccess.getStateAccess().getGroup_0_11(), "rule__State__Group_0_11__0");
					put(grammarAccess.getStateAccess().getGroup_0_12(), "rule__State__Group_0_12__0");
					put(grammarAccess.getStateAccess().getGroup_0_13(), "rule__State__Group_0_13__0");
					put(grammarAccess.getStateAccess().getGroup_0_14(), "rule__State__Group_0_14__0");
					put(grammarAccess.getStateAccess().getGroup_0_15(), "rule__State__Group_0_15__0");
					put(grammarAccess.getStateAccess().getGroup_0_16(), "rule__State__Group_0_16__0");
					put(grammarAccess.getEntryActionAccess().getGroup(), "rule__EntryAction__Group__0");
					put(grammarAccess.getExitActionAccess().getGroup(), "rule__ExitAction__Group__0");
					put(grammarAccess.getInnerActionAccess().getGroup(), "rule__InnerAction__Group__0");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_0(), "rule__State__IsInitialAssignment_0_0");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_1_0(), "rule__State__IsInitialAssignment_0_1_0");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_1_1(), "rule__State__IsFinalAssignment_0_1_1");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_2_0(), "rule__State__IsInitialAssignment_0_2_0");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_2_1(), "rule__State__StateKindAssignment_0_2_1");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_3(), "rule__State__StateKindAssignment_0_3");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_4_0(), "rule__State__StateKindAssignment_0_4_0");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_4_1(), "rule__State__IsInitialAssignment_0_4_1");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_5_0(), "rule__State__StateKindAssignment_0_5_0");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_5_1(), "rule__State__IsFinalAssignment_0_5_1");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_6(), "rule__State__IsFinalAssignment_0_6");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_7_0(), "rule__State__IsFinalAssignment_0_7_0");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_7_1(), "rule__State__IsInitialAssignment_0_7_1");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_8_0(), "rule__State__IsFinalAssignment_0_8_0");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_8_1(), "rule__State__StateKindAssignment_0_8_1");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_9_0(), "rule__State__StateKindAssignment_0_9_0");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_9_1(), "rule__State__IsFinalAssignment_0_9_1");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_9_2(), "rule__State__IsInitialAssignment_0_9_2");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_10_0(), "rule__State__IsInitialAssignment_0_10_0");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_10_1(), "rule__State__IsFinalAssignment_0_10_1");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_10_2(), "rule__State__StateKindAssignment_0_10_2");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_11_0(), "rule__State__IsInitialAssignment_0_11_0");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_11_1(), "rule__State__IsFinalAssignment_0_11_1");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_11_2(), "rule__State__StateKindAssignment_0_11_2");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_12_0(), "rule__State__IsInitialAssignment_0_12_0");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_12_1(), "rule__State__StateKindAssignment_0_12_1");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_12_2(), "rule__State__IsFinalAssignment_0_12_2");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_13_0(), "rule__State__IsFinalAssignment_0_13_0");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_13_1(), "rule__State__IsInitialAssignment_0_13_1");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_13_2(), "rule__State__StateKindAssignment_0_13_2");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_14_0(), "rule__State__IsFinalAssignment_0_14_0");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_14_1(), "rule__State__StateKindAssignment_0_14_1");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_14_2(), "rule__State__IsInitialAssignment_0_14_2");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_15_0(), "rule__State__StateKindAssignment_0_15_0");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_15_1(), "rule__State__IsInitialAssignment_0_15_1");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_15_2(), "rule__State__IsFinalAssignment_0_15_2");
					put(grammarAccess.getStateAccess().getStateKindAssignment_0_16_0(), "rule__State__StateKindAssignment_0_16_0");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_0_16_1(), "rule__State__IsFinalAssignment_0_16_1");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_0_16_2(), "rule__State__IsInitialAssignment_0_16_2");
					put(grammarAccess.getStateAccess().getStateNameAssignment_2(), "rule__State__StateNameAssignment_2");
					put(grammarAccess.getStateAccess().getLabelAssignment_3(), "rule__State__LabelAssignment_3");
					put(grammarAccess.getEntryActionAccess().getEntryActionAssignment_1(), "rule__EntryAction__EntryActionAssignment_1");
					put(grammarAccess.getExitActionAccess().getExitAssignment_1(), "rule__ExitAction__ExitAssignment_1");
					put(grammarAccess.getInnerActionAccess().getInnerAssignment_1(), "rule__InnerAction__InnerAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.cau.cs.kieler.synccharts.dsl.contentassist.antlr.internal.InternalRetypingSyncchartsParser typedParser = (de.cau.cs.kieler.synccharts.dsl.contentassist.antlr.internal.InternalRetypingSyncchartsParser) parser;
			typedParser.entryRuleState();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public RetypingSyncchartsGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(RetypingSyncchartsGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
