/*
* generated by Xtext
*/

package de.cau.cs.kieler.synccharts.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;

import org.eclipse.xtext.service.GrammarProvider;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class KitsGrammarAccess implements IGrammarAccess {
	
	
	public class RegionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Region");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cRegionKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cIdAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0_1_0 = (RuleCall)cIdAssignment_0_1.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Assignment cVariablesAssignment_1_0 = (Assignment)cAlternatives_1.eContents().get(0);
		private final RuleCall cVariablesVariableParserRuleCall_1_0_0 = (RuleCall)cVariablesAssignment_1_0.eContents().get(0);
		private final Assignment cSignalsAssignment_1_1 = (Assignment)cAlternatives_1.eContents().get(1);
		private final RuleCall cSignalsSignalParserRuleCall_1_1_0 = (RuleCall)cSignalsAssignment_1_1.eContents().get(0);
		private final Assignment cInnerStatesAssignment_1_2 = (Assignment)cAlternatives_1.eContents().get(2);
		private final RuleCall cInnerStatesStateParserRuleCall_1_2_0 = (RuleCall)cInnerStatesAssignment_1_2.eContents().get(0);
		
		//Region returns sync::Region:
		//  ("region" id=ID)? (variables+=Variable|signals+=Signal|innerStates+=State)+;
		public ParserRule getRule() { return rule; }

		//("region" id=ID)? (variables+=Variable|signals+=Signal|innerStates+=State)+
		public Group getGroup() { return cGroup; }

		//("region" id=ID)?
		public Group getGroup_0() { return cGroup_0; }

		//"region"
		public Keyword getRegionKeyword_0_0() { return cRegionKeyword_0_0; }

		//id=ID
		public Assignment getIdAssignment_0_1() { return cIdAssignment_0_1; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_0_1_0() { return cIdIDTerminalRuleCall_0_1_0; }

		//(variables+=Variable|signals+=Signal|innerStates+=State)+
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//variables+=Variable
		public Assignment getVariablesAssignment_1_0() { return cVariablesAssignment_1_0; }

		//Variable
		public RuleCall getVariablesVariableParserRuleCall_1_0_0() { return cVariablesVariableParserRuleCall_1_0_0; }

		//signals+=Signal
		public Assignment getSignalsAssignment_1_1() { return cSignalsAssignment_1_1; }

		//Signal
		public RuleCall getSignalsSignalParserRuleCall_1_1_0() { return cSignalsSignalParserRuleCall_1_1_0; }

		//innerStates+=State
		public Assignment getInnerStatesAssignment_1_2() { return cInnerStatesAssignment_1_2; }

		//State
		public RuleCall getInnerStatesStateParserRuleCall_1_2_0() { return cInnerStatesStateParserRuleCall_1_2_0; }
	}

	public class StateElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "State");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final Group cGroup_0_0_0 = (Group)cGroup_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_0_0_0 = (Assignment)cGroup_0_0_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_0_0_0_0 = (Keyword)cIsInitialAssignment_0_0_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_0_0_1 = (Assignment)cGroup_0_0_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_0_0_0_1_0 = (Keyword)cIsFinalAssignment_0_0_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_0_1_0 = (RuleCall)cTypeAssignment_0_0_1.eContents().get(0);
		private final Keyword cStateKeyword_0_0_2 = (Keyword)cGroup_0_0.eContents().get(2);
		private final Assignment cIdAssignment_0_0_3 = (Assignment)cGroup_0_0.eContents().get(3);
		private final RuleCall cIdFullStateIDParserRuleCall_0_0_3_0 = (RuleCall)cIdAssignment_0_0_3.eContents().get(0);
		private final Group cGroup_0_1 = (Group)cAlternatives_0.eContents().get(1);
		private final Group cGroup_0_1_0 = (Group)cGroup_0_1.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_1_0_0 = (Assignment)cGroup_0_1_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_1_0_0_0 = (Keyword)cIsInitialAssignment_0_1_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_1_0_1 = (Assignment)cGroup_0_1_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_0_1_0_1_0 = (Keyword)cIsFinalAssignment_0_1_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_1_1 = (Assignment)cGroup_0_1.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_1_1_0 = (RuleCall)cTypeAssignment_0_1_1.eContents().get(0);
		private final Keyword cStateKeyword_0_1_2 = (Keyword)cGroup_0_1.eContents().get(2);
		private final Group cGroup_0_2 = (Group)cAlternatives_0.eContents().get(2);
		private final Group cGroup_0_2_0 = (Group)cGroup_0_2.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_2_0_0 = (Assignment)cGroup_0_2_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_2_0_0_0 = (Keyword)cIsInitialAssignment_0_2_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_2_0_1 = (Assignment)cGroup_0_2_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_0_2_0_1_0 = (Keyword)cIsFinalAssignment_0_2_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_2_1 = (Assignment)cGroup_0_2.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_2_1_0 = (RuleCall)cTypeAssignment_0_2_1.eContents().get(0);
		private final Assignment cIdAssignment_0_2_2 = (Assignment)cGroup_0_2.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_0_2_2_0 = (RuleCall)cIdAssignment_0_2_2.eContents().get(0);
		private final Group cGroup_0_3 = (Group)cAlternatives_0.eContents().get(3);
		private final Group cGroup_0_3_0 = (Group)cGroup_0_3.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_3_0_0 = (Assignment)cGroup_0_3_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_3_0_0_0 = (Keyword)cIsInitialAssignment_0_3_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_3_0_1 = (Assignment)cGroup_0_3_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_0_3_0_1_0 = (Keyword)cIsFinalAssignment_0_3_0_1.eContents().get(0);
		private final Keyword cStateKeyword_0_3_1 = (Keyword)cGroup_0_3.eContents().get(1);
		private final Assignment cIdAssignment_0_3_2 = (Assignment)cGroup_0_3.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_0_3_2_0 = (RuleCall)cIdAssignment_0_3_2.eContents().get(0);
		private final Group cGroup_0_4 = (Group)cAlternatives_0.eContents().get(4);
		private final Group cGroup_0_4_0 = (Group)cGroup_0_4.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_4_0_0 = (Assignment)cGroup_0_4_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_4_0_0_0 = (Keyword)cIsInitialAssignment_0_4_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_4_0_1 = (Assignment)cGroup_0_4_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_0_4_0_1_0 = (Keyword)cIsFinalAssignment_0_4_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_4_1 = (Assignment)cGroup_0_4.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_4_1_0 = (RuleCall)cTypeAssignment_0_4_1.eContents().get(0);
		private final Group cGroup_0_5 = (Group)cAlternatives_0.eContents().get(5);
		private final Group cGroup_0_5_0 = (Group)cGroup_0_5.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_5_0_0 = (Assignment)cGroup_0_5_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_5_0_0_0 = (Keyword)cIsInitialAssignment_0_5_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_5_0_1 = (Assignment)cGroup_0_5_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_0_5_0_1_0 = (Keyword)cIsFinalAssignment_0_5_0_1.eContents().get(0);
		private final Keyword cStateKeyword_0_5_1 = (Keyword)cGroup_0_5.eContents().get(1);
		private final Group cGroup_0_6 = (Group)cAlternatives_0.eContents().get(6);
		private final Group cGroup_0_6_0 = (Group)cGroup_0_6.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_6_0_0 = (Assignment)cGroup_0_6_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_6_0_0_0 = (Keyword)cIsInitialAssignment_0_6_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_6_0_1 = (Assignment)cGroup_0_6_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_0_6_0_1_0 = (Keyword)cIsFinalAssignment_0_6_0_1.eContents().get(0);
		private final Assignment cIdAssignment_0_6_1 = (Assignment)cGroup_0_6.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_0_6_1_0 = (RuleCall)cIdAssignment_0_6_1.eContents().get(0);
		private final Group cGroup_0_7 = (Group)cAlternatives_0.eContents().get(7);
		private final Assignment cIsInitialAssignment_0_7_0 = (Assignment)cGroup_0_7.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_7_0_0 = (Keyword)cIsInitialAssignment_0_7_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_7_1 = (Assignment)cGroup_0_7.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_0_7_1_0 = (Keyword)cIsFinalAssignment_0_7_1.eContents().get(0);
		private final Group cGroup_0_8 = (Group)cAlternatives_0.eContents().get(8);
		private final Group cGroup_0_8_0 = (Group)cGroup_0_8.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_8_0_0 = (Assignment)cGroup_0_8_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_8_0_0_0 = (Keyword)cIsFinalAssignment_0_8_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_8_0_1 = (Assignment)cGroup_0_8_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_0_8_0_1_0 = (Keyword)cIsInitialAssignment_0_8_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_8_1 = (Assignment)cGroup_0_8.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_8_1_0 = (RuleCall)cTypeAssignment_0_8_1.eContents().get(0);
		private final Keyword cStateKeyword_0_8_2 = (Keyword)cGroup_0_8.eContents().get(2);
		private final Assignment cIdAssignment_0_8_3 = (Assignment)cGroup_0_8.eContents().get(3);
		private final RuleCall cIdFullStateIDParserRuleCall_0_8_3_0 = (RuleCall)cIdAssignment_0_8_3.eContents().get(0);
		private final Group cGroup_0_9 = (Group)cAlternatives_0.eContents().get(9);
		private final Group cGroup_0_9_0 = (Group)cGroup_0_9.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_9_0_0 = (Assignment)cGroup_0_9_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_9_0_0_0 = (Keyword)cIsFinalAssignment_0_9_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_9_0_1 = (Assignment)cGroup_0_9_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_0_9_0_1_0 = (Keyword)cIsInitialAssignment_0_9_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_9_1 = (Assignment)cGroup_0_9.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_9_1_0 = (RuleCall)cTypeAssignment_0_9_1.eContents().get(0);
		private final Keyword cStateKeyword_0_9_2 = (Keyword)cGroup_0_9.eContents().get(2);
		private final Group cGroup_0_10 = (Group)cAlternatives_0.eContents().get(10);
		private final Group cGroup_0_10_0 = (Group)cGroup_0_10.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_10_0_0 = (Assignment)cGroup_0_10_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_10_0_0_0 = (Keyword)cIsFinalAssignment_0_10_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_10_0_1 = (Assignment)cGroup_0_10_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_0_10_0_1_0 = (Keyword)cIsInitialAssignment_0_10_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_10_1 = (Assignment)cGroup_0_10.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_10_1_0 = (RuleCall)cTypeAssignment_0_10_1.eContents().get(0);
		private final Assignment cIdAssignment_0_10_2 = (Assignment)cGroup_0_10.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_0_10_2_0 = (RuleCall)cIdAssignment_0_10_2.eContents().get(0);
		private final Group cGroup_0_11 = (Group)cAlternatives_0.eContents().get(11);
		private final Group cGroup_0_11_0 = (Group)cGroup_0_11.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_11_0_0 = (Assignment)cGroup_0_11_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_11_0_0_0 = (Keyword)cIsFinalAssignment_0_11_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_11_0_1 = (Assignment)cGroup_0_11_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_0_11_0_1_0 = (Keyword)cIsInitialAssignment_0_11_0_1.eContents().get(0);
		private final Keyword cStateKeyword_0_11_1 = (Keyword)cGroup_0_11.eContents().get(1);
		private final Assignment cIdAssignment_0_11_2 = (Assignment)cGroup_0_11.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_0_11_2_0 = (RuleCall)cIdAssignment_0_11_2.eContents().get(0);
		private final Group cGroup_0_12 = (Group)cAlternatives_0.eContents().get(12);
		private final Group cGroup_0_12_0 = (Group)cGroup_0_12.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_12_0_0 = (Assignment)cGroup_0_12_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_12_0_0_0 = (Keyword)cIsFinalAssignment_0_12_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_12_0_1 = (Assignment)cGroup_0_12_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_0_12_0_1_0 = (Keyword)cIsInitialAssignment_0_12_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_12_1 = (Assignment)cGroup_0_12.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_12_1_0 = (RuleCall)cTypeAssignment_0_12_1.eContents().get(0);
		private final Group cGroup_0_13 = (Group)cAlternatives_0.eContents().get(13);
		private final Group cGroup_0_13_0 = (Group)cGroup_0_13.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_13_0_0 = (Assignment)cGroup_0_13_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_13_0_0_0 = (Keyword)cIsFinalAssignment_0_13_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_13_0_1 = (Assignment)cGroup_0_13_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_0_13_0_1_0 = (Keyword)cIsInitialAssignment_0_13_0_1.eContents().get(0);
		private final Keyword cStateKeyword_0_13_1 = (Keyword)cGroup_0_13.eContents().get(1);
		private final Group cGroup_0_14 = (Group)cAlternatives_0.eContents().get(14);
		private final Group cGroup_0_14_0 = (Group)cGroup_0_14.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_14_0_0 = (Assignment)cGroup_0_14_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_14_0_0_0 = (Keyword)cIsFinalAssignment_0_14_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_14_0_1 = (Assignment)cGroup_0_14_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_0_14_0_1_0 = (Keyword)cIsInitialAssignment_0_14_0_1.eContents().get(0);
		private final Assignment cIdAssignment_0_14_1 = (Assignment)cGroup_0_14.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_0_14_1_0 = (RuleCall)cIdAssignment_0_14_1.eContents().get(0);
		private final Group cGroup_0_15 = (Group)cAlternatives_0.eContents().get(15);
		private final Assignment cIsFinalAssignment_0_15_0 = (Assignment)cGroup_0_15.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_15_0_0 = (Keyword)cIsFinalAssignment_0_15_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_15_1 = (Assignment)cGroup_0_15.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_0_15_1_0 = (Keyword)cIsInitialAssignment_0_15_1.eContents().get(0);
		private final Group cGroup_0_16 = (Group)cAlternatives_0.eContents().get(16);
		private final Assignment cIsInitialAssignment_0_16_0 = (Assignment)cGroup_0_16.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_16_0_0 = (Keyword)cIsInitialAssignment_0_16_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_16_1 = (Assignment)cGroup_0_16.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_16_1_0 = (RuleCall)cTypeAssignment_0_16_1.eContents().get(0);
		private final Keyword cStateKeyword_0_16_2 = (Keyword)cGroup_0_16.eContents().get(2);
		private final Assignment cIdAssignment_0_16_3 = (Assignment)cGroup_0_16.eContents().get(3);
		private final RuleCall cIdFullStateIDParserRuleCall_0_16_3_0 = (RuleCall)cIdAssignment_0_16_3.eContents().get(0);
		private final Group cGroup_0_17 = (Group)cAlternatives_0.eContents().get(17);
		private final Assignment cIsInitialAssignment_0_17_0 = (Assignment)cGroup_0_17.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_17_0_0 = (Keyword)cIsInitialAssignment_0_17_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_17_1 = (Assignment)cGroup_0_17.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_17_1_0 = (RuleCall)cTypeAssignment_0_17_1.eContents().get(0);
		private final Keyword cStateKeyword_0_17_2 = (Keyword)cGroup_0_17.eContents().get(2);
		private final Group cGroup_0_18 = (Group)cAlternatives_0.eContents().get(18);
		private final Assignment cIsInitialAssignment_0_18_0 = (Assignment)cGroup_0_18.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_18_0_0 = (Keyword)cIsInitialAssignment_0_18_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_18_1 = (Assignment)cGroup_0_18.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_18_1_0 = (RuleCall)cTypeAssignment_0_18_1.eContents().get(0);
		private final Assignment cIdAssignment_0_18_2 = (Assignment)cGroup_0_18.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_0_18_2_0 = (RuleCall)cIdAssignment_0_18_2.eContents().get(0);
		private final Group cGroup_0_19 = (Group)cAlternatives_0.eContents().get(19);
		private final Assignment cIsInitialAssignment_0_19_0 = (Assignment)cGroup_0_19.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_19_0_0 = (Keyword)cIsInitialAssignment_0_19_0.eContents().get(0);
		private final Keyword cStateKeyword_0_19_1 = (Keyword)cGroup_0_19.eContents().get(1);
		private final Assignment cIdAssignment_0_19_2 = (Assignment)cGroup_0_19.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_0_19_2_0 = (RuleCall)cIdAssignment_0_19_2.eContents().get(0);
		private final Group cGroup_0_20 = (Group)cAlternatives_0.eContents().get(20);
		private final Assignment cIsInitialAssignment_0_20_0 = (Assignment)cGroup_0_20.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_20_0_0 = (Keyword)cIsInitialAssignment_0_20_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_20_1 = (Assignment)cGroup_0_20.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_20_1_0 = (RuleCall)cTypeAssignment_0_20_1.eContents().get(0);
		private final Group cGroup_0_21 = (Group)cAlternatives_0.eContents().get(21);
		private final Assignment cIsInitialAssignment_0_21_0 = (Assignment)cGroup_0_21.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_21_0_0 = (Keyword)cIsInitialAssignment_0_21_0.eContents().get(0);
		private final Keyword cStateKeyword_0_21_1 = (Keyword)cGroup_0_21.eContents().get(1);
		private final Group cGroup_0_22 = (Group)cAlternatives_0.eContents().get(22);
		private final Assignment cIsInitialAssignment_0_22_0 = (Assignment)cGroup_0_22.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_22_0_0 = (Keyword)cIsInitialAssignment_0_22_0.eContents().get(0);
		private final Assignment cIdAssignment_0_22_1 = (Assignment)cGroup_0_22.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_0_22_1_0 = (RuleCall)cIdAssignment_0_22_1.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_23 = (Assignment)cAlternatives_0.eContents().get(23);
		private final Keyword cIsInitialInitKeyword_0_23_0 = (Keyword)cIsInitialAssignment_0_23.eContents().get(0);
		private final Group cGroup_0_24 = (Group)cAlternatives_0.eContents().get(24);
		private final Assignment cIsFinalAssignment_0_24_0 = (Assignment)cGroup_0_24.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_24_0_0 = (Keyword)cIsFinalAssignment_0_24_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_24_1 = (Assignment)cGroup_0_24.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_24_1_0 = (RuleCall)cTypeAssignment_0_24_1.eContents().get(0);
		private final Keyword cStateKeyword_0_24_2 = (Keyword)cGroup_0_24.eContents().get(2);
		private final Assignment cIdAssignment_0_24_3 = (Assignment)cGroup_0_24.eContents().get(3);
		private final RuleCall cIdFullStateIDParserRuleCall_0_24_3_0 = (RuleCall)cIdAssignment_0_24_3.eContents().get(0);
		private final Group cGroup_0_25 = (Group)cAlternatives_0.eContents().get(25);
		private final Assignment cIsFinalAssignment_0_25_0 = (Assignment)cGroup_0_25.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_25_0_0 = (Keyword)cIsFinalAssignment_0_25_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_25_1 = (Assignment)cGroup_0_25.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_25_1_0 = (RuleCall)cTypeAssignment_0_25_1.eContents().get(0);
		private final Keyword cStateKeyword_0_25_2 = (Keyword)cGroup_0_25.eContents().get(2);
		private final Group cGroup_0_26 = (Group)cAlternatives_0.eContents().get(26);
		private final Assignment cIsFinalAssignment_0_26_0 = (Assignment)cGroup_0_26.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_26_0_0 = (Keyword)cIsFinalAssignment_0_26_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_26_1 = (Assignment)cGroup_0_26.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_26_1_0 = (RuleCall)cTypeAssignment_0_26_1.eContents().get(0);
		private final Assignment cIdAssignment_0_26_2 = (Assignment)cGroup_0_26.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_0_26_2_0 = (RuleCall)cIdAssignment_0_26_2.eContents().get(0);
		private final Group cGroup_0_27 = (Group)cAlternatives_0.eContents().get(27);
		private final Assignment cIsFinalAssignment_0_27_0 = (Assignment)cGroup_0_27.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_27_0_0 = (Keyword)cIsFinalAssignment_0_27_0.eContents().get(0);
		private final Keyword cStateKeyword_0_27_1 = (Keyword)cGroup_0_27.eContents().get(1);
		private final Assignment cIdAssignment_0_27_2 = (Assignment)cGroup_0_27.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_0_27_2_0 = (RuleCall)cIdAssignment_0_27_2.eContents().get(0);
		private final Group cGroup_0_28 = (Group)cAlternatives_0.eContents().get(28);
		private final Assignment cIsFinalAssignment_0_28_0 = (Assignment)cGroup_0_28.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_28_0_0 = (Keyword)cIsFinalAssignment_0_28_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_28_1 = (Assignment)cGroup_0_28.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_28_1_0 = (RuleCall)cTypeAssignment_0_28_1.eContents().get(0);
		private final Group cGroup_0_29 = (Group)cAlternatives_0.eContents().get(29);
		private final Assignment cIsFinalAssignment_0_29_0 = (Assignment)cGroup_0_29.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_29_0_0 = (Keyword)cIsFinalAssignment_0_29_0.eContents().get(0);
		private final Keyword cStateKeyword_0_29_1 = (Keyword)cGroup_0_29.eContents().get(1);
		private final Assignment cIdAssignment_0_29_2 = (Assignment)cGroup_0_29.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_0_29_2_0 = (RuleCall)cIdAssignment_0_29_2.eContents().get(0);
		private final Group cGroup_0_30 = (Group)cAlternatives_0.eContents().get(30);
		private final Assignment cIsFinalAssignment_0_30_0 = (Assignment)cGroup_0_30.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_0_30_0_0 = (Keyword)cIsFinalAssignment_0_30_0.eContents().get(0);
		private final Assignment cIdAssignment_0_30_1 = (Assignment)cGroup_0_30.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_0_30_1_0 = (RuleCall)cIdAssignment_0_30_1.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_31 = (Assignment)cAlternatives_0.eContents().get(31);
		private final Keyword cIsFinalFinalKeyword_0_31_0 = (Keyword)cIsFinalAssignment_0_31.eContents().get(0);
		private final Group cGroup_0_32 = (Group)cAlternatives_0.eContents().get(32);
		private final Assignment cTypeAssignment_0_32_0 = (Assignment)cGroup_0_32.eContents().get(0);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_32_0_0 = (RuleCall)cTypeAssignment_0_32_0.eContents().get(0);
		private final Keyword cStateKeyword_0_32_1 = (Keyword)cGroup_0_32.eContents().get(1);
		private final Assignment cIdAssignment_0_32_2 = (Assignment)cGroup_0_32.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_0_32_2_0 = (RuleCall)cIdAssignment_0_32_2.eContents().get(0);
		private final Group cGroup_0_33 = (Group)cAlternatives_0.eContents().get(33);
		private final Assignment cTypeAssignment_0_33_0 = (Assignment)cGroup_0_33.eContents().get(0);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_33_0_0 = (RuleCall)cTypeAssignment_0_33_0.eContents().get(0);
		private final Keyword cStateKeyword_0_33_1 = (Keyword)cGroup_0_33.eContents().get(1);
		private final Group cGroup_0_34 = (Group)cAlternatives_0.eContents().get(34);
		private final Assignment cTypeAssignment_0_34_0 = (Assignment)cGroup_0_34.eContents().get(0);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_34_0_0 = (RuleCall)cTypeAssignment_0_34_0.eContents().get(0);
		private final Assignment cIdAssignment_0_34_1 = (Assignment)cGroup_0_34.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_0_34_1_0 = (RuleCall)cIdAssignment_0_34_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_35 = (Assignment)cAlternatives_0.eContents().get(35);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_35_0 = (RuleCall)cTypeAssignment_0_35.eContents().get(0);
		private final Group cGroup_0_36 = (Group)cAlternatives_0.eContents().get(36);
		private final Keyword cStateKeyword_0_36_0 = (Keyword)cGroup_0_36.eContents().get(0);
		private final Assignment cIdAssignment_0_36_1 = (Assignment)cGroup_0_36.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_0_36_1_0 = (RuleCall)cIdAssignment_0_36_1.eContents().get(0);
		private final Keyword cStateKeyword_0_37 = (Keyword)cAlternatives_0.eContents().get(37);
		private final Assignment cIdAssignment_0_38 = (Assignment)cAlternatives_0.eContents().get(38);
		private final RuleCall cIdFullStateIDParserRuleCall_0_38_0 = (RuleCall)cIdAssignment_0_38.eContents().get(0);
		private final Assignment cLabelAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelFullStateIDParserRuleCall_1_0 = (RuleCall)cLabelAssignment_1.eContents().get(0);
		private final Assignment cBodyTextAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cBodyTextSTRINGTerminalRuleCall_2_0 = (RuleCall)cBodyTextAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Alternatives cAlternatives_3_1 = (Alternatives)cGroup_3.eContents().get(1);
		private final Group cGroup_3_1_0 = (Group)cAlternatives_3_1.eContents().get(0);
		private final Keyword cOnentryKeyword_3_1_0_0 = (Keyword)cGroup_3_1_0.eContents().get(0);
		private final Assignment cEntryActionsAssignment_3_1_0_1 = (Assignment)cGroup_3_1_0.eContents().get(1);
		private final RuleCall cEntryActionsActionParserRuleCall_3_1_0_1_0 = (RuleCall)cEntryActionsAssignment_3_1_0_1.eContents().get(0);
		private final Group cGroup_3_1_1 = (Group)cAlternatives_3_1.eContents().get(1);
		private final Keyword cOninnerKeyword_3_1_1_0 = (Keyword)cGroup_3_1_1.eContents().get(0);
		private final Assignment cInnerActionsAssignment_3_1_1_1 = (Assignment)cGroup_3_1_1.eContents().get(1);
		private final RuleCall cInnerActionsActionParserRuleCall_3_1_1_1_0 = (RuleCall)cInnerActionsAssignment_3_1_1_1.eContents().get(0);
		private final Group cGroup_3_1_2 = (Group)cAlternatives_3_1.eContents().get(2);
		private final Keyword cOnexitKeyword_3_1_2_0 = (Keyword)cGroup_3_1_2.eContents().get(0);
		private final Assignment cExitActionsAssignment_3_1_2_1 = (Assignment)cGroup_3_1_2.eContents().get(1);
		private final RuleCall cExitActionsActionParserRuleCall_3_1_2_1_0 = (RuleCall)cExitActionsAssignment_3_1_2_1.eContents().get(0);
		private final Group cGroup_3_1_3 = (Group)cAlternatives_3_1.eContents().get(3);
		private final Keyword cSuspensionKeyword_3_1_3_0 = (Keyword)cGroup_3_1_3.eContents().get(0);
		private final Assignment cSuspensionTriggerAssignment_3_1_3_1 = (Assignment)cGroup_3_1_3.eContents().get(1);
		private final RuleCall cSuspensionTriggerActionParserRuleCall_3_1_3_1_0 = (RuleCall)cSuspensionTriggerAssignment_3_1_3_1.eContents().get(0);
		private final Assignment cSignalsAssignment_3_1_4 = (Assignment)cAlternatives_3_1.eContents().get(4);
		private final RuleCall cSignalsSignalParserRuleCall_3_1_4_0 = (RuleCall)cSignalsAssignment_3_1_4.eContents().get(0);
		private final Group cGroup_3_1_5 = (Group)cAlternatives_3_1.eContents().get(5);
		private final Assignment cRegionsAssignment_3_1_5_0 = (Assignment)cGroup_3_1_5.eContents().get(0);
		private final RuleCall cRegionsRegionParserRuleCall_3_1_5_0_0 = (RuleCall)cRegionsAssignment_3_1_5_0.eContents().get(0);
		private final Group cGroup_3_1_5_1 = (Group)cGroup_3_1_5.eContents().get(1);
		private final Keyword cVerticalLineVerticalLineKeyword_3_1_5_1_0 = (Keyword)cGroup_3_1_5_1.eContents().get(0);
		private final Assignment cRegionsAssignment_3_1_5_1_1 = (Assignment)cGroup_3_1_5_1.eContents().get(1);
		private final RuleCall cRegionsRegionParserRuleCall_3_1_5_1_1_0 = (RuleCall)cRegionsAssignment_3_1_5_1_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final Assignment cOutgoingTransitionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cOutgoingTransitionsTransitionParserRuleCall_4_0 = (RuleCall)cOutgoingTransitionsAssignment_4.eContents().get(0);
		
		//State returns sync::State:
		//  ((isInitial?="init" isFinal?="final") type=StateType "state" id=FullStateID|(
		//  isInitial?="init" isFinal?="final") type=StateType "state"|(isInitial?="init"
		//  isFinal?="final") type=StateType id=FullStateID|(isInitial?="init" isFinal?="final"
		//  ) "state" id=FullStateID|(isInitial?="init" isFinal?="final") type=StateType|(
		//  isInitial?="init" isFinal?="final") "state"|(isInitial?="init" isFinal?="final") id=
		//  FullStateID|isInitial?="init" isFinal?="final"|(isFinal?="final" isInitial?="init"
		//  ) type=StateType "state" id=FullStateID|(isFinal?="final" isInitial?="init") type=
		//  StateType "state"|(isFinal?="final" isInitial?="init") type=StateType id=FullStateID
		//  |(isFinal?="final" isInitial?="init") "state" id=FullStateID|(isFinal?="final"
		//  isInitial?="init") type=StateType|(isFinal?="final" isInitial?="init") "state"|(
		//  isFinal?="final" isInitial?="init") id=FullStateID|isFinal?="final" isInitial?=
		//  "init"|isInitial?="init" type=StateType "state" id=FullStateID|isInitial?="init"
		//  type=StateType "state"|isInitial?="init" type=StateType id=FullStateID|isInitial?=
		//  "init" "state" id=FullStateID|isInitial?="init" type=StateType|isInitial?="init"
		//  "state"|isInitial?="init" id=FullStateID|isInitial?="init"|isFinal?="final" type=
		//  StateType "state" id=FullStateID|isFinal?="final" type=StateType "state"|isFinal?=
		//  "final" type=StateType id=FullStateID|isFinal?="final" "state" id=FullStateID|
		//  isFinal?="final" type=StateType|isFinal?="final" "state" id=FullStateID|isFinal?=
		//  "final" id=FullStateID|isFinal?="final"|type=StateType "state" id=FullStateID|type=
		//  StateType "state"|type=StateType id=FullStateID|type=StateType|"state" id=
		//  FullStateID|"state"|id=FullStateID) label=FullStateID? bodyText=STRING? ("{" (
		//  "onentry" entryActions+=Action|"oninner" innerActions+=Action|"onexit" exitActions
		//  +=Action|"suspension" suspensionTrigger=Action|signals+=Signal|regions+=Region (
		//  "||" regions+=Region)*)+ "}")? outgoingTransitions+=Transition*; 
		//    
		//	
		//	         
		//  	      
		//  	      
		//  	      
		//  	    
		//  	    
		//  	    
		//  	  
		//  	
		//  	        
		//  	      
		//  	      
		//  	      
		//  	    
		//  	    
		//  	    
		//  	  
		//  	
		//  	        
		//  	      
		//  	        
		//  	      
		//  	     
		//  	    
		//  	    
		//  	  
		//  	
		//  	         
		//  	        
		//  	       
		//  	       
		//  	     
		//  	       
		//  	     
		//  	  
		//  	
		//  	      
		//  	    
		//  	    
		//  	  
		//  	
		//  	    
		//  	  
		//  		
		//  	  
		//  
		//
		//    //	('['(signalRenamings+=Renaming ',')* signalRenamings+=Renaming']')?
		//    
		//  
		//    
		//	    	 	    
		//	  		 	    
		//	  		         
		//	  		 	     // kein effect, kein delay, kein immediate
		public ParserRule getRule() { return rule; }

		//((isInitial?="init" isFinal?="final") type=StateType "state" id=FullStateID|(
		//isInitial?="init" isFinal?="final") type=StateType "state"|(isInitial?="init"
		//isFinal?="final") type=StateType id=FullStateID|(isInitial?="init" isFinal?="final"
		//) "state" id=FullStateID|(isInitial?="init" isFinal?="final") type=StateType|(
		//isInitial?="init" isFinal?="final") "state"|(isInitial?="init" isFinal?="final") id=
		//FullStateID|isInitial?="init" isFinal?="final"|(isFinal?="final" isInitial?="init"
		//) type=StateType "state" id=FullStateID|(isFinal?="final" isInitial?="init") type=
		//StateType "state"|(isFinal?="final" isInitial?="init") type=StateType id=FullStateID
		//|(isFinal?="final" isInitial?="init") "state" id=FullStateID|(isFinal?="final"
		//isInitial?="init") type=StateType|(isFinal?="final" isInitial?="init") "state"|(
		//isFinal?="final" isInitial?="init") id=FullStateID|isFinal?="final" isInitial?=
		//"init"|isInitial?="init" type=StateType "state" id=FullStateID|isInitial?="init"
		//type=StateType "state"|isInitial?="init" type=StateType id=FullStateID|isInitial?=
		//"init" "state" id=FullStateID|isInitial?="init" type=StateType|isInitial?="init"
		//"state"|isInitial?="init" id=FullStateID|isInitial?="init"|isFinal?="final" type=
		//StateType "state" id=FullStateID|isFinal?="final" type=StateType "state"|isFinal?=
		//"final" type=StateType id=FullStateID|isFinal?="final" "state" id=FullStateID|
		//isFinal?="final" type=StateType|isFinal?="final" "state" id=FullStateID|isFinal?=
		//"final" id=FullStateID|isFinal?="final"|type=StateType "state" id=FullStateID|type=
		//StateType "state"|type=StateType id=FullStateID|type=StateType|"state" id=
		//FullStateID|"state"|id=FullStateID) label=FullStateID? bodyText=STRING? ("{" (
		//"onentry" entryActions+=Action|"oninner" innerActions+=Action|"onexit" exitActions
		//+=Action|"suspension" suspensionTrigger=Action|signals+=Signal|regions+=Region (
		//"||" regions+=Region)*)+ "}")? outgoingTransitions+=Transition* 
		//	
		//	         
		//  	      
		//  	      
		//  	      
		//  	    
		//  	    
		//  	    
		//  	  
		//  	
		//  	        
		//  	      
		//  	      
		//  	      
		//  	    
		//  	    
		//  	    
		//  	  
		//  	
		//  	        
		//  	      
		//  	        
		//  	      
		//  	     
		//  	    
		//  	    
		//  	  
		//  	
		//  	         
		//  	        
		//  	       
		//  	       
		//  	     
		//  	       
		//  	     
		//  	  
		//  	
		//  	      
		//  	    
		//  	    
		//  	  
		//  	
		//  	    
		//  	  
		//  		
		//  	  
		//  
		//
		//    //	('['(signalRenamings+=Renaming ',')* signalRenamings+=Renaming']')?
		//    
		//  
		//    
		//	    	 	    
		//	  		 	    
		//	  		         
		//	  		 	     // kein effect, kein delay, kein immediate
		public Group getGroup() { return cGroup; }

		//(isInitial?="init" isFinal?="final") type=StateType "state" id=FullStateID|(
		//isInitial?="init" isFinal?="final") type=StateType "state"|(isInitial?="init"
		//isFinal?="final") type=StateType id=FullStateID|(isInitial?="init" isFinal?="final"
		//) "state" id=FullStateID|(isInitial?="init" isFinal?="final") type=StateType|(
		//isInitial?="init" isFinal?="final") "state"|(isInitial?="init" isFinal?="final") id=
		//FullStateID|isInitial?="init" isFinal?="final"|(isFinal?="final" isInitial?="init"
		//) type=StateType "state" id=FullStateID|(isFinal?="final" isInitial?="init") type=
		//StateType "state"|(isFinal?="final" isInitial?="init") type=StateType id=FullStateID
		//|(isFinal?="final" isInitial?="init") "state" id=FullStateID|(isFinal?="final"
		//isInitial?="init") type=StateType|(isFinal?="final" isInitial?="init") "state"|(
		//isFinal?="final" isInitial?="init") id=FullStateID|isFinal?="final" isInitial?=
		//"init"|isInitial?="init" type=StateType "state" id=FullStateID|isInitial?="init"
		//type=StateType "state"|isInitial?="init" type=StateType id=FullStateID|isInitial?=
		//"init" "state" id=FullStateID|isInitial?="init" type=StateType|isInitial?="init"
		//"state"|isInitial?="init" id=FullStateID|isInitial?="init"|isFinal?="final" type=
		//StateType "state" id=FullStateID|isFinal?="final" type=StateType "state"|isFinal?=
		//"final" type=StateType id=FullStateID|isFinal?="final" "state" id=FullStateID|
		//isFinal?="final" type=StateType|isFinal?="final" "state" id=FullStateID|isFinal?=
		//"final" id=FullStateID|isFinal?="final"|type=StateType "state" id=FullStateID|type=
		//StateType "state"|type=StateType id=FullStateID|type=StateType|"state" id=
		//FullStateID|"state"|id=FullStateID
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//(isInitial?="init" isFinal?="final") type=StateType "state" id=FullStateID
		public Group getGroup_0_0() { return cGroup_0_0; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_0_0_0() { return cGroup_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_0_0_0() { return cIsInitialAssignment_0_0_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_0_0_0_0() { return cIsInitialInitKeyword_0_0_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_0_0_1() { return cIsFinalAssignment_0_0_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_0_0_1_0() { return cIsFinalFinalKeyword_0_0_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_0_1() { return cTypeAssignment_0_0_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_0_1_0() { return cTypeStateTypeEnumRuleCall_0_0_1_0; }

		//"state"
		public Keyword getStateKeyword_0_0_2() { return cStateKeyword_0_0_2; }

		//id=FullStateID
		public Assignment getIdAssignment_0_0_3() { return cIdAssignment_0_0_3; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_0_3_0() { return cIdFullStateIDParserRuleCall_0_0_3_0; }

		//(isInitial?="init" isFinal?="final") type=StateType "state"
		public Group getGroup_0_1() { return cGroup_0_1; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_0_1_0() { return cGroup_0_1_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_1_0_0() { return cIsInitialAssignment_0_1_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_1_0_0_0() { return cIsInitialInitKeyword_0_1_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_1_0_1() { return cIsFinalAssignment_0_1_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_1_0_1_0() { return cIsFinalFinalKeyword_0_1_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_1_1() { return cTypeAssignment_0_1_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_1_1_0() { return cTypeStateTypeEnumRuleCall_0_1_1_0; }

		//"state"
		public Keyword getStateKeyword_0_1_2() { return cStateKeyword_0_1_2; }

		//(isInitial?="init" isFinal?="final") type=StateType id=FullStateID
		public Group getGroup_0_2() { return cGroup_0_2; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_0_2_0() { return cGroup_0_2_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_2_0_0() { return cIsInitialAssignment_0_2_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_2_0_0_0() { return cIsInitialInitKeyword_0_2_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_2_0_1() { return cIsFinalAssignment_0_2_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_2_0_1_0() { return cIsFinalFinalKeyword_0_2_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_2_1() { return cTypeAssignment_0_2_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_2_1_0() { return cTypeStateTypeEnumRuleCall_0_2_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_0_2_2() { return cIdAssignment_0_2_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_2_2_0() { return cIdFullStateIDParserRuleCall_0_2_2_0; }

		//(isInitial?="init" isFinal?="final") "state" id=FullStateID
		public Group getGroup_0_3() { return cGroup_0_3; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_0_3_0() { return cGroup_0_3_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_3_0_0() { return cIsInitialAssignment_0_3_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_3_0_0_0() { return cIsInitialInitKeyword_0_3_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_3_0_1() { return cIsFinalAssignment_0_3_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_3_0_1_0() { return cIsFinalFinalKeyword_0_3_0_1_0; }

		//"state"
		public Keyword getStateKeyword_0_3_1() { return cStateKeyword_0_3_1; }

		//id=FullStateID
		public Assignment getIdAssignment_0_3_2() { return cIdAssignment_0_3_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_3_2_0() { return cIdFullStateIDParserRuleCall_0_3_2_0; }

		//(isInitial?="init" isFinal?="final") type=StateType
		public Group getGroup_0_4() { return cGroup_0_4; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_0_4_0() { return cGroup_0_4_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_4_0_0() { return cIsInitialAssignment_0_4_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_4_0_0_0() { return cIsInitialInitKeyword_0_4_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_4_0_1() { return cIsFinalAssignment_0_4_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_4_0_1_0() { return cIsFinalFinalKeyword_0_4_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_4_1() { return cTypeAssignment_0_4_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_4_1_0() { return cTypeStateTypeEnumRuleCall_0_4_1_0; }

		//(isInitial?="init" isFinal?="final") "state"
		public Group getGroup_0_5() { return cGroup_0_5; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_0_5_0() { return cGroup_0_5_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_5_0_0() { return cIsInitialAssignment_0_5_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_5_0_0_0() { return cIsInitialInitKeyword_0_5_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_5_0_1() { return cIsFinalAssignment_0_5_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_5_0_1_0() { return cIsFinalFinalKeyword_0_5_0_1_0; }

		//"state"
		public Keyword getStateKeyword_0_5_1() { return cStateKeyword_0_5_1; }

		//(isInitial?="init" isFinal?="final") id=FullStateID
		public Group getGroup_0_6() { return cGroup_0_6; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_0_6_0() { return cGroup_0_6_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_6_0_0() { return cIsInitialAssignment_0_6_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_6_0_0_0() { return cIsInitialInitKeyword_0_6_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_6_0_1() { return cIsFinalAssignment_0_6_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_6_0_1_0() { return cIsFinalFinalKeyword_0_6_0_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_0_6_1() { return cIdAssignment_0_6_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_6_1_0() { return cIdFullStateIDParserRuleCall_0_6_1_0; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_0_7() { return cGroup_0_7; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_7_0() { return cIsInitialAssignment_0_7_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_7_0_0() { return cIsInitialInitKeyword_0_7_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_7_1() { return cIsFinalAssignment_0_7_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_7_1_0() { return cIsFinalFinalKeyword_0_7_1_0; }

		//(isFinal?="final" isInitial?="init") type=StateType "state" id=FullStateID
		public Group getGroup_0_8() { return cGroup_0_8; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_0_8_0() { return cGroup_0_8_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_8_0_0() { return cIsFinalAssignment_0_8_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_8_0_0_0() { return cIsFinalFinalKeyword_0_8_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_8_0_1() { return cIsInitialAssignment_0_8_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_8_0_1_0() { return cIsInitialInitKeyword_0_8_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_8_1() { return cTypeAssignment_0_8_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_8_1_0() { return cTypeStateTypeEnumRuleCall_0_8_1_0; }

		//"state"
		public Keyword getStateKeyword_0_8_2() { return cStateKeyword_0_8_2; }

		//id=FullStateID
		public Assignment getIdAssignment_0_8_3() { return cIdAssignment_0_8_3; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_8_3_0() { return cIdFullStateIDParserRuleCall_0_8_3_0; }

		//(isFinal?="final" isInitial?="init") type=StateType "state"
		public Group getGroup_0_9() { return cGroup_0_9; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_0_9_0() { return cGroup_0_9_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_9_0_0() { return cIsFinalAssignment_0_9_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_9_0_0_0() { return cIsFinalFinalKeyword_0_9_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_9_0_1() { return cIsInitialAssignment_0_9_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_9_0_1_0() { return cIsInitialInitKeyword_0_9_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_9_1() { return cTypeAssignment_0_9_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_9_1_0() { return cTypeStateTypeEnumRuleCall_0_9_1_0; }

		//"state"
		public Keyword getStateKeyword_0_9_2() { return cStateKeyword_0_9_2; }

		//(isFinal?="final" isInitial?="init") type=StateType id=FullStateID
		public Group getGroup_0_10() { return cGroup_0_10; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_0_10_0() { return cGroup_0_10_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_10_0_0() { return cIsFinalAssignment_0_10_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_10_0_0_0() { return cIsFinalFinalKeyword_0_10_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_10_0_1() { return cIsInitialAssignment_0_10_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_10_0_1_0() { return cIsInitialInitKeyword_0_10_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_10_1() { return cTypeAssignment_0_10_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_10_1_0() { return cTypeStateTypeEnumRuleCall_0_10_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_0_10_2() { return cIdAssignment_0_10_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_10_2_0() { return cIdFullStateIDParserRuleCall_0_10_2_0; }

		//(isFinal?="final" isInitial?="init") "state" id=FullStateID
		public Group getGroup_0_11() { return cGroup_0_11; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_0_11_0() { return cGroup_0_11_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_11_0_0() { return cIsFinalAssignment_0_11_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_11_0_0_0() { return cIsFinalFinalKeyword_0_11_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_11_0_1() { return cIsInitialAssignment_0_11_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_11_0_1_0() { return cIsInitialInitKeyword_0_11_0_1_0; }

		//"state"
		public Keyword getStateKeyword_0_11_1() { return cStateKeyword_0_11_1; }

		//id=FullStateID
		public Assignment getIdAssignment_0_11_2() { return cIdAssignment_0_11_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_11_2_0() { return cIdFullStateIDParserRuleCall_0_11_2_0; }

		//(isFinal?="final" isInitial?="init") type=StateType
		public Group getGroup_0_12() { return cGroup_0_12; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_0_12_0() { return cGroup_0_12_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_12_0_0() { return cIsFinalAssignment_0_12_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_12_0_0_0() { return cIsFinalFinalKeyword_0_12_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_12_0_1() { return cIsInitialAssignment_0_12_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_12_0_1_0() { return cIsInitialInitKeyword_0_12_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_12_1() { return cTypeAssignment_0_12_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_12_1_0() { return cTypeStateTypeEnumRuleCall_0_12_1_0; }

		//(isFinal?="final" isInitial?="init") "state"
		public Group getGroup_0_13() { return cGroup_0_13; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_0_13_0() { return cGroup_0_13_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_13_0_0() { return cIsFinalAssignment_0_13_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_13_0_0_0() { return cIsFinalFinalKeyword_0_13_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_13_0_1() { return cIsInitialAssignment_0_13_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_13_0_1_0() { return cIsInitialInitKeyword_0_13_0_1_0; }

		//"state"
		public Keyword getStateKeyword_0_13_1() { return cStateKeyword_0_13_1; }

		//(isFinal?="final" isInitial?="init") id=FullStateID
		public Group getGroup_0_14() { return cGroup_0_14; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_0_14_0() { return cGroup_0_14_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_14_0_0() { return cIsFinalAssignment_0_14_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_14_0_0_0() { return cIsFinalFinalKeyword_0_14_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_14_0_1() { return cIsInitialAssignment_0_14_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_14_0_1_0() { return cIsInitialInitKeyword_0_14_0_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_0_14_1() { return cIdAssignment_0_14_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_14_1_0() { return cIdFullStateIDParserRuleCall_0_14_1_0; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_0_15() { return cGroup_0_15; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_15_0() { return cIsFinalAssignment_0_15_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_15_0_0() { return cIsFinalFinalKeyword_0_15_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_15_1() { return cIsInitialAssignment_0_15_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_15_1_0() { return cIsInitialInitKeyword_0_15_1_0; }

		//isInitial?="init" type=StateType "state" id=FullStateID
		public Group getGroup_0_16() { return cGroup_0_16; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_16_0() { return cIsInitialAssignment_0_16_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_16_0_0() { return cIsInitialInitKeyword_0_16_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_16_1() { return cTypeAssignment_0_16_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_16_1_0() { return cTypeStateTypeEnumRuleCall_0_16_1_0; }

		//"state"
		public Keyword getStateKeyword_0_16_2() { return cStateKeyword_0_16_2; }

		//id=FullStateID
		public Assignment getIdAssignment_0_16_3() { return cIdAssignment_0_16_3; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_16_3_0() { return cIdFullStateIDParserRuleCall_0_16_3_0; }

		//isInitial?="init" type=StateType "state"
		public Group getGroup_0_17() { return cGroup_0_17; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_17_0() { return cIsInitialAssignment_0_17_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_17_0_0() { return cIsInitialInitKeyword_0_17_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_17_1() { return cTypeAssignment_0_17_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_17_1_0() { return cTypeStateTypeEnumRuleCall_0_17_1_0; }

		//"state"
		public Keyword getStateKeyword_0_17_2() { return cStateKeyword_0_17_2; }

		//isInitial?="init" type=StateType id=FullStateID
		public Group getGroup_0_18() { return cGroup_0_18; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_18_0() { return cIsInitialAssignment_0_18_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_18_0_0() { return cIsInitialInitKeyword_0_18_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_18_1() { return cTypeAssignment_0_18_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_18_1_0() { return cTypeStateTypeEnumRuleCall_0_18_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_0_18_2() { return cIdAssignment_0_18_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_18_2_0() { return cIdFullStateIDParserRuleCall_0_18_2_0; }

		//isInitial?="init" "state" id=FullStateID
		public Group getGroup_0_19() { return cGroup_0_19; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_19_0() { return cIsInitialAssignment_0_19_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_19_0_0() { return cIsInitialInitKeyword_0_19_0_0; }

		//"state"
		public Keyword getStateKeyword_0_19_1() { return cStateKeyword_0_19_1; }

		//id=FullStateID
		public Assignment getIdAssignment_0_19_2() { return cIdAssignment_0_19_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_19_2_0() { return cIdFullStateIDParserRuleCall_0_19_2_0; }

		//isInitial?="init" type=StateType
		public Group getGroup_0_20() { return cGroup_0_20; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_20_0() { return cIsInitialAssignment_0_20_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_20_0_0() { return cIsInitialInitKeyword_0_20_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_20_1() { return cTypeAssignment_0_20_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_20_1_0() { return cTypeStateTypeEnumRuleCall_0_20_1_0; }

		//isInitial?="init" "state"
		public Group getGroup_0_21() { return cGroup_0_21; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_21_0() { return cIsInitialAssignment_0_21_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_21_0_0() { return cIsInitialInitKeyword_0_21_0_0; }

		//"state"
		public Keyword getStateKeyword_0_21_1() { return cStateKeyword_0_21_1; }

		//isInitial?="init" id=FullStateID
		public Group getGroup_0_22() { return cGroup_0_22; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_22_0() { return cIsInitialAssignment_0_22_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_22_0_0() { return cIsInitialInitKeyword_0_22_0_0; }

		//id=FullStateID
		public Assignment getIdAssignment_0_22_1() { return cIdAssignment_0_22_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_22_1_0() { return cIdFullStateIDParserRuleCall_0_22_1_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_23() { return cIsInitialAssignment_0_23; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_23_0() { return cIsInitialInitKeyword_0_23_0; }

		//isFinal?="final" type=StateType "state" id=FullStateID
		public Group getGroup_0_24() { return cGroup_0_24; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_24_0() { return cIsFinalAssignment_0_24_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_24_0_0() { return cIsFinalFinalKeyword_0_24_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_24_1() { return cTypeAssignment_0_24_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_24_1_0() { return cTypeStateTypeEnumRuleCall_0_24_1_0; }

		//"state"
		public Keyword getStateKeyword_0_24_2() { return cStateKeyword_0_24_2; }

		//id=FullStateID
		public Assignment getIdAssignment_0_24_3() { return cIdAssignment_0_24_3; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_24_3_0() { return cIdFullStateIDParserRuleCall_0_24_3_0; }

		//isFinal?="final" type=StateType "state"
		public Group getGroup_0_25() { return cGroup_0_25; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_25_0() { return cIsFinalAssignment_0_25_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_25_0_0() { return cIsFinalFinalKeyword_0_25_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_25_1() { return cTypeAssignment_0_25_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_25_1_0() { return cTypeStateTypeEnumRuleCall_0_25_1_0; }

		//"state"
		public Keyword getStateKeyword_0_25_2() { return cStateKeyword_0_25_2; }

		//isFinal?="final" type=StateType id=FullStateID
		public Group getGroup_0_26() { return cGroup_0_26; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_26_0() { return cIsFinalAssignment_0_26_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_26_0_0() { return cIsFinalFinalKeyword_0_26_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_26_1() { return cTypeAssignment_0_26_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_26_1_0() { return cTypeStateTypeEnumRuleCall_0_26_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_0_26_2() { return cIdAssignment_0_26_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_26_2_0() { return cIdFullStateIDParserRuleCall_0_26_2_0; }

		//isFinal?="final" "state" id=FullStateID
		public Group getGroup_0_27() { return cGroup_0_27; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_27_0() { return cIsFinalAssignment_0_27_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_27_0_0() { return cIsFinalFinalKeyword_0_27_0_0; }

		//"state"
		public Keyword getStateKeyword_0_27_1() { return cStateKeyword_0_27_1; }

		//id=FullStateID
		public Assignment getIdAssignment_0_27_2() { return cIdAssignment_0_27_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_27_2_0() { return cIdFullStateIDParserRuleCall_0_27_2_0; }

		//isFinal?="final" type=StateType
		public Group getGroup_0_28() { return cGroup_0_28; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_28_0() { return cIsFinalAssignment_0_28_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_28_0_0() { return cIsFinalFinalKeyword_0_28_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_28_1() { return cTypeAssignment_0_28_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_28_1_0() { return cTypeStateTypeEnumRuleCall_0_28_1_0; }

		//isFinal?="final" "state" id=FullStateID
		public Group getGroup_0_29() { return cGroup_0_29; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_29_0() { return cIsFinalAssignment_0_29_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_29_0_0() { return cIsFinalFinalKeyword_0_29_0_0; }

		//"state"
		public Keyword getStateKeyword_0_29_1() { return cStateKeyword_0_29_1; }

		//id=FullStateID
		public Assignment getIdAssignment_0_29_2() { return cIdAssignment_0_29_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_29_2_0() { return cIdFullStateIDParserRuleCall_0_29_2_0; }

		//isFinal?="final" id=FullStateID
		public Group getGroup_0_30() { return cGroup_0_30; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_30_0() { return cIsFinalAssignment_0_30_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_30_0_0() { return cIsFinalFinalKeyword_0_30_0_0; }

		//id=FullStateID
		public Assignment getIdAssignment_0_30_1() { return cIdAssignment_0_30_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_30_1_0() { return cIdFullStateIDParserRuleCall_0_30_1_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_31() { return cIsFinalAssignment_0_31; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_31_0() { return cIsFinalFinalKeyword_0_31_0; }

		//type=StateType "state" id=FullStateID
		public Group getGroup_0_32() { return cGroup_0_32; }

		//type=StateType
		public Assignment getTypeAssignment_0_32_0() { return cTypeAssignment_0_32_0; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_32_0_0() { return cTypeStateTypeEnumRuleCall_0_32_0_0; }

		//"state"
		public Keyword getStateKeyword_0_32_1() { return cStateKeyword_0_32_1; }

		//id=FullStateID
		public Assignment getIdAssignment_0_32_2() { return cIdAssignment_0_32_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_32_2_0() { return cIdFullStateIDParserRuleCall_0_32_2_0; }

		//type=StateType "state"
		public Group getGroup_0_33() { return cGroup_0_33; }

		//type=StateType
		public Assignment getTypeAssignment_0_33_0() { return cTypeAssignment_0_33_0; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_33_0_0() { return cTypeStateTypeEnumRuleCall_0_33_0_0; }

		//"state"
		public Keyword getStateKeyword_0_33_1() { return cStateKeyword_0_33_1; }

		//type=StateType id=FullStateID
		public Group getGroup_0_34() { return cGroup_0_34; }

		//type=StateType
		public Assignment getTypeAssignment_0_34_0() { return cTypeAssignment_0_34_0; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_34_0_0() { return cTypeStateTypeEnumRuleCall_0_34_0_0; }

		//id=FullStateID
		public Assignment getIdAssignment_0_34_1() { return cIdAssignment_0_34_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_34_1_0() { return cIdFullStateIDParserRuleCall_0_34_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_35() { return cTypeAssignment_0_35; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_35_0() { return cTypeStateTypeEnumRuleCall_0_35_0; }

		//"state" id=FullStateID
		public Group getGroup_0_36() { return cGroup_0_36; }

		//"state"
		public Keyword getStateKeyword_0_36_0() { return cStateKeyword_0_36_0; }

		//id=FullStateID
		public Assignment getIdAssignment_0_36_1() { return cIdAssignment_0_36_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_36_1_0() { return cIdFullStateIDParserRuleCall_0_36_1_0; }

		//"state"
		public Keyword getStateKeyword_0_37() { return cStateKeyword_0_37; }

		//id=FullStateID
		public Assignment getIdAssignment_0_38() { return cIdAssignment_0_38; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_38_0() { return cIdFullStateIDParserRuleCall_0_38_0; }

		//label=FullStateID?
		public Assignment getLabelAssignment_1() { return cLabelAssignment_1; }

		//FullStateID
		public RuleCall getLabelFullStateIDParserRuleCall_1_0() { return cLabelFullStateIDParserRuleCall_1_0; }

		//bodyText=STRING?
		public Assignment getBodyTextAssignment_2() { return cBodyTextAssignment_2; }

		//STRING
		public RuleCall getBodyTextSTRINGTerminalRuleCall_2_0() { return cBodyTextSTRINGTerminalRuleCall_2_0; }

		//("{" ("onentry" entryActions+=Action|"oninner" innerActions+=Action|"onexit"
		//exitActions+=Action|"suspension" suspensionTrigger=Action|signals+=Signal|regions
		//+=Region ("||" regions+=Region)*)+ "}")?  
		//	    	 	    
		//	  		 	    
		//	  		         
		//	  		 	     // kein effect, kein delay, kein immediate
		public Group getGroup_3() { return cGroup_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3_0() { return cLeftCurlyBracketKeyword_3_0; }

		//("onentry" entryActions+=Action|"oninner" innerActions+=Action|"onexit" exitActions
		//+=Action|"suspension" suspensionTrigger=Action|signals+=Signal|regions+=Region (
		//"||" regions+=Region)*)+  
		//	    	 	    
		//	  		 	    
		//	  		         
		//	  		 	     // kein effect, kein delay, kein immediate
		public Alternatives getAlternatives_3_1() { return cAlternatives_3_1; }

		//"onentry" entryActions+=Action
		public Group getGroup_3_1_0() { return cGroup_3_1_0; }

		//"onentry"
		public Keyword getOnentryKeyword_3_1_0_0() { return cOnentryKeyword_3_1_0_0; }

		//entryActions+=Action
		public Assignment getEntryActionsAssignment_3_1_0_1() { return cEntryActionsAssignment_3_1_0_1; }

		//Action
		public RuleCall getEntryActionsActionParserRuleCall_3_1_0_1_0() { return cEntryActionsActionParserRuleCall_3_1_0_1_0; }

		//"oninner" innerActions+=Action
		public Group getGroup_3_1_1() { return cGroup_3_1_1; }

		//"oninner"
		public Keyword getOninnerKeyword_3_1_1_0() { return cOninnerKeyword_3_1_1_0; }

		//innerActions+=Action
		public Assignment getInnerActionsAssignment_3_1_1_1() { return cInnerActionsAssignment_3_1_1_1; }

		//Action
		public RuleCall getInnerActionsActionParserRuleCall_3_1_1_1_0() { return cInnerActionsActionParserRuleCall_3_1_1_1_0; }

		//"onexit" exitActions+=Action
		public Group getGroup_3_1_2() { return cGroup_3_1_2; }

		//"onexit"
		public Keyword getOnexitKeyword_3_1_2_0() { return cOnexitKeyword_3_1_2_0; }

		//exitActions+=Action
		public Assignment getExitActionsAssignment_3_1_2_1() { return cExitActionsAssignment_3_1_2_1; }

		//Action
		public RuleCall getExitActionsActionParserRuleCall_3_1_2_1_0() { return cExitActionsActionParserRuleCall_3_1_2_1_0; }

		//"suspension" suspensionTrigger=Action
		public Group getGroup_3_1_3() { return cGroup_3_1_3; }

		//"suspension"
		public Keyword getSuspensionKeyword_3_1_3_0() { return cSuspensionKeyword_3_1_3_0; }

		//suspensionTrigger=Action
		public Assignment getSuspensionTriggerAssignment_3_1_3_1() { return cSuspensionTriggerAssignment_3_1_3_1; }

		//Action
		public RuleCall getSuspensionTriggerActionParserRuleCall_3_1_3_1_0() { return cSuspensionTriggerActionParserRuleCall_3_1_3_1_0; }

		//signals+=Signal
		public Assignment getSignalsAssignment_3_1_4() { return cSignalsAssignment_3_1_4; }

		//Signal
		public RuleCall getSignalsSignalParserRuleCall_3_1_4_0() { return cSignalsSignalParserRuleCall_3_1_4_0; }

		//regions+=Region ("||" regions+=Region)*
		public Group getGroup_3_1_5() { return cGroup_3_1_5; }

		//regions+=Region
		public Assignment getRegionsAssignment_3_1_5_0() { return cRegionsAssignment_3_1_5_0; }

		//Region
		public RuleCall getRegionsRegionParserRuleCall_3_1_5_0_0() { return cRegionsRegionParserRuleCall_3_1_5_0_0; }

		//("||" regions+=Region)*
		public Group getGroup_3_1_5_1() { return cGroup_3_1_5_1; }

		//"||"
		public Keyword getVerticalLineVerticalLineKeyword_3_1_5_1_0() { return cVerticalLineVerticalLineKeyword_3_1_5_1_0; }

		//regions+=Region
		public Assignment getRegionsAssignment_3_1_5_1_1() { return cRegionsAssignment_3_1_5_1_1; }

		//Region
		public RuleCall getRegionsRegionParserRuleCall_3_1_5_1_1_0() { return cRegionsRegionParserRuleCall_3_1_5_1_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3_2() { return cRightCurlyBracketKeyword_3_2; }

		//outgoingTransitions+=Transition*
		public Assignment getOutgoingTransitionsAssignment_4() { return cOutgoingTransitionsAssignment_4; }

		//Transition
		public RuleCall getOutgoingTransitionsTransitionParserRuleCall_4_0() { return cOutgoingTransitionsTransitionParserRuleCall_4_0; }
	}

	public class RenamingElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Renaming");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOldIDAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOldIDSTRINGTerminalRuleCall_0_0 = (RuleCall)cOldIDAssignment_0.eContents().get(0);
		private final Keyword cSolidusKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNewIDAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNewIDSTRINGTerminalRuleCall_2_0 = (RuleCall)cNewIDAssignment_2.eContents().get(0);
		
		//Renaming returns sync::Renaming:
		//  oldID=STRING "/" newID=STRING;
		public ParserRule getRule() { return rule; }

		//oldID=STRING "/" newID=STRING
		public Group getGroup() { return cGroup; }

		//oldID=STRING
		public Assignment getOldIDAssignment_0() { return cOldIDAssignment_0; }

		//STRING
		public RuleCall getOldIDSTRINGTerminalRuleCall_0_0() { return cOldIDSTRINGTerminalRuleCall_0_0; }

		//"/"
		public Keyword getSolidusKeyword_1() { return cSolidusKeyword_1; }

		//newID=STRING
		public Assignment getNewIDAssignment_2() { return cNewIDAssignment_2; }

		//STRING
		public RuleCall getNewIDSTRINGTerminalRuleCall_2_0() { return cNewIDSTRINGTerminalRuleCall_2_0; }
	}

	public class FullStateIDElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FullStateID");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_0_0 = (RuleCall)cGroup_0.eContents().get(0);
		private final Keyword cCommercialAtKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//FullStateID returns ecore::EString:
		//  (ID "@")? ID; 
		//    
		//	//========================================================================================
		//	 //===  									    ACTIONS  					               ===
		//	 //========================================================================================
		////Action returns sync::Action:
		////	((isImmediate?='#')? (delay=INT ';')? (triggersAndEffects=STRING))
		////| 
		////	Transition
		////	
		////;
		//
		//	//========================================================================================
		//	 //===  									    TRANSITION 					               ===
		//	 //========================================================================================
		public ParserRule getRule() { return rule; }

		//(ID "@")? ID
		public Group getGroup() { return cGroup; }

		//(ID "@")?
		public Group getGroup_0() { return cGroup_0; }

		//ID
		public RuleCall getIDTerminalRuleCall_0_0() { return cIDTerminalRuleCall_0_0; }

		//"@"
		public Keyword getCommercialAtKeyword_0_1() { return cCommercialAtKeyword_0_1; }

		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}

	public class TransitionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Transition");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSourceStateAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSourceStateStateCrossReference_0_0 = (CrossReference)cSourceStateAssignment_0.eContents().get(0);
		private final RuleCall cSourceStateStateFullStateIDParserRuleCall_0_0_1 = (RuleCall)cSourceStateStateCrossReference_0_0.eContents().get(1);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeTransitionTypeEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cTargetStateAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final CrossReference cTargetStateStateCrossReference_2_0 = (CrossReference)cTargetStateAssignment_2.eContents().get(0);
		private final RuleCall cTargetStateStateFullStateIDParserRuleCall_2_0_1 = (RuleCall)cTargetStateStateCrossReference_2_0.eContents().get(1);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cWithKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cIsImmediateAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final Keyword cIsImmediateNumberSignKeyword_3_1_0 = (Keyword)cIsImmediateAssignment_3_1.eContents().get(0);
		private final Assignment cDelayAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cDelayINTTerminalRuleCall_3_2_0 = (RuleCall)cDelayAssignment_3_2.eContents().get(0);
		private final Assignment cTriggerAssignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cTriggerBooleanExpressionParserRuleCall_3_3_0 = (RuleCall)cTriggerAssignment_3_3.eContents().get(0);
		private final Group cGroup_3_4 = (Group)cGroup_3.eContents().get(4);
		private final Keyword cSolidusKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Group cGroup_3_4_1 = (Group)cGroup_3_4.eContents().get(1);
		private final Assignment cEffectsAssignment_3_4_1_0 = (Assignment)cGroup_3_4_1.eContents().get(0);
		private final RuleCall cEffectsEffectParserRuleCall_3_4_1_0_0 = (RuleCall)cEffectsAssignment_3_4_1_0.eContents().get(0);
		private final Keyword cCommaKeyword_3_4_1_1 = (Keyword)cGroup_3_4_1.eContents().get(1);
		private final Assignment cIsHistoryAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Keyword cIsHistoryHistoryKeyword_4_0 = (Keyword)cIsHistoryAssignment_4.eContents().get(0);
		private final Keyword cSemicolonKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//Transition returns sync::Transition:
		//  sourceState=[sync::State|FullStateID]? type=TransitionType targetState=[sync::
		//  State|FullStateID] ("with" isImmediate?="#"? delay=INT? trigger=BooleanExpression? (
		//  "/" (effects+=Effect ","?)*)?)? isHistory?=" history"? ";"; 
		//	//========================================================================================
		//	 //===  									    ACTIONS  					               ===
		//	 //========================================================================================
		////Action returns sync::Action:
		////	((isImmediate?='#')? (delay=INT ';')? (triggersAndEffects=STRING))
		////| 
		////	Transition
		////	
		////;
		//
		//	//========================================================================================
		//	 //===  									    TRANSITION 					               ===
		//	 //========================================================================================
		//	
		//    
		//
		//	  //either reference existing state or create a new one or leave it blank (in that case, the transition belongs to the containing state)
		//	 //|({sync::State} name=FullStateID)
		//	 
		//	
		//	//|newTargetState=TransitionState )
		public ParserRule getRule() { return rule; }

		//sourceState=[sync::State|FullStateID]? type=TransitionType targetState=[sync::
		//State|FullStateID] ("with" isImmediate?="#"? delay=INT? trigger=BooleanExpression? (
		//"/" (effects+=Effect ","?)*)?)? isHistory?=" history"? ";" 
		//
		//	  //either reference existing state or create a new one or leave it blank (in that case, the transition belongs to the containing state)
		//	 //|({sync::State} name=FullStateID)
		//	 
		//	
		//	//|newTargetState=TransitionState )
		public Group getGroup() { return cGroup; }

		//sourceState=[sync::State|FullStateID]?
		public Assignment getSourceStateAssignment_0() { return cSourceStateAssignment_0; }

		//[sync::State|FullStateID]
		public CrossReference getSourceStateStateCrossReference_0_0() { return cSourceStateStateCrossReference_0_0; }

		//FullStateID
		public RuleCall getSourceStateStateFullStateIDParserRuleCall_0_0_1() { return cSourceStateStateFullStateIDParserRuleCall_0_0_1; }

		//type=TransitionType   //either reference existing state or create a new one or leave it blank (in that case, the transition belongs to the containing state)
		//	 //|({sync::State} name=FullStateID)
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//TransitionType
		public RuleCall getTypeTransitionTypeEnumRuleCall_1_0() { return cTypeTransitionTypeEnumRuleCall_1_0; }

		//targetState=[sync::State|FullStateID]
		public Assignment getTargetStateAssignment_2() { return cTargetStateAssignment_2; }

		//[sync::State|FullStateID]
		public CrossReference getTargetStateStateCrossReference_2_0() { return cTargetStateStateCrossReference_2_0; }

		//FullStateID
		public RuleCall getTargetStateStateFullStateIDParserRuleCall_2_0_1() { return cTargetStateStateFullStateIDParserRuleCall_2_0_1; }

		//("with" isImmediate?="#"? delay=INT? trigger=BooleanExpression? ("/" (effects+=Effect
		//","?)*)?)?
		public Group getGroup_3() { return cGroup_3; }

		//"with"
		public Keyword getWithKeyword_3_0() { return cWithKeyword_3_0; }

		//isImmediate?="#"?
		public Assignment getIsImmediateAssignment_3_1() { return cIsImmediateAssignment_3_1; }

		//"#"
		public Keyword getIsImmediateNumberSignKeyword_3_1_0() { return cIsImmediateNumberSignKeyword_3_1_0; }

		//delay=INT?
		public Assignment getDelayAssignment_3_2() { return cDelayAssignment_3_2; }

		//INT
		public RuleCall getDelayINTTerminalRuleCall_3_2_0() { return cDelayINTTerminalRuleCall_3_2_0; }

		//trigger=BooleanExpression?
		public Assignment getTriggerAssignment_3_3() { return cTriggerAssignment_3_3; }

		//BooleanExpression
		public RuleCall getTriggerBooleanExpressionParserRuleCall_3_3_0() { return cTriggerBooleanExpressionParserRuleCall_3_3_0; }

		//("/" (effects+=Effect ","?)*)?
		public Group getGroup_3_4() { return cGroup_3_4; }

		//"/"
		public Keyword getSolidusKeyword_3_4_0() { return cSolidusKeyword_3_4_0; }

		//(effects+=Effect ","?)*
		public Group getGroup_3_4_1() { return cGroup_3_4_1; }

		//effects+=Effect
		public Assignment getEffectsAssignment_3_4_1_0() { return cEffectsAssignment_3_4_1_0; }

		//Effect
		public RuleCall getEffectsEffectParserRuleCall_3_4_1_0_0() { return cEffectsEffectParserRuleCall_3_4_1_0_0; }

		//","?
		public Keyword getCommaKeyword_3_4_1_1() { return cCommaKeyword_3_4_1_1; }

		//isHistory?=" history"?
		public Assignment getIsHistoryAssignment_4() { return cIsHistoryAssignment_4; }

		//" history"
		public Keyword getIsHistoryHistoryKeyword_4_0() { return cIsHistoryHistoryKeyword_4_0; }

		//";"
		public Keyword getSemicolonKeyword_5() { return cSemicolonKeyword_5; }
	}

	public class TransitionStateElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TransitionState");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_0_0_0 = (Assignment)cGroup_0_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_0_0_0_0 = (Keyword)cIsInitialAssignment_0_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_0_0_1_0 = (Keyword)cIsFinalAssignment_0_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_0_1_0 = (RuleCall)cTypeAssignment_0_1.eContents().get(0);
		private final Keyword cStateKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cIdAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cIdFullStateIDParserRuleCall_0_3_0 = (RuleCall)cIdAssignment_0_3.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final Assignment cIsInitialAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_1_0_0_0 = (Keyword)cIsInitialAssignment_1_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_1_0_1 = (Assignment)cGroup_1_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_1_0_1_0 = (Keyword)cIsFinalAssignment_1_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_1_1_0 = (RuleCall)cTypeAssignment_1_1.eContents().get(0);
		private final Keyword cStateKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cGroup_2.eContents().get(0);
		private final Assignment cIsInitialAssignment_2_0_0 = (Assignment)cGroup_2_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_2_0_0_0 = (Keyword)cIsInitialAssignment_2_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_2_0_1_0 = (Keyword)cIsFinalAssignment_2_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_2_1_0 = (RuleCall)cTypeAssignment_2_1.eContents().get(0);
		private final Assignment cIdAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_2_2_0 = (RuleCall)cIdAssignment_2_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cGroup_3.eContents().get(0);
		private final Assignment cIsInitialAssignment_3_0_0 = (Assignment)cGroup_3_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_3_0_0_0 = (Keyword)cIsInitialAssignment_3_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_3_0_1_0 = (Keyword)cIsFinalAssignment_3_0_1.eContents().get(0);
		private final Keyword cStateKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cIdAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_3_2_0 = (RuleCall)cIdAssignment_3_2.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Group cGroup_4_0 = (Group)cGroup_4.eContents().get(0);
		private final Assignment cIsInitialAssignment_4_0_0 = (Assignment)cGroup_4_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_4_0_0_0 = (Keyword)cIsInitialAssignment_4_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_4_0_1 = (Assignment)cGroup_4_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_4_0_1_0 = (Keyword)cIsFinalAssignment_4_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_4_1_0 = (RuleCall)cTypeAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Group cGroup_5_0 = (Group)cGroup_5.eContents().get(0);
		private final Assignment cIsInitialAssignment_5_0_0 = (Assignment)cGroup_5_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_5_0_0_0 = (Keyword)cIsInitialAssignment_5_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_5_0_1 = (Assignment)cGroup_5_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_5_0_1_0 = (Keyword)cIsFinalAssignment_5_0_1.eContents().get(0);
		private final Keyword cStateKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Group cGroup_6_0 = (Group)cGroup_6.eContents().get(0);
		private final Assignment cIsInitialAssignment_6_0_0 = (Assignment)cGroup_6_0.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_6_0_0_0 = (Keyword)cIsInitialAssignment_6_0_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_6_0_1 = (Assignment)cGroup_6_0.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_6_0_1_0 = (Keyword)cIsFinalAssignment_6_0_1.eContents().get(0);
		private final Assignment cIdAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_6_1_0 = (RuleCall)cIdAssignment_6_1.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Assignment cIsInitialAssignment_7_0 = (Assignment)cGroup_7.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_7_0_0 = (Keyword)cIsInitialAssignment_7_0.eContents().get(0);
		private final Assignment cIsFinalAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final Keyword cIsFinalFinalKeyword_7_1_0 = (Keyword)cIsFinalAssignment_7_1.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Group cGroup_8_0 = (Group)cGroup_8.eContents().get(0);
		private final Assignment cIsFinalAssignment_8_0_0 = (Assignment)cGroup_8_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_8_0_0_0 = (Keyword)cIsFinalAssignment_8_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_8_0_1 = (Assignment)cGroup_8_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_8_0_1_0 = (Keyword)cIsInitialAssignment_8_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_8_1_0 = (RuleCall)cTypeAssignment_8_1.eContents().get(0);
		private final Keyword cStateKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cIdAssignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cIdFullStateIDParserRuleCall_8_3_0 = (RuleCall)cIdAssignment_8_3.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Group cGroup_9_0 = (Group)cGroup_9.eContents().get(0);
		private final Assignment cIsFinalAssignment_9_0_0 = (Assignment)cGroup_9_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_9_0_0_0 = (Keyword)cIsFinalAssignment_9_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_9_0_1 = (Assignment)cGroup_9_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_9_0_1_0 = (Keyword)cIsInitialAssignment_9_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_9_1 = (Assignment)cGroup_9.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_9_1_0 = (RuleCall)cTypeAssignment_9_1.eContents().get(0);
		private final Keyword cStateKeyword_9_2 = (Keyword)cGroup_9.eContents().get(2);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Group cGroup_10_0 = (Group)cGroup_10.eContents().get(0);
		private final Assignment cIsFinalAssignment_10_0_0 = (Assignment)cGroup_10_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_10_0_0_0 = (Keyword)cIsFinalAssignment_10_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_10_0_1 = (Assignment)cGroup_10_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_10_0_1_0 = (Keyword)cIsInitialAssignment_10_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_10_1_0 = (RuleCall)cTypeAssignment_10_1.eContents().get(0);
		private final Assignment cIdAssignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_10_2_0 = (RuleCall)cIdAssignment_10_2.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Group cGroup_11_0 = (Group)cGroup_11.eContents().get(0);
		private final Assignment cIsFinalAssignment_11_0_0 = (Assignment)cGroup_11_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_11_0_0_0 = (Keyword)cIsFinalAssignment_11_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_11_0_1 = (Assignment)cGroup_11_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_11_0_1_0 = (Keyword)cIsInitialAssignment_11_0_1.eContents().get(0);
		private final Keyword cStateKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Assignment cIdAssignment_11_2 = (Assignment)cGroup_11.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_11_2_0 = (RuleCall)cIdAssignment_11_2.eContents().get(0);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Group cGroup_12_0 = (Group)cGroup_12.eContents().get(0);
		private final Assignment cIsFinalAssignment_12_0_0 = (Assignment)cGroup_12_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_12_0_0_0 = (Keyword)cIsFinalAssignment_12_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_12_0_1 = (Assignment)cGroup_12_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_12_0_1_0 = (Keyword)cIsInitialAssignment_12_0_1.eContents().get(0);
		private final Assignment cTypeAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_12_1_0 = (RuleCall)cTypeAssignment_12_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Group cGroup_13_0 = (Group)cGroup_13.eContents().get(0);
		private final Assignment cIsFinalAssignment_13_0_0 = (Assignment)cGroup_13_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_13_0_0_0 = (Keyword)cIsFinalAssignment_13_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_13_0_1 = (Assignment)cGroup_13_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_13_0_1_0 = (Keyword)cIsInitialAssignment_13_0_1.eContents().get(0);
		private final Keyword cStateKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Group cGroup_14_0 = (Group)cGroup_14.eContents().get(0);
		private final Assignment cIsFinalAssignment_14_0_0 = (Assignment)cGroup_14_0.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_14_0_0_0 = (Keyword)cIsFinalAssignment_14_0_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_14_0_1 = (Assignment)cGroup_14_0.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_14_0_1_0 = (Keyword)cIsInitialAssignment_14_0_1.eContents().get(0);
		private final Assignment cIdAssignment_14_1 = (Assignment)cGroup_14.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_14_1_0 = (RuleCall)cIdAssignment_14_1.eContents().get(0);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Assignment cIsFinalAssignment_15_0 = (Assignment)cGroup_15.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_15_0_0 = (Keyword)cIsFinalAssignment_15_0.eContents().get(0);
		private final Assignment cIsInitialAssignment_15_1 = (Assignment)cGroup_15.eContents().get(1);
		private final Keyword cIsInitialInitKeyword_15_1_0 = (Keyword)cIsInitialAssignment_15_1.eContents().get(0);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Assignment cIsInitialAssignment_16_0 = (Assignment)cGroup_16.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_16_0_0 = (Keyword)cIsInitialAssignment_16_0.eContents().get(0);
		private final Assignment cTypeAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_16_1_0 = (RuleCall)cTypeAssignment_16_1.eContents().get(0);
		private final Keyword cStateKeyword_16_2 = (Keyword)cGroup_16.eContents().get(2);
		private final Assignment cIdAssignment_16_3 = (Assignment)cGroup_16.eContents().get(3);
		private final RuleCall cIdFullStateIDParserRuleCall_16_3_0 = (RuleCall)cIdAssignment_16_3.eContents().get(0);
		private final Group cGroup_17 = (Group)cAlternatives.eContents().get(17);
		private final Assignment cIsInitialAssignment_17_0 = (Assignment)cGroup_17.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_17_0_0 = (Keyword)cIsInitialAssignment_17_0.eContents().get(0);
		private final Assignment cTypeAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_17_1_0 = (RuleCall)cTypeAssignment_17_1.eContents().get(0);
		private final Keyword cStateKeyword_17_2 = (Keyword)cGroup_17.eContents().get(2);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Assignment cIsInitialAssignment_18_0 = (Assignment)cGroup_18.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_18_0_0 = (Keyword)cIsInitialAssignment_18_0.eContents().get(0);
		private final Assignment cTypeAssignment_18_1 = (Assignment)cGroup_18.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_18_1_0 = (RuleCall)cTypeAssignment_18_1.eContents().get(0);
		private final Assignment cIdAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_18_2_0 = (RuleCall)cIdAssignment_18_2.eContents().get(0);
		private final Group cGroup_19 = (Group)cAlternatives.eContents().get(19);
		private final Assignment cIsInitialAssignment_19_0 = (Assignment)cGroup_19.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_19_0_0 = (Keyword)cIsInitialAssignment_19_0.eContents().get(0);
		private final Keyword cStateKeyword_19_1 = (Keyword)cGroup_19.eContents().get(1);
		private final Assignment cIdAssignment_19_2 = (Assignment)cGroup_19.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_19_2_0 = (RuleCall)cIdAssignment_19_2.eContents().get(0);
		private final Group cGroup_20 = (Group)cAlternatives.eContents().get(20);
		private final Assignment cIsInitialAssignment_20_0 = (Assignment)cGroup_20.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_20_0_0 = (Keyword)cIsInitialAssignment_20_0.eContents().get(0);
		private final Assignment cTypeAssignment_20_1 = (Assignment)cGroup_20.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_20_1_0 = (RuleCall)cTypeAssignment_20_1.eContents().get(0);
		private final Group cGroup_21 = (Group)cAlternatives.eContents().get(21);
		private final Assignment cIsInitialAssignment_21_0 = (Assignment)cGroup_21.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_21_0_0 = (Keyword)cIsInitialAssignment_21_0.eContents().get(0);
		private final Keyword cStateKeyword_21_1 = (Keyword)cGroup_21.eContents().get(1);
		private final Group cGroup_22 = (Group)cAlternatives.eContents().get(22);
		private final Assignment cIsInitialAssignment_22_0 = (Assignment)cGroup_22.eContents().get(0);
		private final Keyword cIsInitialInitKeyword_22_0_0 = (Keyword)cIsInitialAssignment_22_0.eContents().get(0);
		private final Assignment cIdAssignment_22_1 = (Assignment)cGroup_22.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_22_1_0 = (RuleCall)cIdAssignment_22_1.eContents().get(0);
		private final Assignment cIsInitialAssignment_23 = (Assignment)cAlternatives.eContents().get(23);
		private final Keyword cIsInitialInitKeyword_23_0 = (Keyword)cIsInitialAssignment_23.eContents().get(0);
		private final Group cGroup_24 = (Group)cAlternatives.eContents().get(24);
		private final Assignment cIsFinalAssignment_24_0 = (Assignment)cGroup_24.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_24_0_0 = (Keyword)cIsFinalAssignment_24_0.eContents().get(0);
		private final Assignment cTypeAssignment_24_1 = (Assignment)cGroup_24.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_24_1_0 = (RuleCall)cTypeAssignment_24_1.eContents().get(0);
		private final Keyword cStateKeyword_24_2 = (Keyword)cGroup_24.eContents().get(2);
		private final Assignment cIdAssignment_24_3 = (Assignment)cGroup_24.eContents().get(3);
		private final RuleCall cIdFullStateIDParserRuleCall_24_3_0 = (RuleCall)cIdAssignment_24_3.eContents().get(0);
		private final Group cGroup_25 = (Group)cAlternatives.eContents().get(25);
		private final Assignment cIsFinalAssignment_25_0 = (Assignment)cGroup_25.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_25_0_0 = (Keyword)cIsFinalAssignment_25_0.eContents().get(0);
		private final Assignment cTypeAssignment_25_1 = (Assignment)cGroup_25.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_25_1_0 = (RuleCall)cTypeAssignment_25_1.eContents().get(0);
		private final Keyword cStateKeyword_25_2 = (Keyword)cGroup_25.eContents().get(2);
		private final Group cGroup_26 = (Group)cAlternatives.eContents().get(26);
		private final Assignment cIsFinalAssignment_26_0 = (Assignment)cGroup_26.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_26_0_0 = (Keyword)cIsFinalAssignment_26_0.eContents().get(0);
		private final Assignment cTypeAssignment_26_1 = (Assignment)cGroup_26.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_26_1_0 = (RuleCall)cTypeAssignment_26_1.eContents().get(0);
		private final Assignment cIdAssignment_26_2 = (Assignment)cGroup_26.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_26_2_0 = (RuleCall)cIdAssignment_26_2.eContents().get(0);
		private final Group cGroup_27 = (Group)cAlternatives.eContents().get(27);
		private final Assignment cIsFinalAssignment_27_0 = (Assignment)cGroup_27.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_27_0_0 = (Keyword)cIsFinalAssignment_27_0.eContents().get(0);
		private final Keyword cStateKeyword_27_1 = (Keyword)cGroup_27.eContents().get(1);
		private final Assignment cIdAssignment_27_2 = (Assignment)cGroup_27.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_27_2_0 = (RuleCall)cIdAssignment_27_2.eContents().get(0);
		private final Group cGroup_28 = (Group)cAlternatives.eContents().get(28);
		private final Assignment cIsFinalAssignment_28_0 = (Assignment)cGroup_28.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_28_0_0 = (Keyword)cIsFinalAssignment_28_0.eContents().get(0);
		private final Assignment cTypeAssignment_28_1 = (Assignment)cGroup_28.eContents().get(1);
		private final RuleCall cTypeStateTypeEnumRuleCall_28_1_0 = (RuleCall)cTypeAssignment_28_1.eContents().get(0);
		private final Group cGroup_29 = (Group)cAlternatives.eContents().get(29);
		private final Assignment cIsFinalAssignment_29_0 = (Assignment)cGroup_29.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_29_0_0 = (Keyword)cIsFinalAssignment_29_0.eContents().get(0);
		private final Keyword cStateKeyword_29_1 = (Keyword)cGroup_29.eContents().get(1);
		private final Assignment cIdAssignment_29_2 = (Assignment)cGroup_29.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_29_2_0 = (RuleCall)cIdAssignment_29_2.eContents().get(0);
		private final Group cGroup_30 = (Group)cAlternatives.eContents().get(30);
		private final Assignment cIsFinalAssignment_30_0 = (Assignment)cGroup_30.eContents().get(0);
		private final Keyword cIsFinalFinalKeyword_30_0_0 = (Keyword)cIsFinalAssignment_30_0.eContents().get(0);
		private final Assignment cIdAssignment_30_1 = (Assignment)cGroup_30.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_30_1_0 = (RuleCall)cIdAssignment_30_1.eContents().get(0);
		private final Assignment cIsFinalAssignment_31 = (Assignment)cAlternatives.eContents().get(31);
		private final Keyword cIsFinalFinalKeyword_31_0 = (Keyword)cIsFinalAssignment_31.eContents().get(0);
		private final Group cGroup_32 = (Group)cAlternatives.eContents().get(32);
		private final Assignment cTypeAssignment_32_0 = (Assignment)cGroup_32.eContents().get(0);
		private final RuleCall cTypeStateTypeEnumRuleCall_32_0_0 = (RuleCall)cTypeAssignment_32_0.eContents().get(0);
		private final Keyword cStateKeyword_32_1 = (Keyword)cGroup_32.eContents().get(1);
		private final Assignment cIdAssignment_32_2 = (Assignment)cGroup_32.eContents().get(2);
		private final RuleCall cIdFullStateIDParserRuleCall_32_2_0 = (RuleCall)cIdAssignment_32_2.eContents().get(0);
		private final Group cGroup_33 = (Group)cAlternatives.eContents().get(33);
		private final Assignment cTypeAssignment_33_0 = (Assignment)cGroup_33.eContents().get(0);
		private final RuleCall cTypeStateTypeEnumRuleCall_33_0_0 = (RuleCall)cTypeAssignment_33_0.eContents().get(0);
		private final Keyword cStateKeyword_33_1 = (Keyword)cGroup_33.eContents().get(1);
		private final Group cGroup_34 = (Group)cAlternatives.eContents().get(34);
		private final Assignment cTypeAssignment_34_0 = (Assignment)cGroup_34.eContents().get(0);
		private final RuleCall cTypeStateTypeEnumRuleCall_34_0_0 = (RuleCall)cTypeAssignment_34_0.eContents().get(0);
		private final Assignment cIdAssignment_34_1 = (Assignment)cGroup_34.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_34_1_0 = (RuleCall)cIdAssignment_34_1.eContents().get(0);
		private final Assignment cTypeAssignment_35 = (Assignment)cAlternatives.eContents().get(35);
		private final RuleCall cTypeStateTypeEnumRuleCall_35_0 = (RuleCall)cTypeAssignment_35.eContents().get(0);
		private final Group cGroup_36 = (Group)cAlternatives.eContents().get(36);
		private final Keyword cStateKeyword_36_0 = (Keyword)cGroup_36.eContents().get(0);
		private final Assignment cIdAssignment_36_1 = (Assignment)cGroup_36.eContents().get(1);
		private final RuleCall cIdFullStateIDParserRuleCall_36_1_0 = (RuleCall)cIdAssignment_36_1.eContents().get(0);
		private final Keyword cStateKeyword_37 = (Keyword)cAlternatives.eContents().get(37);
		private final Assignment cIdAssignment_38 = (Assignment)cAlternatives.eContents().get(38);
		private final RuleCall cIdFullStateIDParserRuleCall_38_0 = (RuleCall)cIdAssignment_38.eContents().get(0);
		
		//TransitionState returns sync::State:
		//  (isInitial?="init" isFinal?="final") type=StateType "state" id=FullStateID|(
		//  isInitial?="init" isFinal?="final") type=StateType "state"|(isInitial?="init"
		//  isFinal?="final") type=StateType id=FullStateID|(isInitial?="init" isFinal?="final"
		//  ) "state" id=FullStateID|(isInitial?="init" isFinal?="final") type=StateType|(
		//  isInitial?="init" isFinal?="final") "state"|(isInitial?="init" isFinal?="final") id=
		//  FullStateID|isInitial?="init" isFinal?="final"|(isFinal?="final" isInitial?="init"
		//  ) type=StateType "state" id=FullStateID|(isFinal?="final" isInitial?="init") type=
		//  StateType "state"|(isFinal?="final" isInitial?="init") type=StateType id=FullStateID
		//  |(isFinal?="final" isInitial?="init") "state" id=FullStateID|(isFinal?="final"
		//  isInitial?="init") type=StateType|(isFinal?="final" isInitial?="init") "state"|(
		//  isFinal?="final" isInitial?="init") id=FullStateID|isFinal?="final" isInitial?=
		//  "init"|isInitial?="init" type=StateType "state" id=FullStateID|isInitial?="init"
		//  type=StateType "state"|isInitial?="init" type=StateType id=FullStateID|isInitial?=
		//  "init" "state" id=FullStateID|isInitial?="init" type=StateType|isInitial?="init"
		//  "state"|isInitial?="init" id=FullStateID|isInitial?="init"|isFinal?="final" type=
		//  StateType "state" id=FullStateID|isFinal?="final" type=StateType "state"|isFinal?=
		//  "final" type=StateType id=FullStateID|isFinal?="final" "state" id=FullStateID|
		//  isFinal?="final" type=StateType|isFinal?="final" "state" id=FullStateID|isFinal?=
		//  "final" id=FullStateID|isFinal?="final"|type=StateType "state" id=FullStateID|type=
		//  StateType "state"|type=StateType id=FullStateID|type=StateType|"state" id=
		//  FullStateID|"state"|id=FullStateID; 
		//    
		//		         
		//  	      
		//  	      
		//  	      
		//  	    
		//  	    
		//  	    
		//  	  
		//  	
		//  	        
		//  	      
		//  	      
		//  	      
		//  	    
		//  	    
		//  	    
		//  	  
		//  	
		//  	        
		//  	      
		//  	        
		//  	      
		//  	     
		//  	    
		//  	    
		//  	  
		//  	
		//  	         
		//  	        
		//  	       
		//  	       
		//  	     
		//  	       
		//  	     
		//  	  
		//  	
		//  	      
		//  	    
		//  	    
		//  	  
		//  	
		//  	    
		//  	  
		//  		
		//  	  
		//  
		//	
		//
		// 	//========================================================================================
		//	 //===  									    VAR,SIG  					               ===
		//	 //========================================================================================
		public ParserRule getRule() { return rule; }

		//(isInitial?="init" isFinal?="final") type=StateType "state" id=FullStateID|(
		//isInitial?="init" isFinal?="final") type=StateType "state"|(isInitial?="init"
		//isFinal?="final") type=StateType id=FullStateID|(isInitial?="init" isFinal?="final"
		//) "state" id=FullStateID|(isInitial?="init" isFinal?="final") type=StateType|(
		//isInitial?="init" isFinal?="final") "state"|(isInitial?="init" isFinal?="final") id=
		//FullStateID|isInitial?="init" isFinal?="final"|(isFinal?="final" isInitial?="init"
		//) type=StateType "state" id=FullStateID|(isFinal?="final" isInitial?="init") type=
		//StateType "state"|(isFinal?="final" isInitial?="init") type=StateType id=FullStateID
		//|(isFinal?="final" isInitial?="init") "state" id=FullStateID|(isFinal?="final"
		//isInitial?="init") type=StateType|(isFinal?="final" isInitial?="init") "state"|(
		//isFinal?="final" isInitial?="init") id=FullStateID|isFinal?="final" isInitial?=
		//"init"|isInitial?="init" type=StateType "state" id=FullStateID|isInitial?="init"
		//type=StateType "state"|isInitial?="init" type=StateType id=FullStateID|isInitial?=
		//"init" "state" id=FullStateID|isInitial?="init" type=StateType|isInitial?="init"
		//"state"|isInitial?="init" id=FullStateID|isInitial?="init"|isFinal?="final" type=
		//StateType "state" id=FullStateID|isFinal?="final" type=StateType "state"|isFinal?=
		//"final" type=StateType id=FullStateID|isFinal?="final" "state" id=FullStateID|
		//isFinal?="final" type=StateType|isFinal?="final" "state" id=FullStateID|isFinal?=
		//"final" id=FullStateID|isFinal?="final"|type=StateType "state" id=FullStateID|type=
		//StateType "state"|type=StateType id=FullStateID|type=StateType|"state" id=
		//FullStateID|"state"|id=FullStateID
		public Alternatives getAlternatives() { return cAlternatives; }

		//(isInitial?="init" isFinal?="final") type=StateType "state" id=FullStateID
		public Group getGroup_0() { return cGroup_0; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_0_0() { return cGroup_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_0_0_0() { return cIsInitialAssignment_0_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_0_0_0_0() { return cIsInitialInitKeyword_0_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_0_0_1() { return cIsFinalAssignment_0_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_0_0_1_0() { return cIsFinalFinalKeyword_0_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_0_1() { return cTypeAssignment_0_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_0_1_0() { return cTypeStateTypeEnumRuleCall_0_1_0; }

		//"state"
		public Keyword getStateKeyword_0_2() { return cStateKeyword_0_2; }

		//id=FullStateID
		public Assignment getIdAssignment_0_3() { return cIdAssignment_0_3; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_0_3_0() { return cIdFullStateIDParserRuleCall_0_3_0; }

		//(isInitial?="init" isFinal?="final") type=StateType "state"
		public Group getGroup_1() { return cGroup_1; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_1_0() { return cGroup_1_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_1_0_0() { return cIsInitialAssignment_1_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_1_0_0_0() { return cIsInitialInitKeyword_1_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_1_0_1() { return cIsFinalAssignment_1_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_1_0_1_0() { return cIsFinalFinalKeyword_1_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_1_1_0() { return cTypeStateTypeEnumRuleCall_1_1_0; }

		//"state"
		public Keyword getStateKeyword_1_2() { return cStateKeyword_1_2; }

		//(isInitial?="init" isFinal?="final") type=StateType id=FullStateID
		public Group getGroup_2() { return cGroup_2; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_2_0() { return cGroup_2_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_2_0_0() { return cIsInitialAssignment_2_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_2_0_0_0() { return cIsInitialInitKeyword_2_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_2_0_1() { return cIsFinalAssignment_2_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_2_0_1_0() { return cIsFinalFinalKeyword_2_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_2_1() { return cTypeAssignment_2_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_2_1_0() { return cTypeStateTypeEnumRuleCall_2_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_2_2() { return cIdAssignment_2_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_2_2_0() { return cIdFullStateIDParserRuleCall_2_2_0; }

		//(isInitial?="init" isFinal?="final") "state" id=FullStateID
		public Group getGroup_3() { return cGroup_3; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_3_0() { return cGroup_3_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_3_0_0() { return cIsInitialAssignment_3_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_3_0_0_0() { return cIsInitialInitKeyword_3_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_3_0_1() { return cIsFinalAssignment_3_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_3_0_1_0() { return cIsFinalFinalKeyword_3_0_1_0; }

		//"state"
		public Keyword getStateKeyword_3_1() { return cStateKeyword_3_1; }

		//id=FullStateID
		public Assignment getIdAssignment_3_2() { return cIdAssignment_3_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_3_2_0() { return cIdFullStateIDParserRuleCall_3_2_0; }

		//(isInitial?="init" isFinal?="final") type=StateType
		public Group getGroup_4() { return cGroup_4; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_4_0() { return cGroup_4_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_4_0_0() { return cIsInitialAssignment_4_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_4_0_0_0() { return cIsInitialInitKeyword_4_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_4_0_1() { return cIsFinalAssignment_4_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_4_0_1_0() { return cIsFinalFinalKeyword_4_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_4_1() { return cTypeAssignment_4_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_4_1_0() { return cTypeStateTypeEnumRuleCall_4_1_0; }

		//(isInitial?="init" isFinal?="final") "state"
		public Group getGroup_5() { return cGroup_5; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_5_0() { return cGroup_5_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_5_0_0() { return cIsInitialAssignment_5_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_5_0_0_0() { return cIsInitialInitKeyword_5_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_5_0_1() { return cIsFinalAssignment_5_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_5_0_1_0() { return cIsFinalFinalKeyword_5_0_1_0; }

		//"state"
		public Keyword getStateKeyword_5_1() { return cStateKeyword_5_1; }

		//(isInitial?="init" isFinal?="final") id=FullStateID
		public Group getGroup_6() { return cGroup_6; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_6_0() { return cGroup_6_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_6_0_0() { return cIsInitialAssignment_6_0_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_6_0_0_0() { return cIsInitialInitKeyword_6_0_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_6_0_1() { return cIsFinalAssignment_6_0_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_6_0_1_0() { return cIsFinalFinalKeyword_6_0_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_6_1() { return cIdAssignment_6_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_6_1_0() { return cIdFullStateIDParserRuleCall_6_1_0; }

		//isInitial?="init" isFinal?="final"
		public Group getGroup_7() { return cGroup_7; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_7_0() { return cIsInitialAssignment_7_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_7_0_0() { return cIsInitialInitKeyword_7_0_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_7_1() { return cIsFinalAssignment_7_1; }

		//"final"
		public Keyword getIsFinalFinalKeyword_7_1_0() { return cIsFinalFinalKeyword_7_1_0; }

		//(isFinal?="final" isInitial?="init") type=StateType "state" id=FullStateID
		public Group getGroup_8() { return cGroup_8; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_8_0() { return cGroup_8_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_8_0_0() { return cIsFinalAssignment_8_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_8_0_0_0() { return cIsFinalFinalKeyword_8_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_8_0_1() { return cIsInitialAssignment_8_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_8_0_1_0() { return cIsInitialInitKeyword_8_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_8_1() { return cTypeAssignment_8_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_8_1_0() { return cTypeStateTypeEnumRuleCall_8_1_0; }

		//"state"
		public Keyword getStateKeyword_8_2() { return cStateKeyword_8_2; }

		//id=FullStateID
		public Assignment getIdAssignment_8_3() { return cIdAssignment_8_3; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_8_3_0() { return cIdFullStateIDParserRuleCall_8_3_0; }

		//(isFinal?="final" isInitial?="init") type=StateType "state"
		public Group getGroup_9() { return cGroup_9; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_9_0() { return cGroup_9_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_9_0_0() { return cIsFinalAssignment_9_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_9_0_0_0() { return cIsFinalFinalKeyword_9_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_9_0_1() { return cIsInitialAssignment_9_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_9_0_1_0() { return cIsInitialInitKeyword_9_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_9_1() { return cTypeAssignment_9_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_9_1_0() { return cTypeStateTypeEnumRuleCall_9_1_0; }

		//"state"
		public Keyword getStateKeyword_9_2() { return cStateKeyword_9_2; }

		//(isFinal?="final" isInitial?="init") type=StateType id=FullStateID
		public Group getGroup_10() { return cGroup_10; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_10_0() { return cGroup_10_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_10_0_0() { return cIsFinalAssignment_10_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_10_0_0_0() { return cIsFinalFinalKeyword_10_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_10_0_1() { return cIsInitialAssignment_10_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_10_0_1_0() { return cIsInitialInitKeyword_10_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_10_1() { return cTypeAssignment_10_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_10_1_0() { return cTypeStateTypeEnumRuleCall_10_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_10_2() { return cIdAssignment_10_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_10_2_0() { return cIdFullStateIDParserRuleCall_10_2_0; }

		//(isFinal?="final" isInitial?="init") "state" id=FullStateID
		public Group getGroup_11() { return cGroup_11; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_11_0() { return cGroup_11_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_11_0_0() { return cIsFinalAssignment_11_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_11_0_0_0() { return cIsFinalFinalKeyword_11_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_11_0_1() { return cIsInitialAssignment_11_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_11_0_1_0() { return cIsInitialInitKeyword_11_0_1_0; }

		//"state"
		public Keyword getStateKeyword_11_1() { return cStateKeyword_11_1; }

		//id=FullStateID
		public Assignment getIdAssignment_11_2() { return cIdAssignment_11_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_11_2_0() { return cIdFullStateIDParserRuleCall_11_2_0; }

		//(isFinal?="final" isInitial?="init") type=StateType
		public Group getGroup_12() { return cGroup_12; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_12_0() { return cGroup_12_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_12_0_0() { return cIsFinalAssignment_12_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_12_0_0_0() { return cIsFinalFinalKeyword_12_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_12_0_1() { return cIsInitialAssignment_12_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_12_0_1_0() { return cIsInitialInitKeyword_12_0_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_12_1() { return cTypeAssignment_12_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_12_1_0() { return cTypeStateTypeEnumRuleCall_12_1_0; }

		//(isFinal?="final" isInitial?="init") "state"
		public Group getGroup_13() { return cGroup_13; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_13_0() { return cGroup_13_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_13_0_0() { return cIsFinalAssignment_13_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_13_0_0_0() { return cIsFinalFinalKeyword_13_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_13_0_1() { return cIsInitialAssignment_13_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_13_0_1_0() { return cIsInitialInitKeyword_13_0_1_0; }

		//"state"
		public Keyword getStateKeyword_13_1() { return cStateKeyword_13_1; }

		//(isFinal?="final" isInitial?="init") id=FullStateID
		public Group getGroup_14() { return cGroup_14; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_14_0() { return cGroup_14_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_14_0_0() { return cIsFinalAssignment_14_0_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_14_0_0_0() { return cIsFinalFinalKeyword_14_0_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_14_0_1() { return cIsInitialAssignment_14_0_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_14_0_1_0() { return cIsInitialInitKeyword_14_0_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_14_1() { return cIdAssignment_14_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_14_1_0() { return cIdFullStateIDParserRuleCall_14_1_0; }

		//isFinal?="final" isInitial?="init"
		public Group getGroup_15() { return cGroup_15; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_15_0() { return cIsFinalAssignment_15_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_15_0_0() { return cIsFinalFinalKeyword_15_0_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_15_1() { return cIsInitialAssignment_15_1; }

		//"init"
		public Keyword getIsInitialInitKeyword_15_1_0() { return cIsInitialInitKeyword_15_1_0; }

		//isInitial?="init" type=StateType "state" id=FullStateID
		public Group getGroup_16() { return cGroup_16; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_16_0() { return cIsInitialAssignment_16_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_16_0_0() { return cIsInitialInitKeyword_16_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_16_1() { return cTypeAssignment_16_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_16_1_0() { return cTypeStateTypeEnumRuleCall_16_1_0; }

		//"state"
		public Keyword getStateKeyword_16_2() { return cStateKeyword_16_2; }

		//id=FullStateID
		public Assignment getIdAssignment_16_3() { return cIdAssignment_16_3; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_16_3_0() { return cIdFullStateIDParserRuleCall_16_3_0; }

		//isInitial?="init" type=StateType "state"
		public Group getGroup_17() { return cGroup_17; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_17_0() { return cIsInitialAssignment_17_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_17_0_0() { return cIsInitialInitKeyword_17_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_17_1() { return cTypeAssignment_17_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_17_1_0() { return cTypeStateTypeEnumRuleCall_17_1_0; }

		//"state"
		public Keyword getStateKeyword_17_2() { return cStateKeyword_17_2; }

		//isInitial?="init" type=StateType id=FullStateID
		public Group getGroup_18() { return cGroup_18; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_18_0() { return cIsInitialAssignment_18_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_18_0_0() { return cIsInitialInitKeyword_18_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_18_1() { return cTypeAssignment_18_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_18_1_0() { return cTypeStateTypeEnumRuleCall_18_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_18_2() { return cIdAssignment_18_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_18_2_0() { return cIdFullStateIDParserRuleCall_18_2_0; }

		//isInitial?="init" "state" id=FullStateID
		public Group getGroup_19() { return cGroup_19; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_19_0() { return cIsInitialAssignment_19_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_19_0_0() { return cIsInitialInitKeyword_19_0_0; }

		//"state"
		public Keyword getStateKeyword_19_1() { return cStateKeyword_19_1; }

		//id=FullStateID
		public Assignment getIdAssignment_19_2() { return cIdAssignment_19_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_19_2_0() { return cIdFullStateIDParserRuleCall_19_2_0; }

		//isInitial?="init" type=StateType
		public Group getGroup_20() { return cGroup_20; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_20_0() { return cIsInitialAssignment_20_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_20_0_0() { return cIsInitialInitKeyword_20_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_20_1() { return cTypeAssignment_20_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_20_1_0() { return cTypeStateTypeEnumRuleCall_20_1_0; }

		//isInitial?="init" "state"
		public Group getGroup_21() { return cGroup_21; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_21_0() { return cIsInitialAssignment_21_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_21_0_0() { return cIsInitialInitKeyword_21_0_0; }

		//"state"
		public Keyword getStateKeyword_21_1() { return cStateKeyword_21_1; }

		//isInitial?="init" id=FullStateID
		public Group getGroup_22() { return cGroup_22; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_22_0() { return cIsInitialAssignment_22_0; }

		//"init"
		public Keyword getIsInitialInitKeyword_22_0_0() { return cIsInitialInitKeyword_22_0_0; }

		//id=FullStateID
		public Assignment getIdAssignment_22_1() { return cIdAssignment_22_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_22_1_0() { return cIdFullStateIDParserRuleCall_22_1_0; }

		//isInitial?="init"
		public Assignment getIsInitialAssignment_23() { return cIsInitialAssignment_23; }

		//"init"
		public Keyword getIsInitialInitKeyword_23_0() { return cIsInitialInitKeyword_23_0; }

		//isFinal?="final" type=StateType "state" id=FullStateID
		public Group getGroup_24() { return cGroup_24; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_24_0() { return cIsFinalAssignment_24_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_24_0_0() { return cIsFinalFinalKeyword_24_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_24_1() { return cTypeAssignment_24_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_24_1_0() { return cTypeStateTypeEnumRuleCall_24_1_0; }

		//"state"
		public Keyword getStateKeyword_24_2() { return cStateKeyword_24_2; }

		//id=FullStateID
		public Assignment getIdAssignment_24_3() { return cIdAssignment_24_3; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_24_3_0() { return cIdFullStateIDParserRuleCall_24_3_0; }

		//isFinal?="final" type=StateType "state"
		public Group getGroup_25() { return cGroup_25; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_25_0() { return cIsFinalAssignment_25_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_25_0_0() { return cIsFinalFinalKeyword_25_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_25_1() { return cTypeAssignment_25_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_25_1_0() { return cTypeStateTypeEnumRuleCall_25_1_0; }

		//"state"
		public Keyword getStateKeyword_25_2() { return cStateKeyword_25_2; }

		//isFinal?="final" type=StateType id=FullStateID
		public Group getGroup_26() { return cGroup_26; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_26_0() { return cIsFinalAssignment_26_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_26_0_0() { return cIsFinalFinalKeyword_26_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_26_1() { return cTypeAssignment_26_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_26_1_0() { return cTypeStateTypeEnumRuleCall_26_1_0; }

		//id=FullStateID
		public Assignment getIdAssignment_26_2() { return cIdAssignment_26_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_26_2_0() { return cIdFullStateIDParserRuleCall_26_2_0; }

		//isFinal?="final" "state" id=FullStateID
		public Group getGroup_27() { return cGroup_27; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_27_0() { return cIsFinalAssignment_27_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_27_0_0() { return cIsFinalFinalKeyword_27_0_0; }

		//"state"
		public Keyword getStateKeyword_27_1() { return cStateKeyword_27_1; }

		//id=FullStateID
		public Assignment getIdAssignment_27_2() { return cIdAssignment_27_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_27_2_0() { return cIdFullStateIDParserRuleCall_27_2_0; }

		//isFinal?="final" type=StateType
		public Group getGroup_28() { return cGroup_28; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_28_0() { return cIsFinalAssignment_28_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_28_0_0() { return cIsFinalFinalKeyword_28_0_0; }

		//type=StateType
		public Assignment getTypeAssignment_28_1() { return cTypeAssignment_28_1; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_28_1_0() { return cTypeStateTypeEnumRuleCall_28_1_0; }

		//isFinal?="final" "state" id=FullStateID
		public Group getGroup_29() { return cGroup_29; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_29_0() { return cIsFinalAssignment_29_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_29_0_0() { return cIsFinalFinalKeyword_29_0_0; }

		//"state"
		public Keyword getStateKeyword_29_1() { return cStateKeyword_29_1; }

		//id=FullStateID
		public Assignment getIdAssignment_29_2() { return cIdAssignment_29_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_29_2_0() { return cIdFullStateIDParserRuleCall_29_2_0; }

		//isFinal?="final" id=FullStateID
		public Group getGroup_30() { return cGroup_30; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_30_0() { return cIsFinalAssignment_30_0; }

		//"final"
		public Keyword getIsFinalFinalKeyword_30_0_0() { return cIsFinalFinalKeyword_30_0_0; }

		//id=FullStateID
		public Assignment getIdAssignment_30_1() { return cIdAssignment_30_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_30_1_0() { return cIdFullStateIDParserRuleCall_30_1_0; }

		//isFinal?="final"
		public Assignment getIsFinalAssignment_31() { return cIsFinalAssignment_31; }

		//"final"
		public Keyword getIsFinalFinalKeyword_31_0() { return cIsFinalFinalKeyword_31_0; }

		//type=StateType "state" id=FullStateID
		public Group getGroup_32() { return cGroup_32; }

		//type=StateType
		public Assignment getTypeAssignment_32_0() { return cTypeAssignment_32_0; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_32_0_0() { return cTypeStateTypeEnumRuleCall_32_0_0; }

		//"state"
		public Keyword getStateKeyword_32_1() { return cStateKeyword_32_1; }

		//id=FullStateID
		public Assignment getIdAssignment_32_2() { return cIdAssignment_32_2; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_32_2_0() { return cIdFullStateIDParserRuleCall_32_2_0; }

		//type=StateType "state"
		public Group getGroup_33() { return cGroup_33; }

		//type=StateType
		public Assignment getTypeAssignment_33_0() { return cTypeAssignment_33_0; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_33_0_0() { return cTypeStateTypeEnumRuleCall_33_0_0; }

		//"state"
		public Keyword getStateKeyword_33_1() { return cStateKeyword_33_1; }

		//type=StateType id=FullStateID
		public Group getGroup_34() { return cGroup_34; }

		//type=StateType
		public Assignment getTypeAssignment_34_0() { return cTypeAssignment_34_0; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_34_0_0() { return cTypeStateTypeEnumRuleCall_34_0_0; }

		//id=FullStateID
		public Assignment getIdAssignment_34_1() { return cIdAssignment_34_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_34_1_0() { return cIdFullStateIDParserRuleCall_34_1_0; }

		//type=StateType
		public Assignment getTypeAssignment_35() { return cTypeAssignment_35; }

		//StateType
		public RuleCall getTypeStateTypeEnumRuleCall_35_0() { return cTypeStateTypeEnumRuleCall_35_0; }

		//"state" id=FullStateID
		public Group getGroup_36() { return cGroup_36; }

		//"state"
		public Keyword getStateKeyword_36_0() { return cStateKeyword_36_0; }

		//id=FullStateID
		public Assignment getIdAssignment_36_1() { return cIdAssignment_36_1; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_36_1_0() { return cIdFullStateIDParserRuleCall_36_1_0; }

		//"state"
		public Keyword getStateKeyword_37() { return cStateKeyword_37; }

		//id=FullStateID
		public Assignment getIdAssignment_38() { return cIdAssignment_38; }

		//FullStateID
		public RuleCall getIdFullStateIDParserRuleCall_38_0() { return cIdFullStateIDParserRuleCall_38_0; }
	}

	public class ValuedObjectElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValuedObject");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSignalParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cVariableParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ValuedObject returns sync::ValuedObject:
		//  Signal|Variable; 
		// 	//========================================================================================
		//	 //===  									    VAR,SIG  					               ===
		//	 //========================================================================================
		public ParserRule getRule() { return rule; }

		//Signal|Variable 
		// 	//========================================================================================
		//	 //===  									    VAR,SIG  					               ===
		//	 //========================================================================================
		public Alternatives getAlternatives() { return cAlternatives; }

		//Signal
		public RuleCall getSignalParserRuleCall_0() { return cSignalParserRuleCall_0; }

		//Variable
		public RuleCall getVariableParserRuleCall_1() { return cVariableParserRuleCall_1; }
	}

	public class VariableElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Variable");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cVarKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Alternatives cAlternatives_2 = (Alternatives)cGroup.eContents().get(2);
		private final Group cGroup_2_0 = (Group)cAlternatives_2.eContents().get(0);
		private final Keyword cColonSpaceKeyword_2_0_0 = (Keyword)cGroup_2_0.eContents().get(0);
		private final Assignment cTypeAssignment_2_0_1 = (Assignment)cGroup_2_0.eContents().get(1);
		private final RuleCall cTypeValueTypeEnumRuleCall_2_0_1_0 = (RuleCall)cTypeAssignment_2_0_1.eContents().get(0);
		private final Group cGroup_2_1 = (Group)cAlternatives_2.eContents().get(1);
		private final Keyword cColonEqualsSignKeyword_2_1_0 = (Keyword)cGroup_2_1.eContents().get(0);
		private final Assignment cInitialValueAssignment_2_1_1 = (Assignment)cGroup_2_1.eContents().get(1);
		private final RuleCall cInitialValueIDTerminalRuleCall_2_1_1_0 = (RuleCall)cInitialValueAssignment_2_1_1.eContents().get(0);
		private final Keyword cColonSpaceKeyword_2_1_2 = (Keyword)cGroup_2_1.eContents().get(2);
		private final Assignment cTypeAssignment_2_1_3 = (Assignment)cGroup_2_1.eContents().get(3);
		private final RuleCall cTypeValueTypeEnumRuleCall_2_1_3_0 = (RuleCall)cTypeAssignment_2_1_3.eContents().get(0);
		
		//Variable returns sync::Variable:
		//  "var" name=ID (": " type=ValueType|":=" initialValue=ID ": " type=ValueType); 
		//    
		//	   
		//	 
		//	    //or type only, type being either pre-defined or hostcode
		//	           // either initial value and type
		public ParserRule getRule() { return rule; }

		//"var" name=ID (": " type=ValueType|":=" initialValue=ID ": " type=ValueType) 
		//	   
		//	 
		//	    //or type only, type being either pre-defined or hostcode
		//	           // either initial value and type
		public Group getGroup() { return cGroup; }

		//"var"
		public Keyword getVarKeyword_0() { return cVarKeyword_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//": " type=ValueType|":=" initialValue=ID ": " type=ValueType  
		//	 
		//	    //or type only, type being either pre-defined or hostcode
		//	           // either initial value and type
		public Alternatives getAlternatives_2() { return cAlternatives_2; }

		//": " type=ValueType
		public Group getGroup_2_0() { return cGroup_2_0; }

		//": "
		public Keyword getColonSpaceKeyword_2_0_0() { return cColonSpaceKeyword_2_0_0; }

		//type=ValueType
		public Assignment getTypeAssignment_2_0_1() { return cTypeAssignment_2_0_1; }

		//ValueType
		public RuleCall getTypeValueTypeEnumRuleCall_2_0_1_0() { return cTypeValueTypeEnumRuleCall_2_0_1_0; }

		//":=" initialValue=ID ": " type=ValueType
		public Group getGroup_2_1() { return cGroup_2_1; }

		//":="
		public Keyword getColonEqualsSignKeyword_2_1_0() { return cColonEqualsSignKeyword_2_1_0; }

		//initialValue=ID
		public Assignment getInitialValueAssignment_2_1_1() { return cInitialValueAssignment_2_1_1; }

		//ID
		public RuleCall getInitialValueIDTerminalRuleCall_2_1_1_0() { return cInitialValueIDTerminalRuleCall_2_1_1_0; }

		//": "
		public Keyword getColonSpaceKeyword_2_1_2() { return cColonSpaceKeyword_2_1_2; }

		//type=ValueType
		public Assignment getTypeAssignment_2_1_3() { return cTypeAssignment_2_1_3; }

		//ValueType
		public RuleCall getTypeValueTypeEnumRuleCall_2_1_3_0() { return cTypeValueTypeEnumRuleCall_2_1_3_0; }
	}

	public class SignalElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Signal");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Assignment cIsLocalAssignment_0_0 = (Assignment)cAlternatives_0.eContents().get(0);
		private final Keyword cIsLocalLocalKeyword_0_0_0 = (Keyword)cIsLocalAssignment_0_0.eContents().get(0);
		private final Alternatives cAlternatives_0_1 = (Alternatives)cAlternatives_0.eContents().get(1);
		private final Assignment cIsInputAssignment_0_1_0 = (Assignment)cAlternatives_0_1.eContents().get(0);
		private final Keyword cIsInputInputKeyword_0_1_0_0 = (Keyword)cIsInputAssignment_0_1_0.eContents().get(0);
		private final Assignment cIsOutputAssignment_0_1_1 = (Assignment)cAlternatives_0_1.eContents().get(1);
		private final Keyword cIsOutputOutputKeyword_0_1_1_0 = (Keyword)cIsOutputAssignment_0_1_1.eContents().get(0);
		private final Group cGroup_0_1_2 = (Group)cAlternatives_0_1.eContents().get(2);
		private final Assignment cIsInputAssignment_0_1_2_0 = (Assignment)cGroup_0_1_2.eContents().get(0);
		private final Keyword cIsInputInputKeyword_0_1_2_0_0 = (Keyword)cIsInputAssignment_0_1_2_0.eContents().get(0);
		private final Assignment cIsOutputAssignment_0_1_2_1 = (Assignment)cGroup_0_1_2.eContents().get(1);
		private final Keyword cIsOutputOutputKeyword_0_1_2_1_0 = (Keyword)cIsOutputAssignment_0_1_2_1.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameIDTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cColonEqualsSignKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cInitialValueAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cInitialValueIDTerminalRuleCall_2_1_0 = (RuleCall)cInitialValueAssignment_2_1.eContents().get(0);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cColonSpaceKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cTypeAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cTypeValueTypeEnumRuleCall_3_0_1_0 = (RuleCall)cTypeAssignment_3_0_1.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cCombineKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Assignment cTypeAssignment_3_1_1 = (Assignment)cGroup_3_1.eContents().get(1);
		private final RuleCall cTypeValueTypeEnumRuleCall_3_1_1_0 = (RuleCall)cTypeAssignment_3_1_1.eContents().get(0);
		private final Keyword cWithKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Alternatives cAlternatives_3_1_3 = (Alternatives)cGroup_3_1.eContents().get(3);
		private final Assignment cCombineOperatorAssignment_3_1_3_0 = (Assignment)cAlternatives_3_1_3.eContents().get(0);
		private final RuleCall cCombineOperatorCombineOperatorEnumRuleCall_3_1_3_0_0 = (RuleCall)cCombineOperatorAssignment_3_1_3_0.eContents().get(0);
		private final Assignment cHostCombineOperatorAssignment_3_1_3_1 = (Assignment)cAlternatives_3_1_3.eContents().get(1);
		private final RuleCall cHostCombineOperatorSTRINGTerminalRuleCall_3_1_3_1_0 = (RuleCall)cHostCombineOperatorAssignment_3_1_3_1.eContents().get(0);
		
		//Signal returns sync::Signal:
		//  (isLocal?="local"|(isInput?="input"|isOutput?="output"|isInput?="input" isOutput
		//  ?="output")) name=ID (":=" initialValue=ID)? (": " type=ValueType|": combine" type=
		//  ValueType "with" (combineOperator=CombineOperator|hostCombineOperator=STRING)); 
		//    
		// 	//a signal is EITHER local OR (input or output or both)
		//	 	 
		//	 
		//			 
		//		
		//		 	
		//		
		//		 	                                   
		//		 		
		//	
		//	 
		//	
		//	   
		//	
		//	 
		//		    // either initial value and type
		//	  	         //or initial value and combine type
		//	  
		//
		////==============================================================================
		//// Basic Actions
		////==============================================================================
		public ParserRule getRule() { return rule; }

		//(isLocal?="local"|(isInput?="input"|isOutput?="output"|isInput?="input" isOutput
		//?="output")) name=ID (":=" initialValue=ID)? (": " type=ValueType|": combine" type=
		//ValueType "with" (combineOperator=CombineOperator|hostCombineOperator=STRING)) 
		// 	//a signal is EITHER local OR (input or output or both)
		//	 	 
		//	 
		//			 
		//		
		//		 	
		//		
		//		 	                                   
		//		 		
		//	
		//	 
		//	
		//	   
		//	
		//	 
		//		    // either initial value and type
		//	  	         //or initial value and combine type
		public Group getGroup() { return cGroup; }

		//isLocal?="local"|(isInput?="input"|isOutput?="output"|isInput?="input" isOutput?=
		//"output") 
		// 	//a signal is EITHER local OR (input or output or both)
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//isLocal?="local"
		public Assignment getIsLocalAssignment_0_0() { return cIsLocalAssignment_0_0; }

		//"local"
		public Keyword getIsLocalLocalKeyword_0_0_0() { return cIsLocalLocalKeyword_0_0_0; }

		//isInput?="input"|isOutput?="output"|isInput?="input" isOutput?="output"
		public Alternatives getAlternatives_0_1() { return cAlternatives_0_1; }

		//isInput?="input"
		public Assignment getIsInputAssignment_0_1_0() { return cIsInputAssignment_0_1_0; }

		//"input"
		public Keyword getIsInputInputKeyword_0_1_0_0() { return cIsInputInputKeyword_0_1_0_0; }

		//isOutput?="output"
		public Assignment getIsOutputAssignment_0_1_1() { return cIsOutputAssignment_0_1_1; }

		//"output"
		public Keyword getIsOutputOutputKeyword_0_1_1_0() { return cIsOutputOutputKeyword_0_1_1_0; }

		//isInput?="input" isOutput?="output"
		public Group getGroup_0_1_2() { return cGroup_0_1_2; }

		//isInput?="input"
		public Assignment getIsInputAssignment_0_1_2_0() { return cIsInputAssignment_0_1_2_0; }

		//"input"
		public Keyword getIsInputInputKeyword_0_1_2_0_0() { return cIsInputInputKeyword_0_1_2_0_0; }

		//isOutput?="output"
		public Assignment getIsOutputAssignment_0_1_2_1() { return cIsOutputAssignment_0_1_2_1; }

		//"output"
		public Keyword getIsOutputOutputKeyword_0_1_2_1_0() { return cIsOutputOutputKeyword_0_1_2_1_0; }

		//name=ID
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//ID
		public RuleCall getNameIDTerminalRuleCall_1_0() { return cNameIDTerminalRuleCall_1_0; }

		//(":=" initialValue=ID)?
		public Group getGroup_2() { return cGroup_2; }

		//":="
		public Keyword getColonEqualsSignKeyword_2_0() { return cColonEqualsSignKeyword_2_0; }

		//initialValue=ID
		public Assignment getInitialValueAssignment_2_1() { return cInitialValueAssignment_2_1; }

		//ID
		public RuleCall getInitialValueIDTerminalRuleCall_2_1_0() { return cInitialValueIDTerminalRuleCall_2_1_0; }

		//": " type=ValueType|": combine" type=ValueType "with" (combineOperator=
		//CombineOperator|hostCombineOperator=STRING)  
		//	
		//	 
		//		    // either initial value and type
		//	  	         //or initial value and combine type
		public Alternatives getAlternatives_3() { return cAlternatives_3; }

		//": " type=ValueType
		public Group getGroup_3_0() { return cGroup_3_0; }

		//": "
		public Keyword getColonSpaceKeyword_3_0_0() { return cColonSpaceKeyword_3_0_0; }

		//type=ValueType
		public Assignment getTypeAssignment_3_0_1() { return cTypeAssignment_3_0_1; }

		//ValueType
		public RuleCall getTypeValueTypeEnumRuleCall_3_0_1_0() { return cTypeValueTypeEnumRuleCall_3_0_1_0; }

		//": combine" type=ValueType "with" (combineOperator=CombineOperator|
		//hostCombineOperator=STRING)
		public Group getGroup_3_1() { return cGroup_3_1; }

		//": combine"
		public Keyword getCombineKeyword_3_1_0() { return cCombineKeyword_3_1_0; }

		//type=ValueType
		public Assignment getTypeAssignment_3_1_1() { return cTypeAssignment_3_1_1; }

		//ValueType
		public RuleCall getTypeValueTypeEnumRuleCall_3_1_1_0() { return cTypeValueTypeEnumRuleCall_3_1_1_0; }

		//"with"
		public Keyword getWithKeyword_3_1_2() { return cWithKeyword_3_1_2; }

		//combineOperator=CombineOperator|hostCombineOperator=STRING
		public Alternatives getAlternatives_3_1_3() { return cAlternatives_3_1_3; }

		//combineOperator=CombineOperator
		public Assignment getCombineOperatorAssignment_3_1_3_0() { return cCombineOperatorAssignment_3_1_3_0; }

		//CombineOperator
		public RuleCall getCombineOperatorCombineOperatorEnumRuleCall_3_1_3_0_0() { return cCombineOperatorCombineOperatorEnumRuleCall_3_1_3_0_0; }

		//hostCombineOperator=STRING
		public Assignment getHostCombineOperatorAssignment_3_1_3_1() { return cHostCombineOperatorAssignment_3_1_3_1; }

		//STRING
		public RuleCall getHostCombineOperatorSTRINGTerminalRuleCall_3_1_3_1_0() { return cHostCombineOperatorSTRINGTerminalRuleCall_3_1_3_1_0; }
	}

	public class ActionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Action");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIsImmediateAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cIsImmediateNumberSignKeyword_0_0 = (Keyword)cIsImmediateAssignment_0.eContents().get(0);
		private final Assignment cDelayAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDelayINTTerminalRuleCall_1_0 = (RuleCall)cDelayAssignment_1.eContents().get(0);
		private final Assignment cTriggerAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTriggerBooleanExpressionParserRuleCall_2_0 = (RuleCall)cTriggerAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cSolidusKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cGroup_3.eContents().get(1);
		private final Assignment cEffectsAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cEffectsEffectParserRuleCall_3_1_0_0 = (RuleCall)cEffectsAssignment_3_1_0.eContents().get(0);
		private final Keyword cCommaKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		
		//Action returns sync::Action:
		//  isImmediate?="#"? delay=INT? trigger=BooleanExpression? ("/" (effects+=Effect ","?)*)
		//  ?; 
		////==============================================================================
		//// Basic Actions
		////==============================================================================
		public ParserRule getRule() { return rule; }

		//isImmediate?="#"? delay=INT? trigger=BooleanExpression? ("/" (effects+=Effect ","?)*)
		//?
		public Group getGroup() { return cGroup; }

		//isImmediate?="#"?
		public Assignment getIsImmediateAssignment_0() { return cIsImmediateAssignment_0; }

		//"#"
		public Keyword getIsImmediateNumberSignKeyword_0_0() { return cIsImmediateNumberSignKeyword_0_0; }

		//delay=INT?
		public Assignment getDelayAssignment_1() { return cDelayAssignment_1; }

		//INT
		public RuleCall getDelayINTTerminalRuleCall_1_0() { return cDelayINTTerminalRuleCall_1_0; }

		//trigger=BooleanExpression?
		public Assignment getTriggerAssignment_2() { return cTriggerAssignment_2; }

		//BooleanExpression
		public RuleCall getTriggerBooleanExpressionParserRuleCall_2_0() { return cTriggerBooleanExpressionParserRuleCall_2_0; }

		//("/" (effects+=Effect ","?)*)?
		public Group getGroup_3() { return cGroup_3; }

		//"/"
		public Keyword getSolidusKeyword_3_0() { return cSolidusKeyword_3_0; }

		//(effects+=Effect ","?)*
		public Group getGroup_3_1() { return cGroup_3_1; }

		//effects+=Effect
		public Assignment getEffectsAssignment_3_1_0() { return cEffectsAssignment_3_1_0; }

		//Effect
		public RuleCall getEffectsEffectParserRuleCall_3_1_0_0() { return cEffectsEffectParserRuleCall_3_1_0_0; }

		//","?
		public Keyword getCommaKeyword_3_1_1() { return cCommaKeyword_3_1_1; }
	}

	public class EffectElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Effect");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cEmissionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAssignmentParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cHostCodeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Effect returns sync::Effect:
		//  Emission|Assignment|HostCode;
		public ParserRule getRule() { return rule; }

		//Emission|Assignment|HostCode
		public Alternatives getAlternatives() { return cAlternatives; }

		//Emission
		public RuleCall getEmissionParserRuleCall_0() { return cEmissionParserRuleCall_0; }

		//Assignment
		public RuleCall getAssignmentParserRuleCall_1() { return cAssignmentParserRuleCall_1; }

		//HostCode
		public RuleCall getHostCodeParserRuleCall_2() { return cHostCodeParserRuleCall_2; }
	}

	public class EmissionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Emission");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cSignalAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cSignalSignalCrossReference_0_0 = (CrossReference)cSignalAssignment_0.eContents().get(0);
		private final RuleCall cSignalSignalIDTerminalRuleCall_0_0_1 = (RuleCall)cSignalSignalCrossReference_0_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNewValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNewValueValueExpressionParserRuleCall_1_1_0 = (RuleCall)cNewValueAssignment_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//Emission returns sync::Emission:
		//  signal=[sync::Signal] ("(" newValue=ValueExpression ")")?;
		public ParserRule getRule() { return rule; }

		//signal=[sync::Signal] ("(" newValue=ValueExpression ")")?
		public Group getGroup() { return cGroup; }

		//signal=[sync::Signal]
		public Assignment getSignalAssignment_0() { return cSignalAssignment_0; }

		//[sync::Signal]
		public CrossReference getSignalSignalCrossReference_0_0() { return cSignalSignalCrossReference_0_0; }

		//ID
		public RuleCall getSignalSignalIDTerminalRuleCall_0_0_1() { return cSignalSignalIDTerminalRuleCall_0_0_1; }

		//("(" newValue=ValueExpression ")")?
		public Group getGroup_1() { return cGroup_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }

		//newValue=ValueExpression
		public Assignment getNewValueAssignment_1_1() { return cNewValueAssignment_1_1; }

		//ValueExpression
		public RuleCall getNewValueValueExpressionParserRuleCall_1_1_0() { return cNewValueValueExpressionParserRuleCall_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
	}

	public class AssignmentElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Assignment");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cVariableAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cVariableVariableCrossReference_0_0 = (CrossReference)cVariableAssignment_0.eContents().get(0);
		private final RuleCall cVariableVariableIDTerminalRuleCall_0_0_1 = (RuleCall)cVariableVariableCrossReference_0_0.eContents().get(1);
		private final Keyword cColonEqualsSignKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cExpressionAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cExpressionValueExpressionParserRuleCall_2_0 = (RuleCall)cExpressionAssignment_2.eContents().get(0);
		
		//Assignment returns sync::Assignment:
		//  variable=[sync::Variable] ":=" expression=ValueExpression;
		public ParserRule getRule() { return rule; }

		//variable=[sync::Variable] ":=" expression=ValueExpression
		public Group getGroup() { return cGroup; }

		//variable=[sync::Variable]
		public Assignment getVariableAssignment_0() { return cVariableAssignment_0; }

		//[sync::Variable]
		public CrossReference getVariableVariableCrossReference_0_0() { return cVariableVariableCrossReference_0_0; }

		//ID
		public RuleCall getVariableVariableIDTerminalRuleCall_0_0_1() { return cVariableVariableIDTerminalRuleCall_0_0_1; }

		//":="
		public Keyword getColonEqualsSignKeyword_1() { return cColonEqualsSignKeyword_1; }

		//expression=ValueExpression
		public Assignment getExpressionAssignment_2() { return cExpressionAssignment_2; }

		//ValueExpression
		public RuleCall getExpressionValueExpressionParserRuleCall_2_0() { return cExpressionValueExpressionParserRuleCall_2_0; }
	}

	public class SignalReferenceElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SignalReference");
		private final Assignment cSignalAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cSignalSignalCrossReference_0 = (CrossReference)cSignalAssignment.eContents().get(0);
		private final RuleCall cSignalSignalIDTerminalRuleCall_0_1 = (RuleCall)cSignalSignalCrossReference_0.eContents().get(1);
		
		//SignalReference returns sync::SignalReference:
		//  signal=[sync::Signal];
		public ParserRule getRule() { return rule; }

		//signal=[sync::Signal]
		public Assignment getSignalAssignment() { return cSignalAssignment; }

		//[sync::Signal]
		public CrossReference getSignalSignalCrossReference_0() { return cSignalSignalCrossReference_0; }

		//ID
		public RuleCall getSignalSignalIDTerminalRuleCall_0_1() { return cSignalSignalIDTerminalRuleCall_0_1; }
	}

	public class VariableReferenceElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VariableReference");
		private final Assignment cVariableAssignment = (Assignment)rule.eContents().get(1);
		private final CrossReference cVariableVariableCrossReference_0 = (CrossReference)cVariableAssignment.eContents().get(0);
		private final RuleCall cVariableVariableIDTerminalRuleCall_0_1 = (RuleCall)cVariableVariableCrossReference_0.eContents().get(1);
		
		//VariableReference returns sync::VariableReference:
		//  variable=[sync::Variable]; 
		//
		//    
		//	    
		////
		////Signal returns sync::Signal:
		////	name=ID;
		////	
		////Variable returns sync::Variable:
		////	name=ID;
		//
		////==============================================================================
		//// Values
		////==============================================================================
		public ParserRule getRule() { return rule; }

		//variable=[sync::Variable]
		public Assignment getVariableAssignment() { return cVariableAssignment; }

		//[sync::Variable]
		public CrossReference getVariableVariableCrossReference_0() { return cVariableVariableCrossReference_0; }

		//ID
		public RuleCall getVariableVariableIDTerminalRuleCall_0_1() { return cVariableVariableIDTerminalRuleCall_0_1; }
	}

	public class IntValueElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IntValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//IntValue returns sync::IntValue:
		//  value=INT; 
		////
		////Signal returns sync::Signal:
		////	name=ID;
		////	
		////Variable returns sync::Variable:
		////	name=ID;
		//
		////==============================================================================
		//// Values
		////==============================================================================
		public ParserRule getRule() { return rule; }

		//value=INT
		public Assignment getValueAssignment() { return cValueAssignment; }

		//INT
		public RuleCall getValueINTTerminalRuleCall_0() { return cValueINTTerminalRuleCall_0; }
	}

	public class FloatValueElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FloatValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueFloatTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//FloatValue returns sync::FloatValue:
		//  value=Float;
		public ParserRule getRule() { return rule; }

		//value=Float
		public Assignment getValueAssignment() { return cValueAssignment; }

		//Float
		public RuleCall getValueFloatTerminalRuleCall_0() { return cValueFloatTerminalRuleCall_0; }
	}

	public class BooleanValueElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BooleanValue");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBooleanTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//BooleanValue returns sync::BooleanValue:
		//  value=Boolean;
		public ParserRule getRule() { return rule; }

		//value=Boolean
		public Assignment getValueAssignment() { return cValueAssignment; }

		//Boolean
		public RuleCall getValueBooleanTerminalRuleCall_0() { return cValueBooleanTerminalRuleCall_0; }
	}

	public class ValueElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFloatValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cBooleanValueParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//Value returns sync::Value:
		//  IntValue|FloatValue|BooleanValue; 
		//    
		//	        
		//
		//// make sure the Float rule does not shadow the built-in INT rule
		public ParserRule getRule() { return rule; }

		//IntValue|FloatValue|BooleanValue 
		//    
		//	        
		//
		//// make sure the Float rule does not shadow the built-in INT rule
		public Alternatives getAlternatives() { return cAlternatives; }

		//IntValue
		public RuleCall getIntValueParserRuleCall_0() { return cIntValueParserRuleCall_0; }

		//FloatValue
		public RuleCall getFloatValueParserRuleCall_1() { return cFloatValueParserRuleCall_1; }

		//BooleanValue
		public RuleCall getBooleanValueParserRuleCall_2() { return cBooleanValueParserRuleCall_2; }
	}

	public class ValOperationElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOperatorValOperatorEnumRuleCall_0_0 = (RuleCall)cOperatorAssignment_0.eContents().get(0);
		private final Assignment cSubExpressionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSubExpressionsSignalReferenceParserRuleCall_1_0 = (RuleCall)cSubExpressionsAssignment_1.eContents().get(0);
		
		//ValOperation returns sync::ComplexExpression:
		//  operator=ValOperator subExpressions+=SignalReference; 
		//
		////==============================================================================
		//// Expressions
		////==============================================================================
		//
		//// Example: ?A	
		//    
		//	  
		//
		//// Example: 42, ?A, var1
		public ParserRule getRule() { return rule; }

		//operator=ValOperator subExpressions+=SignalReference
		public Group getGroup() { return cGroup; }

		//operator=ValOperator
		public Assignment getOperatorAssignment_0() { return cOperatorAssignment_0; }

		//ValOperator
		public RuleCall getOperatorValOperatorEnumRuleCall_0_0() { return cOperatorValOperatorEnumRuleCall_0_0; }

		//subExpressions+=SignalReference
		public Assignment getSubExpressionsAssignment_1() { return cSubExpressionsAssignment_1; }

		//SignalReference
		public RuleCall getSubExpressionsSignalReferenceParserRuleCall_1_0() { return cSubExpressionsSignalReferenceParserRuleCall_1_0; }
	}

	public class ValueExpressionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cIntValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cFloatValueParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cValOperationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cVariableReferenceParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		
		//ValueExpression returns sync::Expression:
		//  IntValue|FloatValue|ValOperation|VariableReference; 
		//
		//// Example: 42, ?A, var1
		//    
		//	            
		//
		//// Example: 42 <= ?A
		public ParserRule getRule() { return rule; }

		//IntValue|FloatValue|ValOperation|VariableReference 
		//
		//// Example: 42, ?A, var1
		//    
		//	            
		//
		//// Example: 42 <= ?A
		public Alternatives getAlternatives() { return cAlternatives; }

		//IntValue
		public RuleCall getIntValueParserRuleCall_0() { return cIntValueParserRuleCall_0; }

		//FloatValue
		public RuleCall getFloatValueParserRuleCall_1() { return cFloatValueParserRuleCall_1; }

		//ValOperation
		public RuleCall getValOperationParserRuleCall_2() { return cValOperationParserRuleCall_2; }

		//VariableReference
		public RuleCall getVariableReferenceParserRuleCall_3() { return cVariableReferenceParserRuleCall_3; }
	}

	public class CompareOperationElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "CompareOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cValueExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cComplexExpressionSubExpressionsAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorCompareOperatorEnumRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cSubExpressionsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cSubExpressionsValueExpressionParserRuleCall_1_2_0 = (RuleCall)cSubExpressionsAssignment_1_2.eContents().get(0);
		
		//CompareOperation returns sync::Expression:
		//  ValueExpression ({sync::ComplexExpression.subExpressions+=current} operator=
		//  CompareOperator subExpressions+=ValueExpression); 
		//
		//// Example: 42 <= ?A
		//    
		//	        	
		//
		//// Example: not A, not false, not (A or B)
		//// at the latter we need the parans to indicate the right binding
		public ParserRule getRule() { return rule; }

		//ValueExpression ({sync::ComplexExpression.subExpressions+=current} operator=
		//CompareOperator subExpressions+=ValueExpression)
		public Group getGroup() { return cGroup; }

		//ValueExpression
		public RuleCall getValueExpressionParserRuleCall_0() { return cValueExpressionParserRuleCall_0; }

		//{sync::ComplexExpression.subExpressions+=current} operator=CompareOperator
		//subExpressions+=ValueExpression
		public Group getGroup_1() { return cGroup_1; }

		//{sync::ComplexExpression.subExpressions+=current}
		public Action getComplexExpressionSubExpressionsAction_1_0() { return cComplexExpressionSubExpressionsAction_1_0; }

		//operator=CompareOperator
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }

		//CompareOperator
		public RuleCall getOperatorCompareOperatorEnumRuleCall_1_1_0() { return cOperatorCompareOperatorEnumRuleCall_1_1_0; }

		//subExpressions+=ValueExpression
		public Assignment getSubExpressionsAssignment_1_2() { return cSubExpressionsAssignment_1_2; }

		//ValueExpression
		public RuleCall getSubExpressionsValueExpressionParserRuleCall_1_2_0() { return cSubExpressionsValueExpressionParserRuleCall_1_2_0; }
	}

	public class NotOperationElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NotOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cOperatorAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cOperatorNotOperatorEnumRuleCall_0_0 = (RuleCall)cOperatorAssignment_0.eContents().get(0);
		private final Assignment cSubExpressionsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cSubExpressionsParanthesedBooleanExpressionParserRuleCall_1_0 = (RuleCall)cSubExpressionsAssignment_1.eContents().get(0);
		
		//NotOperation returns sync::ComplexExpression:
		//  operator=NotOperator subExpressions+=ParanthesedBooleanExpression;   	
		//
		//// Example: not A, not false, not (A or B)
		//// at the latter we need the parans to indicate the right binding
		//    
		//	  
		//
		//// Example: either negated or normal expression (with parantheses)
		public ParserRule getRule() { return rule; }

		//operator=NotOperator subExpressions+=ParanthesedBooleanExpression
		public Group getGroup() { return cGroup; }

		//operator=NotOperator
		public Assignment getOperatorAssignment_0() { return cOperatorAssignment_0; }

		//NotOperator
		public RuleCall getOperatorNotOperatorEnumRuleCall_0_0() { return cOperatorNotOperatorEnumRuleCall_0_0; }

		//subExpressions+=ParanthesedBooleanExpression
		public Assignment getSubExpressionsAssignment_1() { return cSubExpressionsAssignment_1; }

		//ParanthesedBooleanExpression
		public RuleCall getSubExpressionsParanthesedBooleanExpressionParserRuleCall_1_0() { return cSubExpressionsParanthesedBooleanExpressionParserRuleCall_1_0; }
	}

	public class NotOrNormalExpressionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NotOrNormalExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNotOperationParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cParanthesedBooleanExpressionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//NotOrNormalExpression returns sync::Expression:
		//  NotOperation|ParanthesedBooleanExpression; 
		//
		//// Example: either negated or normal expression (with parantheses) 
		//    
		//	    
		//
		//// Example: A and B, not C and 42 <= ?D
		public ParserRule getRule() { return rule; }

		//NotOperation|ParanthesedBooleanExpression 
		//
		//// Example: either negated or normal expression (with parantheses) 
		//    
		//	    
		//
		//// Example: A and B, not C and 42 <= ?D
		public Alternatives getAlternatives() { return cAlternatives; }

		//NotOperation
		public RuleCall getNotOperationParserRuleCall_0() { return cNotOperationParserRuleCall_0; }

		//ParanthesedBooleanExpression
		public RuleCall getParanthesedBooleanExpressionParserRuleCall_1() { return cParanthesedBooleanExpressionParserRuleCall_1; }
	}

	public class AndOperationElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cNotOrNormalExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cComplexExpressionSubExpressionsAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorOperatorAndEnumRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cSubExpressionsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cSubExpressionsNotOrNormalExpressionParserRuleCall_1_2_0 = (RuleCall)cSubExpressionsAssignment_1_2.eContents().get(0);
		
		//AndOperation returns sync::Expression:
		//  NotOrNormalExpression ({sync::ComplexExpression.subExpressions+=current} operator=
		//  OperatorAnd subExpressions+=NotOrNormalExpression)*; 
		//
		//// Example: A and B, not C and 42 <= ?D
		//    
		//	      
		//
		//// Example: A or B, C and B or D and not E
		public ParserRule getRule() { return rule; }

		//NotOrNormalExpression ({sync::ComplexExpression.subExpressions+=current} operator=
		//OperatorAnd subExpressions+=NotOrNormalExpression)*
		public Group getGroup() { return cGroup; }

		//NotOrNormalExpression
		public RuleCall getNotOrNormalExpressionParserRuleCall_0() { return cNotOrNormalExpressionParserRuleCall_0; }

		//({sync::ComplexExpression.subExpressions+=current} operator=OperatorAnd
		//subExpressions+=NotOrNormalExpression)*
		public Group getGroup_1() { return cGroup_1; }

		//{sync::ComplexExpression.subExpressions+=current}
		public Action getComplexExpressionSubExpressionsAction_1_0() { return cComplexExpressionSubExpressionsAction_1_0; }

		//operator=OperatorAnd
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }

		//OperatorAnd
		public RuleCall getOperatorOperatorAndEnumRuleCall_1_1_0() { return cOperatorOperatorAndEnumRuleCall_1_1_0; }

		//subExpressions+=NotOrNormalExpression
		public Assignment getSubExpressionsAssignment_1_2() { return cSubExpressionsAssignment_1_2; }

		//NotOrNormalExpression
		public RuleCall getSubExpressionsNotOrNormalExpressionParserRuleCall_1_2_0() { return cSubExpressionsNotOrNormalExpressionParserRuleCall_1_2_0; }
	}

	public class OrOperationElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OrOperation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAndOperationParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cComplexExpressionSubExpressionsAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOperatorAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOperatorOperatorOrEnumRuleCall_1_1_0 = (RuleCall)cOperatorAssignment_1_1.eContents().get(0);
		private final Assignment cSubExpressionsAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cSubExpressionsAndOperationParserRuleCall_1_2_0 = (RuleCall)cSubExpressionsAssignment_1_2.eContents().get(0);
		
		//OrOperation returns sync::Expression:
		//  AndOperation ({sync::ComplexExpression.subExpressions+=current} operator=
		//  OperatorOr subExpressions+=AndOperation)*; 
		//
		//// Example: A or B, C and B or D and not E 
		//    
		//	      
		//
		//// Example: true, A, 42>var1, (A or B), (not D and C or ?E = 42)
		public ParserRule getRule() { return rule; }

		//AndOperation ({sync::ComplexExpression.subExpressions+=current} operator=
		//OperatorOr subExpressions+=AndOperation)*
		public Group getGroup() { return cGroup; }

		//AndOperation
		public RuleCall getAndOperationParserRuleCall_0() { return cAndOperationParserRuleCall_0; }

		//({sync::ComplexExpression.subExpressions+=current} operator=OperatorOr
		//subExpressions+=AndOperation)*
		public Group getGroup_1() { return cGroup_1; }

		//{sync::ComplexExpression.subExpressions+=current}
		public Action getComplexExpressionSubExpressionsAction_1_0() { return cComplexExpressionSubExpressionsAction_1_0; }

		//operator=OperatorOr
		public Assignment getOperatorAssignment_1_1() { return cOperatorAssignment_1_1; }

		//OperatorOr
		public RuleCall getOperatorOperatorOrEnumRuleCall_1_1_0() { return cOperatorOperatorOrEnumRuleCall_1_1_0; }

		//subExpressions+=AndOperation
		public Assignment getSubExpressionsAssignment_1_2() { return cSubExpressionsAssignment_1_2; }

		//AndOperation
		public RuleCall getSubExpressionsAndOperationParserRuleCall_1_2_0() { return cSubExpressionsAndOperationParserRuleCall_1_2_0; }
	}

	public class ParanthesedBooleanExpressionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ParanthesedBooleanExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cBooleanValueParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cSignalReferenceParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cCompareOperationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final RuleCall cOrOperationParserRuleCall_3_1 = (RuleCall)cGroup_3.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//ParanthesedBooleanExpression returns sync::Expression:
		//  BooleanValue|SignalReference|CompareOperation|"(" OrOperation ")"; 
		//
		//// Example: true, A, 42>var1, (A or B), (not D and C or ?E = 42)
		//    
		//                  
		//
		//// Example: not D and C or ?E = 42 or not (A and (B or C))
		public ParserRule getRule() { return rule; }

		//BooleanValue|SignalReference|CompareOperation|"(" OrOperation ")" 
		//
		//// Example: true, A, 42>var1, (A or B), (not D and C or ?E = 42)
		//    
		//                  
		//
		//// Example: not D and C or ?E = 42 or not (A and (B or C))
		public Alternatives getAlternatives() { return cAlternatives; }

		//BooleanValue
		public RuleCall getBooleanValueParserRuleCall_0() { return cBooleanValueParserRuleCall_0; }

		//SignalReference
		public RuleCall getSignalReferenceParserRuleCall_1() { return cSignalReferenceParserRuleCall_1; }

		//CompareOperation
		public RuleCall getCompareOperationParserRuleCall_2() { return cCompareOperationParserRuleCall_2; }

		//"(" OrOperation ")"
		public Group getGroup_3() { return cGroup_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_0() { return cLeftParenthesisKeyword_3_0; }

		//OrOperation
		public RuleCall getOrOperationParserRuleCall_3_1() { return cOrOperationParserRuleCall_3_1; }

		//")"
		public Keyword getRightParenthesisKeyword_3_2() { return cRightParenthesisKeyword_3_2; }
	}

	public class BooleanExpressionElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "BooleanExpression");
		private final RuleCall cOrOperationParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//BooleanExpression returns sync::Expression:
		//  OrOperation; 
		//
		//// Example: not D and C or ?E = 42 or not (A and (B or C))
		//    
		//	  
		//
		////==============================================================================
		//// Operators
		////==============================================================================
		public ParserRule getRule() { return rule; }

		//OrOperation
		public RuleCall getOrOperationParserRuleCall() { return cOrOperationParserRuleCall; }
	}

	public class HostCodeElements implements IParserRuleAccess {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "HostCode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cCodeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cCodeSTRINGTerminalRuleCall_0_0 = (RuleCall)cCodeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTypeAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTypeIDTerminalRuleCall_1_1_0 = (RuleCall)cTypeAssignment_1_1.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		
		//HostCode returns sync::HostCode:
		//  code=STRING ("(" type=ID ")")?; 
		//
		////==============================================================================
		//// Misc
		////==============================================================================
		//	
		//    
		//	//"'"code=STRING"'";
		public ParserRule getRule() { return rule; }

		//code=STRING ("(" type=ID ")")? 
		//	//"'"code=STRING"'";
		public Group getGroup() { return cGroup; }

		//code=STRING 
		//	//"'"code=STRING"'";
		public Assignment getCodeAssignment_0() { return cCodeAssignment_0; }

		//STRING
		public RuleCall getCodeSTRINGTerminalRuleCall_0_0() { return cCodeSTRINGTerminalRuleCall_0_0; }

		//("(" type=ID ")")?
		public Group getGroup_1() { return cGroup_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_0() { return cLeftParenthesisKeyword_1_0; }

		//type=ID
		public Assignment getTypeAssignment_1_1() { return cTypeAssignment_1_1; }

		//ID
		public RuleCall getTypeIDTerminalRuleCall_1_1_0() { return cTypeIDTerminalRuleCall_1_1_0; }

		//")"
		public Keyword getRightParenthesisKeyword_1_2() { return cRightParenthesisKeyword_1_2; }
	}
	
	
	public class OperatorTypeElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "OperatorType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEQEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEQEqualsSignKeyword_0_0 = (Keyword)cEQEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLTLessThanSignKeyword_1_0 = (Keyword)cLTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLEQEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLEQLessThanSignEqualsSignKeyword_2_0 = (Keyword)cLEQEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGTGreaterThanSignKeyword_3_0 = (Keyword)cGTEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cGEQEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cGEQGreaterThanSignEqualsSignKeyword_4_0 = (Keyword)cGEQEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cNOTEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cNOTNotKeyword_5_0 = (Keyword)cNOTEnumLiteralDeclaration_5.eContents().get(0);
		private final EnumLiteralDeclaration cANDEnumLiteralDeclaration_6 = (EnumLiteralDeclaration)cAlternatives.eContents().get(6);
		private final Keyword cANDAndKeyword_6_0 = (Keyword)cANDEnumLiteralDeclaration_6.eContents().get(0);
		private final EnumLiteralDeclaration cOREnumLiteralDeclaration_7 = (EnumLiteralDeclaration)cAlternatives.eContents().get(7);
		private final Keyword cOROrKeyword_7_0 = (Keyword)cOREnumLiteralDeclaration_7.eContents().get(0);
		private final EnumLiteralDeclaration cADDEnumLiteralDeclaration_8 = (EnumLiteralDeclaration)cAlternatives.eContents().get(8);
		private final Keyword cADDPlusSignKeyword_8_0 = (Keyword)cADDEnumLiteralDeclaration_8.eContents().get(0);
		private final EnumLiteralDeclaration cSUBEnumLiteralDeclaration_9 = (EnumLiteralDeclaration)cAlternatives.eContents().get(9);
		private final Keyword cSUBHyphenMinusKeyword_9_0 = (Keyword)cSUBEnumLiteralDeclaration_9.eContents().get(0);
		private final EnumLiteralDeclaration cMULTEnumLiteralDeclaration_10 = (EnumLiteralDeclaration)cAlternatives.eContents().get(10);
		private final Keyword cMULTAsteriskKeyword_10_0 = (Keyword)cMULTEnumLiteralDeclaration_10.eContents().get(0);
		private final EnumLiteralDeclaration cDIVEnumLiteralDeclaration_11 = (EnumLiteralDeclaration)cAlternatives.eContents().get(11);
		private final Keyword cDIVDivKeyword_11_0 = (Keyword)cDIVEnumLiteralDeclaration_11.eContents().get(0);
		private final EnumLiteralDeclaration cMODEnumLiteralDeclaration_12 = (EnumLiteralDeclaration)cAlternatives.eContents().get(12);
		private final Keyword cMODModKeyword_12_0 = (Keyword)cMODEnumLiteralDeclaration_12.eContents().get(0);
		private final EnumLiteralDeclaration cVALEnumLiteralDeclaration_13 = (EnumLiteralDeclaration)cAlternatives.eContents().get(13);
		private final Keyword cVALQuestionMarkKeyword_13_0 = (Keyword)cVALEnumLiteralDeclaration_13.eContents().get(0);
		private final EnumLiteralDeclaration cPREEnumLiteralDeclaration_14 = (EnumLiteralDeclaration)cAlternatives.eContents().get(14);
		private final Keyword cPREPreKeyword_14_0 = (Keyword)cPREEnumLiteralDeclaration_14.eContents().get(0);
		
		//enum OperatorType returns sync::OperatorType:
		//  EQ="=" | LT="<" | LEQ="<=" | GT=">" | GEQ=">=" | NOT="not" | AND="and" | OR="or" | ADD="+" | SUB=
		//  "-" | MULT="*" | DIV="div" | MOD="mod" | VAL="?" | PRE="pre"; 
		//
		////==============================================================================
		//// Operators
		////==============================================================================
		public EnumRule getRule() { return rule; }

		//EQ="=" | LT="<" | LEQ="<=" | GT=">" | GEQ=">=" | NOT="not" | AND="and" | OR="or" | ADD="+" | SUB=
		//"-" | MULT="*" | DIV="div" | MOD="mod" | VAL="?" | PRE="pre" 
		//
		////==============================================================================
		//// Operators
		////==============================================================================
		public Alternatives getAlternatives() { return cAlternatives; }

		//EQ="="
		public EnumLiteralDeclaration getEQEnumLiteralDeclaration_0() { return cEQEnumLiteralDeclaration_0; }

		//"="
		public Keyword getEQEqualsSignKeyword_0_0() { return cEQEqualsSignKeyword_0_0; }

		//LT="<"
		public EnumLiteralDeclaration getLTEnumLiteralDeclaration_1() { return cLTEnumLiteralDeclaration_1; }

		//"<"
		public Keyword getLTLessThanSignKeyword_1_0() { return cLTLessThanSignKeyword_1_0; }

		//LEQ="<="
		public EnumLiteralDeclaration getLEQEnumLiteralDeclaration_2() { return cLEQEnumLiteralDeclaration_2; }

		//"<="
		public Keyword getLEQLessThanSignEqualsSignKeyword_2_0() { return cLEQLessThanSignEqualsSignKeyword_2_0; }

		//GT=">"
		public EnumLiteralDeclaration getGTEnumLiteralDeclaration_3() { return cGTEnumLiteralDeclaration_3; }

		//">"
		public Keyword getGTGreaterThanSignKeyword_3_0() { return cGTGreaterThanSignKeyword_3_0; }

		//GEQ=">="
		public EnumLiteralDeclaration getGEQEnumLiteralDeclaration_4() { return cGEQEnumLiteralDeclaration_4; }

		//">="
		public Keyword getGEQGreaterThanSignEqualsSignKeyword_4_0() { return cGEQGreaterThanSignEqualsSignKeyword_4_0; }

		//NOT="not"
		public EnumLiteralDeclaration getNOTEnumLiteralDeclaration_5() { return cNOTEnumLiteralDeclaration_5; }

		//"not"
		public Keyword getNOTNotKeyword_5_0() { return cNOTNotKeyword_5_0; }

		//AND="and"
		public EnumLiteralDeclaration getANDEnumLiteralDeclaration_6() { return cANDEnumLiteralDeclaration_6; }

		//"and"
		public Keyword getANDAndKeyword_6_0() { return cANDAndKeyword_6_0; }

		//OR="or"
		public EnumLiteralDeclaration getOREnumLiteralDeclaration_7() { return cOREnumLiteralDeclaration_7; }

		//"or"
		public Keyword getOROrKeyword_7_0() { return cOROrKeyword_7_0; }

		//ADD="+"
		public EnumLiteralDeclaration getADDEnumLiteralDeclaration_8() { return cADDEnumLiteralDeclaration_8; }

		//"+"
		public Keyword getADDPlusSignKeyword_8_0() { return cADDPlusSignKeyword_8_0; }

		//SUB="-"
		public EnumLiteralDeclaration getSUBEnumLiteralDeclaration_9() { return cSUBEnumLiteralDeclaration_9; }

		//"-"
		public Keyword getSUBHyphenMinusKeyword_9_0() { return cSUBHyphenMinusKeyword_9_0; }

		//MULT="*"
		public EnumLiteralDeclaration getMULTEnumLiteralDeclaration_10() { return cMULTEnumLiteralDeclaration_10; }

		//"*"
		public Keyword getMULTAsteriskKeyword_10_0() { return cMULTAsteriskKeyword_10_0; }

		//DIV="div"
		public EnumLiteralDeclaration getDIVEnumLiteralDeclaration_11() { return cDIVEnumLiteralDeclaration_11; }

		//"div"
		public Keyword getDIVDivKeyword_11_0() { return cDIVDivKeyword_11_0; }

		//MOD="mod"
		public EnumLiteralDeclaration getMODEnumLiteralDeclaration_12() { return cMODEnumLiteralDeclaration_12; }

		//"mod"
		public Keyword getMODModKeyword_12_0() { return cMODModKeyword_12_0; }

		//VAL="?"
		public EnumLiteralDeclaration getVALEnumLiteralDeclaration_13() { return cVALEnumLiteralDeclaration_13; }

		//"?"
		public Keyword getVALQuestionMarkKeyword_13_0() { return cVALQuestionMarkKeyword_13_0; }

		//PRE="pre"
		public EnumLiteralDeclaration getPREEnumLiteralDeclaration_14() { return cPREEnumLiteralDeclaration_14; }

		//"pre"
		public Keyword getPREPreKeyword_14_0() { return cPREPreKeyword_14_0; }
	}

	public class ValOperatorElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ValOperator");
		private final EnumLiteralDeclaration cVALEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cVALQuestionMarkKeyword_0 = (Keyword)cVALEnumLiteralDeclaration.eContents().get(0);
		
		//enum ValOperator returns sync::OperatorType:
		//  VAL="?";
		public EnumRule getRule() { return rule; }

		//VAL="?"
		public EnumLiteralDeclaration getVALEnumLiteralDeclaration() { return cVALEnumLiteralDeclaration; }

		//"?"
		public Keyword getVALQuestionMarkKeyword_0() { return cVALQuestionMarkKeyword_0; }
	}

	public class CompareOperatorElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "CompareOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEQEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEQEqualsSignKeyword_0_0 = (Keyword)cEQEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cLTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cLTLessThanSignKeyword_1_0 = (Keyword)cLTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cLEQEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cLEQLessThanSignEqualsSignKeyword_2_0 = (Keyword)cLEQEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cGTEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cGTGreaterThanSignKeyword_3_0 = (Keyword)cGTEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cGEQEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cGEQGreaterThanSignEqualsSignKeyword_4_0 = (Keyword)cGEQEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum CompareOperator returns sync::OperatorType:
		//  EQ="=" | LT="<" | LEQ="<=" | GT=">" | GEQ=">=";
		public EnumRule getRule() { return rule; }

		//EQ="=" | LT="<" | LEQ="<=" | GT=">" | GEQ=">="
		public Alternatives getAlternatives() { return cAlternatives; }

		//EQ="="
		public EnumLiteralDeclaration getEQEnumLiteralDeclaration_0() { return cEQEnumLiteralDeclaration_0; }

		//"="
		public Keyword getEQEqualsSignKeyword_0_0() { return cEQEqualsSignKeyword_0_0; }

		//LT="<"
		public EnumLiteralDeclaration getLTEnumLiteralDeclaration_1() { return cLTEnumLiteralDeclaration_1; }

		//"<"
		public Keyword getLTLessThanSignKeyword_1_0() { return cLTLessThanSignKeyword_1_0; }

		//LEQ="<="
		public EnumLiteralDeclaration getLEQEnumLiteralDeclaration_2() { return cLEQEnumLiteralDeclaration_2; }

		//"<="
		public Keyword getLEQLessThanSignEqualsSignKeyword_2_0() { return cLEQLessThanSignEqualsSignKeyword_2_0; }

		//GT=">"
		public EnumLiteralDeclaration getGTEnumLiteralDeclaration_3() { return cGTEnumLiteralDeclaration_3; }

		//">"
		public Keyword getGTGreaterThanSignKeyword_3_0() { return cGTGreaterThanSignKeyword_3_0; }

		//GEQ=">="
		public EnumLiteralDeclaration getGEQEnumLiteralDeclaration_4() { return cGEQEnumLiteralDeclaration_4; }

		//">="
		public Keyword getGEQGreaterThanSignEqualsSignKeyword_4_0() { return cGEQGreaterThanSignEqualsSignKeyword_4_0; }
	}

	public class NotOperatorElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "NotOperator");
		private final EnumLiteralDeclaration cNOTEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cNOTNotKeyword_0 = (Keyword)cNOTEnumLiteralDeclaration.eContents().get(0);
		
		//enum NotOperator returns sync::OperatorType:
		//  NOT="not";
		public EnumRule getRule() { return rule; }

		//NOT="not"
		public EnumLiteralDeclaration getNOTEnumLiteralDeclaration() { return cNOTEnumLiteralDeclaration; }

		//"not"
		public Keyword getNOTNotKeyword_0() { return cNOTNotKeyword_0; }
	}

	public class OperatorOrElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "OperatorOr");
		private final EnumLiteralDeclaration cOREnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cOROrKeyword_0 = (Keyword)cOREnumLiteralDeclaration.eContents().get(0);
		
		//enum OperatorOr returns sync::OperatorType:
		//  OR="or";
		public EnumRule getRule() { return rule; }

		//OR="or"
		public EnumLiteralDeclaration getOREnumLiteralDeclaration() { return cOREnumLiteralDeclaration; }

		//"or"
		public Keyword getOROrKeyword_0() { return cOROrKeyword_0; }
	}

	public class OperatorAndElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "OperatorAnd");
		private final EnumLiteralDeclaration cANDEnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cANDAndKeyword_0 = (Keyword)cANDEnumLiteralDeclaration.eContents().get(0);
		
		//enum OperatorAnd returns sync::OperatorType:
		//  AND="and"; 
		//
		//      
		//	
		//
		////==============================================================================
		//// Misc
		////==============================================================================
		public EnumRule getRule() { return rule; }

		//AND="and"
		public EnumLiteralDeclaration getANDEnumLiteralDeclaration() { return cANDEnumLiteralDeclaration; }

		//"and"
		public Keyword getANDAndKeyword_0() { return cANDAndKeyword_0; }
	}

	public class StateTypeElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "StateType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNORMALEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNORMALStateKeyword_0_0 = (Keyword)cNORMALEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cPSEUDOEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cPSEUDOCondKeyword_1_0 = (Keyword)cPSEUDOEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cREFERENCEEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cREFERENCERefKeyword_2_0 = (Keyword)cREFERENCEEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cTEXTUALEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cTEXTUALTextualKeyword_3_0 = (Keyword)cTEXTUALEnumLiteralDeclaration_3.eContents().get(0);
		
		//enum StateType returns sync::StateType:
		//  NORMAL="state" | PSEUDO="cond" | REFERENCE="ref" | TEXTUAL="textual";
		public EnumRule getRule() { return rule; }

		//NORMAL="state" | PSEUDO="cond" | REFERENCE="ref" | TEXTUAL="textual"
		public Alternatives getAlternatives() { return cAlternatives; }

		//NORMAL="state"
		public EnumLiteralDeclaration getNORMALEnumLiteralDeclaration_0() { return cNORMALEnumLiteralDeclaration_0; }

		//"state"
		public Keyword getNORMALStateKeyword_0_0() { return cNORMALStateKeyword_0_0; }

		//PSEUDO="cond"
		public EnumLiteralDeclaration getPSEUDOEnumLiteralDeclaration_1() { return cPSEUDOEnumLiteralDeclaration_1; }

		//"cond"
		public Keyword getPSEUDOCondKeyword_1_0() { return cPSEUDOCondKeyword_1_0; }

		//REFERENCE="ref"
		public EnumLiteralDeclaration getREFERENCEEnumLiteralDeclaration_2() { return cREFERENCEEnumLiteralDeclaration_2; }

		//"ref"
		public Keyword getREFERENCERefKeyword_2_0() { return cREFERENCERefKeyword_2_0; }

		//TEXTUAL="textual"
		public EnumLiteralDeclaration getTEXTUALEnumLiteralDeclaration_3() { return cTEXTUALEnumLiteralDeclaration_3; }

		//"textual"
		public Keyword getTEXTUALTextualKeyword_3_0() { return cTEXTUALTextualKeyword_3_0; }
	}

	public class CombineOperatorElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "CombineOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cNONEEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cNONENONEKeyword_0_0 = (Keyword)cNONEEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cADDEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cADDPlusSignKeyword_1_0 = (Keyword)cADDEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cMULTEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cMULTAsteriskKeyword_2_0 = (Keyword)cMULTEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cANDEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cANDANDKeyword_3_0 = (Keyword)cANDEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cOREnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cORORKeyword_4_0 = (Keyword)cOREnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cHOSTEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cHOSTHostCombineOperatorKeyword_5_0 = (Keyword)cHOSTEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum CombineOperator returns sync::CombineOperator:
		//  NONE | ADD="+" | MULT="*" | AND | OR | HOST="hostCombineOperator";
		public EnumRule getRule() { return rule; }

		//NONE | ADD="+" | MULT="*" | AND | OR | HOST="hostCombineOperator"
		public Alternatives getAlternatives() { return cAlternatives; }

		//NONE
		public EnumLiteralDeclaration getNONEEnumLiteralDeclaration_0() { return cNONEEnumLiteralDeclaration_0; }

		//"NONE"
		public Keyword getNONENONEKeyword_0_0() { return cNONENONEKeyword_0_0; }

		//ADD="+"
		public EnumLiteralDeclaration getADDEnumLiteralDeclaration_1() { return cADDEnumLiteralDeclaration_1; }

		//"+"
		public Keyword getADDPlusSignKeyword_1_0() { return cADDPlusSignKeyword_1_0; }

		//MULT="*"
		public EnumLiteralDeclaration getMULTEnumLiteralDeclaration_2() { return cMULTEnumLiteralDeclaration_2; }

		//"*"
		public Keyword getMULTAsteriskKeyword_2_0() { return cMULTAsteriskKeyword_2_0; }

		//AND
		public EnumLiteralDeclaration getANDEnumLiteralDeclaration_3() { return cANDEnumLiteralDeclaration_3; }

		//"AND"
		public Keyword getANDANDKeyword_3_0() { return cANDANDKeyword_3_0; }

		//OR
		public EnumLiteralDeclaration getOREnumLiteralDeclaration_4() { return cOREnumLiteralDeclaration_4; }

		//"OR"
		public Keyword getORORKeyword_4_0() { return cORORKeyword_4_0; }

		//HOST="hostCombineOperator"
		public EnumLiteralDeclaration getHOSTEnumLiteralDeclaration_5() { return cHOSTEnumLiteralDeclaration_5; }

		//"hostCombineOperator"
		public Keyword getHOSTHostCombineOperatorKeyword_5_0() { return cHOSTHostCombineOperatorKeyword_5_0; }
	}

	public class ValueTypeElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "ValueType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cPUREEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cPUREPUREKeyword_0_0 = (Keyword)cPUREEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cBOOLEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cBOOLBooleanKeyword_1_0 = (Keyword)cBOOLEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cUNSIGNEDEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cUNSIGNEDUnsignedKeyword_2_0 = (Keyword)cUNSIGNEDEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cINTEGEREnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cINTEGERIntegerKeyword_3_0 = (Keyword)cINTEGEREnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cFLOATEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cFLOATFloatKeyword_4_0 = (Keyword)cFLOATEnumLiteralDeclaration_4.eContents().get(0);
		private final EnumLiteralDeclaration cHOSTEnumLiteralDeclaration_5 = (EnumLiteralDeclaration)cAlternatives.eContents().get(5);
		private final Keyword cHOSTHostTypeKeyword_5_0 = (Keyword)cHOSTEnumLiteralDeclaration_5.eContents().get(0);
		
		//enum ValueType returns sync::ValueType:
		//  PURE | BOOL="boolean" | UNSIGNED="unsigned" | INTEGER="integer" | FLOAT="float" | HOST=
		//  "hostType";
		public EnumRule getRule() { return rule; }

		//PURE | BOOL="boolean" | UNSIGNED="unsigned" | INTEGER="integer" | FLOAT="float" | HOST=
		//"hostType"
		public Alternatives getAlternatives() { return cAlternatives; }

		//PURE
		public EnumLiteralDeclaration getPUREEnumLiteralDeclaration_0() { return cPUREEnumLiteralDeclaration_0; }

		//"PURE"
		public Keyword getPUREPUREKeyword_0_0() { return cPUREPUREKeyword_0_0; }

		//BOOL="boolean"
		public EnumLiteralDeclaration getBOOLEnumLiteralDeclaration_1() { return cBOOLEnumLiteralDeclaration_1; }

		//"boolean"
		public Keyword getBOOLBooleanKeyword_1_0() { return cBOOLBooleanKeyword_1_0; }

		//UNSIGNED="unsigned"
		public EnumLiteralDeclaration getUNSIGNEDEnumLiteralDeclaration_2() { return cUNSIGNEDEnumLiteralDeclaration_2; }

		//"unsigned"
		public Keyword getUNSIGNEDUnsignedKeyword_2_0() { return cUNSIGNEDUnsignedKeyword_2_0; }

		//INTEGER="integer"
		public EnumLiteralDeclaration getINTEGEREnumLiteralDeclaration_3() { return cINTEGEREnumLiteralDeclaration_3; }

		//"integer"
		public Keyword getINTEGERIntegerKeyword_3_0() { return cINTEGERIntegerKeyword_3_0; }

		//FLOAT="float"
		public EnumLiteralDeclaration getFLOATEnumLiteralDeclaration_4() { return cFLOATEnumLiteralDeclaration_4; }

		//"float"
		public Keyword getFLOATFloatKeyword_4_0() { return cFLOATFloatKeyword_4_0; }

		//HOST="hostType"
		public EnumLiteralDeclaration getHOSTEnumLiteralDeclaration_5() { return cHOSTEnumLiteralDeclaration_5; }

		//"hostType"
		public Keyword getHOSTHostTypeKeyword_5_0() { return cHOSTHostTypeKeyword_5_0; }
	}

	public class TransitionTypeElements implements IEnumRuleAccess {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "TransitionType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cWEAKABORTEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cWEAKABORTHyphenMinusHyphenMinusGreaterThanSignKeyword_0_0 = (Keyword)cWEAKABORTEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSTRONGABORTEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSTRONGABORTOKeyword_1_0 = (Keyword)cSTRONGABORTEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cNORMALTERMINATIONEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cNORMALTERMINATIONGreaterThanSignHyphenMinusGreaterThanSignKeyword_2_0 = (Keyword)cNORMALTERMINATIONEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum TransitionType returns sync::TransitionType:
		//  WEAKABORT="-->" | STRONGABORT="o->" | NORMALTERMINATION=">->";
		public EnumRule getRule() { return rule; }

		//WEAKABORT="-->" | STRONGABORT="o->" | NORMALTERMINATION=">->"
		public Alternatives getAlternatives() { return cAlternatives; }

		//WEAKABORT="-->"
		public EnumLiteralDeclaration getWEAKABORTEnumLiteralDeclaration_0() { return cWEAKABORTEnumLiteralDeclaration_0; }

		//"-->"
		public Keyword getWEAKABORTHyphenMinusHyphenMinusGreaterThanSignKeyword_0_0() { return cWEAKABORTHyphenMinusHyphenMinusGreaterThanSignKeyword_0_0; }

		//STRONGABORT="o->"
		public EnumLiteralDeclaration getSTRONGABORTEnumLiteralDeclaration_1() { return cSTRONGABORTEnumLiteralDeclaration_1; }

		//"o->"
		public Keyword getSTRONGABORTOKeyword_1_0() { return cSTRONGABORTOKeyword_1_0; }

		//NORMALTERMINATION=">->"
		public EnumLiteralDeclaration getNORMALTERMINATIONEnumLiteralDeclaration_2() { return cNORMALTERMINATIONEnumLiteralDeclaration_2; }

		//">->"
		public Keyword getNORMALTERMINATIONGreaterThanSignHyphenMinusGreaterThanSignKeyword_2_0() { return cNORMALTERMINATIONGreaterThanSignHyphenMinusGreaterThanSignKeyword_2_0; }
	}
	
	private RegionElements pRegion;
	private StateElements pState;
	private RenamingElements pRenaming;
	private FullStateIDElements pFullStateID;
	private TransitionElements pTransition;
	private TransitionStateElements pTransitionState;
	private ValuedObjectElements pValuedObject;
	private VariableElements pVariable;
	private SignalElements pSignal;
	private ActionElements pAction;
	private EffectElements pEffect;
	private EmissionElements pEmission;
	private AssignmentElements pAssignment;
	private SignalReferenceElements pSignalReference;
	private VariableReferenceElements pVariableReference;
	private IntValueElements pIntValue;
	private FloatValueElements pFloatValue;
	private BooleanValueElements pBooleanValue;
	private ValueElements pValue;
	private TerminalRule tFloat;
	private TerminalRule tBoolean;
	private ValOperationElements pValOperation;
	private ValueExpressionElements pValueExpression;
	private CompareOperationElements pCompareOperation;
	private NotOperationElements pNotOperation;
	private NotOrNormalExpressionElements pNotOrNormalExpression;
	private AndOperationElements pAndOperation;
	private OrOperationElements pOrOperation;
	private ParanthesedBooleanExpressionElements pParanthesedBooleanExpression;
	private BooleanExpressionElements pBooleanExpression;
	private OperatorTypeElements unknownRuleOperatorType;
	private ValOperatorElements unknownRuleValOperator;
	private CompareOperatorElements unknownRuleCompareOperator;
	private NotOperatorElements unknownRuleNotOperator;
	private OperatorOrElements unknownRuleOperatorOr;
	private OperatorAndElements unknownRuleOperatorAnd;
	private HostCodeElements pHostCode;
	private StateTypeElements unknownRuleStateType;
	private CombineOperatorElements unknownRuleCombineOperator;
	private ValueTypeElements unknownRuleValueType;
	private TransitionTypeElements unknownRuleTransitionType;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public KitsGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Region returns sync::Region:
	//  ("region" id=ID)? (variables+=Variable|signals+=Signal|innerStates+=State)+;
	public RegionElements getRegionAccess() {
		return (pRegion != null) ? pRegion : (pRegion = new RegionElements());
	}
	
	public ParserRule getRegionRule() {
		return getRegionAccess().getRule();
	}

	//State returns sync::State:
	//  ((isInitial?="init" isFinal?="final") type=StateType "state" id=FullStateID|(
	//  isInitial?="init" isFinal?="final") type=StateType "state"|(isInitial?="init"
	//  isFinal?="final") type=StateType id=FullStateID|(isInitial?="init" isFinal?="final"
	//  ) "state" id=FullStateID|(isInitial?="init" isFinal?="final") type=StateType|(
	//  isInitial?="init" isFinal?="final") "state"|(isInitial?="init" isFinal?="final") id=
	//  FullStateID|isInitial?="init" isFinal?="final"|(isFinal?="final" isInitial?="init"
	//  ) type=StateType "state" id=FullStateID|(isFinal?="final" isInitial?="init") type=
	//  StateType "state"|(isFinal?="final" isInitial?="init") type=StateType id=FullStateID
	//  |(isFinal?="final" isInitial?="init") "state" id=FullStateID|(isFinal?="final"
	//  isInitial?="init") type=StateType|(isFinal?="final" isInitial?="init") "state"|(
	//  isFinal?="final" isInitial?="init") id=FullStateID|isFinal?="final" isInitial?=
	//  "init"|isInitial?="init" type=StateType "state" id=FullStateID|isInitial?="init"
	//  type=StateType "state"|isInitial?="init" type=StateType id=FullStateID|isInitial?=
	//  "init" "state" id=FullStateID|isInitial?="init" type=StateType|isInitial?="init"
	//  "state"|isInitial?="init" id=FullStateID|isInitial?="init"|isFinal?="final" type=
	//  StateType "state" id=FullStateID|isFinal?="final" type=StateType "state"|isFinal?=
	//  "final" type=StateType id=FullStateID|isFinal?="final" "state" id=FullStateID|
	//  isFinal?="final" type=StateType|isFinal?="final" "state" id=FullStateID|isFinal?=
	//  "final" id=FullStateID|isFinal?="final"|type=StateType "state" id=FullStateID|type=
	//  StateType "state"|type=StateType id=FullStateID|type=StateType|"state" id=
	//  FullStateID|"state"|id=FullStateID) label=FullStateID? bodyText=STRING? ("{" (
	//  "onentry" entryActions+=Action|"oninner" innerActions+=Action|"onexit" exitActions
	//  +=Action|"suspension" suspensionTrigger=Action|signals+=Signal|regions+=Region (
	//  "||" regions+=Region)*)+ "}")? outgoingTransitions+=Transition*; 
	//    
	//	
	//	         
	//  	      
	//  	      
	//  	      
	//  	    
	//  	    
	//  	    
	//  	  
	//  	
	//  	        
	//  	      
	//  	      
	//  	      
	//  	    
	//  	    
	//  	    
	//  	  
	//  	
	//  	        
	//  	      
	//  	        
	//  	      
	//  	     
	//  	    
	//  	    
	//  	  
	//  	
	//  	         
	//  	        
	//  	       
	//  	       
	//  	     
	//  	       
	//  	     
	//  	  
	//  	
	//  	      
	//  	    
	//  	    
	//  	  
	//  	
	//  	    
	//  	  
	//  		
	//  	  
	//  
	//
	//    //	('['(signalRenamings+=Renaming ',')* signalRenamings+=Renaming']')?
	//    
	//  
	//    
	//	    	 	    
	//	  		 	    
	//	  		         
	//	  		 	     // kein effect, kein delay, kein immediate
	public StateElements getStateAccess() {
		return (pState != null) ? pState : (pState = new StateElements());
	}
	
	public ParserRule getStateRule() {
		return getStateAccess().getRule();
	}

	//Renaming returns sync::Renaming:
	//  oldID=STRING "/" newID=STRING;
	public RenamingElements getRenamingAccess() {
		return (pRenaming != null) ? pRenaming : (pRenaming = new RenamingElements());
	}
	
	public ParserRule getRenamingRule() {
		return getRenamingAccess().getRule();
	}

	//FullStateID returns ecore::EString:
	//  (ID "@")? ID; 
	//    
	//	//========================================================================================
	//	 //===  									    ACTIONS  					               ===
	//	 //========================================================================================
	////Action returns sync::Action:
	////	((isImmediate?='#')? (delay=INT ';')? (triggersAndEffects=STRING))
	////| 
	////	Transition
	////	
	////;
	//
	//	//========================================================================================
	//	 //===  									    TRANSITION 					               ===
	//	 //========================================================================================
	public FullStateIDElements getFullStateIDAccess() {
		return (pFullStateID != null) ? pFullStateID : (pFullStateID = new FullStateIDElements());
	}
	
	public ParserRule getFullStateIDRule() {
		return getFullStateIDAccess().getRule();
	}

	//Transition returns sync::Transition:
	//  sourceState=[sync::State|FullStateID]? type=TransitionType targetState=[sync::
	//  State|FullStateID] ("with" isImmediate?="#"? delay=INT? trigger=BooleanExpression? (
	//  "/" (effects+=Effect ","?)*)?)? isHistory?=" history"? ";"; 
	//	//========================================================================================
	//	 //===  									    ACTIONS  					               ===
	//	 //========================================================================================
	////Action returns sync::Action:
	////	((isImmediate?='#')? (delay=INT ';')? (triggersAndEffects=STRING))
	////| 
	////	Transition
	////	
	////;
	//
	//	//========================================================================================
	//	 //===  									    TRANSITION 					               ===
	//	 //========================================================================================
	//	
	//    
	//
	//	  //either reference existing state or create a new one or leave it blank (in that case, the transition belongs to the containing state)
	//	 //|({sync::State} name=FullStateID)
	//	 
	//	
	//	//|newTargetState=TransitionState )
	public TransitionElements getTransitionAccess() {
		return (pTransition != null) ? pTransition : (pTransition = new TransitionElements());
	}
	
	public ParserRule getTransitionRule() {
		return getTransitionAccess().getRule();
	}

	//TransitionState returns sync::State:
	//  (isInitial?="init" isFinal?="final") type=StateType "state" id=FullStateID|(
	//  isInitial?="init" isFinal?="final") type=StateType "state"|(isInitial?="init"
	//  isFinal?="final") type=StateType id=FullStateID|(isInitial?="init" isFinal?="final"
	//  ) "state" id=FullStateID|(isInitial?="init" isFinal?="final") type=StateType|(
	//  isInitial?="init" isFinal?="final") "state"|(isInitial?="init" isFinal?="final") id=
	//  FullStateID|isInitial?="init" isFinal?="final"|(isFinal?="final" isInitial?="init"
	//  ) type=StateType "state" id=FullStateID|(isFinal?="final" isInitial?="init") type=
	//  StateType "state"|(isFinal?="final" isInitial?="init") type=StateType id=FullStateID
	//  |(isFinal?="final" isInitial?="init") "state" id=FullStateID|(isFinal?="final"
	//  isInitial?="init") type=StateType|(isFinal?="final" isInitial?="init") "state"|(
	//  isFinal?="final" isInitial?="init") id=FullStateID|isFinal?="final" isInitial?=
	//  "init"|isInitial?="init" type=StateType "state" id=FullStateID|isInitial?="init"
	//  type=StateType "state"|isInitial?="init" type=StateType id=FullStateID|isInitial?=
	//  "init" "state" id=FullStateID|isInitial?="init" type=StateType|isInitial?="init"
	//  "state"|isInitial?="init" id=FullStateID|isInitial?="init"|isFinal?="final" type=
	//  StateType "state" id=FullStateID|isFinal?="final" type=StateType "state"|isFinal?=
	//  "final" type=StateType id=FullStateID|isFinal?="final" "state" id=FullStateID|
	//  isFinal?="final" type=StateType|isFinal?="final" "state" id=FullStateID|isFinal?=
	//  "final" id=FullStateID|isFinal?="final"|type=StateType "state" id=FullStateID|type=
	//  StateType "state"|type=StateType id=FullStateID|type=StateType|"state" id=
	//  FullStateID|"state"|id=FullStateID; 
	//    
	//		         
	//  	      
	//  	      
	//  	      
	//  	    
	//  	    
	//  	    
	//  	  
	//  	
	//  	        
	//  	      
	//  	      
	//  	      
	//  	    
	//  	    
	//  	    
	//  	  
	//  	
	//  	        
	//  	      
	//  	        
	//  	      
	//  	     
	//  	    
	//  	    
	//  	  
	//  	
	//  	         
	//  	        
	//  	       
	//  	       
	//  	     
	//  	       
	//  	     
	//  	  
	//  	
	//  	      
	//  	    
	//  	    
	//  	  
	//  	
	//  	    
	//  	  
	//  		
	//  	  
	//  
	//	
	//
	// 	//========================================================================================
	//	 //===  									    VAR,SIG  					               ===
	//	 //========================================================================================
	public TransitionStateElements getTransitionStateAccess() {
		return (pTransitionState != null) ? pTransitionState : (pTransitionState = new TransitionStateElements());
	}
	
	public ParserRule getTransitionStateRule() {
		return getTransitionStateAccess().getRule();
	}

	//ValuedObject returns sync::ValuedObject:
	//  Signal|Variable; 
	// 	//========================================================================================
	//	 //===  									    VAR,SIG  					               ===
	//	 //========================================================================================
	public ValuedObjectElements getValuedObjectAccess() {
		return (pValuedObject != null) ? pValuedObject : (pValuedObject = new ValuedObjectElements());
	}
	
	public ParserRule getValuedObjectRule() {
		return getValuedObjectAccess().getRule();
	}

	//Variable returns sync::Variable:
	//  "var" name=ID (": " type=ValueType|":=" initialValue=ID ": " type=ValueType); 
	//    
	//	   
	//	 
	//	    //or type only, type being either pre-defined or hostcode
	//	           // either initial value and type
	public VariableElements getVariableAccess() {
		return (pVariable != null) ? pVariable : (pVariable = new VariableElements());
	}
	
	public ParserRule getVariableRule() {
		return getVariableAccess().getRule();
	}

	//Signal returns sync::Signal:
	//  (isLocal?="local"|(isInput?="input"|isOutput?="output"|isInput?="input" isOutput
	//  ?="output")) name=ID (":=" initialValue=ID)? (": " type=ValueType|": combine" type=
	//  ValueType "with" (combineOperator=CombineOperator|hostCombineOperator=STRING)); 
	//    
	// 	//a signal is EITHER local OR (input or output or both)
	//	 	 
	//	 
	//			 
	//		
	//		 	
	//		
	//		 	                                   
	//		 		
	//	
	//	 
	//	
	//	   
	//	
	//	 
	//		    // either initial value and type
	//	  	         //or initial value and combine type
	//	  
	//
	////==============================================================================
	//// Basic Actions
	////==============================================================================
	public SignalElements getSignalAccess() {
		return (pSignal != null) ? pSignal : (pSignal = new SignalElements());
	}
	
	public ParserRule getSignalRule() {
		return getSignalAccess().getRule();
	}

	//Action returns sync::Action:
	//  isImmediate?="#"? delay=INT? trigger=BooleanExpression? ("/" (effects+=Effect ","?)*)
	//  ?; 
	////==============================================================================
	//// Basic Actions
	////==============================================================================
	public ActionElements getActionAccess() {
		return (pAction != null) ? pAction : (pAction = new ActionElements());
	}
	
	public ParserRule getActionRule() {
		return getActionAccess().getRule();
	}

	//Effect returns sync::Effect:
	//  Emission|Assignment|HostCode;
	public EffectElements getEffectAccess() {
		return (pEffect != null) ? pEffect : (pEffect = new EffectElements());
	}
	
	public ParserRule getEffectRule() {
		return getEffectAccess().getRule();
	}

	//Emission returns sync::Emission:
	//  signal=[sync::Signal] ("(" newValue=ValueExpression ")")?;
	public EmissionElements getEmissionAccess() {
		return (pEmission != null) ? pEmission : (pEmission = new EmissionElements());
	}
	
	public ParserRule getEmissionRule() {
		return getEmissionAccess().getRule();
	}

	//Assignment returns sync::Assignment:
	//  variable=[sync::Variable] ":=" expression=ValueExpression;
	public AssignmentElements getAssignmentAccess() {
		return (pAssignment != null) ? pAssignment : (pAssignment = new AssignmentElements());
	}
	
	public ParserRule getAssignmentRule() {
		return getAssignmentAccess().getRule();
	}

	//SignalReference returns sync::SignalReference:
	//  signal=[sync::Signal];
	public SignalReferenceElements getSignalReferenceAccess() {
		return (pSignalReference != null) ? pSignalReference : (pSignalReference = new SignalReferenceElements());
	}
	
	public ParserRule getSignalReferenceRule() {
		return getSignalReferenceAccess().getRule();
	}

	//VariableReference returns sync::VariableReference:
	//  variable=[sync::Variable]; 
	//
	//    
	//	    
	////
	////Signal returns sync::Signal:
	////	name=ID;
	////	
	////Variable returns sync::Variable:
	////	name=ID;
	//
	////==============================================================================
	//// Values
	////==============================================================================
	public VariableReferenceElements getVariableReferenceAccess() {
		return (pVariableReference != null) ? pVariableReference : (pVariableReference = new VariableReferenceElements());
	}
	
	public ParserRule getVariableReferenceRule() {
		return getVariableReferenceAccess().getRule();
	}

	//IntValue returns sync::IntValue:
	//  value=INT; 
	////
	////Signal returns sync::Signal:
	////	name=ID;
	////	
	////Variable returns sync::Variable:
	////	name=ID;
	//
	////==============================================================================
	//// Values
	////==============================================================================
	public IntValueElements getIntValueAccess() {
		return (pIntValue != null) ? pIntValue : (pIntValue = new IntValueElements());
	}
	
	public ParserRule getIntValueRule() {
		return getIntValueAccess().getRule();
	}

	//FloatValue returns sync::FloatValue:
	//  value=Float;
	public FloatValueElements getFloatValueAccess() {
		return (pFloatValue != null) ? pFloatValue : (pFloatValue = new FloatValueElements());
	}
	
	public ParserRule getFloatValueRule() {
		return getFloatValueAccess().getRule();
	}

	//BooleanValue returns sync::BooleanValue:
	//  value=Boolean;
	public BooleanValueElements getBooleanValueAccess() {
		return (pBooleanValue != null) ? pBooleanValue : (pBooleanValue = new BooleanValueElements());
	}
	
	public ParserRule getBooleanValueRule() {
		return getBooleanValueAccess().getRule();
	}

	//Value returns sync::Value:
	//  IntValue|FloatValue|BooleanValue; 
	//    
	//	        
	//
	//// make sure the Float rule does not shadow the built-in INT rule
	public ValueElements getValueAccess() {
		return (pValue != null) ? pValue : (pValue = new ValueElements());
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}

	//terminal Float returns ecore::EFloatObject:
	//  (INT "." INT | INT ("." INT)? ("e" | "E") ("-" | "+")? INT) "f"? | INT "f"; 
	//
	//// make sure the Float rule does not shadow the built-in INT rule
	public TerminalRule getFloatRule() {
		return (tFloat != null) ? tFloat : (tFloat = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "Float"));
	} 

	//terminal Boolean returns ecore::EBooleanObject:
	//  "true" | "false"; 
	//              
	//
	////==============================================================================
	//// Expressions
	////==============================================================================
	//
	//// Example: ?A
	public TerminalRule getBooleanRule() {
		return (tBoolean != null) ? tBoolean : (tBoolean = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "Boolean"));
	} 

	//ValOperation returns sync::ComplexExpression:
	//  operator=ValOperator subExpressions+=SignalReference; 
	//
	////==============================================================================
	//// Expressions
	////==============================================================================
	//
	//// Example: ?A	
	//    
	//	  
	//
	//// Example: 42, ?A, var1
	public ValOperationElements getValOperationAccess() {
		return (pValOperation != null) ? pValOperation : (pValOperation = new ValOperationElements());
	}
	
	public ParserRule getValOperationRule() {
		return getValOperationAccess().getRule();
	}

	//ValueExpression returns sync::Expression:
	//  IntValue|FloatValue|ValOperation|VariableReference; 
	//
	//// Example: 42, ?A, var1
	//    
	//	            
	//
	//// Example: 42 <= ?A
	public ValueExpressionElements getValueExpressionAccess() {
		return (pValueExpression != null) ? pValueExpression : (pValueExpression = new ValueExpressionElements());
	}
	
	public ParserRule getValueExpressionRule() {
		return getValueExpressionAccess().getRule();
	}

	//CompareOperation returns sync::Expression:
	//  ValueExpression ({sync::ComplexExpression.subExpressions+=current} operator=
	//  CompareOperator subExpressions+=ValueExpression); 
	//
	//// Example: 42 <= ?A
	//    
	//	        	
	//
	//// Example: not A, not false, not (A or B)
	//// at the latter we need the parans to indicate the right binding
	public CompareOperationElements getCompareOperationAccess() {
		return (pCompareOperation != null) ? pCompareOperation : (pCompareOperation = new CompareOperationElements());
	}
	
	public ParserRule getCompareOperationRule() {
		return getCompareOperationAccess().getRule();
	}

	//NotOperation returns sync::ComplexExpression:
	//  operator=NotOperator subExpressions+=ParanthesedBooleanExpression;   	
	//
	//// Example: not A, not false, not (A or B)
	//// at the latter we need the parans to indicate the right binding
	//    
	//	  
	//
	//// Example: either negated or normal expression (with parantheses)
	public NotOperationElements getNotOperationAccess() {
		return (pNotOperation != null) ? pNotOperation : (pNotOperation = new NotOperationElements());
	}
	
	public ParserRule getNotOperationRule() {
		return getNotOperationAccess().getRule();
	}

	//NotOrNormalExpression returns sync::Expression:
	//  NotOperation|ParanthesedBooleanExpression; 
	//
	//// Example: either negated or normal expression (with parantheses) 
	//    
	//	    
	//
	//// Example: A and B, not C and 42 <= ?D
	public NotOrNormalExpressionElements getNotOrNormalExpressionAccess() {
		return (pNotOrNormalExpression != null) ? pNotOrNormalExpression : (pNotOrNormalExpression = new NotOrNormalExpressionElements());
	}
	
	public ParserRule getNotOrNormalExpressionRule() {
		return getNotOrNormalExpressionAccess().getRule();
	}

	//AndOperation returns sync::Expression:
	//  NotOrNormalExpression ({sync::ComplexExpression.subExpressions+=current} operator=
	//  OperatorAnd subExpressions+=NotOrNormalExpression)*; 
	//
	//// Example: A and B, not C and 42 <= ?D
	//    
	//	      
	//
	//// Example: A or B, C and B or D and not E
	public AndOperationElements getAndOperationAccess() {
		return (pAndOperation != null) ? pAndOperation : (pAndOperation = new AndOperationElements());
	}
	
	public ParserRule getAndOperationRule() {
		return getAndOperationAccess().getRule();
	}

	//OrOperation returns sync::Expression:
	//  AndOperation ({sync::ComplexExpression.subExpressions+=current} operator=
	//  OperatorOr subExpressions+=AndOperation)*; 
	//
	//// Example: A or B, C and B or D and not E 
	//    
	//	      
	//
	//// Example: true, A, 42>var1, (A or B), (not D and C or ?E = 42)
	public OrOperationElements getOrOperationAccess() {
		return (pOrOperation != null) ? pOrOperation : (pOrOperation = new OrOperationElements());
	}
	
	public ParserRule getOrOperationRule() {
		return getOrOperationAccess().getRule();
	}

	//ParanthesedBooleanExpression returns sync::Expression:
	//  BooleanValue|SignalReference|CompareOperation|"(" OrOperation ")"; 
	//
	//// Example: true, A, 42>var1, (A or B), (not D and C or ?E = 42)
	//    
	//                  
	//
	//// Example: not D and C or ?E = 42 or not (A and (B or C))
	public ParanthesedBooleanExpressionElements getParanthesedBooleanExpressionAccess() {
		return (pParanthesedBooleanExpression != null) ? pParanthesedBooleanExpression : (pParanthesedBooleanExpression = new ParanthesedBooleanExpressionElements());
	}
	
	public ParserRule getParanthesedBooleanExpressionRule() {
		return getParanthesedBooleanExpressionAccess().getRule();
	}

	//BooleanExpression returns sync::Expression:
	//  OrOperation; 
	//
	//// Example: not D and C or ?E = 42 or not (A and (B or C))
	//    
	//	  
	//
	////==============================================================================
	//// Operators
	////==============================================================================
	public BooleanExpressionElements getBooleanExpressionAccess() {
		return (pBooleanExpression != null) ? pBooleanExpression : (pBooleanExpression = new BooleanExpressionElements());
	}
	
	public ParserRule getBooleanExpressionRule() {
		return getBooleanExpressionAccess().getRule();
	}

	//enum OperatorType returns sync::OperatorType:
	//  EQ="=" | LT="<" | LEQ="<=" | GT=">" | GEQ=">=" | NOT="not" | AND="and" | OR="or" | ADD="+" | SUB=
	//  "-" | MULT="*" | DIV="div" | MOD="mod" | VAL="?" | PRE="pre"; 
	//
	////==============================================================================
	//// Operators
	////==============================================================================
	public OperatorTypeElements getOperatorTypeAccess() {
		return (unknownRuleOperatorType != null) ? unknownRuleOperatorType : (unknownRuleOperatorType = new OperatorTypeElements());
	}
	
	public EnumRule getOperatorTypeRule() {
		return getOperatorTypeAccess().getRule();
	}

	//enum ValOperator returns sync::OperatorType:
	//  VAL="?";
	public ValOperatorElements getValOperatorAccess() {
		return (unknownRuleValOperator != null) ? unknownRuleValOperator : (unknownRuleValOperator = new ValOperatorElements());
	}
	
	public EnumRule getValOperatorRule() {
		return getValOperatorAccess().getRule();
	}

	//enum CompareOperator returns sync::OperatorType:
	//  EQ="=" | LT="<" | LEQ="<=" | GT=">" | GEQ=">=";
	public CompareOperatorElements getCompareOperatorAccess() {
		return (unknownRuleCompareOperator != null) ? unknownRuleCompareOperator : (unknownRuleCompareOperator = new CompareOperatorElements());
	}
	
	public EnumRule getCompareOperatorRule() {
		return getCompareOperatorAccess().getRule();
	}

	//enum NotOperator returns sync::OperatorType:
	//  NOT="not";
	public NotOperatorElements getNotOperatorAccess() {
		return (unknownRuleNotOperator != null) ? unknownRuleNotOperator : (unknownRuleNotOperator = new NotOperatorElements());
	}
	
	public EnumRule getNotOperatorRule() {
		return getNotOperatorAccess().getRule();
	}

	//enum OperatorOr returns sync::OperatorType:
	//  OR="or";
	public OperatorOrElements getOperatorOrAccess() {
		return (unknownRuleOperatorOr != null) ? unknownRuleOperatorOr : (unknownRuleOperatorOr = new OperatorOrElements());
	}
	
	public EnumRule getOperatorOrRule() {
		return getOperatorOrAccess().getRule();
	}

	//enum OperatorAnd returns sync::OperatorType:
	//  AND="and"; 
	//
	//      
	//	
	//
	////==============================================================================
	//// Misc
	////==============================================================================
	public OperatorAndElements getOperatorAndAccess() {
		return (unknownRuleOperatorAnd != null) ? unknownRuleOperatorAnd : (unknownRuleOperatorAnd = new OperatorAndElements());
	}
	
	public EnumRule getOperatorAndRule() {
		return getOperatorAndAccess().getRule();
	}

	//HostCode returns sync::HostCode:
	//  code=STRING ("(" type=ID ")")?; 
	//
	////==============================================================================
	//// Misc
	////==============================================================================
	//	
	//    
	//	//"'"code=STRING"'";
	public HostCodeElements getHostCodeAccess() {
		return (pHostCode != null) ? pHostCode : (pHostCode = new HostCodeElements());
	}
	
	public ParserRule getHostCodeRule() {
		return getHostCodeAccess().getRule();
	}

	//enum StateType returns sync::StateType:
	//  NORMAL="state" | PSEUDO="cond" | REFERENCE="ref" | TEXTUAL="textual";
	public StateTypeElements getStateTypeAccess() {
		return (unknownRuleStateType != null) ? unknownRuleStateType : (unknownRuleStateType = new StateTypeElements());
	}
	
	public EnumRule getStateTypeRule() {
		return getStateTypeAccess().getRule();
	}

	//enum CombineOperator returns sync::CombineOperator:
	//  NONE | ADD="+" | MULT="*" | AND | OR | HOST="hostCombineOperator";
	public CombineOperatorElements getCombineOperatorAccess() {
		return (unknownRuleCombineOperator != null) ? unknownRuleCombineOperator : (unknownRuleCombineOperator = new CombineOperatorElements());
	}
	
	public EnumRule getCombineOperatorRule() {
		return getCombineOperatorAccess().getRule();
	}

	//enum ValueType returns sync::ValueType:
	//  PURE | BOOL="boolean" | UNSIGNED="unsigned" | INTEGER="integer" | FLOAT="float" | HOST=
	//  "hostType";
	public ValueTypeElements getValueTypeAccess() {
		return (unknownRuleValueType != null) ? unknownRuleValueType : (unknownRuleValueType = new ValueTypeElements());
	}
	
	public EnumRule getValueTypeRule() {
		return getValueTypeAccess().getRule();
	}

	//enum TransitionType returns sync::TransitionType:
	//  WEAKABORT="-->" | STRONGABORT="o->" | NORMALTERMINATION=">->";
	public TransitionTypeElements getTransitionTypeAccess() {
		return (unknownRuleTransitionType != null) ? unknownRuleTransitionType : (unknownRuleTransitionType = new TransitionTypeElements());
	}
	
	public EnumRule getTransitionTypeRule() {
		return getTransitionTypeAccess().getRule();
	}

	//terminal ID:
	//  "^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//  "0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//  "\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" |
	//  "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//  "/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//  "//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//  (" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//  .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
