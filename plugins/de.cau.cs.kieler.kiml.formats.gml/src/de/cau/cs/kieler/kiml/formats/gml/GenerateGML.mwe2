module de.cau.cs.kieler.kiml.formats.gml.GenerateGML

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.generator.*

var grammarURI = "classpath:/de/cau/cs/kieler/kiml/formats/gml/GML.xtext"
var file.extensions = "gml"
var projectName = "de.cau.cs.kieler.kiml.formats.gml"
var runtimeProject = "../${projectName}"

Workflow {
    bean = StandaloneSetup {
	    scanClassPath = true
		platformUri = "${runtimeProject}/.."
	}

	component = DirectoryCleaner {
		directory = "${runtimeProject}/src-gen"
	}

	component = Generator {
		pathRtProject = runtimeProject
		projectNameRt = projectName
		language = {
			uri = grammarURI
			fileExtensions = file.extensions

			// Java API to access grammar elements (required by several other fragments)
			fragment = grammarAccess.GrammarAccessFragment {}

			// generates Java API for the generated EPackages 
			fragment = ecore.EcoreGeneratorFragment {}

			// the serialization component
			fragment = parseTreeConstructor.ParseTreeConstructorFragment {}

			// a custom ResourceFactory for use with EMF 
			fragment = resourceFactory.ResourceFactoryFragment {
				fileExtensions = file.extensions
			}

			// The antlr parser generator fragment.
			fragment = parser.antlr.XtextAntlrGeneratorFragment {}

			// formatter API 
			fragment = formatting.FormatterFragment {}
		}
	}
}
