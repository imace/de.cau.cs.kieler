<?xml version='1.0' encoding='UTF-8'?>
<definitions
  name="LayoutService"
  xmlns="http://schemas.xmlsoap.org/wsdl/"
  xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
  xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
  xmlns:tns="http://layout.rtsys.informatik.uni-kiel.de/layout"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  targetNamespace="http://layout.rtsys.informatik.uni-kiel.de/layout">

  <documentation>
    This document contains the interface description for the KIELER Web Service for Layout (KWebS). More details
    on how to use this service and how to set up your own server can be found at the project page at
    http://layout.rtsys.informatik.uni-kiel.de/trac/kieler/wiki/Projects/KWebS.
  </documentation>

  <!-- Abstract part of the web service definition -->

  <!-- Define the abstract data types of this web service -->

  <types>

    <xs:schema
      version="1.0"
      xmlns:tns="http://layout.rtsys.informatik.uni-kiel.de/layout"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      targetNamespace="http://layout.rtsys.informatik.uni-kiel.de/layout">

      <xs:element name="getPreviewImage" type="tns:getPreviewImage"/>
      <xs:element name="getPreviewImageResponse" type="tns:getPreviewImageResponse"/>

      <xs:element name="getServiceData" type="tns:getServiceData"/>
      <xs:element name="getServiceDataResponse" type="tns:getServiceDataResponse"/>

      <xs:element name="graphLayout" type="tns:graphLayout"/>
      <xs:element name="graphLayoutResponse" type="tns:graphLayoutResponse"/>

      <xs:element name="ServiceFault" type="tns:ServiceFault"/>

      <xs:complexType name="graphLayoutResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="graphLayout">
        <xs:sequence>
          <xs:element name="serializedGraph" type="xs:string"/>
          <xs:element name="informat" type="xs:string"/>
          <xs:element name="outformat" type="xs:string" nillable="true"/>
          <xs:element name="options" type="tns:graphLayoutOption" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="graphLayoutOption">
        <xs:sequence>
          <xs:element name="id" type="xs:string"/>
          <xs:element name="value" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="ServiceFault">
        <xs:sequence>
          <xs:element name="code" type="xs:int"/>
          <xs:element name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getServiceData">
        <xs:sequence/>
      </xs:complexType>

      <xs:complexType name="getServiceDataResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getPreviewImage">
        <xs:sequence>
          <xs:element name="previewImage" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>

      <xs:complexType name="getPreviewImageResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:base64Binary"/>
        </xs:sequence>
      </xs:complexType>

    </xs:schema>

  </types>

  <!-- Define the abstract messages used by the operations of this web service -->

  <message name="graphLayout">
    <part name="parameters" element="tns:graphLayout"/>
  </message>

  <message name="graphLayoutResponse">
    <part name="parameters" element="tns:graphLayoutResponse"/>
  </message>

  <message name="getServiceData">
    <part name="parameters" element="tns:getServiceData"/>
  </message>

  <message name="getServiceDataResponse">
    <part name="parameters" element="tns:getServiceDataResponse"/>
  </message>

  <message name="getPreviewImage">
    <part name="parameters" element="tns:getPreviewImage"/>
  </message>

  <message name="getPreviewImageResponse">
    <part name="parameters" element="tns:getPreviewImageResponse"/>
  </message>

  <message name="ServiceFault">
    <part name="parameters" element="tns:ServiceFault"/>
  </message>

  <!-- Define the abstract operations of this web service -->

  <portType name="LayoutServicePort">

    <operation name="graphLayout">

      <documentation>
        This operation does automatic layout on a graph model which is transmitted in serial representation. The different representations
        which the service can handle can be determined by using it's getServiceData() operation.
      </documentation>

      <input wsam:Action="http://layout.rtsys.informatik.uni-kiel.de/layout/LayoutServicePort/graphLayoutRequest" message="tns:graphLayout"/>
      <output wsam:Action="http://layout.rtsys.informatik.uni-kiel.de/layout/LayoutServicePort/graphLayoutResponse" message="tns:graphLayoutResponse"/>
      <fault wsam:Action="http://layout.rtsys.informatik.uni-kiel.de/layout/LayoutServicePort/ServiceFault" name="ServiceFault" message="tns:ServiceFault"/>

    </operation>

    <operation name="getServiceData">

      <documentation>
        This operation delivers the services meta data which describe the supported algorithms and their options and the supported serial
        representations understood by the service.
      </documentation>

      <input wsam:Action="http://layout.rtsys.informatik.uni-kiel.de/layout/LayoutServicePort/getServiceDataRequest" message="tns:getServiceData"/>
      <output wsam:Action="http://layout.rtsys.informatik.uni-kiel.de/layout/LayoutServicePort/getServiceDataResponse" message="tns:getServiceDataResponse"/>
      <fault wsam:Action="http://layout.rtsys.informatik.uni-kiel.de/layout/LayoutServicePort/ServiceFault" name="ServiceFault" message="tns:ServiceFault"/>

    </operation>

    <operation name="getPreviewImage">

      <documentation>
        This operation delivers a static preview image for a supported layout algorithm which visually describes the way it calculates the layout.
        The preview image is identified by it's unique identifier which can be determined from the services meta data.
      </documentation>

      <input wsam:Action="http://layout.rtsys.informatik.uni-kiel.de/layout/LayoutServicePort/getPreviewImageRequest" message="tns:getPreviewImage"/>
      <output wsam:Action="http://layout.rtsys.informatik.uni-kiel.de/layout/LayoutServicePort/getPreviewImageResponse" message="tns:getPreviewImageResponse"/>
      <fault wsam:Action="http://layout.rtsys.informatik.uni-kiel.de/layout/LayoutServicePort/ServiceFault" name="ServiceFault" message="tns:ServiceFault"/>

    </operation>

  </portType>

  <!-- Concrete part of the web service definition -->

  <!-- Define the concrete data binding of the abstract operations and the concrete transport binding -->

  <binding name="LayoutServicePortBinding" type="tns:LayoutServicePort">

    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="document"/>

    <operation name="graphLayout">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
      <fault name="ServiceFault">
         <soap:fault name="ServiceFault"/>
      </fault>
    </operation>

    <operation name="getServiceData">
      <soap:operation soapAction=""/>
      <input>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </input>
      <output>
        <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
      </output>
      <fault name="ServiceFault">
         <soap:fault name="ServiceFault"/>
      </fault>
    </operation>

    <operation name="getPreviewImage">
      <soap:operation soapAction=""/>
        <input>
          <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
        </input>
        <output>
          <soap:body use="encoded" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/"/>
        </output>
        <fault name="ServiceFault">
           <soap:fault name="ServiceFault"/>
        </fault>
    </operation>

  </binding>

  <!-- Define the web service endpoint -->

  <service name="LayoutService">
    <port name="LayoutServicePort" binding="tns:LayoutServicePortBinding">
      <soap:address location="http://localhost:9442/layout"/>
    </port>
  </service>

</definitions>