<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="de.cau.cs.kieler.sim.kiem" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="de.cau.cs.kieler.sim.kiem" id="de.cau.cs.kieler.sim.kiem.toolbarContributor" name="de.cau.cs.kieler.sim.kiem.toolbarContributor"/>
      </appInfo>
      <documentation>
         &lt;BR&gt;
Classes implementing this interface may be asked if they want
to contribute controls to the toolbar inside the KIEM View.
&lt;BR&gt;&lt;BR&gt;
The plugin will add the components from left to right in the order
that the contributors are stored in the extension registry. KIEM&apos;s 
own controls will be added after the contributed components have
been added.
&lt;BR&gt;&lt;BR&gt;
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence>
            <element ref="content"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="content">
      <complexType>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  A name for the extension.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  An identifier for the extension.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The implementing class for the Toolbar Contributor.
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="java.lang.Object:de.cau.cs.kieler.sim.kiem.extension.IKiemToolbarContributor"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         0.1.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;BR&gt;
This simple example shows how to add a label displaying &quot;Hello, World!&quot;
to the views toolbar.
&lt;BR&gt;&lt;BR&gt;
&lt;table width=&quot;100%&quot; border=&quot;1&quot; cellpadding=&quot;5&quot; bgcolor=&quot;#CCCCCC&quot;&gt;
  &lt;tr&gt; 
    &lt;td&gt;&lt;font size=&quot;2&quot; face=&quot;Courier New, Courier, mono&quot;&gt;
public final class ContributionsProvider implements IKiemToolbarContributor {
&lt;BR&gt;&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;/** &lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;* {@inheritDoc}&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;*/&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;    public ControlContribution[] provideToolbarContributions(final Object info) {&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ControlContribution[] result = new ControlContribution[1];&lt;BR&gt;       
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;result[0] = new ControlContribution(&quot;hello.World&quot;) {&lt;BR&gt;
&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;@Override&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;protected Control createControl(final Composite parent) {&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Label label = new Label(parent, SWT.BORDER);&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;label.setText(&quot;Hello, World!&quot;);&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return label;&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;};&lt;BR&gt;       
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return result;&lt;BR&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;BR&gt;
}&lt;BR&gt;

      &lt;/font&gt;&lt;/td&gt;
  &lt;/tr&gt;
&lt;/table&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         Please see the extension point description.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         n/a
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Christian-Albrechts-Universit√§t zu Kiel, Germany
      </documentation>
   </annotation>

</schema>
