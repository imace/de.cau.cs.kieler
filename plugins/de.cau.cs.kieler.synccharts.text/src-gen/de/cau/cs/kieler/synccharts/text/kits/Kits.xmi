<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:xtext="http://www.eclipse.org/2008/Xtext">
  <xtext:Grammar name="de.cau.cs.kieler.synccharts.text.kits.Kits" usedGrammars="/1">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="annotations">
      <ePackage href="http://kieler.cs.cau.de/annotations#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="expressions">
      <ePackage href="http://kieler.cs.cau.de/expressions/0.1.2#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="synccharts">
      <ePackage href="http://kieler.cs.cau.de/synccharts/0.2.3#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:ParserRule" name="Region">
      <type metamodel="/0/@metamodelDeclarations.3">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//Region"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="region"/>
          <elements xsi:type="xtext:Assignment" feature="label" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.0"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="states" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.5"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NestedRegion">
      <type metamodel="/0/@metamodelDeclarations.3">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//Region"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="region"/>
          <elements xsi:type="xtext:Assignment" feature="label" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.0"/>
          </elements>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Assignment" feature="variables" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.6"/>
            </elements>
            <elements xsi:type="xtext:Assignment" feature="signals" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.8"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Assignment" cardinality="*" feature="states" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.5"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.2"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="SingleNestedRegion">
      <type metamodel="/0/@metamodelDeclarations.3">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//Region"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" cardinality="+" feature="states" operator="+=">
        <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.5"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="T_ANNOTATION">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="/+"/>
        <elements xsi:type="xtext:UntilToken">
          <terminal xsi:type="xtext:Keyword" value="+/"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="StringAnnotation">
      <type metamodel="/0/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/annotations#//Annotation"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/annotations#//StringAnnotation"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="value" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.3"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="State">
      <type metamodel="/0/@metamodelDeclarations.3">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//State"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Alternatives" cardinality="?">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Assignment" feature="isInitial" operator="?=">
              <terminal xsi:type="xtext:Keyword" value="init"/>
            </elements>
            <elements xsi:type="xtext:Assignment" cardinality="?" feature="isFinal" operator="?=">
              <terminal xsi:type="xtext:Keyword" value="final"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Assignment" feature="isFinal" operator="?=">
              <terminal xsi:type="xtext:Keyword" value="final"/>
            </elements>
            <elements xsi:type="xtext:Assignment" cardinality="?" feature="isInitial" operator="?=">
              <terminal xsi:type="xtext:Keyword" value="init"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="type" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.10"/>
        </elements>
        <elements xsi:type="xtext:Keyword" cardinality="?" value="state"/>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="id" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="label" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.21"/>
        </elements>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Group" cardinality="?">
              <elements xsi:type="xtext:Assignment" feature="outgoingTransitions" operator="+=">
                <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
              </elements>
              <elements xsi:type="xtext:Group" cardinality="*">
                <elements xsi:type="xtext:Keyword" value=","/>
                <elements xsi:type="xtext:Assignment" feature="outgoingTransitions" operator="+=">
                  <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
                </elements>
              </elements>
            </elements>
            <elements xsi:type="xtext:Keyword" value=";"/>
          </elements>
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Keyword" value="{"/>
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Alternatives" cardinality="*">
                <elements xsi:type="xtext:Assignment" feature="signals" operator="+=">
                  <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.8"/>
                </elements>
                <elements xsi:type="xtext:Assignment" feature="variables" operator="+=">
                  <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.6"/>
                </elements>
                <elements xsi:type="xtext:Group">
                  <elements xsi:type="xtext:Keyword" value="onentry"/>
                  <elements xsi:type="xtext:Assignment" feature="entryActions" operator="+=">
                    <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
                  </elements>
                </elements>
                <elements xsi:type="xtext:Group">
                  <elements xsi:type="xtext:Keyword" value="oninner"/>
                  <elements xsi:type="xtext:Assignment" feature="innerActions" operator="+=">
                    <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
                  </elements>
                </elements>
                <elements xsi:type="xtext:Group">
                  <elements xsi:type="xtext:Keyword" value="onexit"/>
                  <elements xsi:type="xtext:Assignment" feature="exitActions" operator="+=">
                    <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
                  </elements>
                </elements>
                <elements xsi:type="xtext:Group">
                  <elements xsi:type="xtext:Keyword" value="suspension"/>
                  <elements xsi:type="xtext:Assignment" feature="suspensionTrigger" operator="=">
                    <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
                  </elements>
                </elements>
              </elements>
              <elements xsi:type="xtext:Group">
                <elements xsi:type="xtext:Assignment" feature="regions" operator="+=">
                  <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.1"/>
                </elements>
                <elements xsi:type="xtext:Group" cardinality="*">
                  <elements xsi:type="xtext:Keyword" value="||"/>
                  <elements xsi:type="xtext:Assignment" feature="regions" operator="+=">
                    <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.1"/>
                  </elements>
                </elements>
              </elements>
            </elements>
            <elements xsi:type="xtext:Keyword" value="}"/>
            <elements xsi:type="xtext:Group" cardinality="?">
              <elements xsi:type="xtext:Assignment" feature="outgoingTransitions" operator="+=">
                <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
              </elements>
              <elements xsi:type="xtext:Group" cardinality="*">
                <elements xsi:type="xtext:Keyword" value=","/>
                <elements xsi:type="xtext:Assignment" feature="outgoingTransitions" operator="+=">
                  <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.9"/>
                </elements>
              </elements>
              <elements xsi:type="xtext:Keyword" value=";"/>
            </elements>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Variable">
      <type metamodel="/0/@metamodelDeclarations.2">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Variable"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="var"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.0"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Keyword" value=":="/>
            <elements xsi:type="xtext:Assignment" feature="initialValue" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.7"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value=":"/>
          <elements xsi:type="xtext:Assignment" feature="type" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.33"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="IntegerOrString">
      <type metamodel="/0/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.21"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Signal">
      <type metamodel="/0/@metamodelDeclarations.2">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Signal"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="isInput" operator="?=">
          <terminal xsi:type="xtext:Keyword" value="input"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="isOutput" operator="?=">
          <terminal xsi:type="xtext:Keyword" value="output"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="signal"/>
        <elements xsi:type="xtext:Assignment" feature="name" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.21"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value=":="/>
          <elements xsi:type="xtext:Assignment" feature="initialValue" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.21"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="?">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Keyword" value=":"/>
            <elements xsi:type="xtext:Assignment" feature="type" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.33"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Keyword" value=":"/>
            <elements xsi:type="xtext:Keyword" value="combine"/>
            <elements xsi:type="xtext:Assignment" feature="type" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.33"/>
            </elements>
            <elements xsi:type="xtext:Keyword" value="with"/>
            <elements xsi:type="xtext:Alternatives">
              <elements xsi:type="xtext:Assignment" feature="combineOperator" operator="=">
                <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.34"/>
              </elements>
              <elements xsi:type="xtext:Assignment" feature="hostCombineOperator" operator="=">
                <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.21"/>
              </elements>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Keyword" value=";"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Transition">
      <type metamodel="/0/@metamodelDeclarations.3">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//Transition"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="type" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.11"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="targetState" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.3">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//State"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.21"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="&lt;"/>
          <elements xsi:type="xtext:Assignment" feature="priority" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=">"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="with"/>
          <elements xsi:type="xtext:Assignment" cardinality="?" feature="isImmediate" operator="?=">
            <terminal xsi:type="xtext:Keyword" value="#"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Keyword" value="delay:="/>
            <elements xsi:type="xtext:Assignment" feature="delay" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Assignment" cardinality="?" feature="trigger" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="?">
            <elements xsi:type="xtext:Keyword" value="/"/>
            <elements xsi:type="xtext:Assignment" feature="effects" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
            </elements>
            <elements xsi:type="xtext:Group" cardinality="*">
              <elements xsi:type="xtext:Keyword" value=","/>
              <elements xsi:type="xtext:Assignment" feature="effects" operator="+=">
                <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
              </elements>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="isHistory" operator="?=">
          <terminal xsi:type="xtext:Keyword" value="history"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="label" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.2"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="StateType">
      <type metamodel="/0/@metamodelDeclarations.3">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/synccharts/0.2.3#//StateType"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/synccharts/0.2.3#//StateType/NORMAL"/>
          <literal value="normal"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/synccharts/0.2.3#//StateType/CONDITIONAL"/>
          <literal value="conditional"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/synccharts/0.2.3#//StateType/REFERENCE"/>
          <literal value="reference"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/synccharts/0.2.3#//StateType/TEXTUAL"/>
          <literal value="textual"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="TransitionType">
      <type metamodel="/0/@metamodelDeclarations.3">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/synccharts/0.2.3#//TransitionType"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/synccharts/0.2.3#//TransitionType/WEAKABORT"/>
          <literal value="-->"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/synccharts/0.2.3#//TransitionType/STRONGABORT"/>
          <literal value="o->"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/synccharts/0.2.3#//TransitionType/NORMALTERMINATION"/>
          <literal value=">->"/>
        </elements>
      </alternatives>
    </rules>
  </xtext:Grammar>
  <xtext:Grammar name="de.cau.cs.kieler.synccharts.text.actions.Actions" usedGrammars="/2">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="synccharts">
      <ePackage href="http://kieler.cs.cau.de/synccharts/0.2.3#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="expressions">
      <ePackage href="http://kieler.cs.cau.de/expressions/0.1.2#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:ParserRule" name="Transition">
      <type metamodel="/1/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//Transition"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/1/@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//Transition"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="isImmediate" operator="?=">
          <terminal xsi:type="xtext:Keyword" value="#"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="delay" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="trigger" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="/"/>
          <elements xsi:type="xtext:Assignment" feature="effects" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
          </elements>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Keyword" value=","/>
            <elements xsi:type="xtext:Assignment" feature="effects" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
            </elements>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Action">
      <type metamodel="/1/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//Action"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/1/@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//Action"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="isImmediate" operator="?=">
          <terminal xsi:type="xtext:Keyword" value="#"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="delay" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="trigger" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="/"/>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Assignment" feature="effects" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
            </elements>
            <elements xsi:type="xtext:Keyword" cardinality="?" value=","/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Effect">
      <type metamodel="/1/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//Effect"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.3"/>
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.4"/>
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.5"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Emission">
      <type metamodel="/1/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//Emission"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="signal" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/1/@metamodelDeclarations.2">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Signal"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.0"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" feature="newValue" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Assignment">
      <type metamodel="/1/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//Assignment"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="variable" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/1/@metamodelDeclarations.2">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Variable"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.0"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":="/>
        <elements xsi:type="xtext:Assignment" feature="expression" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TextEffect">
      <type metamodel="/1/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.3#//TextEffect"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="code" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" feature="type" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.0"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </alternatives>
    </rules>
  </xtext:Grammar>
  <xtext:Grammar name="de.cau.cs.kieler.core.expressions.Expressions" usedGrammars="/3">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel">
      <ePackage href="http://kieler.cs.cau.de/expressions/0.1.2#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:ParserRule" name="Expression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.6"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="BooleanExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:RuleCall" rule="/2/@rules.2"/>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="OrExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.3"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/2/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.24"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.3"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AndExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.4"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/2/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.25"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.4"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="CompareOperation">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:RuleCall" rule="/2/@rules.5"/>
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
              <type metamodel="/2/@metamodelDeclarations.0">
                <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorExpression"/>
              </type>
            </elements>
            <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.22"/>
            </elements>
            <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.5"/>
            </elements>
          </elements>
        </elements>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.11"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NotOrValuedExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.6"/>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.11"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ValuedExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:RuleCall" rule="/2/@rules.7"/>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AddExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.8"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/2/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.27"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.8"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="SubExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.9"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/2/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.28"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.9"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="MultExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.10"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/2/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.29"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.10"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ModExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.13"/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/2/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.30"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.13"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NotExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Action">
            <type metamodel="/2/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.26"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.11"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.12"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AtomicExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.20"/>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.15"/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.17"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AtomicValuedExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.18"/>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.19"/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:RuleCall" rule="/2/@rules.14"/>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:RuleCall" rule="/2/@rules.6"/>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.12"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="DivExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.13"/>
        <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
          <type metamodel="/2/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorExpression"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.31"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.13"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ValuedObjectTestExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Action">
            <type metamodel="/2/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.23"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.15"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Action">
            <type metamodel="/2/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.32"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.16"/>
          </elements>
        </elements>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.16"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ValuedObjectReference">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//ValuedObjectReference"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="valuedObject" operator="=">
        <terminal xsi:type="xtext:CrossReference">
          <type metamodel="/2/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//ValuedObject"/>
          </type>
          <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.0"/>
        </terminal>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TextExpression">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//TextExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="code" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" feature="type" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/3/@rules.0"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="IntValue">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//IntValue"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="FloatValue">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//FloatValue"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.36"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="BooleanValue">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions/0.1.2#//BooleanValue"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.37"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EString">
      <type metamodel="/2/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/3/@rules.2"/>
        <elements xsi:type="xtext:RuleCall" rule="/3/@rules.0"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="CompareOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/EQ"/>
          <literal value="="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/LT"/>
          <literal value="&lt;"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/LEQ"/>
          <literal value="&lt;="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/GT"/>
          <literal value=">"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/GEQ"/>
          <literal value=">="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/NE"/>
          <literal value="&lt;>"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="PreOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/PRE"/>
        <literal value="pre"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="OrOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/OR"/>
        <literal value="or"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="AndOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/AND"/>
        <literal value="and"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="NotOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/NOT"/>
        <literal value="not"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="AddOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/ADD"/>
        <literal value="+"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="SubOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/SUB"/>
        <literal value="-"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="MultOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/MULT"/>
        <literal value="*"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="ModOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/MOD"/>
        <literal value="mod"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="DivOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/DIV"/>
        <literal value="/"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="ValueTestOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//OperatorType/VAL"/>
        <literal value="?"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="ValueType">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//ValueType"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//ValueType/PURE"/>
          <literal value="PURE"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//ValueType/BOOL"/>
          <literal value="BOOL"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//ValueType/UNSIGNED"/>
          <literal value="UNSIGNED"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//ValueType/INT"/>
          <literal value="INT"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//ValueType/FLOAT"/>
          <literal value="FLOAT"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//ValueType/HOST"/>
          <literal value="HOST"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="CombineOperator">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions/0.1.2#//CombineOperator"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//CombineOperator/NONE"/>
          <literal value="NONE"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//CombineOperator/ADD"/>
          <literal value="+"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//CombineOperator/MULT"/>
          <literal value="*"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//CombineOperator/MAX"/>
          <literal value="max"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//CombineOperator/MIN"/>
          <literal value="min"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//CombineOperator/OR"/>
          <literal value="or"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//CombineOperator/AND"/>
          <literal value="and"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions/0.1.2#//CombineOperator/HOST"/>
          <literal value="host"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="INT">
      <type metamodel="/2/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="-"/>
        <elements xsi:type="xtext:CharacterRange" cardinality="+">
          <left value="0"/>
          <right value="9"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="Float">
      <type metamodel="/2/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EFloatObject"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
              <elements xsi:type="xtext:Keyword" value="."/>
              <elements xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
            </elements>
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
              <elements xsi:type="xtext:Group" cardinality="?">
                <elements xsi:type="xtext:Keyword" value="."/>
                <elements xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
              </elements>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="e"/>
                <elements xsi:type="xtext:Keyword" value="E"/>
              </elements>
              <elements xsi:type="xtext:Keyword" cardinality="?" value="+"/>
              <elements xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" cardinality="?" value="f"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:RuleCall" rule="/2/@rules.35"/>
          <elements xsi:type="xtext:Keyword" value="f"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="Boolean">
      <type metamodel="/2/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBooleanObject"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Keyword" value="true"/>
        <elements xsi:type="xtext:Keyword" value="false"/>
      </alternatives>
    </rules>
  </xtext:Grammar>
  <xtext:Grammar name="org.eclipse.xtext.common.Terminals" definesHiddenTokens="true" hiddenTokens="/3/@rules.5 /3/@rules.3 /3/@rules.4">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:TerminalRule" name="ID">
      <type metamodel="/3/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="^"/>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="*">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="INT">
      <type metamodel="/3/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </type>
      <alternatives xsi:type="xtext:CharacterRange" cardinality="+">
        <left value="0"/>
        <right value="9"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="STRING">
      <type metamodel="/3/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="'"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="'"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ML_COMMENT">
      <type metamodel="/3/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="/*"/>
        <elements xsi:type="xtext:UntilToken">
          <terminal xsi:type="xtext:Keyword" value="*/"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="SL_COMMENT">
      <type metamodel="/3/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="//"/>
        <elements xsi:type="xtext:NegatedToken" cardinality="*">
          <terminal xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Keyword" value="&#xA;"/>
            <elements xsi:type="xtext:Keyword" value="&#xD;"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" cardinality="?" value="&#xD;"/>
          <elements xsi:type="xtext:Keyword" value="&#xA;"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="WS">
      <type metamodel="/3/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives" cardinality="+">
        <elements xsi:type="xtext:Keyword" value=" "/>
        <elements xsi:type="xtext:Keyword" value="&#x9;"/>
        <elements xsi:type="xtext:Keyword" value="&#xD;"/>
        <elements xsi:type="xtext:Keyword" value="&#xA;"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ANY_OTHER">
      <type metamodel="/3/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Wildcard"/>
    </rules>
  </xtext:Grammar>
</xmi:XMI>
