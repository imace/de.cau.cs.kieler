grammar de.cau.cs.kieler.synccharts.text.kits.Kits with de.cau.cs.kieler.synccharts.text.actions.Actions

import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/resource/de.cau.cs.kieler.core.expressions/model/expressions.ecore" as expressions 
import "platform:/resource/de.cau.cs.kieler.synccharts/model/synccharts.ecore" as synccharts

Region returns synccharts::Region:
  ( 
    ('Region' (label=ID))? // region ID's are introduced by the keyword "region".       
//     (variables+=Variable|signals+=Signal)* 
     (innerStates+=State) 
  );

// ---------------------------------------------------------------------------------------------------
  
NestedRegion returns synccharts::Region:
  ('Region' (label=ID) (variables+=Variable|signals+=Signal)* )? 
  (innerStates+=State)*;

// ---------------------------------------------------------------------------------------------------

SingleNestedRegion returns synccharts::Region:
	(innerStates+=State)+;

// ---------------------------------------------------------------------------------------------------

State returns synccharts::State:
  (  ((isInitial?='init') (isFinal?='final')?) ('State')? (id=ID)? (label=STRING)
   | ((isFinal?='final') (isInitial?='init')?) ('State')? (id=ID)? (label=STRING)
   | ((type=StateType))?                       ('State')? (id=ID)? (label=STRING)
   )
  (  (outgoingTransitions+=Transition ("," outgoingTransitions+=Transition)*)? ';'
   | ('{'(
          ( regions+=SingleNestedRegion)
          | 
          ( '[' regions+=NestedRegion ('||' regions+=NestedRegion)*  ']' )
          |
          (
            (signals+=Signal                |
             variables+=Variable            |
             'onentry' entryActions+=Action |
             'oninner' innerActions+=Action |
             'onexit'  exitActions+=Action  |
             'suspension' suspensionTrigger=Action
             )
            (
             (signals+=Signal                |
              variables+=Variable            |
              'onentry' entryActions+=Action |
              'oninner' innerActions+=Action |
              'onexit'  exitActions+=Action  |
              'suspension' suspensionTrigger=Action
              ))*
            (
             ( regions+=SingleNestedRegion)
              | 
              ('[' regions+=NestedRegion ('||' regions+=NestedRegion)* ']' )
             )?
           )
          ) 
       '}' (outgoingTransitions+=Transition ("," outgoingTransitions+=Transition)* ';')?
      )
   );

// ---------------------------------------------------------------------------------------------------

Variable returns expressions::Variable:
  'var' name=ID ((':=' initialValue=STRING)? ':' type=ValueType) ";";

// ---------------------------------------------------------------------------------------------------

Signal returns expressions::Signal:
(isInput?='input')?
	(isOutput?='output')?
	'signal'
	(name=STRING)
	(':=' initialValue=STRING)?
    ((':' type=ValueType)
      |
     (':' 'combine' type=ValueType 'with' (combineOperator=CombineOperator|hostCombineOperator=STRING) )
    )? ";";

// ---------------------------------------------------------------------------------------------------

Transition returns synccharts::Transition:
	type=TransitionType 
	targetState=[synccharts::State|STRING]
	('<'priority=INT'>')? 
	('with' (isImmediate?='#')? ("delay:=" delay=INT)? 
	  ( trigger=Expression)?
      ('/' effects+=Effect (','effects+=Effect)*)?
	)? 
	(isHistory?=' history')?;

enum StateType returns synccharts::StateType:
	NORMAL = 'NORMAL' | CONDITIONAL = 'CONDITIONAL' | REFERENCE = 'REFERENCE' | TEXTUAL = 'TEXTUAL';

enum TransitionType returns synccharts::TransitionType:
	WEAKABORT = '-->' | STRONGABORT = 'o->' | NORMALTERMINATION = '>->';

