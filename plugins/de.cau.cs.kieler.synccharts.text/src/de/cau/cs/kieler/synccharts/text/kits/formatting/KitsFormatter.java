/*
 * generated by Xtext
 */
package de.cau.cs.kieler.synccharts.text.kits.formatting;

import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter;
import org.eclipse.xtext.formatting.impl.FormattingConfig;
import org.eclipse.xtext.util.Pair;

/**
 * This class contains custom formatting description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#formatting
 * on how and when to use it 
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
public class KitsFormatter extends AbstractDeclarativeFormatter {
	
	@Override
	
	protected void configureFormatting(FormattingConfig c) {
		c.setIndentationSpace("  ");
		de.cau.cs.kieler.synccharts.text.kits.services.KitsGrammarAccess f = (de.cau.cs.kieler.synccharts.text.kits.services.KitsGrammarAccess) getGrammarAccess();
		for(Pair<Keyword, Keyword> pair: f.findKeywordPairs("{", "}")) {
			c.setIndentation(pair.getFirst(), pair.getSecond());
			c.setLinewrap(1).after(pair.getFirst());
			c.setLinewrap(1).before(pair.getSecond());
			c.setLinewrap(1).after(pair.getSecond());
		}
		for(Pair<Keyword, Keyword> pair: f.findKeywordPairs("[", "]")) {
			c.setIndentation(pair.getFirst(), pair.getSecond());
			c.setLinewrap(1).after(pair.getFirst());
			c.setLinewrap(1).before(pair.getSecond());
			c.setLinewrap(1).after(pair.getSecond());
		}
		for(Keyword comma: f.findKeywords(",",";")) {
			c.setNoLinewrap().before(comma);
			c.setNoSpace().before(comma);
			c.setLinewrap().after(comma);
		}
				
		for (Keyword keyword: f.findKeywords("-->",">->","o->")) {
			c.setLinewrap().before(keyword.eContainer());
//			c.setLinewrap().after(keyword.eContainer());
		}
		
		for (Keyword keyword: f.findKeywords("||")) {
			c.setLinewrap().before(keyword);
			c.setLinewrap().after(keyword);
		}
		for(Keyword bracket: f.findKeywords("?")) {
			c.setNoSpace().after(bracket);
		}
		for(Keyword bracket: f.findKeywords("<")) {
			c.setNoSpace().after(bracket);
		}
		for(Keyword bracket: f.findKeywords(">")) {
			c.setNoSpace().before(bracket);
		}
		for (Keyword keyword: f.findKeywords("label", "id", "type")) {
			c.setLinewrap().before(keyword);
		}
		// Regions & States
		for (Keyword keyword: f.findKeywords("init", "State", "Region")) {
			c.setLinewrap().before(keyword);
		}
		// Transitions
		for (Keyword keyword: f.findKeywords("priority", "targetState", "effects", "trigger")) {
			c.setLinewrap().before(keyword);
		}

	}
}
