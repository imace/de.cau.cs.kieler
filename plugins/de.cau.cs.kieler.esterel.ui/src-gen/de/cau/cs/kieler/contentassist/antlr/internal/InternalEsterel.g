/*
* generated by Xtext
*/
grammar InternalEsterel;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.cau.cs.kieler.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.kieler.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import de.cau.cs.kieler.services.EsterelGrammarAccess;

}

@parser::members {
 
 	private EsterelGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EsterelGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram :
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ESTEREL_SL_COMMENT", "RULE_ESTEREL_ML_COMMENT", "RULE_WS");
		int stackSize = keepStackSize();
    }
    @after {
		myHiddenTokenState.restore();
    }  
 :
(
{ before(grammarAccess.getProgramAccess().getGroup()); }
(rule__Program__Group__0)
{ after(grammarAccess.getProgramAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModule
entryRuleModule :
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEndModule
entryRuleEndModule :
{ before(grammarAccess.getEndModuleRule()); }
	 ruleEndModule
{ after(grammarAccess.getEndModuleRule()); } 
	 EOF 
;

// Rule EndModule
ruleEndModule 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getEndModuleAccess().getAlternatives()); }
(rule__EndModule__Alternatives)
{ after(grammarAccess.getEndModuleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleBody
entryRuleModuleBody :
{ before(grammarAccess.getModuleBodyRule()); }
	 ruleModuleBody
{ after(grammarAccess.getModuleBodyRule()); } 
	 EOF 
;

// Rule ModuleBody
ruleModuleBody 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getModuleBodyAccess().getStatementAssignment()); }
(rule__ModuleBody__StatementAssignment)
{ after(grammarAccess.getModuleBodyAccess().getStatementAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleInterface
entryRuleModuleInterface :
{ before(grammarAccess.getModuleInterfaceRule()); }
	 ruleModuleInterface
{ after(grammarAccess.getModuleInterfaceRule()); } 
	 EOF 
;

// Rule ModuleInterface
ruleModuleInterface 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
(
{ before(grammarAccess.getModuleInterfaceAccess().getAlternatives()); }
(rule__ModuleInterface__Alternatives)
{ after(grammarAccess.getModuleInterfaceAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getModuleInterfaceAccess().getAlternatives()); }
(rule__ModuleInterface__Alternatives)*
{ after(grammarAccess.getModuleInterfaceAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalDecl
entryRuleSignalDecl :
{ before(grammarAccess.getSignalDeclRule()); }
	 ruleSignalDecl
{ after(grammarAccess.getSignalDeclRule()); } 
	 EOF 
;

// Rule SignalDecl
ruleSignalDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSignalDeclAccess().getAlternatives()); }
(rule__SignalDecl__Alternatives)
{ after(grammarAccess.getSignalDeclAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSensorDecl
entryRuleSensorDecl :
{ before(grammarAccess.getSensorDeclRule()); }
	 ruleSensorDecl
{ after(grammarAccess.getSensorDeclRule()); } 
	 EOF 
;

// Rule SensorDecl
ruleSensorDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSensorDeclAccess().getGroup()); }
(rule__SensorDecl__Group__0)
{ after(grammarAccess.getSensorDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationDecl
entryRuleRelationDecl :
{ before(grammarAccess.getRelationDeclRule()); }
	 ruleRelationDecl
{ after(grammarAccess.getRelationDeclRule()); } 
	 EOF 
;

// Rule RelationDecl
ruleRelationDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRelationDeclAccess().getGroup()); }
(rule__RelationDecl__Group__0)
{ after(grammarAccess.getRelationDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationType
entryRuleRelationType :
{ before(grammarAccess.getRelationTypeRule()); }
	 ruleRelationType
{ after(grammarAccess.getRelationTypeRule()); } 
	 EOF 
;

// Rule RelationType
ruleRelationType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRelationTypeAccess().getAlternatives()); }
(rule__RelationType__Alternatives)
{ after(grammarAccess.getRelationTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationImplication
entryRuleRelationImplication :
{ before(grammarAccess.getRelationImplicationRule()); }
	 ruleRelationImplication
{ after(grammarAccess.getRelationImplicationRule()); } 
	 EOF 
;

// Rule RelationImplication
ruleRelationImplication 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRelationImplicationAccess().getGroup()); }
(rule__RelationImplication__Group__0)
{ after(grammarAccess.getRelationImplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationIncompatibility
entryRuleRelationIncompatibility :
{ before(grammarAccess.getRelationIncompatibilityRule()); }
	 ruleRelationIncompatibility
{ after(grammarAccess.getRelationIncompatibilityRule()); } 
	 EOF 
;

// Rule RelationIncompatibility
ruleRelationIncompatibility 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getGroup()); }
(rule__RelationIncompatibility__Group__0)
{ after(grammarAccess.getRelationIncompatibilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDecl
entryRuleTypeDecl :
{ before(grammarAccess.getTypeDeclRule()); }
	 ruleTypeDecl
{ after(grammarAccess.getTypeDeclRule()); } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTypeDeclAccess().getGroup()); }
(rule__TypeDecl__Group__0)
{ after(grammarAccess.getTypeDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType :
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTypeAccess().getNameAssignment()); }
(rule__Type__NameAssignment)
{ after(grammarAccess.getTypeAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDecl
entryRuleConstantDecl :
{ before(grammarAccess.getConstantDeclRule()); }
	 ruleConstantDecl
{ after(grammarAccess.getConstantDeclRule()); } 
	 EOF 
;

// Rule ConstantDecl
ruleConstantDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getConstantDeclAccess().getGroup()); }
(rule__ConstantDecl__Group__0)
{ after(grammarAccess.getConstantDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneTypeConstantDecl
entryRuleOneTypeConstantDecl :
{ before(grammarAccess.getOneTypeConstantDeclRule()); }
	 ruleOneTypeConstantDecl
{ after(grammarAccess.getOneTypeConstantDeclRule()); } 
	 EOF 
;

// Rule OneTypeConstantDecl
ruleOneTypeConstantDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getGroup()); }
(rule__OneTypeConstantDecl__Group__0)
{ after(grammarAccess.getOneTypeConstantDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant :
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getConstantAccess().getGroup()); }
(rule__Constant__Group__0)
{ after(grammarAccess.getConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantValue
entryRuleConstantValue :
{ before(grammarAccess.getConstantValueRule()); }
	 ruleConstantValue
{ after(grammarAccess.getConstantValueRule()); } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getConstantValueAccess().getAlternatives()); }
(rule__ConstantValue__Alternatives)
{ after(grammarAccess.getConstantValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDecl
entryRuleFunctionDecl :
{ before(grammarAccess.getFunctionDeclRule()); }
	 ruleFunctionDecl
{ after(grammarAccess.getFunctionDeclRule()); } 
	 EOF 
;

// Rule FunctionDecl
ruleFunctionDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getFunctionDeclAccess().getGroup()); }
(rule__FunctionDecl__Group__0)
{ after(grammarAccess.getFunctionDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction :
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedureDecl
entryRuleProcedureDecl :
{ before(grammarAccess.getProcedureDeclRule()); }
	 ruleProcedureDecl
{ after(grammarAccess.getProcedureDeclRule()); } 
	 EOF 
;

// Rule ProcedureDecl
ruleProcedureDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getProcedureDeclAccess().getGroup()); }
(rule__ProcedureDecl__Group__0)
{ after(grammarAccess.getProcedureDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedure
entryRuleProcedure :
{ before(grammarAccess.getProcedureRule()); }
	 ruleProcedure
{ after(grammarAccess.getProcedureRule()); } 
	 EOF 
;

// Rule Procedure
ruleProcedure 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getProcedureAccess().getGroup()); }
(rule__Procedure__Group__0)
{ after(grammarAccess.getProcedureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement :
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getStatementAccess().getGroup()); }
(rule__Statement__Group__0)
{ after(grammarAccess.getStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicStatement
entryRuleAtomicStatement :
{ before(grammarAccess.getAtomicStatementRule()); }
	 ruleAtomicStatement
{ after(grammarAccess.getAtomicStatementRule()); } 
	 EOF 
;

// Rule AtomicStatement
ruleAtomicStatement 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAtomicStatementAccess().getAlternatives()); }
(rule__AtomicStatement__Alternatives)
{ after(grammarAccess.getAtomicStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequence
entryRuleSequence :
{ before(grammarAccess.getSequenceRule()); }
	 ruleSequence
{ after(grammarAccess.getSequenceRule()); } 
	 EOF 
;

// Rule Sequence
ruleSequence 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSequenceAccess().getGroup()); }
(rule__Sequence__Group__0)
{ after(grammarAccess.getSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock :
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment :
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbort
entryRuleAbort :
{ before(grammarAccess.getAbortRule()); }
	 ruleAbort
{ after(grammarAccess.getAbortRule()); } 
	 EOF 
;

// Rule Abort
ruleAbort 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAbortAccess().getGroup()); }
(rule__Abort__Group__0)
{ after(grammarAccess.getAbortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbortBody
entryRuleAbortBody :
{ before(grammarAccess.getAbortBodyRule()); }
	 ruleAbortBody
{ after(grammarAccess.getAbortBodyRule()); } 
	 EOF 
;

// Rule AbortBody
ruleAbortBody 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAbortBodyAccess().getAlternatives()); }
(rule__AbortBody__Alternatives)
{ after(grammarAccess.getAbortBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbortEnd
entryRuleAbortEnd :
{ before(grammarAccess.getAbortEndRule()); }
	 ruleAbortEnd
{ after(grammarAccess.getAbortEndRule()); } 
	 EOF 
;

// Rule AbortEnd
ruleAbortEnd 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAbortEndAccess().getGroup()); }
(rule__AbortEnd__Group__0)
{ after(grammarAccess.getAbortEndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbortInstance
entryRuleAbortInstance :
{ before(grammarAccess.getAbortInstanceRule()); }
	 ruleAbortInstance
{ after(grammarAccess.getAbortInstanceRule()); } 
	 EOF 
;

// Rule AbortInstance
ruleAbortInstance 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAbortInstanceAccess().getGroup()); }
(rule__AbortInstance__Group__0)
{ after(grammarAccess.getAbortInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbortCase
entryRuleAbortCase :
{ before(grammarAccess.getAbortCaseRule()); }
	 ruleAbortCase
{ after(grammarAccess.getAbortCaseRule()); } 
	 EOF 
;

// Rule AbortCase
ruleAbortCase 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAbortCaseAccess().getGroup()); }
(rule__AbortCase__Group__0)
{ after(grammarAccess.getAbortCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbortCaseSingle
entryRuleAbortCaseSingle :
{ before(grammarAccess.getAbortCaseSingleRule()); }
	 ruleAbortCaseSingle
{ after(grammarAccess.getAbortCaseSingleRule()); } 
	 EOF 
;

// Rule AbortCaseSingle
ruleAbortCaseSingle 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAbortCaseSingleAccess().getGroup()); }
(rule__AbortCaseSingle__Group__0)
{ after(grammarAccess.getAbortCaseSingleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwait
entryRuleAwait :
{ before(grammarAccess.getAwaitRule()); }
	 ruleAwait
{ after(grammarAccess.getAwaitRule()); } 
	 EOF 
;

// Rule Await
ruleAwait 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAwaitAccess().getGroup()); }
(rule__Await__Group__0)
{ after(grammarAccess.getAwaitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwaitBody
entryRuleAwaitBody :
{ before(grammarAccess.getAwaitBodyRule()); }
	 ruleAwaitBody
{ after(grammarAccess.getAwaitBodyRule()); } 
	 EOF 
;

// Rule AwaitBody
ruleAwaitBody 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAwaitBodyAccess().getAlternatives()); }
(rule__AwaitBody__Alternatives)
{ after(grammarAccess.getAwaitBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwaitEnd
entryRuleAwaitEnd :
{ before(grammarAccess.getAwaitEndRule()); }
	 ruleAwaitEnd
{ after(grammarAccess.getAwaitEndRule()); } 
	 EOF 
;

// Rule AwaitEnd
ruleAwaitEnd 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAwaitEndAccess().getGroup()); }
(rule__AwaitEnd__Group__0)
{ after(grammarAccess.getAwaitEndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwaitInstance
entryRuleAwaitInstance :
{ before(grammarAccess.getAwaitInstanceRule()); }
	 ruleAwaitInstance
{ after(grammarAccess.getAwaitInstanceRule()); } 
	 EOF 
;

// Rule AwaitInstance
ruleAwaitInstance 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAwaitInstanceAccess().getGroup()); }
(rule__AwaitInstance__Group__0)
{ after(grammarAccess.getAwaitInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwaitCase
entryRuleAwaitCase :
{ before(grammarAccess.getAwaitCaseRule()); }
	 ruleAwaitCase
{ after(grammarAccess.getAwaitCaseRule()); } 
	 EOF 
;

// Rule AwaitCase
ruleAwaitCase 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getAwaitCaseAccess().getGroup()); }
(rule__AwaitCase__Group__0)
{ after(grammarAccess.getAwaitCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDo
entryRuleDo :
{ before(grammarAccess.getDoRule()); }
	 ruleDo
{ after(grammarAccess.getDoRule()); } 
	 EOF 
;

// Rule Do
ruleDo 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDoAccess().getGroup()); }
(rule__Do__Group__0)
{ after(grammarAccess.getDoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoUpto
entryRuleDoUpto :
{ before(grammarAccess.getDoUptoRule()); }
	 ruleDoUpto
{ after(grammarAccess.getDoUptoRule()); } 
	 EOF 
;

// Rule DoUpto
ruleDoUpto 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDoUptoAccess().getGroup()); }
(rule__DoUpto__Group__0)
{ after(grammarAccess.getDoUptoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoWatching
entryRuleDoWatching :
{ before(grammarAccess.getDoWatchingRule()); }
	 ruleDoWatching
{ after(grammarAccess.getDoWatchingRule()); } 
	 EOF 
;

// Rule DoWatching
ruleDoWatching 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDoWatchingAccess().getGroup()); }
(rule__DoWatching__Group__0)
{ after(grammarAccess.getDoWatchingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoWatchingEnd
entryRuleDoWatchingEnd :
{ before(grammarAccess.getDoWatchingEndRule()); }
	 ruleDoWatchingEnd
{ after(grammarAccess.getDoWatchingEndRule()); } 
	 EOF 
;

// Rule DoWatchingEnd
ruleDoWatchingEnd 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDoWatchingEndAccess().getGroup()); }
(rule__DoWatchingEnd__Group__0)
{ after(grammarAccess.getDoWatchingEndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmit
entryRuleEmit :
{ before(grammarAccess.getEmitRule()); }
	 ruleEmit
{ after(grammarAccess.getEmitRule()); } 
	 EOF 
;

// Rule Emit
ruleEmit 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getEmitAccess().getGroup()); }
(rule__Emit__Group__0)
{ after(grammarAccess.getEmitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEveryDo
entryRuleEveryDo :
{ before(grammarAccess.getEveryDoRule()); }
	 ruleEveryDo
{ after(grammarAccess.getEveryDoRule()); } 
	 EOF 
;

// Rule EveryDo
ruleEveryDo 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getEveryDoAccess().getGroup()); }
(rule__EveryDo__Group__0)
{ after(grammarAccess.getEveryDoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExit
entryRuleExit :
{ before(grammarAccess.getExitRule()); }
	 ruleExit
{ after(grammarAccess.getExitRule()); } 
	 EOF 
;

// Rule Exit
ruleExit 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getExitAccess().getGroup()); }
(rule__Exit__Group__0)
{ after(grammarAccess.getExitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHalt
entryRuleHalt :
{ before(grammarAccess.getHaltRule()); }
	 ruleHalt
{ after(grammarAccess.getHaltRule()); } 
	 EOF 
;

// Rule Halt
ruleHalt 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getHaltAccess().getGroup()); }
(rule__Halt__Group__0)
{ after(grammarAccess.getHaltAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfTest
entryRuleIfTest :
{ before(grammarAccess.getIfTestRule()); }
	 ruleIfTest
{ after(grammarAccess.getIfTestRule()); } 
	 EOF 
;

// Rule IfTest
ruleIfTest 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getIfTestAccess().getGroup()); }
(rule__IfTest__Group__0)
{ after(grammarAccess.getIfTestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElsIfPart
entryRuleElsIfPart :
{ before(grammarAccess.getElsIfPartRule()); }
	 ruleElsIfPart
{ after(grammarAccess.getElsIfPartRule()); } 
	 EOF 
;

// Rule ElsIfPart
ruleElsIfPart 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getElsIfPartAccess().getGroup()); }
(rule__ElsIfPart__Group__0)
{ after(grammarAccess.getElsIfPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElsIf
entryRuleElsIf :
{ before(grammarAccess.getElsIfRule()); }
	 ruleElsIf
{ after(grammarAccess.getElsIfRule()); } 
	 EOF 
;

// Rule ElsIf
ruleElsIf 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getElsIfAccess().getGroup()); }
(rule__ElsIf__Group__0)
{ after(grammarAccess.getElsIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThenPart
entryRuleThenPart :
{ before(grammarAccess.getThenPartRule()); }
	 ruleThenPart
{ after(grammarAccess.getThenPartRule()); } 
	 EOF 
;

// Rule ThenPart
ruleThenPart 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getThenPartAccess().getGroup()); }
(rule__ThenPart__Group__0)
{ after(grammarAccess.getThenPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElsePart
entryRuleElsePart :
{ before(grammarAccess.getElsePartRule()); }
	 ruleElsePart
{ after(grammarAccess.getElsePartRule()); } 
	 EOF 
;

// Rule ElsePart
ruleElsePart 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getElsePartAccess().getGroup()); }
(rule__ElsePart__Group__0)
{ after(grammarAccess.getElsePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoop
entryRuleLoop :
{ before(grammarAccess.getLoopRule()); }
	 ruleLoop
{ after(grammarAccess.getLoopRule()); } 
	 EOF 
;

// Rule Loop
ruleLoop 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getLoopAccess().getGroup()); }
(rule__Loop__Group__0)
{ after(grammarAccess.getLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEndLoop
entryRuleEndLoop :
{ before(grammarAccess.getEndLoopRule()); }
	 ruleEndLoop
{ after(grammarAccess.getEndLoopRule()); } 
	 EOF 
;

// Rule EndLoop
ruleEndLoop 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getEndLoopAccess().getGroup()); }
(rule__EndLoop__Group__0)
{ after(grammarAccess.getEndLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopEach
entryRuleLoopEach :
{ before(grammarAccess.getLoopEachRule()); }
	 ruleLoopEach
{ after(grammarAccess.getLoopEachRule()); } 
	 EOF 
;

// Rule LoopEach
ruleLoopEach 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getLoopEachAccess().getGroup()); }
(rule__LoopEach__Group__0)
{ after(grammarAccess.getLoopEachAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopDelay
entryRuleLoopDelay :
{ before(grammarAccess.getLoopDelayRule()); }
	 ruleLoopDelay
{ after(grammarAccess.getLoopDelayRule()); } 
	 EOF 
;

// Rule LoopDelay
ruleLoopDelay 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getLoopDelayAccess().getDelayAssignment()); }
(rule__LoopDelay__DelayAssignment)
{ after(grammarAccess.getLoopDelayAccess().getDelayAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopBody
entryRuleLoopBody :
{ before(grammarAccess.getLoopBodyRule()); }
	 ruleLoopBody
{ after(grammarAccess.getLoopBodyRule()); } 
	 EOF 
;

// Rule LoopBody
ruleLoopBody 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getLoopBodyAccess().getStatementAssignment()); }
(rule__LoopBody__StatementAssignment)
{ after(grammarAccess.getLoopBodyAccess().getStatementAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNothing
entryRuleNothing :
{ before(grammarAccess.getNothingRule()); }
	 ruleNothing
{ after(grammarAccess.getNothingRule()); } 
	 EOF 
;

// Rule Nothing
ruleNothing 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getNothingAccess().getGroup()); }
(rule__Nothing__Group__0)
{ after(grammarAccess.getNothingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePause
entryRulePause :
{ before(grammarAccess.getPauseRule()); }
	 rulePause
{ after(grammarAccess.getPauseRule()); } 
	 EOF 
;

// Rule Pause
rulePause 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPauseAccess().getGroup()); }
(rule__Pause__Group__0)
{ after(grammarAccess.getPauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresent
entryRulePresent :
{ before(grammarAccess.getPresentRule()); }
	 rulePresent
{ after(grammarAccess.getPresentRule()); } 
	 EOF 
;

// Rule Present
rulePresent 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPresentAccess().getGroup()); }
(rule__Present__Group__0)
{ after(grammarAccess.getPresentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresentBody
entryRulePresentBody :
{ before(grammarAccess.getPresentBodyRule()); }
	 rulePresentBody
{ after(grammarAccess.getPresentBodyRule()); } 
	 EOF 
;

// Rule PresentBody
rulePresentBody 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPresentBodyAccess().getAlternatives()); }
(rule__PresentBody__Alternatives)
{ after(grammarAccess.getPresentBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresentEventBody
entryRulePresentEventBody :
{ before(grammarAccess.getPresentEventBodyRule()); }
	 rulePresentEventBody
{ after(grammarAccess.getPresentEventBodyRule()); } 
	 EOF 
;

// Rule PresentEventBody
rulePresentEventBody 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPresentEventBodyAccess().getGroup()); }
(rule__PresentEventBody__Group__0)
{ after(grammarAccess.getPresentEventBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresentCaseList
entryRulePresentCaseList :
{ before(grammarAccess.getPresentCaseListRule()); }
	 rulePresentCaseList
{ after(grammarAccess.getPresentCaseListRule()); } 
	 EOF 
;

// Rule PresentCaseList
rulePresentCaseList 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPresentCaseListAccess().getGroup()); }
(rule__PresentCaseList__Group__0)
{ after(grammarAccess.getPresentCaseListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresentCase
entryRulePresentCase :
{ before(grammarAccess.getPresentCaseRule()); }
	 rulePresentCase
{ after(grammarAccess.getPresentCaseRule()); } 
	 EOF 
;

// Rule PresentCase
rulePresentCase 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPresentCaseAccess().getGroup()); }
(rule__PresentCase__Group__0)
{ after(grammarAccess.getPresentCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresentEvent
entryRulePresentEvent :
{ before(grammarAccess.getPresentEventRule()); }
	 rulePresentEvent
{ after(grammarAccess.getPresentEventRule()); } 
	 EOF 
;

// Rule PresentEvent
rulePresentEvent 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getPresentEventAccess().getAlternatives()); }
(rule__PresentEvent__Alternatives)
{ after(grammarAccess.getPresentEventAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRepeat
entryRuleRepeat :
{ before(grammarAccess.getRepeatRule()); }
	 ruleRepeat
{ after(grammarAccess.getRepeatRule()); } 
	 EOF 
;

// Rule Repeat
ruleRepeat 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRepeatAccess().getGroup()); }
(rule__Repeat__Group__0)
{ after(grammarAccess.getRepeatAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRun
entryRuleRun :
{ before(grammarAccess.getRunRule()); }
	 ruleRun
{ after(grammarAccess.getRunRule()); } 
	 EOF 
;

// Rule Run
ruleRun 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRunAccess().getAlternatives()); }
(rule__Run__Alternatives)
{ after(grammarAccess.getRunAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleRenaming
entryRuleModuleRenaming :
{ before(grammarAccess.getModuleRenamingRule()); }
	 ruleModuleRenaming
{ after(grammarAccess.getModuleRenamingRule()); } 
	 EOF 
;

// Rule ModuleRenaming
ruleModuleRenaming 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getModuleRenamingAccess().getGroup()); }
(rule__ModuleRenaming__Group__0)
{ after(grammarAccess.getModuleRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRenamingList
entryRuleRenamingList :
{ before(grammarAccess.getRenamingListRule()); }
	 ruleRenamingList
{ after(grammarAccess.getRenamingListRule()); } 
	 EOF 
;

// Rule RenamingList
ruleRenamingList 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRenamingListAccess().getGroup()); }
(rule__RenamingList__Group__0)
{ after(grammarAccess.getRenamingListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRenaming
entryRuleRenaming :
{ before(grammarAccess.getRenamingRule()); }
	 ruleRenaming
{ after(grammarAccess.getRenamingRule()); } 
	 EOF 
;

// Rule Renaming
ruleRenaming 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getRenamingAccess().getAlternatives()); }
(rule__Renaming__Alternatives)
{ after(grammarAccess.getRenamingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeRenaming
entryRuleTypeRenaming :
{ before(grammarAccess.getTypeRenamingRule()); }
	 ruleTypeRenaming
{ after(grammarAccess.getTypeRenamingRule()); } 
	 EOF 
;

// Rule TypeRenaming
ruleTypeRenaming 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTypeRenamingAccess().getGroup()); }
(rule__TypeRenaming__Group__0)
{ after(grammarAccess.getTypeRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantRenaming
entryRuleConstantRenaming :
{ before(grammarAccess.getConstantRenamingRule()); }
	 ruleConstantRenaming
{ after(grammarAccess.getConstantRenamingRule()); } 
	 EOF 
;

// Rule ConstantRenaming
ruleConstantRenaming 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getConstantRenamingAccess().getGroup()); }
(rule__ConstantRenaming__Group__0)
{ after(grammarAccess.getConstantRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionRenaming
entryRuleFunctionRenaming :
{ before(grammarAccess.getFunctionRenamingRule()); }
	 ruleFunctionRenaming
{ after(grammarAccess.getFunctionRenamingRule()); } 
	 EOF 
;

// Rule FunctionRenaming
ruleFunctionRenaming 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getFunctionRenamingAccess().getGroup()); }
(rule__FunctionRenaming__Group__0)
{ after(grammarAccess.getFunctionRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleSignalRenaming
entryRuleSignalRenaming :
{ before(grammarAccess.getSignalRenamingRule()); }
	 ruleSignalRenaming
{ after(grammarAccess.getSignalRenamingRule()); } 
	 EOF 
;

// Rule SignalRenaming
ruleSignalRenaming 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSignalRenamingAccess().getGroup()); }
(rule__SignalRenaming__Group__0)
{ after(grammarAccess.getSignalRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalSignalDecl
entryRuleLocalSignalDecl :
{ before(grammarAccess.getLocalSignalDeclRule()); }
	 ruleLocalSignalDecl
{ after(grammarAccess.getLocalSignalDeclRule()); } 
	 EOF 
;

// Rule LocalSignalDecl
ruleLocalSignalDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getLocalSignalDeclAccess().getGroup()); }
(rule__LocalSignalDecl__Group__0)
{ after(grammarAccess.getLocalSignalDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalSignalList
entryRuleLocalSignalList :
{ before(grammarAccess.getLocalSignalListRule()); }
	 ruleLocalSignalList
{ after(grammarAccess.getLocalSignalListRule()); } 
	 EOF 
;

// Rule LocalSignalList
ruleLocalSignalList 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getLocalSignalListAccess().getGroup()); }
(rule__LocalSignalList__Group__0)
{ after(grammarAccess.getLocalSignalListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuspend
entryRuleSuspend :
{ before(grammarAccess.getSuspendRule()); }
	 ruleSuspend
{ after(grammarAccess.getSuspendRule()); } 
	 EOF 
;

// Rule Suspend
ruleSuspend 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSuspendAccess().getGroup()); }
(rule__Suspend__Group__0)
{ after(grammarAccess.getSuspendAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSustain
entryRuleSustain :
{ before(grammarAccess.getSustainRule()); }
	 ruleSustain
{ after(grammarAccess.getSustainRule()); } 
	 EOF 
;

// Rule Sustain
ruleSustain 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSustainAccess().getGroup()); }
(rule__Sustain__Group__0)
{ after(grammarAccess.getSustainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrap
entryRuleTrap :
{ before(grammarAccess.getTrapRule()); }
	 ruleTrap
{ after(grammarAccess.getTrapRule()); } 
	 EOF 
;

// Rule Trap
ruleTrap 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTrapAccess().getGroup()); }
(rule__Trap__Group__0)
{ after(grammarAccess.getTrapAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapDeclList
entryRuleTrapDeclList :
{ before(grammarAccess.getTrapDeclListRule()); }
	 ruleTrapDeclList
{ after(grammarAccess.getTrapDeclListRule()); } 
	 EOF 
;

// Rule TrapDeclList
ruleTrapDeclList 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTrapDeclListAccess().getGroup()); }
(rule__TrapDeclList__Group__0)
{ after(grammarAccess.getTrapDeclListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapDecl
entryRuleTrapDecl :
{ before(grammarAccess.getTrapDeclRule()); }
	 ruleTrapDecl
{ after(grammarAccess.getTrapDeclRule()); } 
	 EOF 
;

// Rule TrapDecl
ruleTrapDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTrapDeclAccess().getGroup()); }
(rule__TrapDecl__Group__0)
{ after(grammarAccess.getTrapDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapHandlerList
entryRuleTrapHandlerList :
{ before(grammarAccess.getTrapHandlerListRule()); }
	 ruleTrapHandlerList
{ after(grammarAccess.getTrapHandlerListRule()); } 
	 EOF 
;

// Rule TrapHandlerList
ruleTrapHandlerList 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTrapHandlerListAccess().getGroup()); }
(rule__TrapHandlerList__Group__0)
{ after(grammarAccess.getTrapHandlerListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapHandler
entryRuleTrapHandler :
{ before(grammarAccess.getTrapHandlerRule()); }
	 ruleTrapHandler
{ after(grammarAccess.getTrapHandlerRule()); } 
	 EOF 
;

// Rule TrapHandler
ruleTrapHandler 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTrapHandlerAccess().getGroup()); }
(rule__TrapHandler__Group__0)
{ after(grammarAccess.getTrapHandlerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable :
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getVariableAccess().getGroup()); }
(rule__Variable__Group__0)
{ after(grammarAccess.getVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDecl
entryRuleVariableDecl :
{ before(grammarAccess.getVariableDeclRule()); }
	 ruleVariableDecl
{ after(grammarAccess.getVariableDeclRule()); } 
	 EOF 
;

// Rule VariableDecl
ruleVariableDecl 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getVariableDeclAccess().getGroup()); }
(rule__VariableDecl__Group__0)
{ after(grammarAccess.getVariableDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableList
entryRuleVariableList :
{ before(grammarAccess.getVariableListRule()); }
	 ruleVariableList
{ after(grammarAccess.getVariableListRule()); } 
	 EOF 
;

// Rule VariableList
ruleVariableList 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getVariableListAccess().getGroup()); }
(rule__VariableList__Group__0)
{ after(grammarAccess.getVariableListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakAbort
entryRuleWeakAbort :
{ before(grammarAccess.getWeakAbortRule()); }
	 ruleWeakAbort
{ after(grammarAccess.getWeakAbortRule()); } 
	 EOF 
;

// Rule WeakAbort
ruleWeakAbort 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getWeakAbortAccess().getGroup()); }
(rule__WeakAbort__Group__0)
{ after(grammarAccess.getWeakAbortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakAbortBody
entryRuleWeakAbortBody :
{ before(grammarAccess.getWeakAbortBodyRule()); }
	 ruleWeakAbortBody
{ after(grammarAccess.getWeakAbortBodyRule()); } 
	 EOF 
;

// Rule WeakAbortBody
ruleWeakAbortBody 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getWeakAbortBodyAccess().getAlternatives()); }
(rule__WeakAbortBody__Alternatives)
{ after(grammarAccess.getWeakAbortBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakAbortEnd
entryRuleWeakAbortEnd :
{ before(grammarAccess.getWeakAbortEndRule()); }
	 ruleWeakAbortEnd
{ after(grammarAccess.getWeakAbortEndRule()); } 
	 EOF 
;

// Rule WeakAbortEnd
ruleWeakAbortEnd 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getWeakAbortEndAccess().getGroup()); }
(rule__WeakAbortEnd__Group__0)
{ after(grammarAccess.getWeakAbortEndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakAbortInstance
entryRuleWeakAbortInstance :
{ before(grammarAccess.getWeakAbortInstanceRule()); }
	 ruleWeakAbortInstance
{ after(grammarAccess.getWeakAbortInstanceRule()); } 
	 EOF 
;

// Rule WeakAbortInstance
ruleWeakAbortInstance 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getGroup()); }
(rule__WeakAbortInstance__Group__0)
{ after(grammarAccess.getWeakAbortInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakAbortCase
entryRuleWeakAbortCase :
{ before(grammarAccess.getWeakAbortCaseRule()); }
	 ruleWeakAbortCase
{ after(grammarAccess.getWeakAbortCaseRule()); } 
	 EOF 
;

// Rule WeakAbortCase
ruleWeakAbortCase 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getWeakAbortCaseAccess().getGroup()); }
(rule__WeakAbortCase__Group__0)
{ after(grammarAccess.getWeakAbortCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataExpr
entryRuleDataExpr :
{ before(grammarAccess.getDataExprRule()); }
	 ruleDataExpr
{ after(grammarAccess.getDataExprRule()); } 
	 EOF 
;

// Rule DataExpr
ruleDataExpr 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataExprAccess().getAlternatives()); }
(rule__DataExpr__Alternatives)
{ after(grammarAccess.getDataExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataOp
entryRuleDataOp :
{ before(grammarAccess.getDataOpRule()); }
	 ruleDataOp
{ after(grammarAccess.getDataOpRule()); } 
	 EOF 
;

// Rule DataOp
ruleDataOp 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataOpAccess().getAlternatives()); }
(rule__DataOp__Alternatives)
{ after(grammarAccess.getDataOpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataUnaryExpr
entryRuleDataUnaryExpr :
{ before(grammarAccess.getDataUnaryExprRule()); }
	 ruleDataUnaryExpr
{ after(grammarAccess.getDataUnaryExprRule()); } 
	 EOF 
;

// Rule DataUnaryExpr
ruleDataUnaryExpr 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataUnaryExprAccess().getAlternatives()); }
(rule__DataUnaryExpr__Alternatives)
{ after(grammarAccess.getDataUnaryExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataValueID
entryRuleDataValueID :
{ before(grammarAccess.getDataValueIDRule()); }
	 ruleDataValueID
{ after(grammarAccess.getDataValueIDRule()); } 
	 EOF 
;

// Rule DataValueID
ruleDataValueID 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataValueIDAccess().getValueAssignment()); }
(rule__DataValueID__ValueAssignment)
{ after(grammarAccess.getDataValueIDAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataValueFloat
entryRuleDataValueFloat :
{ before(grammarAccess.getDataValueFloatRule()); }
	 ruleDataValueFloat
{ after(grammarAccess.getDataValueFloatRule()); } 
	 EOF 
;

// Rule DataValueFloat
ruleDataValueFloat 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataValueFloatAccess().getValueAssignment()); }
(rule__DataValueFloat__ValueAssignment)
{ after(grammarAccess.getDataValueFloatAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataValueBoolean
entryRuleDataValueBoolean :
{ before(grammarAccess.getDataValueBooleanRule()); }
	 ruleDataValueBoolean
{ after(grammarAccess.getDataValueBooleanRule()); } 
	 EOF 
;

// Rule DataValueBoolean
ruleDataValueBoolean 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataValueBooleanAccess().getValueAssignment()); }
(rule__DataValueBoolean__ValueAssignment)
{ after(grammarAccess.getDataValueBooleanAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataValueInt
entryRuleDataValueInt :
{ before(grammarAccess.getDataValueIntRule()); }
	 ruleDataValueInt
{ after(grammarAccess.getDataValueIntRule()); } 
	 EOF 
;

// Rule DataValueInt
ruleDataValueInt 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataValueIntAccess().getValueAssignment()); }
(rule__DataValueInt__ValueAssignment)
{ after(grammarAccess.getDataValueIntAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataValueString
entryRuleDataValueString :
{ before(grammarAccess.getDataValueStringRule()); }
	 ruleDataValueString
{ after(grammarAccess.getDataValueStringRule()); } 
	 EOF 
;

// Rule DataValueString
ruleDataValueString 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataValueStringAccess().getValueAssignment()); }
(rule__DataValueString__ValueAssignment)
{ after(grammarAccess.getDataValueStringAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataBlock
entryRuleDataBlock :
{ before(grammarAccess.getDataBlockRule()); }
	 ruleDataBlock
{ after(grammarAccess.getDataBlockRule()); } 
	 EOF 
;

// Rule DataBlock
ruleDataBlock 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataBlockAccess().getGroup()); }
(rule__DataBlock__Group__0)
{ after(grammarAccess.getDataBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataCurrent
entryRuleDataCurrent :
{ before(grammarAccess.getDataCurrentRule()); }
	 ruleDataCurrent
{ after(grammarAccess.getDataCurrentRule()); } 
	 EOF 
;

// Rule DataCurrent
ruleDataCurrent 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataCurrentAccess().getGroup()); }
(rule__DataCurrent__Group__0)
{ after(grammarAccess.getDataCurrentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataPre
entryRuleDataPre :
{ before(grammarAccess.getDataPreRule()); }
	 ruleDataPre
{ after(grammarAccess.getDataPreRule()); } 
	 EOF 
;

// Rule DataPre
ruleDataPre 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataPreAccess().getGroup()); }
(rule__DataPre__Group__0)
{ after(grammarAccess.getDataPreAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataTrap
entryRuleDataTrap :
{ before(grammarAccess.getDataTrapRule()); }
	 ruleDataTrap
{ after(grammarAccess.getDataTrapRule()); } 
	 EOF 
;

// Rule DataTrap
ruleDataTrap 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataTrapAccess().getGroup()); }
(rule__DataTrap__Group__0)
{ after(grammarAccess.getDataTrapAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDataFunction
entryRuleDataFunction :
{ before(grammarAccess.getDataFunctionRule()); }
	 ruleDataFunction
{ after(grammarAccess.getDataFunctionRule()); } 
	 EOF 
;

// Rule DataFunction
ruleDataFunction 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDataFunctionAccess().getGroup()); }
(rule__DataFunction__Group__0)
{ after(grammarAccess.getDataFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapExpr
entryRuleTrapExpr :
{ before(grammarAccess.getTrapExprRule()); }
	 ruleTrapExpr
{ after(grammarAccess.getTrapExprRule()); } 
	 EOF 
;

// Rule TrapExpr
ruleTrapExpr 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTrapExprAccess().getSigExprParserRuleCall()); }
	ruleSigExpr
{ after(grammarAccess.getTrapExprAccess().getSigExprParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSigExpr
entryRuleSigExpr :
{ before(grammarAccess.getSigExprRule()); }
	 ruleSigExpr
{ after(grammarAccess.getSigExprRule()); } 
	 EOF 
;

// Rule SigExpr
ruleSigExpr 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSigExprAccess().getGroup()); }
(rule__SigExpr__Group__0)
{ after(grammarAccess.getSigExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSigExprAND
entryRuleSigExprAND :
{ before(grammarAccess.getSigExprANDRule()); }
	 ruleSigExprAND
{ after(grammarAccess.getSigExprANDRule()); } 
	 EOF 
;

// Rule SigExprAND
ruleSigExprAND 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSigExprANDAccess().getGroup()); }
(rule__SigExprAND__Group__0)
{ after(grammarAccess.getSigExprANDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSigExprUnary
entryRuleSigExprUnary :
{ before(grammarAccess.getSigExprUnaryRule()); }
	 ruleSigExprUnary
{ after(grammarAccess.getSigExprUnaryRule()); } 
	 EOF 
;

// Rule SigExprUnary
ruleSigExprUnary 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSigExprUnaryAccess().getAlternatives()); }
(rule__SigExprUnary__Alternatives)
{ after(grammarAccess.getSigExprUnaryAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelayExpr
entryRuleDelayExpr :
{ before(grammarAccess.getDelayExprRule()); }
	 ruleDelayExpr
{ after(grammarAccess.getDelayExprRule()); } 
	 EOF 
;

// Rule DelayExpr
ruleDelayExpr 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDelayExprAccess().getAlternatives()); }
(rule__DelayExpr__Alternatives)
{ after(grammarAccess.getDelayExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelayEvent
entryRuleDelayEvent :
{ before(grammarAccess.getDelayEventRule()); }
	 ruleDelayEvent
{ after(grammarAccess.getDelayEventRule()); } 
	 EOF 
;

// Rule DelayEvent
ruleDelayEvent 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getDelayEventAccess().getAlternatives()); }
(rule__DelayEvent__Alternatives)
{ after(grammarAccess.getDelayEventAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChannelDescription
entryRuleChannelDescription :
{ before(grammarAccess.getChannelDescriptionRule()); }
	 ruleChannelDescription
{ after(grammarAccess.getChannelDescriptionRule()); } 
	 EOF 
;

// Rule ChannelDescription
ruleChannelDescription 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getChannelDescriptionAccess().getAlternatives()); }
(rule__ChannelDescription__Alternatives)
{ after(grammarAccess.getChannelDescriptionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignal
entryRuleSignal :
{ before(grammarAccess.getSignalRule()); }
	 ruleSignal
{ after(grammarAccess.getSignalRule()); } 
	 EOF 
;

// Rule Signal
ruleSignal 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSignalAccess().getGroup()); }
(rule__Signal__Group__0)
{ after(grammarAccess.getSignalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTick
entryRuleTick :
{ before(grammarAccess.getTickRule()); }
	 ruleTick
{ after(grammarAccess.getTickRule()); } 
	 EOF 
;

// Rule Tick
ruleTick 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getTickAccess().getTickKeyword()); }

	'tick' 

{ after(grammarAccess.getTickAccess().getTickKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSensor
entryRuleSensor :
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
    @init {
		int stackSize = keepStackSize();
    }
 :
(
{ before(grammarAccess.getSensorAccess().getAlternatives()); }
(rule__Sensor__Alternatives)
{ after(grammarAccess.getSensorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__EndModule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndModuleAccess().getGroup_0()); }
(rule__EndModule__Group_0__0)
{ after(grammarAccess.getEndModuleAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getEndModuleAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getEndModuleAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntSignalDeclAssignment_0()); }
(rule__ModuleInterface__IntSignalDeclAssignment_0)
{ after(grammarAccess.getModuleInterfaceAccess().getIntSignalDeclAssignment_0()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntTypeDeclAssignment_1()); }
(rule__ModuleInterface__IntTypeDeclAssignment_1)
{ after(grammarAccess.getModuleInterfaceAccess().getIntTypeDeclAssignment_1()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntSensorDeclAssignment_2()); }
(rule__ModuleInterface__IntSensorDeclAssignment_2)
{ after(grammarAccess.getModuleInterfaceAccess().getIntSensorDeclAssignment_2()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntConstantDeclAssignment_3()); }
(rule__ModuleInterface__IntConstantDeclAssignment_3)
{ after(grammarAccess.getModuleInterfaceAccess().getIntConstantDeclAssignment_3()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntRelationDeclAssignment_4()); }
(rule__ModuleInterface__IntRelationDeclAssignment_4)
{ after(grammarAccess.getModuleInterfaceAccess().getIntRelationDeclAssignment_4()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntFunctionDeclAssignment_5()); }
(rule__ModuleInterface__IntFunctionDeclAssignment_5)
{ after(grammarAccess.getModuleInterfaceAccess().getIntFunctionDeclAssignment_5()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntProcedureDeclAssignment_6()); }
(rule__ModuleInterface__IntProcedureDeclAssignment_6)
{ after(grammarAccess.getModuleInterfaceAccess().getIntProcedureDeclAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDecl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getGroup_0()); }
(rule__SignalDecl__Group_0__0)
{ after(grammarAccess.getSignalDeclAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSignalDeclAccess().getGroup_1()); }
(rule__SignalDecl__Group_1__0)
{ after(grammarAccess.getSignalDeclAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getSignalDeclAccess().getGroup_2()); }
(rule__SignalDecl__Group_2__0)
{ after(grammarAccess.getSignalDeclAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getSignalDeclAccess().getGroup_3()); }
(rule__SignalDecl__Group_3__0)
{ after(grammarAccess.getSignalDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getRelationImplicationParserRuleCall_0()); }
	ruleRelationImplication
{ after(grammarAccess.getRelationTypeAccess().getRelationImplicationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getRelationIncompatibilityParserRuleCall_1()); }
	ruleRelationIncompatibility
{ after(grammarAccess.getRelationTypeAccess().getRelationIncompatibilityParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecl__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getTypeAssignment_3_0()); }
(rule__OneTypeConstantDecl__TypeAssignment_3_0)
{ after(grammarAccess.getOneTypeConstantDeclAccess().getTypeAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getTypeAssignment_3_1()); }
(rule__OneTypeConstantDecl__TypeAssignment_3_1)
{ after(grammarAccess.getOneTypeConstantDeclAccess().getTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantValueAccess().getEsterelIDTerminalRuleCall_0()); }
	RULE_ESTERELID
{ after(grammarAccess.getConstantValueAccess().getEsterelIDTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getGroup_1()); }
(rule__ConstantValue__Group_1__0)
{ after(grammarAccess.getConstantValueAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getSTRINGTerminalRuleCall_2()); }
	RULE_STRING
{ after(grammarAccess.getConstantValueAccess().getSTRINGTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getFloatTerminalRuleCall_3()); }
	RULE_FLOAT
{ after(grammarAccess.getConstantValueAccess().getFloatTerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getConstantValueAccess().getBooleanTerminalRuleCall_4()); }
	RULE_BOOLEAN
{ after(grammarAccess.getConstantValueAccess().getBooleanTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__IdListAlternatives_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListEsterelIDTerminalRuleCall_2_0_0_0()); }
	RULE_ESTERELID
{ after(grammarAccess.getFunctionAccess().getIdListEsterelIDTerminalRuleCall_2_0_0_0()); }
)

    |(
{ before(grammarAccess.getFunctionAccess().getIdListBaseTypeTerminalRuleCall_2_0_0_1()); }
	RULE_BASETYPE
{ after(grammarAccess.getFunctionAccess().getIdListBaseTypeTerminalRuleCall_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__IdListAlternatives_2_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListEsterelIDTerminalRuleCall_2_1_1_0_0()); }
	RULE_ESTERELID
{ after(grammarAccess.getFunctionAccess().getIdListEsterelIDTerminalRuleCall_2_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getFunctionAccess().getIdListBaseTypeTerminalRuleCall_2_1_1_0_1()); }
	RULE_BASETYPE
{ after(grammarAccess.getFunctionAccess().getIdListBaseTypeTerminalRuleCall_2_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTypeAssignment_5_0()); }
(rule__Function__TypeAssignment_5_0)
{ after(grammarAccess.getFunctionAccess().getTypeAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getFunctionAccess().getTypeAssignment_5_1()); }
(rule__Function__TypeAssignment_5_1)
{ after(grammarAccess.getFunctionAccess().getTypeAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdListAlternatives_2_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListEsterelIDTerminalRuleCall_2_0_0_0()); }
	RULE_ESTERELID
{ after(grammarAccess.getProcedureAccess().getIdListEsterelIDTerminalRuleCall_2_0_0_0()); }
)

    |(
{ before(grammarAccess.getProcedureAccess().getIdListBaseTypeTerminalRuleCall_2_0_0_1()); }
	RULE_BASETYPE
{ after(grammarAccess.getProcedureAccess().getIdListBaseTypeTerminalRuleCall_2_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdListAlternatives_2_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListEsterelIDTerminalRuleCall_2_1_1_0_0()); }
	RULE_ESTERELID
{ after(grammarAccess.getProcedureAccess().getIdListEsterelIDTerminalRuleCall_2_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getProcedureAccess().getIdListBaseTypeTerminalRuleCall_2_1_1_0_1()); }
	RULE_BASETYPE
{ after(grammarAccess.getProcedureAccess().getIdListBaseTypeTerminalRuleCall_2_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdListAlternatives_5_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListEsterelIDTerminalRuleCall_5_0_0_0()); }
	RULE_ESTERELID
{ after(grammarAccess.getProcedureAccess().getIdListEsterelIDTerminalRuleCall_5_0_0_0()); }
)

    |(
{ before(grammarAccess.getProcedureAccess().getIdListBaseTypeTerminalRuleCall_5_0_0_1()); }
	RULE_BASETYPE
{ after(grammarAccess.getProcedureAccess().getIdListBaseTypeTerminalRuleCall_5_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdListAlternatives_5_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListEsterelIDTerminalRuleCall_5_1_1_0_0()); }
	RULE_ESTERELID
{ after(grammarAccess.getProcedureAccess().getIdListEsterelIDTerminalRuleCall_5_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getProcedureAccess().getIdListBaseTypeTerminalRuleCall_5_1_1_0_1()); }
	RULE_BASETYPE
{ after(grammarAccess.getProcedureAccess().getIdListBaseTypeTerminalRuleCall_5_1_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicStatementAccess().getAbortParserRuleCall_0()); }
	ruleAbort
{ after(grammarAccess.getAtomicStatementAccess().getAbortParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getAssignmentParserRuleCall_1()); }
	ruleAssignment
{ after(grammarAccess.getAtomicStatementAccess().getAssignmentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getAwaitParserRuleCall_2()); }
	ruleAwait
{ after(grammarAccess.getAtomicStatementAccess().getAwaitParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getBlockParserRuleCall_3()); }
	ruleBlock
{ after(grammarAccess.getAtomicStatementAccess().getBlockParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getDoParserRuleCall_4()); }
	ruleDo
{ after(grammarAccess.getAtomicStatementAccess().getDoParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getEmitParserRuleCall_5()); }
	ruleEmit
{ after(grammarAccess.getAtomicStatementAccess().getEmitParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getEveryDoParserRuleCall_6()); }
	ruleEveryDo
{ after(grammarAccess.getAtomicStatementAccess().getEveryDoParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getExitParserRuleCall_7()); }
	ruleExit
{ after(grammarAccess.getAtomicStatementAccess().getExitParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getHaltParserRuleCall_8()); }
	ruleHalt
{ after(grammarAccess.getAtomicStatementAccess().getHaltParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getIfTestParserRuleCall_9()); }
	ruleIfTest
{ after(grammarAccess.getAtomicStatementAccess().getIfTestParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getLocalSignalDeclParserRuleCall_10()); }
	ruleLocalSignalDecl
{ after(grammarAccess.getAtomicStatementAccess().getLocalSignalDeclParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getLoopParserRuleCall_11()); }
	ruleLoop
{ after(grammarAccess.getAtomicStatementAccess().getLoopParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getNothingParserRuleCall_12()); }
	ruleNothing
{ after(grammarAccess.getAtomicStatementAccess().getNothingParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getPauseParserRuleCall_13()); }
	rulePause
{ after(grammarAccess.getAtomicStatementAccess().getPauseParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getPresentParserRuleCall_14()); }
	rulePresent
{ after(grammarAccess.getAtomicStatementAccess().getPresentParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getRepeatParserRuleCall_15()); }
	ruleRepeat
{ after(grammarAccess.getAtomicStatementAccess().getRepeatParserRuleCall_15()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getRunParserRuleCall_16()); }
	ruleRun
{ after(grammarAccess.getAtomicStatementAccess().getRunParserRuleCall_16()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getSuspendParserRuleCall_17()); }
	ruleSuspend
{ after(grammarAccess.getAtomicStatementAccess().getSuspendParserRuleCall_17()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getSustainParserRuleCall_18()); }
	ruleSustain
{ after(grammarAccess.getAtomicStatementAccess().getSustainParserRuleCall_18()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getTrapParserRuleCall_19()); }
	ruleTrap
{ after(grammarAccess.getAtomicStatementAccess().getTrapParserRuleCall_19()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getVariableParserRuleCall_20()); }
	ruleVariable
{ after(grammarAccess.getAtomicStatementAccess().getVariableParserRuleCall_20()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getWeakAbortParserRuleCall_21()); }
	ruleWeakAbort
{ after(grammarAccess.getAtomicStatementAccess().getWeakAbortParserRuleCall_21()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortBodyAccess().getAbortInstanceParserRuleCall_0()); }
	ruleAbortInstance
{ after(grammarAccess.getAbortBodyAccess().getAbortInstanceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbortBodyAccess().getAbortCaseParserRuleCall_1()); }
	ruleAbortCase
{ after(grammarAccess.getAbortBodyAccess().getAbortCaseParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitBodyAccess().getAwaitInstanceParserRuleCall_0()); }
	ruleAwaitInstance
{ after(grammarAccess.getAwaitBodyAccess().getAwaitInstanceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAwaitBodyAccess().getAwaitCaseParserRuleCall_1()); }
	ruleAwaitCase
{ after(grammarAccess.getAwaitBodyAccess().getAwaitCaseParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getEndAssignment_2_0()); }
(rule__Do__EndAssignment_2_0)
{ after(grammarAccess.getDoAccess().getEndAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getDoAccess().getEndAssignment_2_1()); }
(rule__Do__EndAssignment_2_1)
{ after(grammarAccess.getDoAccess().getEndAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getSignalAssignment_1_0()); }
(rule__Emit__SignalAssignment_1_0)
{ after(grammarAccess.getEmitAccess().getSignalAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getEmitAccess().getTickAssignment_1_1()); }
(rule__Emit__TickAssignment_1_1)
{ after(grammarAccess.getEmitAccess().getTickAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getEndLoopParserRuleCall_2_0()); }
	ruleEndLoop
{ after(grammarAccess.getLoopAccess().getEndLoopParserRuleCall_2_0()); }
)

    |(
{ before(grammarAccess.getLoopAccess().getEndAssignment_2_1()); }
(rule__Loop__EndAssignment_2_1)
{ after(grammarAccess.getLoopAccess().getEndAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentBodyAccess().getPresentEventBodyParserRuleCall_0()); }
	rulePresentEventBody
{ after(grammarAccess.getPresentBodyAccess().getPresentEventBodyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPresentBodyAccess().getPresentCaseListParserRuleCall_1()); }
	rulePresentCaseList
{ after(grammarAccess.getPresentBodyAccess().getPresentCaseListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getExpressionAssignment_0()); }
(rule__PresentEvent__ExpressionAssignment_0)
{ after(grammarAccess.getPresentEventAccess().getExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getPresentEventAccess().getGroup_1()); }
(rule__PresentEvent__Group_1__0)
{ after(grammarAccess.getPresentEventAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getGroup_0()); }
(rule__Run__Group_0__0)
{ after(grammarAccess.getRunAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRunAccess().getGroup_1()); }
(rule__Run__Group_1__0)
{ after(grammarAccess.getRunAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_0()); }
(rule__Renaming__Group_0__0)
{ after(grammarAccess.getRenamingAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_1()); }
(rule__Renaming__Group_1__0)
{ after(grammarAccess.getRenamingAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_2()); }
(rule__Renaming__Group_2__0)
{ after(grammarAccess.getRenamingAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_3()); }
(rule__Renaming__Group_3__0)
{ after(grammarAccess.getRenamingAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getSignalAssignment_1_0()); }
(rule__Sustain__SignalAssignment_1_0)
{ after(grammarAccess.getSustainAccess().getSignalAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getSustainAccess().getTickAssignment_1_1()); }
(rule__Sustain__TickAssignment_1_1)
{ after(grammarAccess.getSustainAccess().getTickAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeAssignment_2_0()); }
(rule__VariableDecl__TypeAssignment_2_0)
{ after(grammarAccess.getVariableDeclAccess().getTypeAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclAccess().getTypeAssignment_2_1()); }
(rule__VariableDecl__TypeAssignment_2_1)
{ after(grammarAccess.getVariableDeclAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Alternatives_3_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeAssignment_3_4_0()); }
(rule__VariableDecl__TypeAssignment_3_4_0)
{ after(grammarAccess.getVariableDeclAccess().getTypeAssignment_3_4_0()); }
)

    |(
{ before(grammarAccess.getVariableDeclAccess().getTypeAssignment_3_4_1()); }
(rule__VariableDecl__TypeAssignment_3_4_1)
{ after(grammarAccess.getVariableDeclAccess().getTypeAssignment_3_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortBodyAccess().getWeakAbortInstanceParserRuleCall_0()); }
	ruleWeakAbortInstance
{ after(grammarAccess.getWeakAbortBodyAccess().getWeakAbortInstanceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWeakAbortBodyAccess().getWeakAbortCaseParserRuleCall_1()); }
	ruleWeakAbortCase
{ after(grammarAccess.getWeakAbortBodyAccess().getWeakAbortCaseParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getGroup_0()); }
(rule__DataExpr__Group_0__0)
{ after(grammarAccess.getDataExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDataExprAccess().getGroup_1()); }
(rule__DataExpr__Group_1__0)
{ after(grammarAccess.getDataExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataOp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataOpAccess().getAndKeyword_0()); }

	'and' 

{ after(grammarAccess.getDataOpAccess().getAndKeyword_0()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getOrKeyword_1()); }

	'or' 

{ after(grammarAccess.getDataOpAccess().getOrKeyword_1()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getNotKeyword_2()); }

	'not' 

{ after(grammarAccess.getDataOpAccess().getNotKeyword_2()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getLessThanSignKeyword_3()); }

	'<' 

{ after(grammarAccess.getDataOpAccess().getLessThanSignKeyword_3()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getGreaterThanSignKeyword_4()); }

	'>' 

{ after(grammarAccess.getDataOpAccess().getGreaterThanSignKeyword_4()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getLessThanSignEqualsSignKeyword_5()); }

	'<=' 

{ after(grammarAccess.getDataOpAccess().getLessThanSignEqualsSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getGreaterThanSignEqualsSignKeyword_6()); }

	'>=' 

{ after(grammarAccess.getDataOpAccess().getGreaterThanSignEqualsSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getLessThanSignGreaterThanSignKeyword_7()); }

	'<>' 

{ after(grammarAccess.getDataOpAccess().getLessThanSignGreaterThanSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getEqualsSignKeyword_8()); }

	'=' 

{ after(grammarAccess.getDataOpAccess().getEqualsSignKeyword_8()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getPlusSignKeyword_9()); }

	'+' 

{ after(grammarAccess.getDataOpAccess().getPlusSignKeyword_9()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getHyphenMinusKeyword_10()); }

	'-' 

{ after(grammarAccess.getDataOpAccess().getHyphenMinusKeyword_10()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getAsteriskKeyword_11()); }

	'*' 

{ after(grammarAccess.getDataOpAccess().getAsteriskKeyword_11()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getSolidusKeyword_12()); }

	'/' 

{ after(grammarAccess.getDataOpAccess().getSolidusKeyword_12()); }
)

    |(
{ before(grammarAccess.getDataOpAccess().getModKeyword_13()); }

	'mod' 

{ after(grammarAccess.getDataOpAccess().getModKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataUnaryExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataUnaryExprAccess().getDataValueFloatParserRuleCall_0()); }
	ruleDataValueFloat
{ after(grammarAccess.getDataUnaryExprAccess().getDataValueFloatParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDataUnaryExprAccess().getDataValueBooleanParserRuleCall_1()); }
	ruleDataValueBoolean
{ after(grammarAccess.getDataUnaryExprAccess().getDataValueBooleanParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDataUnaryExprAccess().getDataValueIntParserRuleCall_2()); }
	ruleDataValueInt
{ after(grammarAccess.getDataUnaryExprAccess().getDataValueIntParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDataUnaryExprAccess().getDataValueStringParserRuleCall_3()); }
	ruleDataValueString
{ after(grammarAccess.getDataUnaryExprAccess().getDataValueStringParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getDataUnaryExprAccess().getDataValueIDParserRuleCall_4()); }
	ruleDataValueID
{ after(grammarAccess.getDataUnaryExprAccess().getDataValueIDParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getDataUnaryExprAccess().getDataBlockParserRuleCall_5()); }
	ruleDataBlock
{ after(grammarAccess.getDataUnaryExprAccess().getDataBlockParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getDataUnaryExprAccess().getDataCurrentParserRuleCall_6()); }
	ruleDataCurrent
{ after(grammarAccess.getDataUnaryExprAccess().getDataCurrentParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getDataUnaryExprAccess().getDataPreParserRuleCall_7()); }
	ruleDataPre
{ after(grammarAccess.getDataUnaryExprAccess().getDataPreParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getDataUnaryExprAccess().getDataTrapParserRuleCall_8()); }
	ruleDataTrap
{ after(grammarAccess.getDataUnaryExprAccess().getDataTrapParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getDataUnaryExprAccess().getDataFunctionParserRuleCall_9()); }
	ruleDataFunction
{ after(grammarAccess.getDataUnaryExprAccess().getDataFunctionParserRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataCurrent__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCurrentAccess().getSignalAssignment_1_0()); }
(rule__DataCurrent__SignalAssignment_1_0)
{ after(grammarAccess.getDataCurrentAccess().getSignalAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getDataCurrentAccess().getTickAssignment_1_1()); }
(rule__DataCurrent__TickAssignment_1_1)
{ after(grammarAccess.getDataCurrentAccess().getTickAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataPre__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPreAccess().getSignalAssignment_3_0()); }
(rule__DataPre__SignalAssignment_3_0)
{ after(grammarAccess.getDataPreAccess().getSignalAssignment_3_0()); }
)

    |(
{ before(grammarAccess.getDataPreAccess().getTickAssignment_3_1()); }
(rule__DataPre__TickAssignment_3_1)
{ after(grammarAccess.getDataPreAccess().getTickAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExprUnary__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprUnaryAccess().getExprAssignment_0()); }
(rule__SigExprUnary__ExprAssignment_0)
{ after(grammarAccess.getSigExprUnaryAccess().getExprAssignment_0()); }
)

    |(
{ before(grammarAccess.getSigExprUnaryAccess().getGroup_1()); }
(rule__SigExprUnary__Group_1__0)
{ after(grammarAccess.getSigExprUnaryAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getSigExprUnaryAccess().getGroup_2()); }
(rule__SigExprUnary__Group_2__0)
{ after(grammarAccess.getSigExprUnaryAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getEventAssignment_0()); }
(rule__DelayExpr__EventAssignment_0)
{ after(grammarAccess.getDelayExprAccess().getEventAssignment_0()); }
)

    |(
{ before(grammarAccess.getDelayExprAccess().getGroup_1()); }
(rule__DelayExpr__Group_1__0)
{ after(grammarAccess.getDelayExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getAlternatives_0()); }
(rule__DelayEvent__Alternatives_0)
{ after(grammarAccess.getDelayEventAccess().getAlternatives_0()); }
)

    |(
{ before(grammarAccess.getDelayEventAccess().getGroup_1()); }
(rule__DelayEvent__Group_1__0)
{ after(grammarAccess.getDelayEventAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getDelayEventAccess().getGroup_2()); }
(rule__DelayEvent__Group_2__0)
{ after(grammarAccess.getDelayEventAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getSignalAssignment_0_0()); }
(rule__DelayEvent__SignalAssignment_0_0)
{ after(grammarAccess.getDelayEventAccess().getSignalAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getDelayEventAccess().getTickAssignment_0_1()); }
(rule__DelayEvent__TickAssignment_0_1)
{ after(grammarAccess.getDelayEventAccess().getTickAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getGroup_0()); }
(rule__ChannelDescription__Group_0__0)
{ after(grammarAccess.getChannelDescriptionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getChannelDescriptionAccess().getGroup_1()); }
(rule__ChannelDescription__Group_1__0)
{ after(grammarAccess.getChannelDescriptionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getChannelDescriptionAccess().getGroup_2()); }
(rule__ChannelDescription__Group_2__0)
{ after(grammarAccess.getChannelDescriptionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Alternatives_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_0_1_0()); }
(rule__ChannelDescription__TypeAssignment_0_1_0)
{ after(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_0_1_0()); }
)

    |(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_0_1_1()); }
(rule__ChannelDescription__TypeAssignment_0_1_1)
{ after(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Alternatives_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_1_1_0()); }
(rule__ChannelDescription__TypeAssignment_1_1_0)
{ after(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_1_1_0()); }
)

    |(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_1_1_1()); }
(rule__ChannelDescription__TypeAssignment_1_1_1)
{ after(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Alternatives_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_2_3_0()); }
(rule__ChannelDescription__TypeAssignment_2_3_0)
{ after(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_2_3_0()); }
)

    |(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_2_3_1()); }
(rule__ChannelDescription__TypeAssignment_2_3_1)
{ after(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getGroup_0()); }
(rule__Sensor__Group_0__0)
{ after(grammarAccess.getSensorAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSensorAccess().getGroup_1()); }
(rule__Sensor__Group_1__0)
{ after(grammarAccess.getSensorAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Alternatives_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getTypeAssignment_0_2_0()); }
(rule__Sensor__TypeAssignment_0_2_0)
{ after(grammarAccess.getSensorAccess().getTypeAssignment_0_2_0()); }
)

    |(
{ before(grammarAccess.getSensorAccess().getTypeAssignment_0_2_1()); }
(rule__Sensor__TypeAssignment_0_2_1)
{ after(grammarAccess.getSensorAccess().getTypeAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Alternatives_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getTypeAssignment_1_2_0()); }
(rule__Sensor__TypeAssignment_1_2_0)
{ after(grammarAccess.getSensorAccess().getTypeAssignment_1_2_0()); }
)

    |(
{ before(grammarAccess.getSensorAccess().getTypeAssignment_1_2_1()); }
(rule__Sensor__TypeAssignment_1_2_1)
{ after(grammarAccess.getSensorAccess().getTypeAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Program__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getModuleAssignment_0()); }
(rule__Program__ModuleAssignment_0)
{ after(grammarAccess.getProgramAccess().getModuleAssignment_0()); }
)

	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getModuleAssignment_1()); }
(rule__Program__ModuleAssignment_1)*
{ after(grammarAccess.getProgramAccess().getModuleAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleKeyword_0()); }

	'module' 

{ after(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
)

	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAssignment_1()); }
(rule__Module__NameAssignment_1)
{ after(grammarAccess.getModuleAccess().getNameAssignment_1()); }
)

	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getModuleAccess().getColonKeyword_2()); }
)

	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModIntAssignment_3()); }
(rule__Module__ModIntAssignment_3)?
{ after(grammarAccess.getModuleAccess().getModIntAssignment_3()); }
)

	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModBodyAssignment_4()); }
(rule__Module__ModBodyAssignment_4)
{ after(grammarAccess.getModuleAccess().getModBodyAssignment_4()); }
)

	rule__Module__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getEndModuleParserRuleCall_5()); }
	ruleEndModule
{ after(grammarAccess.getModuleAccess().getEndModuleParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EndModule__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndModuleAccess().getEndKeyword_0_0()); }

	'end' 

{ after(grammarAccess.getEndModuleAccess().getEndKeyword_0_0()); }
)

	rule__EndModule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EndModule__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndModuleAccess().getModuleKeyword_0_1()); }

	'module' 

{ after(grammarAccess.getEndModuleAccess().getModuleKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDecl__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getInputAction_0_0()); }
(

)
{ after(grammarAccess.getSignalDeclAccess().getInputAction_0_0()); }
)

	rule__SignalDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getInputKeyword_0_1()); }

	'input' 

{ after(grammarAccess.getSignalDeclAccess().getInputKeyword_0_1()); }
)

	rule__SignalDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalAssignment_0_2()); }
(rule__SignalDecl__SignalAssignment_0_2)
{ after(grammarAccess.getSignalDeclAccess().getSignalAssignment_0_2()); }
)

	rule__SignalDecl__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getGroup_0_3()); }
(rule__SignalDecl__Group_0_3__0)*
{ after(grammarAccess.getSignalDeclAccess().getGroup_0_3()); }
)

	rule__SignalDecl__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSemicolonKeyword_0_4()); }

	';' 

{ after(grammarAccess.getSignalDeclAccess().getSemicolonKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SignalDecl__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getCommaKeyword_0_3_0()); }

	',' 

{ after(grammarAccess.getSignalDeclAccess().getCommaKeyword_0_3_0()); }
)

	rule__SignalDecl__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalAssignment_0_3_1()); }
(rule__SignalDecl__SignalAssignment_0_3_1)
{ after(grammarAccess.getSignalDeclAccess().getSignalAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getOutputAction_1_0()); }
(

)
{ after(grammarAccess.getSignalDeclAccess().getOutputAction_1_0()); }
)

	rule__SignalDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getOutputKeyword_1_1()); }

	'output' 

{ after(grammarAccess.getSignalDeclAccess().getOutputKeyword_1_1()); }
)

	rule__SignalDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalAssignment_1_2()); }
(rule__SignalDecl__SignalAssignment_1_2)
{ after(grammarAccess.getSignalDeclAccess().getSignalAssignment_1_2()); }
)

	rule__SignalDecl__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getGroup_1_3()); }
(rule__SignalDecl__Group_1_3__0)*
{ after(grammarAccess.getSignalDeclAccess().getGroup_1_3()); }
)

	rule__SignalDecl__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSemicolonKeyword_1_4()); }

	';' 

{ after(grammarAccess.getSignalDeclAccess().getSemicolonKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SignalDecl__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getSignalDeclAccess().getCommaKeyword_1_3_0()); }
)

	rule__SignalDecl__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalAssignment_1_3_1()); }
(rule__SignalDecl__SignalAssignment_1_3_1)
{ after(grammarAccess.getSignalDeclAccess().getSignalAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getInputOutputAction_2_0()); }
(

)
{ after(grammarAccess.getSignalDeclAccess().getInputOutputAction_2_0()); }
)

	rule__SignalDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getInputoutputKeyword_2_1()); }

	'inputoutput' 

{ after(grammarAccess.getSignalDeclAccess().getInputoutputKeyword_2_1()); }
)

	rule__SignalDecl__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalAssignment_2_2()); }
(rule__SignalDecl__SignalAssignment_2_2)
{ after(grammarAccess.getSignalDeclAccess().getSignalAssignment_2_2()); }
)

	rule__SignalDecl__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getGroup_2_3()); }
(rule__SignalDecl__Group_2_3__0)*
{ after(grammarAccess.getSignalDeclAccess().getGroup_2_3()); }
)

	rule__SignalDecl__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSemicolonKeyword_2_4()); }

	';' 

{ after(grammarAccess.getSignalDeclAccess().getSemicolonKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SignalDecl__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getCommaKeyword_2_3_0()); }

	',' 

{ after(grammarAccess.getSignalDeclAccess().getCommaKeyword_2_3_0()); }
)

	rule__SignalDecl__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalAssignment_2_3_1()); }
(rule__SignalDecl__SignalAssignment_2_3_1)
{ after(grammarAccess.getSignalDeclAccess().getSignalAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getReturnAction_3_0()); }
(

)
{ after(grammarAccess.getSignalDeclAccess().getReturnAction_3_0()); }
)

	rule__SignalDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getReturnKeyword_3_1()); }

	'return' 

{ after(grammarAccess.getSignalDeclAccess().getReturnKeyword_3_1()); }
)

	rule__SignalDecl__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalAssignment_3_2()); }
(rule__SignalDecl__SignalAssignment_3_2)
{ after(grammarAccess.getSignalDeclAccess().getSignalAssignment_3_2()); }
)

	rule__SignalDecl__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getGroup_3_3()); }
(rule__SignalDecl__Group_3_3__0)*
{ after(grammarAccess.getSignalDeclAccess().getGroup_3_3()); }
)

	rule__SignalDecl__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSemicolonKeyword_3_4()); }

	';' 

{ after(grammarAccess.getSignalDeclAccess().getSemicolonKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__SignalDecl__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getCommaKeyword_3_3_0()); }

	',' 

{ after(grammarAccess.getSignalDeclAccess().getCommaKeyword_3_3_0()); }
)

	rule__SignalDecl__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalDecl__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalAssignment_3_3_1()); }
(rule__SignalDecl__SignalAssignment_3_3_1)
{ after(grammarAccess.getSignalDeclAccess().getSignalAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SensorDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorKeyword_0()); }

	'sensor' 

{ after(grammarAccess.getSensorDeclAccess().getSensorKeyword_0()); }
)

	rule__SensorDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorAssignment_1()); }
(rule__SensorDecl__SensorAssignment_1)
{ after(grammarAccess.getSensorDeclAccess().getSensorAssignment_1()); }
)

	rule__SensorDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getGroup_2()); }
(rule__SensorDecl__Group_2__0)*
{ after(grammarAccess.getSensorDeclAccess().getGroup_2()); }
)

	rule__SensorDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getSensorDeclAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SensorDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getSensorDeclAccess().getCommaKeyword_2_0()); }
)

	rule__SensorDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorAssignment_2_1()); }
(rule__SensorDecl__SensorAssignment_2_1)
{ after(grammarAccess.getSensorDeclAccess().getSensorAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationAction_0()); }
(

)
{ after(grammarAccess.getRelationDeclAccess().getRelationAction_0()); }
)

	rule__RelationDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationKeyword_1()); }

	'relation' 

{ after(grammarAccess.getRelationDeclAccess().getRelationKeyword_1()); }
)

	rule__RelationDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationAssignment_2()); }
(rule__RelationDecl__RelationAssignment_2)
{ after(grammarAccess.getRelationDeclAccess().getRelationAssignment_2()); }
)

	rule__RelationDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getGroup_3()); }
(rule__RelationDecl__Group_3__0)*
{ after(grammarAccess.getRelationDeclAccess().getGroup_3()); }
)

	rule__RelationDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getRelationDeclAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RelationDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getRelationDeclAccess().getCommaKeyword_3_0()); }
)

	rule__RelationDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationAssignment_3_1()); }
(rule__RelationDecl__RelationAssignment_3_1)
{ after(grammarAccess.getRelationDeclAccess().getRelationAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationImplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getFirstAssignment_0()); }
(rule__RelationImplication__FirstAssignment_0)
{ after(grammarAccess.getRelationImplicationAccess().getFirstAssignment_0()); }
)

	rule__RelationImplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationImplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getTypeAssignment_1()); }
(rule__RelationImplication__TypeAssignment_1)
{ after(grammarAccess.getRelationImplicationAccess().getTypeAssignment_1()); }
)

	rule__RelationImplication__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationImplication__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getSecondAssignment_2()); }
(rule__RelationImplication__SecondAssignment_2)
{ after(grammarAccess.getRelationImplicationAccess().getSecondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationIncompatibility__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_0()); }
(rule__RelationIncompatibility__IncompAssignment_0)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_0()); }
)

	rule__RelationIncompatibility__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getTypeAssignment_1()); }
(rule__RelationIncompatibility__TypeAssignment_1)
{ after(grammarAccess.getRelationIncompatibilityAccess().getTypeAssignment_1()); }
)

	rule__RelationIncompatibility__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_2()); }
(rule__RelationIncompatibility__IncompAssignment_2)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_2()); }
)

	rule__RelationIncompatibility__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getGroup_3()); }
(rule__RelationIncompatibility__Group_3__0)*
{ after(grammarAccess.getRelationIncompatibilityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RelationIncompatibility__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getNumberSignKeyword_3_0()); }

	'#' 

{ after(grammarAccess.getRelationIncompatibilityAccess().getNumberSignKeyword_3_0()); }
)

	rule__RelationIncompatibility__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_3_1()); }
(rule__RelationIncompatibility__IncompAssignment_3_1)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getTypeDeclAccess().getTypeKeyword_0()); }
)

	rule__TypeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypeAssignment_1()); }
(rule__TypeDecl__TypeAssignment_1)
{ after(grammarAccess.getTypeDeclAccess().getTypeAssignment_1()); }
)

	rule__TypeDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getGroup_2()); }
(rule__TypeDecl__Group_2__0)*
{ after(grammarAccess.getTypeDeclAccess().getGroup_2()); }
)

	rule__TypeDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTypeDeclAccess().getCommaKeyword_2_0()); }
)

	rule__TypeDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypeAssignment_2_1()); }
(rule__TypeDecl__TypeAssignment_2_1)
{ after(grammarAccess.getTypeDeclAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclAccess().getConstantKeyword_0()); }

	'constant' 

{ after(grammarAccess.getConstantDeclAccess().getConstantKeyword_0()); }
)

	rule__ConstantDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclAccess().getConstantAssignment_1()); }
(rule__ConstantDecl__ConstantAssignment_1)
{ after(grammarAccess.getConstantDeclAccess().getConstantAssignment_1()); }
)

	rule__ConstantDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclAccess().getGroup_2()); }
(rule__ConstantDecl__Group_2__0)*
{ after(grammarAccess.getConstantDeclAccess().getGroup_2()); }
)

	rule__ConstantDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getConstantDeclAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstantDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getConstantDeclAccess().getCommaKeyword_2_0()); }
)

	rule__ConstantDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclAccess().getConstantAssignment_2_1()); }
(rule__ConstantDecl__ConstantAssignment_2_1)
{ after(grammarAccess.getConstantDeclAccess().getConstantAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OneTypeConstantDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getConstantAssignment_0()); }
(rule__OneTypeConstantDecl__ConstantAssignment_0)
{ after(grammarAccess.getOneTypeConstantDeclAccess().getConstantAssignment_0()); }
)

	rule__OneTypeConstantDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getGroup_1()); }
(rule__OneTypeConstantDecl__Group_1__0)*
{ after(grammarAccess.getOneTypeConstantDeclAccess().getGroup_1()); }
)

	rule__OneTypeConstantDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getOneTypeConstantDeclAccess().getColonKeyword_2()); }
)

	rule__OneTypeConstantDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getAlternatives_3()); }
(rule__OneTypeConstantDecl__Alternatives_3)
{ after(grammarAccess.getOneTypeConstantDeclAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OneTypeConstantDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getOneTypeConstantDeclAccess().getCommaKeyword_1_0()); }
)

	rule__OneTypeConstantDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getConstantAssignment_1_1()); }
(rule__OneTypeConstantDecl__ConstantAssignment_1_1)
{ after(grammarAccess.getOneTypeConstantDeclAccess().getConstantAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameAssignment_0()); }
(rule__Constant__NameAssignment_0)
{ after(grammarAccess.getConstantAccess().getNameAssignment_0()); }
)

	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getGroup_1()); }
(rule__Constant__Group_1__0)?
{ after(grammarAccess.getConstantAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getConstantAccess().getEqualsSignKeyword_1_0()); }
)

	rule__Constant__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueAssignment_1_1()); }
(rule__Constant__ValueAssignment_1_1)
{ after(grammarAccess.getConstantAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantValueAccess().getHyphenMinusKeyword_1_0()); }
(
	'-' 
)?
{ after(grammarAccess.getConstantValueAccess().getHyphenMinusKeyword_1_0()); }
)

	rule__ConstantValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantValueAccess().getINTTerminalRuleCall_1_1()); }
	RULE_INT
{ after(grammarAccess.getConstantValueAccess().getINTTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionDeclAccess().getFunctionKeyword_0()); }
)

	rule__FunctionDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_1()); }
(rule__FunctionDecl__FunctionAssignment_1)
{ after(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_1()); }
)

	rule__FunctionDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getGroup_2()); }
(rule__FunctionDecl__Group_2__0)*
{ after(grammarAccess.getFunctionDeclAccess().getGroup_2()); }
)

	rule__FunctionDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getFunctionDeclAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getFunctionDeclAccess().getCommaKeyword_2_0()); }
)

	rule__FunctionDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_2_1()); }
(rule__FunctionDecl__FunctionAssignment_2_1)
{ after(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
(rule__Function__NameAssignment_0)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
)

	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }
)

	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_2()); }
(rule__Function__Group_2__0)?
{ after(grammarAccess.getFunctionAccess().getGroup_2()); }
)

	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }
)

	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getFunctionAccess().getColonKeyword_4()); }
)

	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getAlternatives_5()); }
(rule__Function__Alternatives_5)
{ after(grammarAccess.getFunctionAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Function__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListAssignment_2_0()); }
(rule__Function__IdListAssignment_2_0)
{ after(grammarAccess.getFunctionAccess().getIdListAssignment_2_0()); }
)

	rule__Function__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_2_1()); }
(rule__Function__Group_2_1__0)*
{ after(grammarAccess.getFunctionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getFunctionAccess().getCommaKeyword_2_1_0()); }
)

	rule__Function__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListAssignment_2_1_1()); }
(rule__Function__IdListAssignment_2_1_1)
{ after(grammarAccess.getFunctionAccess().getIdListAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcedureDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProcedureKeyword_0()); }

	'procedure' 

{ after(grammarAccess.getProcedureDeclAccess().getProcedureKeyword_0()); }
)

	rule__ProcedureDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProcedureAssignment_1()); }
(rule__ProcedureDecl__ProcedureAssignment_1)
{ after(grammarAccess.getProcedureDeclAccess().getProcedureAssignment_1()); }
)

	rule__ProcedureDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getGroup_2()); }
(rule__ProcedureDecl__Group_2__0)*
{ after(grammarAccess.getProcedureDeclAccess().getGroup_2()); }
)

	rule__ProcedureDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getProcedureDeclAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ProcedureDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getProcedureDeclAccess().getCommaKeyword_2_0()); }
)

	rule__ProcedureDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProcedureAssignment_2_1()); }
(rule__ProcedureDecl__ProcedureAssignment_2_1)
{ after(grammarAccess.getProcedureDeclAccess().getProcedureAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getNameAssignment_0()); }
(rule__Procedure__NameAssignment_0)
{ after(grammarAccess.getProcedureAccess().getNameAssignment_0()); }
)

	rule__Procedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_1()); }
)

	rule__Procedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_2()); }
(rule__Procedure__Group_2__0)?
{ after(grammarAccess.getProcedureAccess().getGroup_2()); }
)

	rule__Procedure__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_3()); }
)

	rule__Procedure__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_4()); }
)

	rule__Procedure__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_5()); }
(rule__Procedure__Group_5__0)?
{ after(grammarAccess.getProcedureAccess().getGroup_5()); }
)

	rule__Procedure__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Procedure__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListAssignment_2_0()); }
(rule__Procedure__IdListAssignment_2_0)
{ after(grammarAccess.getProcedureAccess().getIdListAssignment_2_0()); }
)

	rule__Procedure__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_2_1()); }
(rule__Procedure__Group_2_1__0)*
{ after(grammarAccess.getProcedureAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getProcedureAccess().getCommaKeyword_2_1_0()); }
)

	rule__Procedure__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListAssignment_2_1_1()); }
(rule__Procedure__IdListAssignment_2_1_1)
{ after(grammarAccess.getProcedureAccess().getIdListAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListAssignment_5_0()); }
(rule__Procedure__IdListAssignment_5_0)
{ after(grammarAccess.getProcedureAccess().getIdListAssignment_5_0()); }
)

	rule__Procedure__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_5_1()); }
(rule__Procedure__Group_5_1__0)*
{ after(grammarAccess.getProcedureAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getProcedureAccess().getCommaKeyword_5_1_0()); }
)

	rule__Procedure__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListAssignment_5_1_1()); }
(rule__Procedure__IdListAssignment_5_1_1)
{ after(grammarAccess.getProcedureAccess().getIdListAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSequenceParserRuleCall_0()); }
	ruleSequence
{ after(grammarAccess.getStatementAccess().getSequenceParserRuleCall_0()); }
)

	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_1()); }
(rule__Statement__Group_1__0)*
{ after(grammarAccess.getStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getParallelLeftAction_1_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getParallelLeftAction_1_0()); }
)

	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVerticalLineVerticalLineKeyword_1_1()); }

	'||' 

{ after(grammarAccess.getStatementAccess().getVerticalLineVerticalLineKeyword_1_1()); }
)

	rule__Statement__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRightAssignment_1_2()); }
(rule__Statement__RightAssignment_1_2)
{ after(grammarAccess.getStatementAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getAtomicStatementParserRuleCall_0()); }
	ruleAtomicStatement
{ after(grammarAccess.getSequenceAccess().getAtomicStatementParserRuleCall_0()); }
)

	rule__Sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getGroup_1()); }
(rule__Sequence__Group_1__0)*
{ after(grammarAccess.getSequenceAccess().getGroup_1()); }
)

	rule__Sequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getSequenceAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sequence__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getSequenceLeftAction_1_0()); }
(

)
{ after(grammarAccess.getSequenceAccess().getSequenceLeftAction_1_0()); }
)

	rule__Sequence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getSequenceAccess().getSemicolonKeyword_1_1()); }
)

	rule__Sequence__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getRightAssignment_1_2()); }
(rule__Sequence__RightAssignment_1_2)
{ after(grammarAccess.getSequenceAccess().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getBlockAccess().getLeftSquareBracketKeyword_0()); }
)

	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementAssignment_1()); }
(rule__Block__StatementAssignment_1)
{ after(grammarAccess.getBlockAccess().getStatementAssignment_1()); }
)

	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getBlockAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableAssignment_0()); }
(rule__Assignment__VariableAssignment_0)
{ after(grammarAccess.getAssignmentAccess().getVariableAssignment_0()); }
)

	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1()); }
)

	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExprAssignment_2()); }
(rule__Assignment__ExprAssignment_2)
{ after(grammarAccess.getAssignmentAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Abort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAbortKeyword_0()); }

	'abort' 

{ after(grammarAccess.getAbortAccess().getAbortKeyword_0()); }
)

	rule__Abort__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getStatementAssignment_1()); }
(rule__Abort__StatementAssignment_1)
{ after(grammarAccess.getAbortAccess().getStatementAssignment_1()); }
)

	rule__Abort__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getWhenKeyword_2()); }

	'when' 

{ after(grammarAccess.getAbortAccess().getWhenKeyword_2()); }
)

	rule__Abort__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getBodyAssignment_3()); }
(rule__Abort__BodyAssignment_3)
{ after(grammarAccess.getAbortAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AbortEnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortEndAccess().getEndKeyword_0()); }

	'end' 

{ after(grammarAccess.getAbortEndAccess().getEndKeyword_0()); }
)

	rule__AbortEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AbortEnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortEndAccess().getAbortKeyword_1()); }
(
	'abort' 
)?
{ after(grammarAccess.getAbortEndAccess().getAbortKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbortInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getDelayAssignment_0()); }
(rule__AbortInstance__DelayAssignment_0)
{ after(grammarAccess.getAbortInstanceAccess().getDelayAssignment_0()); }
)

	rule__AbortInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AbortInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getGroup_1()); }
(rule__AbortInstance__Group_1__0)?
{ after(grammarAccess.getAbortInstanceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbortInstance__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getDoKeyword_1_0()); }

	'do' 

{ after(grammarAccess.getAbortInstanceAccess().getDoKeyword_1_0()); }
)

	rule__AbortInstance__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AbortInstance__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getStatementAssignment_1_1()); }
(rule__AbortInstance__StatementAssignment_1_1)
{ after(grammarAccess.getAbortInstanceAccess().getStatementAssignment_1_1()); }
)

	rule__AbortInstance__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AbortInstance__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getEndAssignment_1_2()); }
(rule__AbortInstance__EndAssignment_1_2)
{ after(grammarAccess.getAbortInstanceAccess().getEndAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AbortCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getCasesAssignment_0()); }
(rule__AbortCase__CasesAssignment_0)
{ after(grammarAccess.getAbortCaseAccess().getCasesAssignment_0()); }
)

	rule__AbortCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AbortCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getCasesAssignment_1()); }
(rule__AbortCase__CasesAssignment_1)*
{ after(grammarAccess.getAbortCaseAccess().getCasesAssignment_1()); }
)

	rule__AbortCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AbortCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getEndAssignment_2()); }
(rule__AbortCase__EndAssignment_2)
{ after(grammarAccess.getAbortCaseAccess().getEndAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AbortCaseSingle__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getAbortCaseSingleAccess().getCaseKeyword_0()); }
)

	rule__AbortCaseSingle__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AbortCaseSingle__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getDelayAssignment_1()); }
(rule__AbortCaseSingle__DelayAssignment_1)
{ after(grammarAccess.getAbortCaseSingleAccess().getDelayAssignment_1()); }
)

	rule__AbortCaseSingle__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AbortCaseSingle__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getGroup_2()); }
(rule__AbortCaseSingle__Group_2__0)?
{ after(grammarAccess.getAbortCaseSingleAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AbortCaseSingle__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getDoKeyword_2_0()); }

	'do' 

{ after(grammarAccess.getAbortCaseSingleAccess().getDoKeyword_2_0()); }
)

	rule__AbortCaseSingle__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AbortCaseSingle__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getStatementAssignment_2_1()); }
(rule__AbortCaseSingle__StatementAssignment_2_1)
{ after(grammarAccess.getAbortCaseSingleAccess().getStatementAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Await__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getAwaitKeyword_0()); }

	'await' 

{ after(grammarAccess.getAwaitAccess().getAwaitKeyword_0()); }
)

	rule__Await__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getBodyAssignment_1()); }
(rule__Await__BodyAssignment_1)
{ after(grammarAccess.getAwaitAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AwaitEnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitEndAccess().getEndKeyword_0()); }

	'end' 

{ after(grammarAccess.getAwaitEndAccess().getEndKeyword_0()); }
)

	rule__AwaitEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitEnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitEndAccess().getAwaitKeyword_1()); }
(
	'await' 
)?
{ after(grammarAccess.getAwaitEndAccess().getAwaitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AwaitInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getDelayExprParserRuleCall_0()); }
	ruleDelayExpr
{ after(grammarAccess.getAwaitInstanceAccess().getDelayExprParserRuleCall_0()); }
)

	rule__AwaitInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getGroup_1()); }
(rule__AwaitInstance__Group_1__0)?
{ after(grammarAccess.getAwaitInstanceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AwaitInstance__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getDoKeyword_1_0()); }

	'do' 

{ after(grammarAccess.getAwaitInstanceAccess().getDoKeyword_1_0()); }
)

	rule__AwaitInstance__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitInstance__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getStatementAssignment_1_1()); }
(rule__AwaitInstance__StatementAssignment_1_1)
{ after(grammarAccess.getAwaitInstanceAccess().getStatementAssignment_1_1()); }
)

	rule__AwaitInstance__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitInstance__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getEndAssignment_1_2()); }
(rule__AwaitInstance__EndAssignment_1_2)
{ after(grammarAccess.getAwaitInstanceAccess().getEndAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AwaitCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getCasesAssignment_0()); }
(rule__AwaitCase__CasesAssignment_0)
{ after(grammarAccess.getAwaitCaseAccess().getCasesAssignment_0()); }
)

	rule__AwaitCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getCasesAssignment_1()); }
(rule__AwaitCase__CasesAssignment_1)*
{ after(grammarAccess.getAwaitCaseAccess().getCasesAssignment_1()); }
)

	rule__AwaitCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getEndAssignment_2()); }
(rule__AwaitCase__EndAssignment_2)
{ after(grammarAccess.getAwaitCaseAccess().getEndAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Do__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getDoAccess().getDoKeyword_0()); }
)

	rule__Do__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getStatementAssignment_1()); }
(rule__Do__StatementAssignment_1)
{ after(grammarAccess.getDoAccess().getStatementAssignment_1()); }
)

	rule__Do__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getAlternatives_2()); }
(rule__Do__Alternatives_2)
{ after(grammarAccess.getDoAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DoUpto__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoUptoAccess().getUptoKeyword_0()); }

	'upto' 

{ after(grammarAccess.getDoUptoAccess().getUptoKeyword_0()); }
)

	rule__DoUpto__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DoUpto__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoUptoAccess().getExprAssignment_1()); }
(rule__DoUpto__ExprAssignment_1)
{ after(grammarAccess.getDoUptoAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DoWatching__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingAccess().getWatchingKeyword_0()); }

	'watching' 

{ after(grammarAccess.getDoWatchingAccess().getWatchingKeyword_0()); }
)

	rule__DoWatching__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DoWatching__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingAccess().getDelayAssignment_1()); }
(rule__DoWatching__DelayAssignment_1)
{ after(grammarAccess.getDoWatchingAccess().getDelayAssignment_1()); }
)

	rule__DoWatching__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DoWatching__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingAccess().getEndAssignment_2()); }
(rule__DoWatching__EndAssignment_2)?
{ after(grammarAccess.getDoWatchingAccess().getEndAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DoWatchingEnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingEndAccess().getTimeoutKeyword_0()); }

	'timeout' 

{ after(grammarAccess.getDoWatchingEndAccess().getTimeoutKeyword_0()); }
)

	rule__DoWatchingEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DoWatchingEnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingEndAccess().getStatementAssignment_1()); }
(rule__DoWatchingEnd__StatementAssignment_1)
{ after(grammarAccess.getDoWatchingEndAccess().getStatementAssignment_1()); }
)

	rule__DoWatchingEnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DoWatchingEnd__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingEndAccess().getEndKeyword_2()); }

	'end' 

{ after(grammarAccess.getDoWatchingEndAccess().getEndKeyword_2()); }
)

	rule__DoWatchingEnd__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__DoWatchingEnd__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingEndAccess().getTimeoutKeyword_3()); }
(
	'timeout' 
)?
{ after(grammarAccess.getDoWatchingEndAccess().getTimeoutKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Emit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getEmitKeyword_0()); }

	'emit' 

{ after(grammarAccess.getEmitAccess().getEmitKeyword_0()); }
)

	rule__Emit__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getAlternatives_1()); }
(rule__Emit__Alternatives_1)
{ after(grammarAccess.getEmitAccess().getAlternatives_1()); }
)

	rule__Emit__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getGroup_2()); }
(rule__Emit__Group_2__0)?
{ after(grammarAccess.getEmitAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Emit__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getEmitAccess().getLeftParenthesisKeyword_2_0()); }
)

	rule__Emit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getExprAssignment_2_1()); }
(rule__Emit__ExprAssignment_2_1)
{ after(grammarAccess.getEmitAccess().getExprAssignment_2_1()); }
)

	rule__Emit__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getEmitAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EveryDo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getEveryKeyword_0()); }

	'every' 

{ after(grammarAccess.getEveryDoAccess().getEveryKeyword_0()); }
)

	rule__EveryDo__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getDelayAssignment_1()); }
(rule__EveryDo__DelayAssignment_1)
{ after(grammarAccess.getEveryDoAccess().getDelayAssignment_1()); }
)

	rule__EveryDo__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getEveryDoAccess().getDoKeyword_2()); }
)

	rule__EveryDo__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getStatementAssignment_3()); }
(rule__EveryDo__StatementAssignment_3)
{ after(grammarAccess.getEveryDoAccess().getStatementAssignment_3()); }
)

	rule__EveryDo__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getEveryDoAccess().getEndKeyword_4()); }
)

	rule__EveryDo__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getEveryKeyword_5()); }
(
	'every' 
)?
{ after(grammarAccess.getEveryDoAccess().getEveryKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Exit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getExitKeyword_0()); }

	'exit' 

{ after(grammarAccess.getExitAccess().getExitKeyword_0()); }
)

	rule__Exit__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getTrapAssignment_1()); }
(rule__Exit__TrapAssignment_1)
{ after(grammarAccess.getExitAccess().getTrapAssignment_1()); }
)

	rule__Exit__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getGroup_2()); }
(rule__Exit__Group_2__0)?
{ after(grammarAccess.getExitAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Exit__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getExitAccess().getLeftParenthesisKeyword_2_0()); }
)

	rule__Exit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getDataExprAssignment_2_1()); }
(rule__Exit__DataExprAssignment_2_1)
{ after(grammarAccess.getExitAccess().getDataExprAssignment_2_1()); }
)

	rule__Exit__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getExitAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Halt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHaltAccess().getHaltKeyword_0()); }

	'halt' 

{ after(grammarAccess.getHaltAccess().getHaltKeyword_0()); }
)

	rule__Halt__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Halt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHaltAccess().getHaltAction_1()); }
(

)
{ after(grammarAccess.getHaltAccess().getHaltAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfTest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfTestAccess().getIfKeyword_0()); }
)

	rule__IfTest__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getExprAssignment_1()); }
(rule__IfTest__ExprAssignment_1)
{ after(grammarAccess.getIfTestAccess().getExprAssignment_1()); }
)

	rule__IfTest__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenAssignment_2()); }
(rule__IfTest__ThenAssignment_2)?
{ after(grammarAccess.getIfTestAccess().getThenAssignment_2()); }
)

	rule__IfTest__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseIfAssignment_3()); }
(rule__IfTest__ElseIfAssignment_3)?
{ after(grammarAccess.getIfTestAccess().getElseIfAssignment_3()); }
)

	rule__IfTest__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseAssignment_4()); }
(rule__IfTest__ElseAssignment_4)?
{ after(grammarAccess.getIfTestAccess().getElseAssignment_4()); }
)

	rule__IfTest__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getIfTestAccess().getEndKeyword_5()); }
)

	rule__IfTest__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getIfKeyword_6()); }
(
	'if' 
)?
{ after(grammarAccess.getIfTestAccess().getIfKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ElsIfPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfPartAccess().getElsifAssignment_0()); }
(rule__ElsIfPart__ElsifAssignment_0)
{ after(grammarAccess.getElsIfPartAccess().getElsifAssignment_0()); }
)

	rule__ElsIfPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ElsIfPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfPartAccess().getElsifAssignment_1()); }
(rule__ElsIfPart__ElsifAssignment_1)*
{ after(grammarAccess.getElsIfPartAccess().getElsifAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElsIf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getElsifKeyword_0()); }

	'elsif' 

{ after(grammarAccess.getElsIfAccess().getElsifKeyword_0()); }
)

	rule__ElsIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ElsIf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getExprAssignment_1()); }
(rule__ElsIf__ExprAssignment_1)
{ after(grammarAccess.getElsIfAccess().getExprAssignment_1()); }
)

	rule__ElsIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ElsIf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getThenAssignment_2()); }
(rule__ElsIf__ThenAssignment_2)?
{ after(grammarAccess.getElsIfAccess().getThenAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ThenPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenPartAccess().getThenKeyword_0()); }

	'then' 

{ after(grammarAccess.getThenPartAccess().getThenKeyword_0()); }
)

	rule__ThenPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ThenPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenPartAccess().getStatementAssignment_1()); }
(rule__ThenPart__StatementAssignment_1)
{ after(grammarAccess.getThenPartAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElsePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsePartAccess().getElseKeyword_0()); }

	'else' 

{ after(grammarAccess.getElsePartAccess().getElseKeyword_0()); }
)

	rule__ElsePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ElsePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsePartAccess().getStatementAssignment_1()); }
(rule__ElsePart__StatementAssignment_1)
{ after(grammarAccess.getElsePartAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Loop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getLoopKeyword_0()); }

	'loop' 

{ after(grammarAccess.getLoopAccess().getLoopKeyword_0()); }
)

	rule__Loop__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getBodyAssignment_1()); }
(rule__Loop__BodyAssignment_1)
{ after(grammarAccess.getLoopAccess().getBodyAssignment_1()); }
)

	rule__Loop__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getAlternatives_2()); }
(rule__Loop__Alternatives_2)
{ after(grammarAccess.getLoopAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EndLoop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndLoopAccess().getEndKeyword_0()); }

	'end' 

{ after(grammarAccess.getEndLoopAccess().getEndKeyword_0()); }
)

	rule__EndLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__EndLoop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndLoopAccess().getLoopKeyword_1()); }
(
	'loop' 
)?
{ after(grammarAccess.getEndLoopAccess().getLoopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LoopEach__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopEachAccess().getEachKeyword_0()); }

	'each' 

{ after(grammarAccess.getLoopEachAccess().getEachKeyword_0()); }
)

	rule__LoopEach__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LoopEach__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopEachAccess().getLoopDelayParserRuleCall_1()); }
	ruleLoopDelay
{ after(grammarAccess.getLoopEachAccess().getLoopDelayParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Nothing__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNothingAccess().getNothingKeyword_0()); }

	'nothing' 

{ after(grammarAccess.getNothingAccess().getNothingKeyword_0()); }
)

	rule__Nothing__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Nothing__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNothingAccess().getNothingAction_1()); }
(

)
{ after(grammarAccess.getNothingAccess().getNothingAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPauseAccess().getPauseKeyword_0()); }

	'pause' 

{ after(grammarAccess.getPauseAccess().getPauseKeyword_0()); }
)

	rule__Pause__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Pause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPauseAccess().getPauseAction_1()); }
(

)
{ after(grammarAccess.getPauseAccess().getPauseAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Present__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getPresentKeyword_0()); }

	'present' 

{ after(grammarAccess.getPresentAccess().getPresentKeyword_0()); }
)

	rule__Present__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getBodyAssignment_1()); }
(rule__Present__BodyAssignment_1)
{ after(grammarAccess.getPresentAccess().getBodyAssignment_1()); }
)

	rule__Present__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElsePartAssignment_2()); }
(rule__Present__ElsePartAssignment_2)?
{ after(grammarAccess.getPresentAccess().getElsePartAssignment_2()); }
)

	rule__Present__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getEndKeyword_3()); }

	'end' 

{ after(grammarAccess.getPresentAccess().getEndKeyword_3()); }
)

	rule__Present__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getPresentKeyword_4()); }
(
	'present' 
)?
{ after(grammarAccess.getPresentAccess().getPresentKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PresentEventBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventBodyAccess().getEventAssignment_0()); }
(rule__PresentEventBody__EventAssignment_0)
{ after(grammarAccess.getPresentEventBodyAccess().getEventAssignment_0()); }
)

	rule__PresentEventBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PresentEventBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventBodyAccess().getThenPartAssignment_1()); }
(rule__PresentEventBody__ThenPartAssignment_1)?
{ after(grammarAccess.getPresentEventBodyAccess().getThenPartAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PresentCaseList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseListAccess().getCaseAssignment_0()); }
(rule__PresentCaseList__CaseAssignment_0)
{ after(grammarAccess.getPresentCaseListAccess().getCaseAssignment_0()); }
)

	rule__PresentCaseList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCaseList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseListAccess().getCaseAssignment_1()); }
(rule__PresentCaseList__CaseAssignment_1)*
{ after(grammarAccess.getPresentCaseListAccess().getCaseAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PresentCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getPresentCaseAccess().getCaseKeyword_0()); }
)

	rule__PresentCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getEventAssignment_1()); }
(rule__PresentCase__EventAssignment_1)
{ after(grammarAccess.getPresentCaseAccess().getEventAssignment_1()); }
)

	rule__PresentCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getGroup_2()); }
(rule__PresentCase__Group_2__0)?
{ after(grammarAccess.getPresentCaseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PresentCase__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getDoKeyword_2_0()); }

	'do' 

{ after(grammarAccess.getPresentCaseAccess().getDoKeyword_2_0()); }
)

	rule__PresentCase__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getStatementAssignment_2_1()); }
(rule__PresentCase__StatementAssignment_2_1)
{ after(grammarAccess.getPresentCaseAccess().getStatementAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PresentEvent__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getPresentEventAccess().getLeftSquareBracketKeyword_1_0()); }
)

	rule__PresentEvent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__PresentEvent__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getExpressionAssignment_1_1()); }
(rule__PresentEvent__ExpressionAssignment_1_1)
{ after(grammarAccess.getPresentEventAccess().getExpressionAssignment_1_1()); }
)

	rule__PresentEvent__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__PresentEvent__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getPresentEventAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Repeat__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getPositiveAssignment_0()); }
(rule__Repeat__PositiveAssignment_0)?
{ after(grammarAccess.getRepeatAccess().getPositiveAssignment_0()); }
)

	rule__Repeat__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getRepeatKeyword_1()); }

	'repeat' 

{ after(grammarAccess.getRepeatAccess().getRepeatKeyword_1()); }
)

	rule__Repeat__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getDataExprAssignment_2()); }
(rule__Repeat__DataExprAssignment_2)
{ after(grammarAccess.getRepeatAccess().getDataExprAssignment_2()); }
)

	rule__Repeat__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getTimesKeyword_3()); }

	'times' 

{ after(grammarAccess.getRepeatAccess().getTimesKeyword_3()); }
)

	rule__Repeat__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getStatementAssignment_4()); }
(rule__Repeat__StatementAssignment_4)
{ after(grammarAccess.getRepeatAccess().getStatementAssignment_4()); }
)

	rule__Repeat__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getRepeatAccess().getEndKeyword_5()); }
)

	rule__Repeat__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getRepeatKeyword_6()); }
(
	'repeat' 
)?
{ after(grammarAccess.getRepeatAccess().getRepeatKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Run__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getRunKeyword_0_0()); }

	'run' 

{ after(grammarAccess.getRunAccess().getRunKeyword_0_0()); }
)

	rule__Run__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleAssignment_0_1()); }
(rule__Run__ModuleAssignment_0_1)
{ after(grammarAccess.getRunAccess().getModuleAssignment_0_1()); }
)

	rule__Run__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getGroup_0_2()); }
(rule__Run__Group_0_2__0)?
{ after(grammarAccess.getRunAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Run__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_0_2_0()); }

	'[' 

{ after(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_0_2_0()); }
)

	rule__Run__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListAssignment_0_2_1()); }
(rule__Run__ListAssignment_0_2_1)
{ after(grammarAccess.getRunAccess().getListAssignment_0_2_1()); }
)

	rule__Run__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getRightSquareBracketKeyword_0_2_2()); }

	']' 

{ after(grammarAccess.getRunAccess().getRightSquareBracketKeyword_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Run__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getCopymoduleKeyword_1_0()); }

	'copymodule' 

{ after(grammarAccess.getRunAccess().getCopymoduleKeyword_1_0()); }
)

	rule__Run__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleAssignment_1_1()); }
(rule__Run__ModuleAssignment_1_1)
{ after(grammarAccess.getRunAccess().getModuleAssignment_1_1()); }
)

	rule__Run__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getGroup_1_2()); }
(rule__Run__Group_1_2__0)?
{ after(grammarAccess.getRunAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Run__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_1_2_0()); }

	'[' 

{ after(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_1_2_0()); }
)

	rule__Run__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListAssignment_1_2_1()); }
(rule__Run__ListAssignment_1_2_1)
{ after(grammarAccess.getRunAccess().getListAssignment_1_2_1()); }
)

	rule__Run__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getRightSquareBracketKeyword_1_2_2()); }

	']' 

{ after(grammarAccess.getRunAccess().getRightSquareBracketKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModuleRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleAssignment_0()); }
(rule__ModuleRenaming__ModuleAssignment_0)
{ after(grammarAccess.getModuleRenamingAccess().getModuleAssignment_0()); }
)

	rule__ModuleRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getGroup_1()); }
(rule__ModuleRenaming__Group_1__0)?
{ after(grammarAccess.getModuleRenamingAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModuleRenaming__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getRenamedAssignment_1_0()); }
(rule__ModuleRenaming__RenamedAssignment_1_0)
{ after(grammarAccess.getModuleRenamingAccess().getRenamedAssignment_1_0()); }
)

	rule__ModuleRenaming__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleRenaming__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getNewNameAssignment_1_1()); }
(rule__ModuleRenaming__NewNameAssignment_1_1)
{ after(grammarAccess.getModuleRenamingAccess().getNewNameAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RenamingList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getListAssignment_0()); }
(rule__RenamingList__ListAssignment_0)
{ after(grammarAccess.getRenamingListAccess().getListAssignment_0()); }
)

	rule__RenamingList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RenamingList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getGroup_1()); }
(rule__RenamingList__Group_1__0)*
{ after(grammarAccess.getRenamingListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RenamingList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getRenamingListAccess().getSemicolonKeyword_1_0()); }
)

	rule__RenamingList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__RenamingList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getListAssignment_1_1()); }
(rule__RenamingList__ListAssignment_1_1)
{ after(grammarAccess.getRenamingListAccess().getListAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getTypeKeyword_0_0()); }

	'type' 

{ after(grammarAccess.getRenamingAccess().getTypeKeyword_0_0()); }
)

	rule__Renaming__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingAssignment_0_1()); }
(rule__Renaming__RenamingAssignment_0_1)
{ after(grammarAccess.getRenamingAccess().getRenamingAssignment_0_1()); }
)

	rule__Renaming__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_0_2()); }
(rule__Renaming__Group_0_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_0_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_0_2_0()); }
)

	rule__Renaming__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingAssignment_0_2_1()); }
(rule__Renaming__RenamingAssignment_0_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getConstantKeyword_1_0()); }

	'constant' 

{ after(grammarAccess.getRenamingAccess().getConstantKeyword_1_0()); }
)

	rule__Renaming__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingAssignment_1_1()); }
(rule__Renaming__RenamingAssignment_1_1)
{ after(grammarAccess.getRenamingAccess().getRenamingAssignment_1_1()); }
)

	rule__Renaming__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_1_2()); }
(rule__Renaming__Group_1_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_1_2_0()); }
)

	rule__Renaming__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingAssignment_1_2_1()); }
(rule__Renaming__RenamingAssignment_1_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getFunctionKeyword_2_0()); }

	'function' 

{ after(grammarAccess.getRenamingAccess().getFunctionKeyword_2_0()); }
)

	rule__Renaming__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingAssignment_2_1()); }
(rule__Renaming__RenamingAssignment_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingAssignment_2_1()); }
)

	rule__Renaming__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_2_2()); }
(rule__Renaming__Group_2_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_2_2_0()); }
)

	rule__Renaming__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingAssignment_2_2_1()); }
(rule__Renaming__RenamingAssignment_2_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getSignalKeyword_3_0()); }

	'signal' 

{ after(grammarAccess.getRenamingAccess().getSignalKeyword_3_0()); }
)

	rule__Renaming__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingAssignment_3_1()); }
(rule__Renaming__RenamingAssignment_3_1)
{ after(grammarAccess.getRenamingAccess().getRenamingAssignment_3_1()); }
)

	rule__Renaming__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_3_2()); }
(rule__Renaming__Group_3_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_3_2_0()); }
)

	rule__Renaming__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingAssignment_3_2_1()); }
(rule__Renaming__RenamingAssignment_3_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getNewNameAssignment_0()); }
(rule__TypeRenaming__NewNameAssignment_0)
{ after(grammarAccess.getTypeRenamingAccess().getNewNameAssignment_0()); }
)

	rule__TypeRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getTypeRenamingAccess().getSolidusKeyword_1()); }
)

	rule__TypeRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getOldNameAssignment_2()); }
(rule__TypeRenaming__OldNameAssignment_2)
{ after(grammarAccess.getTypeRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstantRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getValueAssignment_0()); }
(rule__ConstantRenaming__ValueAssignment_0)
{ after(grammarAccess.getConstantRenamingAccess().getValueAssignment_0()); }
)

	rule__ConstantRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getConstantRenamingAccess().getSolidusKeyword_1()); }
)

	rule__ConstantRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getNewNameAssignment_2()); }
(rule__ConstantRenaming__NewNameAssignment_2)
{ after(grammarAccess.getConstantRenamingAccess().getNewNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getNewNameAssignment_0()); }
(rule__FunctionRenaming__NewNameAssignment_0)
{ after(grammarAccess.getFunctionRenamingAccess().getNewNameAssignment_0()); }
)

	rule__FunctionRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getFunctionRenamingAccess().getSolidusKeyword_1()); }
)

	rule__FunctionRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getOldNameAssignment_2()); }
(rule__FunctionRenaming__OldNameAssignment_2)
{ after(grammarAccess.getFunctionRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__SignalRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getNewNameAssignment_0()); }
(rule__SignalRenaming__NewNameAssignment_0)
{ after(grammarAccess.getSignalRenamingAccess().getNewNameAssignment_0()); }
)

	rule__SignalRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getSignalRenamingAccess().getSolidusKeyword_1()); }
)

	rule__SignalRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SignalRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getOldNameAssignment_2()); }
(rule__SignalRenaming__OldNameAssignment_2)
{ after(grammarAccess.getSignalRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LocalSignalDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalKeyword_0()); }

	'signal' 

{ after(grammarAccess.getLocalSignalDeclAccess().getSignalKeyword_0()); }
)

	rule__LocalSignalDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalListAssignment_1()); }
(rule__LocalSignalDecl__SignalListAssignment_1)
{ after(grammarAccess.getLocalSignalDeclAccess().getSignalListAssignment_1()); }
)

	rule__LocalSignalDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getInKeyword_2()); }

	'in' 

{ after(grammarAccess.getLocalSignalDeclAccess().getInKeyword_2()); }
)

	rule__LocalSignalDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getStatementAssignment_3()); }
(rule__LocalSignalDecl__StatementAssignment_3)
{ after(grammarAccess.getLocalSignalDeclAccess().getStatementAssignment_3()); }
)

	rule__LocalSignalDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getLocalSignalDeclAccess().getEndKeyword_4()); }
)

	rule__LocalSignalDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalKeyword_5()); }
(
	'signal' 
)?
{ after(grammarAccess.getLocalSignalDeclAccess().getSignalKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LocalSignalList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getLocalSignalAction_0()); }
(

)
{ after(grammarAccess.getLocalSignalListAccess().getLocalSignalAction_0()); }
)

	rule__LocalSignalList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getSignalAssignment_1()); }
(rule__LocalSignalList__SignalAssignment_1)
{ after(grammarAccess.getLocalSignalListAccess().getSignalAssignment_1()); }
)

	rule__LocalSignalList__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getGroup_2()); }
(rule__LocalSignalList__Group_2__0)*
{ after(grammarAccess.getLocalSignalListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LocalSignalList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getLocalSignalListAccess().getCommaKeyword_2_0()); }
)

	rule__LocalSignalList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getSignalAssignment_2_1()); }
(rule__LocalSignalList__SignalAssignment_2_1)
{ after(grammarAccess.getLocalSignalListAccess().getSignalAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Suspend__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getSuspendKeyword_0()); }

	'suspend' 

{ after(grammarAccess.getSuspendAccess().getSuspendKeyword_0()); }
)

	rule__Suspend__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getStatementAssignment_1()); }
(rule__Suspend__StatementAssignment_1)
{ after(grammarAccess.getSuspendAccess().getStatementAssignment_1()); }
)

	rule__Suspend__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getWhenKeyword_2()); }

	'when' 

{ after(grammarAccess.getSuspendAccess().getWhenKeyword_2()); }
)

	rule__Suspend__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getDelayAssignment_3()); }
(rule__Suspend__DelayAssignment_3)
{ after(grammarAccess.getSuspendAccess().getDelayAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Sustain__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getSustainKeyword_0()); }

	'sustain' 

{ after(grammarAccess.getSustainAccess().getSustainKeyword_0()); }
)

	rule__Sustain__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getAlternatives_1()); }
(rule__Sustain__Alternatives_1)
{ after(grammarAccess.getSustainAccess().getAlternatives_1()); }
)

	rule__Sustain__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getGroup_2()); }
(rule__Sustain__Group_2__0)?
{ after(grammarAccess.getSustainAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sustain__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getSustainAccess().getLeftParenthesisKeyword_2_0()); }
)

	rule__Sustain__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getDataExprAssignment_2_1()); }
(rule__Sustain__DataExprAssignment_2_1)
{ after(grammarAccess.getSustainAccess().getDataExprAssignment_2_1()); }
)

	rule__Sustain__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getSustainAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Trap__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapKeyword_0()); }

	'trap' 

{ after(grammarAccess.getTrapAccess().getTrapKeyword_0()); }
)

	rule__Trap__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapDeclListAssignment_1()); }
(rule__Trap__TrapDeclListAssignment_1)
{ after(grammarAccess.getTrapAccess().getTrapDeclListAssignment_1()); }
)

	rule__Trap__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getInKeyword_2()); }

	'in' 

{ after(grammarAccess.getTrapAccess().getInKeyword_2()); }
)

	rule__Trap__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getStatementAssignment_3()); }
(rule__Trap__StatementAssignment_3)
{ after(grammarAccess.getTrapAccess().getStatementAssignment_3()); }
)

	rule__Trap__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapHandlerListAssignment_4()); }
(rule__Trap__TrapHandlerListAssignment_4)?
{ after(grammarAccess.getTrapAccess().getTrapHandlerListAssignment_4()); }
)

	rule__Trap__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getTrapAccess().getEndKeyword_5()); }
)

	rule__Trap__Group__6
;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapKeyword_6()); }
(
	'trap' 
)?
{ after(grammarAccess.getTrapAccess().getTrapKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TrapDeclList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getTrapDeclAssignment_0()); }
(rule__TrapDeclList__TrapDeclAssignment_0)
{ after(grammarAccess.getTrapDeclListAccess().getTrapDeclAssignment_0()); }
)

	rule__TrapDeclList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TrapDeclList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getGroup_1()); }
(rule__TrapDeclList__Group_1__0)*
{ after(grammarAccess.getTrapDeclListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapDeclList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getTrapDeclListAccess().getCommaKeyword_1_0()); }
)

	rule__TrapDeclList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TrapDeclList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getTrapDeclAssignment_1_1()); }
(rule__TrapDeclList__TrapDeclAssignment_1_1)
{ after(grammarAccess.getTrapDeclListAccess().getTrapDeclAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclAccess().getNameAssignment_0()); }
(rule__TrapDecl__NameAssignment_0)
{ after(grammarAccess.getTrapDeclAccess().getNameAssignment_0()); }
)

	rule__TrapDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TrapDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclAccess().getChannelDescAssignment_1()); }
(rule__TrapDecl__ChannelDescAssignment_1)?
{ after(grammarAccess.getTrapDeclAccess().getChannelDescAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapHandlerList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerListAccess().getTrapHandlerAssignment_0()); }
(rule__TrapHandlerList__TrapHandlerAssignment_0)
{ after(grammarAccess.getTrapHandlerListAccess().getTrapHandlerAssignment_0()); }
)

	rule__TrapHandlerList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandlerList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerListAccess().getTrapHandlerAssignment_1()); }
(rule__TrapHandlerList__TrapHandlerAssignment_1)*
{ after(grammarAccess.getTrapHandlerListAccess().getTrapHandlerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapHandler__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getHandleKeyword_0()); }

	'handle' 

{ after(grammarAccess.getTrapHandlerAccess().getHandleKeyword_0()); }
)

	rule__TrapHandler__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getTrapExprAssignment_1()); }
(rule__TrapHandler__TrapExprAssignment_1)
{ after(grammarAccess.getTrapHandlerAccess().getTrapExprAssignment_1()); }
)

	rule__TrapHandler__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getTrapHandlerAccess().getDoKeyword_2()); }
)

	rule__TrapHandler__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getStatementAssignment_3()); }
(rule__TrapHandler__StatementAssignment_3)
{ after(grammarAccess.getTrapHandlerAccess().getStatementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Variable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getVariableAccess().getVarKeyword_0()); }
)

	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVarDeclAssignment_1()); }
(rule__Variable__VarDeclAssignment_1)
{ after(grammarAccess.getVariableAccess().getVarDeclAssignment_1()); }
)

	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInKeyword_2()); }

	'in' 

{ after(grammarAccess.getVariableAccess().getInKeyword_2()); }
)

	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getStatementAssignment_3()); }
(rule__Variable__StatementAssignment_3)
{ after(grammarAccess.getVariableAccess().getStatementAssignment_3()); }
)

	rule__Variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getVariableAccess().getEndKeyword_4()); }
)

	rule__Variable__Group__5
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVarKeyword_5()); }
(
	'var' 
)?
{ after(grammarAccess.getVariableAccess().getVarKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__VariableDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVarListAssignment_0()); }
(rule__VariableDecl__VarListAssignment_0)
{ after(grammarAccess.getVariableDeclAccess().getVarListAssignment_0()); }
)

	rule__VariableDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getVariableDeclAccess().getColonKeyword_1()); }
)

	rule__VariableDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getAlternatives_2()); }
(rule__VariableDecl__Alternatives_2)
{ after(grammarAccess.getVariableDeclAccess().getAlternatives_2()); }
)

	rule__VariableDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getGroup_3()); }
(rule__VariableDecl__Group_3__0)*
{ after(grammarAccess.getVariableDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariableDeclLeftAction_3_0()); }
(

)
{ after(grammarAccess.getVariableDeclAccess().getVariableDeclLeftAction_3_0()); }
)

	rule__VariableDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getCommaKeyword_3_1()); }

	',' 

{ after(grammarAccess.getVariableDeclAccess().getCommaKeyword_3_1()); }
)

	rule__VariableDecl__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVarListAssignment_3_2()); }
(rule__VariableDecl__VarListAssignment_3_2)
{ after(grammarAccess.getVariableDeclAccess().getVarListAssignment_3_2()); }
)

	rule__VariableDecl__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getColonKeyword_3_3()); }

	':' 

{ after(grammarAccess.getVariableDeclAccess().getColonKeyword_3_3()); }
)

	rule__VariableDecl__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getAlternatives_3_4()); }
(rule__VariableDecl__Alternatives_3_4)
{ after(grammarAccess.getVariableDeclAccess().getAlternatives_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VariableList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getVariableAssignment_0()); }
(rule__VariableList__VariableAssignment_0)
{ after(grammarAccess.getVariableListAccess().getVariableAssignment_0()); }
)

	rule__VariableList__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getGroup_1()); }
(rule__VariableList__Group_1__0)?
{ after(grammarAccess.getVariableListAccess().getGroup_1()); }
)

	rule__VariableList__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getGroup_2()); }
(rule__VariableList__Group_2__0)*
{ after(grammarAccess.getVariableListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getColonEqualsSignKeyword_1_0()); }

	':=' 

{ after(grammarAccess.getVariableListAccess().getColonEqualsSignKeyword_1_0()); }
)

	rule__VariableList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getExpressionAssignment_1_1()); }
(rule__VariableList__ExpressionAssignment_1_1)
{ after(grammarAccess.getVariableListAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getVariableListLeftAction_2_0()); }
(

)
{ after(grammarAccess.getVariableListAccess().getVariableListLeftAction_2_0()); }
)

	rule__VariableList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getCommaKeyword_2_1()); }

	',' 

{ after(grammarAccess.getVariableListAccess().getCommaKeyword_2_1()); }
)

	rule__VariableList__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getVariableAssignment_2_2()); }
(rule__VariableList__VariableAssignment_2_2)
{ after(grammarAccess.getVariableListAccess().getVariableAssignment_2_2()); }
)

	rule__VariableList__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getGroup_2_3()); }
(rule__VariableList__Group_2_3__0)?
{ after(grammarAccess.getVariableListAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableList__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getColonEqualsSignKeyword_2_3_0()); }

	':=' 

{ after(grammarAccess.getVariableListAccess().getColonEqualsSignKeyword_2_3_0()); }
)

	rule__VariableList__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableList__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getExpressionAssignment_2_3_1()); }
(rule__VariableList__ExpressionAssignment_2_3_1)
{ after(grammarAccess.getVariableListAccess().getExpressionAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WeakAbort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getWeakKeyword_0()); }

	'weak' 

{ after(grammarAccess.getWeakAbortAccess().getWeakKeyword_0()); }
)

	rule__WeakAbort__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getAbortKeyword_1()); }

	'abort' 

{ after(grammarAccess.getWeakAbortAccess().getAbortKeyword_1()); }
)

	rule__WeakAbort__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getStatementAssignment_2()); }
(rule__WeakAbort__StatementAssignment_2)
{ after(grammarAccess.getWeakAbortAccess().getStatementAssignment_2()); }
)

	rule__WeakAbort__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbort__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getWhenKeyword_3()); }

	'when' 

{ after(grammarAccess.getWeakAbortAccess().getWhenKeyword_3()); }
)

	rule__WeakAbort__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbort__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getWeakAbortBodyAssignment_4()); }
(rule__WeakAbort__WeakAbortBodyAssignment_4)
{ after(grammarAccess.getWeakAbortAccess().getWeakAbortBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__WeakAbortEnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAccess().getEndKeyword_0()); }

	'end' 

{ after(grammarAccess.getWeakAbortEndAccess().getEndKeyword_0()); }
)

	rule__WeakAbortEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortEnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAccess().getGroup_1()); }
(rule__WeakAbortEnd__Group_1__0)?
{ after(grammarAccess.getWeakAbortEndAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WeakAbortEnd__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAccess().getWeakKeyword_1_0()); }
(
	'weak' 
)?
{ after(grammarAccess.getWeakAbortEndAccess().getWeakKeyword_1_0()); }
)

	rule__WeakAbortEnd__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortEnd__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAccess().getAbortKeyword_1_1()); }

	'abort' 

{ after(grammarAccess.getWeakAbortEndAccess().getAbortKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WeakAbortInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getDelayAssignment_0()); }
(rule__WeakAbortInstance__DelayAssignment_0)
{ after(grammarAccess.getWeakAbortInstanceAccess().getDelayAssignment_0()); }
)

	rule__WeakAbortInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getGroup_1()); }
(rule__WeakAbortInstance__Group_1__0)?
{ after(grammarAccess.getWeakAbortInstanceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WeakAbortInstance__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getDoKeyword_1_0()); }

	'do' 

{ after(grammarAccess.getWeakAbortInstanceAccess().getDoKeyword_1_0()); }
)

	rule__WeakAbortInstance__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortInstance__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getStatementAssignment_1_1()); }
(rule__WeakAbortInstance__StatementAssignment_1_1)
{ after(grammarAccess.getWeakAbortInstanceAccess().getStatementAssignment_1_1()); }
)

	rule__WeakAbortInstance__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortInstance__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getEndAssignment_1_2()); }
(rule__WeakAbortInstance__EndAssignment_1_2)
{ after(grammarAccess.getWeakAbortInstanceAccess().getEndAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WeakAbortCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getCasesAssignment_0()); }
(rule__WeakAbortCase__CasesAssignment_0)
{ after(grammarAccess.getWeakAbortCaseAccess().getCasesAssignment_0()); }
)

	rule__WeakAbortCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getCasesAssignment_1()); }
(rule__WeakAbortCase__CasesAssignment_1)*
{ after(grammarAccess.getWeakAbortCaseAccess().getCasesAssignment_1()); }
)

	rule__WeakAbortCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getEndAssignment_2()); }
(rule__WeakAbortCase__EndAssignment_2)
{ after(grammarAccess.getWeakAbortCaseAccess().getEndAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DataExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getDataUnaryExprParserRuleCall_0_0()); }
	ruleDataUnaryExpr
{ after(grammarAccess.getDataExprAccess().getDataUnaryExprParserRuleCall_0_0()); }
)

	rule__DataExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DataExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getGroup_0_1()); }
(rule__DataExpr__Group_0_1__0)?
{ after(grammarAccess.getDataExprAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataExpr__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getDataExprLeftAction_0_1_0()); }
(

)
{ after(grammarAccess.getDataExprAccess().getDataExprLeftAction_0_1_0()); }
)

	rule__DataExpr__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DataExpr__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getOpAssignment_0_1_1()); }
(rule__DataExpr__OpAssignment_0_1_1)
{ after(grammarAccess.getDataExprAccess().getOpAssignment_0_1_1()); }
)

	rule__DataExpr__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DataExpr__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getRightAssignment_0_1_2()); }
(rule__DataExpr__RightAssignment_0_1_2)
{ after(grammarAccess.getDataExprAccess().getRightAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DataExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getOpAssignment_1_0()); }
(rule__DataExpr__OpAssignment_1_0)
{ after(grammarAccess.getDataExprAccess().getOpAssignment_1_0()); }
)

	rule__DataExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DataExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getExprAssignment_1_1()); }
(rule__DataExpr__ExprAssignment_1_1)
{ after(grammarAccess.getDataExprAccess().getExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataBlockAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getDataBlockAccess().getLeftParenthesisKeyword_0()); }
)

	rule__DataBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DataBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataBlockAccess().getDataExprAssignment_1()); }
(rule__DataBlock__DataExprAssignment_1)
{ after(grammarAccess.getDataBlockAccess().getDataExprAssignment_1()); }
)

	rule__DataBlock__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DataBlock__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataBlockAccess().getRightParenthesisKeyword_2()); }

	')' 

{ after(grammarAccess.getDataBlockAccess().getRightParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DataCurrent__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCurrentAccess().getQuestionMarkKeyword_0()); }

	'?' 

{ after(grammarAccess.getDataCurrentAccess().getQuestionMarkKeyword_0()); }
)

	rule__DataCurrent__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DataCurrent__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCurrentAccess().getAlternatives_1()); }
(rule__DataCurrent__Alternatives_1)
{ after(grammarAccess.getDataCurrentAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataPre__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPreAccess().getPreKeyword_0()); }

	'pre' 

{ after(grammarAccess.getDataPreAccess().getPreKeyword_0()); }
)

	rule__DataPre__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DataPre__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPreAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getDataPreAccess().getLeftParenthesisKeyword_1()); }
)

	rule__DataPre__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DataPre__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPreAccess().getQuestionMarkKeyword_2()); }

	'?' 

{ after(grammarAccess.getDataPreAccess().getQuestionMarkKeyword_2()); }
)

	rule__DataPre__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__DataPre__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPreAccess().getAlternatives_3()); }
(rule__DataPre__Alternatives_3)
{ after(grammarAccess.getDataPreAccess().getAlternatives_3()); }
)

	rule__DataPre__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__DataPre__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPreAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getDataPreAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DataTrap__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTrapAccess().getQuestionMarkQuestionMarkKeyword_0()); }

	'??' 

{ after(grammarAccess.getDataTrapAccess().getQuestionMarkQuestionMarkKeyword_0()); }
)

	rule__DataTrap__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DataTrap__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTrapAccess().getTrapAssignment_1()); }
(rule__DataTrap__TrapAssignment_1)
{ after(grammarAccess.getDataTrapAccess().getTrapAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DataFunction__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFunctionAccess().getFunctionAssignment_0()); }
(rule__DataFunction__FunctionAssignment_0)
{ after(grammarAccess.getDataFunctionAccess().getFunctionAssignment_0()); }
)

	rule__DataFunction__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFunction__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFunctionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getDataFunctionAccess().getLeftParenthesisKeyword_1()); }
)

	rule__DataFunction__Group__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFunction__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFunctionAccess().getDataExprAssignment_2()); }
(rule__DataFunction__DataExprAssignment_2)
{ after(grammarAccess.getDataFunctionAccess().getDataExprAssignment_2()); }
)

	rule__DataFunction__Group__3
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFunction__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFunctionAccess().getGroup_3()); }
(rule__DataFunction__Group_3__0)*
{ after(grammarAccess.getDataFunctionAccess().getGroup_3()); }
)

	rule__DataFunction__Group__4
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFunction__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFunctionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getDataFunctionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__DataFunction__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFunctionAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getDataFunctionAccess().getCommaKeyword_3_0()); }
)

	rule__DataFunction__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFunction__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFunctionAccess().getDataExprAssignment_3_1()); }
(rule__DataFunction__DataExprAssignment_3_1)
{ after(grammarAccess.getDataFunctionAccess().getDataExprAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SigExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprAccess().getAndExprAssignment_0()); }
(rule__SigExpr__AndExprAssignment_0)
{ after(grammarAccess.getSigExprAccess().getAndExprAssignment_0()); }
)

	rule__SigExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SigExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprAccess().getGroup_1()); }
(rule__SigExpr__Group_1__0)*
{ after(grammarAccess.getSigExprAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SigExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprAccess().getOrKeyword_1_0()); }

	'or' 

{ after(grammarAccess.getSigExprAccess().getOrKeyword_1_0()); }
)

	rule__SigExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SigExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprAccess().getAndExprAssignment_1_1()); }
(rule__SigExpr__AndExprAssignment_1_1)
{ after(grammarAccess.getSigExprAccess().getAndExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SigExprAND__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprANDAccess().getUnaExprAssignment_0()); }
(rule__SigExprAND__UnaExprAssignment_0)
{ after(grammarAccess.getSigExprANDAccess().getUnaExprAssignment_0()); }
)

	rule__SigExprAND__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SigExprAND__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprANDAccess().getGroup_1()); }
(rule__SigExprAND__Group_1__0)*
{ after(grammarAccess.getSigExprANDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SigExprAND__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprANDAccess().getAndKeyword_1_0()); }

	'and' 

{ after(grammarAccess.getSigExprANDAccess().getAndKeyword_1_0()); }
)

	rule__SigExprAND__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SigExprAND__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprANDAccess().getUnaExprAssignment_1_1()); }
(rule__SigExprAND__UnaExprAssignment_1_1)
{ after(grammarAccess.getSigExprANDAccess().getUnaExprAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SigExprUnary__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprUnaryAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getSigExprUnaryAccess().getLeftParenthesisKeyword_1_0()); }
)

	rule__SigExprUnary__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SigExprUnary__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprUnaryAccess().getSigExprAssignment_1_1()); }
(rule__SigExprUnary__SigExprAssignment_1_1)
{ after(grammarAccess.getSigExprUnaryAccess().getSigExprAssignment_1_1()); }
)

	rule__SigExprUnary__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__SigExprUnary__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprUnaryAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getSigExprUnaryAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SigExprUnary__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprUnaryAccess().getNotKeyword_2_0()); }

	'not' 

{ after(grammarAccess.getSigExprUnaryAccess().getNotKeyword_2_0()); }
)

	rule__SigExprUnary__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__SigExprUnary__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprUnaryAccess().getSigExprAssignment_2_1()); }
(rule__SigExprUnary__SigExprAssignment_2_1)
{ after(grammarAccess.getSigExprUnaryAccess().getSigExprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DelayExpr__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getExprAssignment_1_0()); }
(rule__DelayExpr__ExprAssignment_1_0)
{ after(grammarAccess.getDelayExprAccess().getExprAssignment_1_0()); }
)

	rule__DelayExpr__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DelayExpr__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getEventAssignment_1_1()); }
(rule__DelayExpr__EventAssignment_1_1)
{ after(grammarAccess.getDelayExprAccess().getEventAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DelayEvent__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getPreKeyword_1_0()); }

	'pre' 

{ after(grammarAccess.getDelayEventAccess().getPreKeyword_1_0()); }
)

	rule__DelayEvent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DelayEvent__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getDelayEventAccess().getLeftParenthesisKeyword_1_1()); }
)

	rule__DelayEvent__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DelayEvent__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getSigExprParserRuleCall_1_2()); }
	ruleSigExpr
{ after(grammarAccess.getDelayEventAccess().getSigExprParserRuleCall_1_2()); }
)

	rule__DelayEvent__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__DelayEvent__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getDelayEventAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__DelayEvent__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getLeftSquareBracketKeyword_2_0()); }

	'[' 

{ after(grammarAccess.getDelayEventAccess().getLeftSquareBracketKeyword_2_0()); }
)

	rule__DelayEvent__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__DelayEvent__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getSigExprParserRuleCall_2_1()); }
	ruleSigExpr
{ after(grammarAccess.getDelayEventAccess().getSigExprParserRuleCall_2_1()); }
)

	rule__DelayEvent__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__DelayEvent__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getRightSquareBracketKeyword_2_2()); }

	']' 

{ after(grammarAccess.getDelayEventAccess().getRightSquareBracketKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ChannelDescription__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getColonKeyword_0_0()); }

	':' 

{ after(grammarAccess.getChannelDescriptionAccess().getColonKeyword_0_0()); }
)

	rule__ChannelDescription__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getAlternatives_0_1()); }
(rule__ChannelDescription__Alternatives_0_1)
{ after(grammarAccess.getChannelDescriptionAccess().getAlternatives_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChannelDescription__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getChannelDescriptionAccess().getLeftParenthesisKeyword_1_0()); }
)

	rule__ChannelDescription__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getAlternatives_1_1()); }
(rule__ChannelDescription__Alternatives_1_1)
{ after(grammarAccess.getChannelDescriptionAccess().getAlternatives_1_1()); }
)

	rule__ChannelDescription__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getChannelDescriptionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ChannelDescription__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getColonEqualsSignKeyword_2_0()); }

	':=' 

{ after(grammarAccess.getChannelDescriptionAccess().getColonEqualsSignKeyword_2_0()); }
)

	rule__ChannelDescription__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getDataExprAssignment_2_1()); }
(rule__ChannelDescription__DataExprAssignment_2_1)
{ after(grammarAccess.getChannelDescriptionAccess().getDataExprAssignment_2_1()); }
)

	rule__ChannelDescription__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getColonKeyword_2_2()); }

	':' 

{ after(grammarAccess.getChannelDescriptionAccess().getColonKeyword_2_2()); }
)

	rule__ChannelDescription__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getAlternatives_2_3()); }
(rule__ChannelDescription__Alternatives_2_3)
{ after(grammarAccess.getChannelDescriptionAccess().getAlternatives_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Signal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_0()); }
(rule__Signal__NameAssignment_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_0()); }
)

	rule__Signal__Group__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getChannelAssignment_1()); }
(rule__Signal__ChannelAssignment_1)?
{ after(grammarAccess.getSignalAccess().getChannelAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sensor__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getNameAssignment_0_0()); }
(rule__Sensor__NameAssignment_0_0)
{ after(grammarAccess.getSensorAccess().getNameAssignment_0_0()); }
)

	rule__Sensor__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getColonKeyword_0_1()); }

	':' 

{ after(grammarAccess.getSensorAccess().getColonKeyword_0_1()); }
)

	rule__Sensor__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getAlternatives_0_2()); }
(rule__Sensor__Alternatives_0_2)
{ after(grammarAccess.getSensorAccess().getAlternatives_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sensor__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getNameAssignment_1_0()); }
(rule__Sensor__NameAssignment_1_0)
{ after(grammarAccess.getSensorAccess().getNameAssignment_1_0()); }
)

	rule__Sensor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getSensorAccess().getLeftParenthesisKeyword_1_1()); }
)

	rule__Sensor__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getAlternatives_1_2()); }
(rule__Sensor__Alternatives_1_2)
{ after(grammarAccess.getSensorAccess().getAlternatives_1_2()); }
)

	rule__Sensor__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getSensorAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Program__ModuleAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getModuleModuleParserRuleCall_0_0()); }
	ruleModule{ after(grammarAccess.getProgramAccess().getModuleModuleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ModuleAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getModuleModuleParserRuleCall_1_0()); }
	ruleModule{ after(grammarAccess.getProgramAccess().getModuleModuleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameEsterelIDTerminalRuleCall_1_0()); }
	RULE_ESTERELID{ after(grammarAccess.getModuleAccess().getNameEsterelIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModIntAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModIntModuleInterfaceParserRuleCall_3_0()); }
	ruleModuleInterface{ after(grammarAccess.getModuleAccess().getModIntModuleInterfaceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__ModBodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModBodyModuleBodyParserRuleCall_4_0()); }
	ruleModuleBody{ after(grammarAccess.getModuleAccess().getModBodyModuleBodyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBody__StatementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleBodyAccess().getStatementStatementParserRuleCall_0()); }
	ruleStatement{ after(grammarAccess.getModuleBodyAccess().getStatementStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntSignalDeclAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntSignalDeclSignalDeclParserRuleCall_0_0()); }
	ruleSignalDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntSignalDeclSignalDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntTypeDeclAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntTypeDeclTypeDeclParserRuleCall_1_0()); }
	ruleTypeDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntTypeDeclTypeDeclParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntSensorDeclAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntSensorDeclSensorDeclParserRuleCall_2_0()); }
	ruleSensorDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntSensorDeclSensorDeclParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntConstantDeclAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntConstantDeclConstantDeclParserRuleCall_3_0()); }
	ruleConstantDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntConstantDeclConstantDeclParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntRelationDeclAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntRelationDeclRelationDeclParserRuleCall_4_0()); }
	ruleRelationDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntRelationDeclRelationDeclParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntFunctionDeclAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntFunctionDeclFunctionDeclParserRuleCall_5_0()); }
	ruleFunctionDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntFunctionDeclFunctionDeclParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntProcedureDeclAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntProcedureDeclProcedureDeclParserRuleCall_6_0()); }
	ruleProcedureDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntProcedureDeclProcedureDeclParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDecl__SignalAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_0_2_0()); }
	ruleSignal{ after(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDecl__SignalAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_0_3_1_0()); }
	ruleSignal{ after(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDecl__SignalAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_1_2_0()); }
	ruleSignal{ after(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDecl__SignalAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_1_3_1_0()); }
	ruleSignal{ after(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDecl__SignalAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_2_2_0()); }
	ruleSignal{ after(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDecl__SignalAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_2_3_1_0()); }
	ruleSignal{ after(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDecl__SignalAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_3_2_0()); }
	ruleSignal{ after(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalDecl__SignalAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_3_3_1_0()); }
	ruleSignal{ after(grammarAccess.getSignalDeclAccess().getSignalSignalParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__SensorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorSensorParserRuleCall_1_0()); }
	ruleSensor{ after(grammarAccess.getSensorDeclAccess().getSensorSensorParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__SensorAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorSensorParserRuleCall_2_1_0()); }
	ruleSensor{ after(grammarAccess.getSensorDeclAccess().getSensorSensorParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__RelationAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationRelationTypeParserRuleCall_2_0()); }
	ruleRelationType{ after(grammarAccess.getRelationDeclAccess().getRelationRelationTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__RelationAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationRelationTypeParserRuleCall_3_1_0()); }
	ruleRelationType{ after(grammarAccess.getRelationDeclAccess().getRelationRelationTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__FirstAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getFirstSignalCrossReference_0_0()); }
(
{ before(grammarAccess.getRelationImplicationAccess().getFirstSignalEsterelIDTerminalRuleCall_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getRelationImplicationAccess().getFirstSignalEsterelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRelationImplicationAccess().getFirstSignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }
(
{ before(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }

	'=>' 

{ after(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }
)

{ after(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__SecondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getSecondSignalCrossReference_2_0()); }
(
{ before(grammarAccess.getRelationImplicationAccess().getSecondSignalEsterelIDTerminalRuleCall_2_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getRelationImplicationAccess().getSecondSignalEsterelIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRelationImplicationAccess().getSecondSignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__IncompAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalCrossReference_0_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalEsterelIDTerminalRuleCall_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalEsterelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }

	'#' 

{ after(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }
)

{ after(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__IncompAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalCrossReference_2_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalEsterelIDTerminalRuleCall_2_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalEsterelIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__IncompAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalCrossReference_3_1_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalEsterelIDTerminalRuleCall_3_1_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalEsterelIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompSignalCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypeTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getTypeDeclAccess().getTypeTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypeTypeParserRuleCall_2_1_0()); }
	ruleType{ after(grammarAccess.getTypeDeclAccess().getTypeTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameEsterelIDTerminalRuleCall_0()); }
	RULE_ESTERELID{ after(grammarAccess.getTypeAccess().getNameEsterelIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__ConstantAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclAccess().getConstantOneTypeConstantDeclParserRuleCall_1_0()); }
	ruleOneTypeConstantDecl{ after(grammarAccess.getConstantDeclAccess().getConstantOneTypeConstantDeclParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecl__ConstantAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclAccess().getConstantOneTypeConstantDeclParserRuleCall_2_1_0()); }
	ruleOneTypeConstantDecl{ after(grammarAccess.getConstantDeclAccess().getConstantOneTypeConstantDeclParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecl__ConstantAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getConstantConstantParserRuleCall_0_0()); }
	ruleConstant{ after(grammarAccess.getOneTypeConstantDeclAccess().getConstantConstantParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecl__ConstantAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getConstantConstantParserRuleCall_1_1_0()); }
	ruleConstant{ after(grammarAccess.getOneTypeConstantDeclAccess().getConstantConstantParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecl__TypeAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getTypeEsterelIDTerminalRuleCall_3_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getOneTypeConstantDeclAccess().getTypeEsterelIDTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecl__TypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclAccess().getTypeBaseTypeTerminalRuleCall_3_1_0()); }
	RULE_BASETYPE{ after(grammarAccess.getOneTypeConstantDeclAccess().getTypeBaseTypeTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameEsterelIDTerminalRuleCall_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getConstantAccess().getNameEsterelIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getValueConstantValueParserRuleCall_1_1_0()); }
	ruleConstantValue{ after(grammarAccess.getConstantAccess().getValueConstantValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionFunctionParserRuleCall_1_0()); }
	ruleFunction{ after(grammarAccess.getFunctionDeclAccess().getFunctionFunctionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__FunctionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionFunctionParserRuleCall_2_1_0()); }
	ruleFunction{ after(grammarAccess.getFunctionDeclAccess().getFunctionFunctionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameEsterelIDTerminalRuleCall_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getFunctionAccess().getNameEsterelIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__IdListAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListAlternatives_2_0_0()); }
(rule__Function__IdListAlternatives_2_0_0)
{ after(grammarAccess.getFunctionAccess().getIdListAlternatives_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__IdListAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListAlternatives_2_1_1_0()); }
(rule__Function__IdListAlternatives_2_1_1_0)
{ after(grammarAccess.getFunctionAccess().getIdListAlternatives_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypeAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTypeEsterelIDTerminalRuleCall_5_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getFunctionAccess().getTypeEsterelIDTerminalRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTypeBaseTypeTerminalRuleCall_5_1_0()); }
	RULE_BASETYPE{ after(grammarAccess.getFunctionAccess().getTypeBaseTypeTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__ProcedureAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProcedureProcedureParserRuleCall_1_0()); }
	ruleProcedure{ after(grammarAccess.getProcedureDeclAccess().getProcedureProcedureParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__ProcedureAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProcedureProcedureParserRuleCall_2_1_0()); }
	ruleProcedure{ after(grammarAccess.getProcedureDeclAccess().getProcedureProcedureParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getNameEsterelIDTerminalRuleCall_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getProcedureAccess().getNameEsterelIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdListAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListAlternatives_2_0_0()); }
(rule__Procedure__IdListAlternatives_2_0_0)
{ after(grammarAccess.getProcedureAccess().getIdListAlternatives_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdListAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListAlternatives_2_1_1_0()); }
(rule__Procedure__IdListAlternatives_2_1_1_0)
{ after(grammarAccess.getProcedureAccess().getIdListAlternatives_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdListAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListAlternatives_5_0_0()); }
(rule__Procedure__IdListAlternatives_5_0_0)
{ after(grammarAccess.getProcedureAccess().getIdListAlternatives_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdListAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdListAlternatives_5_1_1_0()); }
(rule__Procedure__IdListAlternatives_5_1_1_0)
{ after(grammarAccess.getProcedureAccess().getIdListAlternatives_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getRightSequenceParserRuleCall_1_2_0()); }
	ruleSequence{ after(grammarAccess.getStatementAccess().getRightSequenceParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getRightAtomicStatementParserRuleCall_1_2_0()); }
	ruleAtomicStatement{ after(grammarAccess.getSequenceAccess().getRightAtomicStatementParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getBlockAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableEsterelIDTerminalRuleCall_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getAssignmentAccess().getVariableEsterelIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExprDataExprParserRuleCall_2_0()); }
	ruleDataExpr{ after(grammarAccess.getAssignmentAccess().getExprDataExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getAbortAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getBodyAbortBodyParserRuleCall_3_0()); }
	ruleAbortBody{ after(grammarAccess.getAbortAccess().getBodyAbortBodyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__DelayAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getDelayDelayExprParserRuleCall_0_0()); }
	ruleDelayExpr{ after(grammarAccess.getAbortInstanceAccess().getDelayDelayExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__StatementAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getStatementStatementParserRuleCall_1_1_0()); }
	ruleStatement{ after(grammarAccess.getAbortInstanceAccess().getStatementStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__EndAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getEndAbortEndParserRuleCall_1_2_0()); }
	ruleAbortEnd{ after(grammarAccess.getAbortInstanceAccess().getEndAbortEndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCase__CasesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_0_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCase__CasesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCase__EndAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getEndAbortEndParserRuleCall_2_0()); }
	ruleAbortEnd{ after(grammarAccess.getAbortCaseAccess().getEndAbortEndParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCaseSingle__DelayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getDelayDelayExprParserRuleCall_1_0()); }
	ruleDelayExpr{ after(grammarAccess.getAbortCaseSingleAccess().getDelayDelayExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCaseSingle__StatementAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getStatementStatementParserRuleCall_2_1_0()); }
	ruleStatement{ after(grammarAccess.getAbortCaseSingleAccess().getStatementStatementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Await__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getBodyAwaitBodyParserRuleCall_1_0()); }
	ruleAwaitBody{ after(grammarAccess.getAwaitAccess().getBodyAwaitBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitInstance__StatementAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getStatementStatementParserRuleCall_1_1_0()); }
	ruleStatement{ after(grammarAccess.getAwaitInstanceAccess().getStatementStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitInstance__EndAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getEndAwaitEndParserRuleCall_1_2_0()); }
	ruleAwaitEnd{ after(grammarAccess.getAwaitInstanceAccess().getEndAwaitEndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitCase__CasesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getCasesAbortCaseSingleParserRuleCall_0_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getAwaitCaseAccess().getCasesAbortCaseSingleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitCase__CasesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getAwaitCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitCase__EndAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getEndAwaitEndParserRuleCall_2_0()); }
	ruleAwaitEnd{ after(grammarAccess.getAwaitCaseAccess().getEndAwaitEndParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getDoAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__EndAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getEndDoUptoParserRuleCall_2_0_0()); }
	ruleDoUpto{ after(grammarAccess.getDoAccess().getEndDoUptoParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__EndAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getEndDoWatchingParserRuleCall_2_1_0()); }
	ruleDoWatching{ after(grammarAccess.getDoAccess().getEndDoWatchingParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoUpto__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoUptoAccess().getExprDelayExprParserRuleCall_1_0()); }
	ruleDelayExpr{ after(grammarAccess.getDoUptoAccess().getExprDelayExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatching__DelayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingAccess().getDelayDelayExprParserRuleCall_1_0()); }
	ruleDelayExpr{ after(grammarAccess.getDoWatchingAccess().getDelayDelayExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatching__EndAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingAccess().getEndDoWatchingEndParserRuleCall_2_0()); }
	ruleDoWatchingEnd{ after(grammarAccess.getDoWatchingAccess().getEndDoWatchingEndParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatchingEnd__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingEndAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getDoWatchingEndAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__SignalAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getSignalSignalCrossReference_1_0_0()); }
(
{ before(grammarAccess.getEmitAccess().getSignalSignalEsterelIDTerminalRuleCall_1_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getEmitAccess().getSignalSignalEsterelIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getEmitAccess().getSignalSignalCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__TickAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getTickTickParserRuleCall_1_1_0()); }
	ruleTick{ after(grammarAccess.getEmitAccess().getTickTickParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__ExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getExprDataExprParserRuleCall_2_1_0()); }
	ruleDataExpr{ after(grammarAccess.getEmitAccess().getExprDataExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__DelayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getDelayDelayExprParserRuleCall_1_0()); }
	ruleDelayExpr{ after(grammarAccess.getEveryDoAccess().getDelayDelayExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getEveryDoAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__TrapAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getTrapTrapDeclCrossReference_1_0()); }
(
{ before(grammarAccess.getExitAccess().getTrapTrapDeclEsterelIDTerminalRuleCall_1_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getExitAccess().getTrapTrapDeclEsterelIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getExitAccess().getTrapTrapDeclCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__DataExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getDataExprDataExprParserRuleCall_2_1_0()); }
	ruleDataExpr{ after(grammarAccess.getExitAccess().getDataExprDataExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getExprDataExprParserRuleCall_1_0()); }
	ruleDataExpr{ after(grammarAccess.getIfTestAccess().getExprDataExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ThenAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenThenPartParserRuleCall_2_0()); }
	ruleThenPart{ after(grammarAccess.getIfTestAccess().getThenThenPartParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ElseIfAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseIfElsIfPartParserRuleCall_3_0()); }
	ruleElsIfPart{ after(grammarAccess.getIfTestAccess().getElseIfElsIfPartParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ElseAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElseElsePartParserRuleCall_4_0()); }
	ruleElsePart{ after(grammarAccess.getIfTestAccess().getElseElsePartParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIfPart__ElsifAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfPartAccess().getElsifElsIfParserRuleCall_0_0()); }
	ruleElsIf{ after(grammarAccess.getElsIfPartAccess().getElsifElsIfParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIfPart__ElsifAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfPartAccess().getElsifElsIfParserRuleCall_1_0()); }
	ruleElsIf{ after(grammarAccess.getElsIfPartAccess().getElsifElsIfParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getExprDataExprParserRuleCall_1_0()); }
	ruleDataExpr{ after(grammarAccess.getElsIfAccess().getExprDataExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__ThenAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getThenThenPartParserRuleCall_2_0()); }
	ruleThenPart{ after(grammarAccess.getElsIfAccess().getThenThenPartParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThenPart__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenPartAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getThenPartAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsePart__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsePartAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getElsePartAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getBodyLoopBodyParserRuleCall_1_0()); }
	ruleLoopBody{ after(grammarAccess.getLoopAccess().getBodyLoopBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__EndAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getEndLoopEachParserRuleCall_2_1_0()); }
	ruleLoopEach{ after(grammarAccess.getLoopAccess().getEndLoopEachParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopDelay__DelayAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopDelayAccess().getDelayDelayExprParserRuleCall_0()); }
	ruleDelayExpr{ after(grammarAccess.getLoopDelayAccess().getDelayDelayExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopBody__StatementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopBodyAccess().getStatementStatementParserRuleCall_0()); }
	ruleStatement{ after(grammarAccess.getLoopBodyAccess().getStatementStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getBodyPresentBodyParserRuleCall_1_0()); }
	rulePresentBody{ after(grammarAccess.getPresentAccess().getBodyPresentBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ElsePartAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElsePartElsePartParserRuleCall_2_0()); }
	ruleElsePart{ after(grammarAccess.getPresentAccess().getElsePartElsePartParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEventBody__EventAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventBodyAccess().getEventPresentEventParserRuleCall_0_0()); }
	rulePresentEvent{ after(grammarAccess.getPresentEventBodyAccess().getEventPresentEventParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEventBody__ThenPartAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventBodyAccess().getThenPartThenPartParserRuleCall_1_0()); }
	ruleThenPart{ after(grammarAccess.getPresentEventBodyAccess().getThenPartThenPartParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCaseList__CaseAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseListAccess().getCasePresentCaseParserRuleCall_0_0()); }
	rulePresentCase{ after(grammarAccess.getPresentCaseListAccess().getCasePresentCaseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCaseList__CaseAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseListAccess().getCasePresentCaseParserRuleCall_1_0()); }
	rulePresentCase{ after(grammarAccess.getPresentCaseListAccess().getCasePresentCaseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__EventAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getEventPresentEventParserRuleCall_1_0()); }
	rulePresentEvent{ after(grammarAccess.getPresentCaseAccess().getEventPresentEventParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__StatementAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getStatementStatementParserRuleCall_2_1_0()); }
	ruleStatement{ after(grammarAccess.getPresentCaseAccess().getStatementStatementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getExpressionSigExprParserRuleCall_0_0()); }
	ruleSigExpr{ after(grammarAccess.getPresentEventAccess().getExpressionSigExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getExpressionSigExprParserRuleCall_1_1_0()); }
	ruleSigExpr{ after(grammarAccess.getPresentEventAccess().getExpressionSigExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__PositiveAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_0_0()); }
(
{ before(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_0_0()); }

	'positive' 

{ after(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_0_0()); }
)

{ after(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__DataExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getDataExprDataExprParserRuleCall_2_0()); }
	ruleDataExpr{ after(grammarAccess.getRepeatAccess().getDataExprDataExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__StatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getRepeatAccess().getStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ModuleAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_0_1_0()); }
	ruleModuleRenaming{ after(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ListAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListRenamingListParserRuleCall_0_2_1_0()); }
	ruleRenamingList{ after(grammarAccess.getRunAccess().getListRenamingListParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ModuleAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_1_1_0()); }
	ruleModuleRenaming{ after(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ListAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListRenamingListParserRuleCall_1_2_1_0()); }
	ruleRenamingList{ after(grammarAccess.getRunAccess().getListRenamingListParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__ModuleAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleModuleCrossReference_0_0()); }
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleModuleEsterelIDTerminalRuleCall_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getModuleRenamingAccess().getModuleModuleEsterelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getModuleRenamingAccess().getModuleModuleCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__RenamedAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getRenamedSolidusKeyword_1_0_0()); }
(
{ before(grammarAccess.getModuleRenamingAccess().getRenamedSolidusKeyword_1_0_0()); }

	'/' 

{ after(grammarAccess.getModuleRenamingAccess().getRenamedSolidusKeyword_1_0_0()); }
)

{ after(grammarAccess.getModuleRenamingAccess().getRenamedSolidusKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__NewNameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getNewNameEsterelIDTerminalRuleCall_1_1_0()); }
	RULE_ESTERELID{ after(grammarAccess.getModuleRenamingAccess().getNewNameEsterelIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RenamingList__ListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getListRenamingParserRuleCall_0_0()); }
	ruleRenaming{ after(grammarAccess.getRenamingListAccess().getListRenamingParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RenamingList__ListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getListRenamingParserRuleCall_1_1_0()); }
	ruleRenaming{ after(grammarAccess.getRenamingListAccess().getListRenamingParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingTypeRenamingParserRuleCall_0_1_0()); }
	ruleTypeRenaming{ after(grammarAccess.getRenamingAccess().getRenamingTypeRenamingParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingTypeRenamingParserRuleCall_0_2_1_0()); }
	ruleTypeRenaming{ after(grammarAccess.getRenamingAccess().getRenamingTypeRenamingParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingConstantRenamingParserRuleCall_1_1_0()); }
	ruleConstantRenaming{ after(grammarAccess.getRenamingAccess().getRenamingConstantRenamingParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingConstantRenamingParserRuleCall_1_2_1_0()); }
	ruleConstantRenaming{ after(grammarAccess.getRenamingAccess().getRenamingConstantRenamingParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingFunctionRenamingParserRuleCall_2_1_0()); }
	ruleFunctionRenaming{ after(grammarAccess.getRenamingAccess().getRenamingFunctionRenamingParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingFunctionRenamingParserRuleCall_2_2_1_0()); }
	ruleFunctionRenaming{ after(grammarAccess.getRenamingAccess().getRenamingFunctionRenamingParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingSignalRenamingParserRuleCall_3_1_0()); }
	ruleSignalRenaming{ after(grammarAccess.getRenamingAccess().getRenamingSignalRenamingParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingSignalRenamingParserRuleCall_3_2_1_0()); }
	ruleSignalRenaming{ after(grammarAccess.getRenamingAccess().getRenamingSignalRenamingParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__NewNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getNewNameTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getTypeRenamingAccess().getNewNameTypeEsterelIDTerminalRuleCall_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getTypeRenamingAccess().getNewNameTypeEsterelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTypeRenamingAccess().getNewNameTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getOldNameTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getTypeRenamingAccess().getOldNameTypeEsterelIDTerminalRuleCall_2_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getTypeRenamingAccess().getOldNameTypeEsterelIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTypeRenamingAccess().getOldNameTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getValueConstantValueParserRuleCall_0_0()); }
	ruleConstantValue{ after(grammarAccess.getConstantRenamingAccess().getValueConstantValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__NewNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getNewNameEsterelIDTerminalRuleCall_2_0()); }
	RULE_ESTERELID{ after(grammarAccess.getConstantRenamingAccess().getNewNameEsterelIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__NewNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionCrossReference_0_0()); }
(
{ before(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionEsterelIDTerminalRuleCall_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionEsterelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionCrossReference_2_0()); }
(
{ before(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionEsterelIDTerminalRuleCall_2_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionEsterelIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__SignalRenaming__NewNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getNewNameSignalCrossReference_0_0()); }
(
{ before(grammarAccess.getSignalRenamingAccess().getNewNameSignalEsterelIDTerminalRuleCall_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getSignalRenamingAccess().getNewNameSignalEsterelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSignalRenamingAccess().getNewNameSignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getOldNameSignalCrossReference_2_0()); }
(
{ before(grammarAccess.getSignalRenamingAccess().getOldNameSignalEsterelIDTerminalRuleCall_2_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getSignalRenamingAccess().getOldNameSignalEsterelIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getSignalRenamingAccess().getOldNameSignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__SignalListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalListLocalSignalListParserRuleCall_1_0()); }
	ruleLocalSignalList{ after(grammarAccess.getLocalSignalDeclAccess().getSignalListLocalSignalListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getLocalSignalDeclAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalList__SignalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getSignalSignalParserRuleCall_1_0()); }
	ruleSignal{ after(grammarAccess.getLocalSignalListAccess().getSignalSignalParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalList__SignalAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getSignalSignalParserRuleCall_2_1_0()); }
	ruleSignal{ after(grammarAccess.getLocalSignalListAccess().getSignalSignalParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getSuspendAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__DelayAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getDelayDelayExprParserRuleCall_3_0()); }
	ruleDelayExpr{ after(grammarAccess.getSuspendAccess().getDelayDelayExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__SignalAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getSignalSignalCrossReference_1_0_0()); }
(
{ before(grammarAccess.getSustainAccess().getSignalSignalEsterelIDTerminalRuleCall_1_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getSustainAccess().getSignalSignalEsterelIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getSustainAccess().getSignalSignalCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__TickAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getTickTickParserRuleCall_1_1_0()); }
	ruleTick{ after(grammarAccess.getSustainAccess().getTickTickParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__DataExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getDataExprDataExprParserRuleCall_2_1_0()); }
	ruleDataExpr{ after(grammarAccess.getSustainAccess().getDataExprDataExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__TrapDeclListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapDeclListTrapDeclListParserRuleCall_1_0()); }
	ruleTrapDeclList{ after(grammarAccess.getTrapAccess().getTrapDeclListTrapDeclListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getTrapAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__TrapHandlerListAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapHandlerListTrapHandlerListParserRuleCall_4_0()); }
	ruleTrapHandlerList{ after(grammarAccess.getTrapAccess().getTrapHandlerListTrapHandlerListParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDeclList__TrapDeclAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getTrapDeclTrapDeclParserRuleCall_0_0()); }
	ruleTrapDecl{ after(grammarAccess.getTrapDeclListAccess().getTrapDeclTrapDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDeclList__TrapDeclAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getTrapDeclTrapDeclParserRuleCall_1_1_0()); }
	ruleTrapDecl{ after(grammarAccess.getTrapDeclListAccess().getTrapDeclTrapDeclParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDecl__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclAccess().getNameEsterelIDTerminalRuleCall_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getTrapDeclAccess().getNameEsterelIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDecl__ChannelDescAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclAccess().getChannelDescChannelDescriptionParserRuleCall_1_0()); }
	ruleChannelDescription{ after(grammarAccess.getTrapDeclAccess().getChannelDescChannelDescriptionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandlerList__TrapHandlerAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerListAccess().getTrapHandlerTrapHandlerParserRuleCall_0_0()); }
	ruleTrapHandler{ after(grammarAccess.getTrapHandlerListAccess().getTrapHandlerTrapHandlerParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandlerList__TrapHandlerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerListAccess().getTrapHandlerTrapHandlerParserRuleCall_1_0()); }
	ruleTrapHandler{ after(grammarAccess.getTrapHandlerListAccess().getTrapHandlerTrapHandlerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__TrapExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getTrapExprTrapExprParserRuleCall_1_0()); }
	ruleTrapExpr{ after(grammarAccess.getTrapHandlerAccess().getTrapExprTrapExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getTrapHandlerAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__VarDeclAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getVarDeclVariableDeclParserRuleCall_1_0()); }
	ruleVariableDecl{ after(grammarAccess.getVariableAccess().getVarDeclVariableDeclParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getVariableAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__VarListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVarListVariableListParserRuleCall_0_0()); }
	ruleVariableList{ after(grammarAccess.getVariableDeclAccess().getVarListVariableListParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__TypeAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeEsterelIDTerminalRuleCall_2_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getVariableDeclAccess().getTypeEsterelIDTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeBaseTypeTerminalRuleCall_2_1_0()); }
	RULE_BASETYPE{ after(grammarAccess.getVariableDeclAccess().getTypeBaseTypeTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__VarListAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVarListVariableListParserRuleCall_3_2_0()); }
	ruleVariableList{ after(grammarAccess.getVariableDeclAccess().getVarListVariableListParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__TypeAssignment_3_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeEsterelIDTerminalRuleCall_3_4_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getVariableDeclAccess().getTypeEsterelIDTerminalRuleCall_3_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__TypeAssignment_3_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeBaseTypeTerminalRuleCall_3_4_1_0()); }
	RULE_BASETYPE{ after(grammarAccess.getVariableDeclAccess().getTypeBaseTypeTerminalRuleCall_3_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getVariableEsterelIDTerminalRuleCall_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getVariableListAccess().getVariableEsterelIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getExpressionDataExprParserRuleCall_1_1_0()); }
	ruleDataExpr{ after(grammarAccess.getVariableListAccess().getExpressionDataExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__VariableAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getVariableEsterelIDTerminalRuleCall_2_2_0()); }
	RULE_ESTERELID{ after(grammarAccess.getVariableListAccess().getVariableEsterelIDTerminalRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableList__ExpressionAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableListAccess().getExpressionDataExprParserRuleCall_2_3_1_0()); }
	ruleDataExpr{ after(grammarAccess.getVariableListAccess().getExpressionDataExprParserRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbort__StatementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getStatementStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getWeakAbortAccess().getStatementStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbort__WeakAbortBodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getWeakAbortBodyWeakAbortBodyParserRuleCall_4_0()); }
	ruleWeakAbortBody{ after(grammarAccess.getWeakAbortAccess().getWeakAbortBodyWeakAbortBodyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__DelayAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getDelayDelayExprParserRuleCall_0_0()); }
	ruleDelayExpr{ after(grammarAccess.getWeakAbortInstanceAccess().getDelayDelayExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__StatementAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getStatementStatementParserRuleCall_1_1_0()); }
	ruleStatement{ after(grammarAccess.getWeakAbortInstanceAccess().getStatementStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__EndAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getEndWeakAbortEndParserRuleCall_1_2_0()); }
	ruleWeakAbortEnd{ after(grammarAccess.getWeakAbortInstanceAccess().getEndWeakAbortEndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortCase__CasesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_0_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getWeakAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortCase__CasesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getWeakAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortCase__EndAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getEndWeakAbortEndParserRuleCall_2_0()); }
	ruleWeakAbortEnd{ after(grammarAccess.getWeakAbortCaseAccess().getEndWeakAbortEndParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataExpr__OpAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getOpDataOpParserRuleCall_0_1_1_0()); }
	ruleDataOp{ after(grammarAccess.getDataExprAccess().getOpDataOpParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataExpr__RightAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getRightDataExprParserRuleCall_0_1_2_0()); }
	ruleDataExpr{ after(grammarAccess.getDataExprAccess().getRightDataExprParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataExpr__OpAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getOpDataOpParserRuleCall_1_0_0()); }
	ruleDataOp{ after(grammarAccess.getDataExprAccess().getOpDataOpParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataExpr__ExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataExprAccess().getExprDataExprParserRuleCall_1_1_0()); }
	ruleDataExpr{ after(grammarAccess.getDataExprAccess().getExprDataExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataValueID__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataValueIDAccess().getValueEsterelIDTerminalRuleCall_0()); }
	RULE_ESTERELID{ after(grammarAccess.getDataValueIDAccess().getValueEsterelIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataValueFloat__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataValueFloatAccess().getValueFloatTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getDataValueFloatAccess().getValueFloatTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataValueBoolean__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataValueBooleanAccess().getValueBooleanTerminalRuleCall_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getDataValueBooleanAccess().getValueBooleanTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataValueInt__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataValueIntAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getDataValueIntAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataValueString__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataValueStringAccess().getValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getDataValueStringAccess().getValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataBlock__DataExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataBlockAccess().getDataExprDataExprParserRuleCall_1_0()); }
	ruleDataExpr{ after(grammarAccess.getDataBlockAccess().getDataExprDataExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataCurrent__SignalAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCurrentAccess().getSignalSignalCrossReference_1_0_0()); }
(
{ before(grammarAccess.getDataCurrentAccess().getSignalSignalEsterelIDTerminalRuleCall_1_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getDataCurrentAccess().getSignalSignalEsterelIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getDataCurrentAccess().getSignalSignalCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataCurrent__TickAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataCurrentAccess().getTickTickParserRuleCall_1_1_0()); }
	ruleTick{ after(grammarAccess.getDataCurrentAccess().getTickTickParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataPre__SignalAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPreAccess().getSignalSignalCrossReference_3_0_0()); }
(
{ before(grammarAccess.getDataPreAccess().getSignalSignalEsterelIDTerminalRuleCall_3_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getDataPreAccess().getSignalSignalEsterelIDTerminalRuleCall_3_0_0_1()); }
)
{ after(grammarAccess.getDataPreAccess().getSignalSignalCrossReference_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataPre__TickAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataPreAccess().getTickTickParserRuleCall_3_1_0()); }
	ruleTick{ after(grammarAccess.getDataPreAccess().getTickTickParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataTrap__TrapAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataTrapAccess().getTrapTrapDeclCrossReference_1_0()); }
(
{ before(grammarAccess.getDataTrapAccess().getTrapTrapDeclEsterelIDTerminalRuleCall_1_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getDataTrapAccess().getTrapTrapDeclEsterelIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getDataTrapAccess().getTrapTrapDeclCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataFunction__FunctionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFunctionAccess().getFunctionFunctionCrossReference_0_0()); }
(
{ before(grammarAccess.getDataFunctionAccess().getFunctionFunctionEsterelIDTerminalRuleCall_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getDataFunctionAccess().getFunctionFunctionEsterelIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getDataFunctionAccess().getFunctionFunctionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataFunction__DataExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFunctionAccess().getDataExprDataExprParserRuleCall_2_0()); }
	ruleDataExpr{ after(grammarAccess.getDataFunctionAccess().getDataExprDataExprParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DataFunction__DataExprAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDataFunctionAccess().getDataExprDataExprParserRuleCall_3_1_0()); }
	ruleDataExpr{ after(grammarAccess.getDataFunctionAccess().getDataExprDataExprParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExpr__AndExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprAccess().getAndExprSigExprANDParserRuleCall_0_0()); }
	ruleSigExprAND{ after(grammarAccess.getSigExprAccess().getAndExprSigExprANDParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExpr__AndExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprAccess().getAndExprSigExprANDParserRuleCall_1_1_0()); }
	ruleSigExprAND{ after(grammarAccess.getSigExprAccess().getAndExprSigExprANDParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExprAND__UnaExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprANDAccess().getUnaExprSigExprUnaryParserRuleCall_0_0()); }
	ruleSigExprUnary{ after(grammarAccess.getSigExprANDAccess().getUnaExprSigExprUnaryParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExprAND__UnaExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprANDAccess().getUnaExprSigExprUnaryParserRuleCall_1_1_0()); }
	ruleSigExprUnary{ after(grammarAccess.getSigExprANDAccess().getUnaExprSigExprUnaryParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExprUnary__ExprAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprUnaryAccess().getExprEsterelIDTerminalRuleCall_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getSigExprUnaryAccess().getExprEsterelIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExprUnary__SigExprAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprUnaryAccess().getSigExprSigExprParserRuleCall_1_1_0()); }
	ruleSigExpr{ after(grammarAccess.getSigExprUnaryAccess().getSigExprSigExprParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SigExprUnary__SigExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSigExprUnaryAccess().getSigExprSigExprUnaryParserRuleCall_2_1_0()); }
	ruleSigExprUnary{ after(grammarAccess.getSigExprUnaryAccess().getSigExprSigExprUnaryParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__EventAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getEventDelayEventParserRuleCall_0_0()); }
	ruleDelayEvent{ after(grammarAccess.getDelayExprAccess().getEventDelayEventParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__ExprAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getExprDataExprParserRuleCall_1_0_0()); }
	ruleDataExpr{ after(grammarAccess.getDelayExprAccess().getExprDataExprParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__EventAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getEventDelayEventParserRuleCall_1_1_0()); }
	ruleDelayEvent{ after(grammarAccess.getDelayExprAccess().getEventDelayEventParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__SignalAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getSignalSignalCrossReference_0_0_0()); }
(
{ before(grammarAccess.getDelayEventAccess().getSignalSignalEsterelIDTerminalRuleCall_0_0_0_1()); }
	RULE_ESTERELID{ after(grammarAccess.getDelayEventAccess().getSignalSignalEsterelIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getDelayEventAccess().getSignalSignalCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__TickAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getTickTickParserRuleCall_0_1_0()); }
	ruleTick{ after(grammarAccess.getDelayEventAccess().getTickTickParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__TypeAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeEsterelIDTerminalRuleCall_0_1_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getChannelDescriptionAccess().getTypeEsterelIDTerminalRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__TypeAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeBaseTypeTerminalRuleCall_0_1_1_0()); }
	RULE_BASETYPE{ after(grammarAccess.getChannelDescriptionAccess().getTypeBaseTypeTerminalRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__TypeAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeEsterelIDTerminalRuleCall_1_1_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getChannelDescriptionAccess().getTypeEsterelIDTerminalRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__TypeAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeBaseTypeTerminalRuleCall_1_1_1_0()); }
	RULE_BASETYPE{ after(grammarAccess.getChannelDescriptionAccess().getTypeBaseTypeTerminalRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__DataExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getDataExprDataExprParserRuleCall_2_1_0()); }
	ruleDataExpr{ after(grammarAccess.getChannelDescriptionAccess().getDataExprDataExprParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__TypeAssignment_2_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeEsterelIDTerminalRuleCall_2_3_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getChannelDescriptionAccess().getTypeEsterelIDTerminalRuleCall_2_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__TypeAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeBaseTypeTerminalRuleCall_2_3_1_0()); }
	RULE_BASETYPE{ after(grammarAccess.getChannelDescriptionAccess().getTypeBaseTypeTerminalRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameEsterelIDTerminalRuleCall_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getSignalAccess().getNameEsterelIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__ChannelAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getChannelChannelDescriptionParserRuleCall_1_0()); }
	ruleChannelDescription{ after(grammarAccess.getSignalAccess().getChannelChannelDescriptionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getNameEsterelIDTerminalRuleCall_0_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getSensorAccess().getNameEsterelIDTerminalRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__TypeAssignment_0_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getTypeEsterelIDTerminalRuleCall_0_2_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getSensorAccess().getTypeEsterelIDTerminalRuleCall_0_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__TypeAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getTypeBaseTypeTerminalRuleCall_0_2_1_0()); }
	RULE_BASETYPE{ after(grammarAccess.getSensorAccess().getTypeBaseTypeTerminalRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getNameEsterelIDTerminalRuleCall_1_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getSensorAccess().getNameEsterelIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__TypeAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getTypeEsterelIDTerminalRuleCall_1_2_0_0()); }
	RULE_ESTERELID{ after(grammarAccess.getSensorAccess().getTypeEsterelIDTerminalRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__TypeAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getTypeBaseTypeTerminalRuleCall_1_2_1_0()); }
	RULE_BASETYPE{ after(grammarAccess.getSensorAccess().getTypeBaseTypeTerminalRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_FLOAT : ((RULE_INT '.' RULE_INT|RULE_INT ('.' RULE_INT)? ('e'|'E') ('-'|'+')? RULE_INT) 'f'?|RULE_INT 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_BASETYPE : ('boolean'|'integer'|'float'|'double'|'string');

RULE_ESTEREL_SL_COMMENT : '%' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ESTEREL_ML_COMMENT : '%' '{' ( options {greedy=false;} : . )*'}' '%';

RULE_ESTERELID : ('a'..'z'|'A'..'Z') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


