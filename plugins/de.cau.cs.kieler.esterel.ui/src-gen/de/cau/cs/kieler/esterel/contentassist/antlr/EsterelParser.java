/*
* generated by Xtext
*/
package de.cau.cs.kieler.esterel.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.CharStream;
import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.common.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.cau.cs.kieler.esterel.services.EsterelGrammarAccess;

public class EsterelParser extends AbstractContentAssistParser {
	
	@Inject
	private EsterelGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.cau.cs.kieler.esterel.contentassist.antlr.internal.InternalEsterelLexer createLexer(CharStream stream) {
		return new de.cau.cs.kieler.esterel.contentassist.antlr.internal.InternalEsterelLexer(stream);
	}
	
	@Override
	protected de.cau.cs.kieler.esterel.contentassist.antlr.internal.InternalEsterelParser createParser() {
		de.cau.cs.kieler.esterel.contentassist.antlr.internal.InternalEsterelParser result = new de.cau.cs.kieler.esterel.contentassist.antlr.internal.InternalEsterelParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				{
					put(grammarAccess.getEndModuleAccess().getAlternatives(), "rule__EndModule__Alternatives");
					put(grammarAccess.getModuleInterfaceAccess().getAlternatives(), "rule__ModuleInterface__Alternatives");
					put(grammarAccess.getSignalDeclAccess().getAlternatives(), "rule__SignalDecl__Alternatives");
					put(grammarAccess.getRelationTypeAccess().getAlternatives(), "rule__RelationType__Alternatives");
					put(grammarAccess.getOneTypeConstantDeclAccess().getAlternatives_3(), "rule__OneTypeConstantDecl__Alternatives_3");
					put(grammarAccess.getConstantValueAccess().getAlternatives(), "rule__ConstantValue__Alternatives");
					put(grammarAccess.getFunctionAccess().getIdListAlternatives_2_0_0(), "rule__Function__IdListAlternatives_2_0_0");
					put(grammarAccess.getFunctionAccess().getIdListAlternatives_2_1_1_0(), "rule__Function__IdListAlternatives_2_1_1_0");
					put(grammarAccess.getFunctionAccess().getAlternatives_5(), "rule__Function__Alternatives_5");
					put(grammarAccess.getProcedureAccess().getIdListAlternatives_2_0_0(), "rule__Procedure__IdListAlternatives_2_0_0");
					put(grammarAccess.getProcedureAccess().getIdListAlternatives_2_1_1_0(), "rule__Procedure__IdListAlternatives_2_1_1_0");
					put(grammarAccess.getProcedureAccess().getIdListAlternatives_5_0_0(), "rule__Procedure__IdListAlternatives_5_0_0");
					put(grammarAccess.getProcedureAccess().getIdListAlternatives_5_1_1_0(), "rule__Procedure__IdListAlternatives_5_1_1_0");
					put(grammarAccess.getAtomicStatementAccess().getAlternatives(), "rule__AtomicStatement__Alternatives");
					put(grammarAccess.getAbortBodyAccess().getAlternatives(), "rule__AbortBody__Alternatives");
					put(grammarAccess.getAwaitBodyAccess().getAlternatives(), "rule__AwaitBody__Alternatives");
					put(grammarAccess.getDoAccess().getAlternatives_2(), "rule__Do__Alternatives_2");
					put(grammarAccess.getEmitAccess().getAlternatives_1(), "rule__Emit__Alternatives_1");
					put(grammarAccess.getLoopAccess().getAlternatives_2(), "rule__Loop__Alternatives_2");
					put(grammarAccess.getPresentBodyAccess().getAlternatives(), "rule__PresentBody__Alternatives");
					put(grammarAccess.getPresentEventAccess().getAlternatives(), "rule__PresentEvent__Alternatives");
					put(grammarAccess.getRunAccess().getAlternatives(), "rule__Run__Alternatives");
					put(grammarAccess.getRenamingAccess().getAlternatives(), "rule__Renaming__Alternatives");
					put(grammarAccess.getSustainAccess().getAlternatives_1(), "rule__Sustain__Alternatives_1");
					put(grammarAccess.getVariableDeclAccess().getAlternatives_2(), "rule__VariableDecl__Alternatives_2");
					put(grammarAccess.getVariableDeclAccess().getAlternatives_3_4(), "rule__VariableDecl__Alternatives_3_4");
					put(grammarAccess.getWeakAbortBodyAccess().getAlternatives(), "rule__WeakAbortBody__Alternatives");
					put(grammarAccess.getDataExprAccess().getAlternatives(), "rule__DataExpr__Alternatives");
					put(grammarAccess.getDataOpAccess().getAlternatives(), "rule__DataOp__Alternatives");
					put(grammarAccess.getDataUnaryExprAccess().getAlternatives(), "rule__DataUnaryExpr__Alternatives");
					put(grammarAccess.getDataCurrentAccess().getAlternatives_1(), "rule__DataCurrent__Alternatives_1");
					put(grammarAccess.getDataPreAccess().getAlternatives_3(), "rule__DataPre__Alternatives_3");
					put(grammarAccess.getSigExprUnaryAccess().getAlternatives(), "rule__SigExprUnary__Alternatives");
					put(grammarAccess.getDelayExprAccess().getAlternatives(), "rule__DelayExpr__Alternatives");
					put(grammarAccess.getDelayEventAccess().getAlternatives(), "rule__DelayEvent__Alternatives");
					put(grammarAccess.getDelayEventAccess().getAlternatives_0(), "rule__DelayEvent__Alternatives_0");
					put(grammarAccess.getChannelDescriptionAccess().getAlternatives(), "rule__ChannelDescription__Alternatives");
					put(grammarAccess.getChannelDescriptionAccess().getAlternatives_0_1(), "rule__ChannelDescription__Alternatives_0_1");
					put(grammarAccess.getChannelDescriptionAccess().getAlternatives_1_1(), "rule__ChannelDescription__Alternatives_1_1");
					put(grammarAccess.getChannelDescriptionAccess().getAlternatives_2_3(), "rule__ChannelDescription__Alternatives_2_3");
					put(grammarAccess.getSensorAccess().getAlternatives(), "rule__Sensor__Alternatives");
					put(grammarAccess.getSensorAccess().getAlternatives_0_2(), "rule__Sensor__Alternatives_0_2");
					put(grammarAccess.getSensorAccess().getAlternatives_1_2(), "rule__Sensor__Alternatives_1_2");
					put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
					put(grammarAccess.getModuleAccess().getGroup(), "rule__Module__Group__0");
					put(grammarAccess.getEndModuleAccess().getGroup_0(), "rule__EndModule__Group_0__0");
					put(grammarAccess.getSignalDeclAccess().getGroup_0(), "rule__SignalDecl__Group_0__0");
					put(grammarAccess.getSignalDeclAccess().getGroup_0_3(), "rule__SignalDecl__Group_0_3__0");
					put(grammarAccess.getSignalDeclAccess().getGroup_1(), "rule__SignalDecl__Group_1__0");
					put(grammarAccess.getSignalDeclAccess().getGroup_1_3(), "rule__SignalDecl__Group_1_3__0");
					put(grammarAccess.getSignalDeclAccess().getGroup_2(), "rule__SignalDecl__Group_2__0");
					put(grammarAccess.getSignalDeclAccess().getGroup_2_3(), "rule__SignalDecl__Group_2_3__0");
					put(grammarAccess.getSignalDeclAccess().getGroup_3(), "rule__SignalDecl__Group_3__0");
					put(grammarAccess.getSignalDeclAccess().getGroup_3_3(), "rule__SignalDecl__Group_3_3__0");
					put(grammarAccess.getSensorDeclAccess().getGroup(), "rule__SensorDecl__Group__0");
					put(grammarAccess.getSensorDeclAccess().getGroup_2(), "rule__SensorDecl__Group_2__0");
					put(grammarAccess.getRelationDeclAccess().getGroup(), "rule__RelationDecl__Group__0");
					put(grammarAccess.getRelationDeclAccess().getGroup_3(), "rule__RelationDecl__Group_3__0");
					put(grammarAccess.getRelationImplicationAccess().getGroup(), "rule__RelationImplication__Group__0");
					put(grammarAccess.getRelationIncompatibilityAccess().getGroup(), "rule__RelationIncompatibility__Group__0");
					put(grammarAccess.getRelationIncompatibilityAccess().getGroup_3(), "rule__RelationIncompatibility__Group_3__0");
					put(grammarAccess.getTypeDeclAccess().getGroup(), "rule__TypeDecl__Group__0");
					put(grammarAccess.getTypeDeclAccess().getGroup_2(), "rule__TypeDecl__Group_2__0");
					put(grammarAccess.getConstantDeclAccess().getGroup(), "rule__ConstantDecl__Group__0");
					put(grammarAccess.getConstantDeclAccess().getGroup_2(), "rule__ConstantDecl__Group_2__0");
					put(grammarAccess.getOneTypeConstantDeclAccess().getGroup(), "rule__OneTypeConstantDecl__Group__0");
					put(grammarAccess.getOneTypeConstantDeclAccess().getGroup_1(), "rule__OneTypeConstantDecl__Group_1__0");
					put(grammarAccess.getConstantAccess().getGroup(), "rule__Constant__Group__0");
					put(grammarAccess.getConstantAccess().getGroup_1(), "rule__Constant__Group_1__0");
					put(grammarAccess.getConstantValueAccess().getGroup_1(), "rule__ConstantValue__Group_1__0");
					put(grammarAccess.getFunctionDeclAccess().getGroup(), "rule__FunctionDecl__Group__0");
					put(grammarAccess.getFunctionDeclAccess().getGroup_2(), "rule__FunctionDecl__Group_2__0");
					put(grammarAccess.getFunctionAccess().getGroup(), "rule__Function__Group__0");
					put(grammarAccess.getFunctionAccess().getGroup_2(), "rule__Function__Group_2__0");
					put(grammarAccess.getFunctionAccess().getGroup_2_1(), "rule__Function__Group_2_1__0");
					put(grammarAccess.getProcedureDeclAccess().getGroup(), "rule__ProcedureDecl__Group__0");
					put(grammarAccess.getProcedureDeclAccess().getGroup_2(), "rule__ProcedureDecl__Group_2__0");
					put(grammarAccess.getProcedureAccess().getGroup(), "rule__Procedure__Group__0");
					put(grammarAccess.getProcedureAccess().getGroup_2(), "rule__Procedure__Group_2__0");
					put(grammarAccess.getProcedureAccess().getGroup_2_1(), "rule__Procedure__Group_2_1__0");
					put(grammarAccess.getProcedureAccess().getGroup_5(), "rule__Procedure__Group_5__0");
					put(grammarAccess.getProcedureAccess().getGroup_5_1(), "rule__Procedure__Group_5_1__0");
					put(grammarAccess.getStatementAccess().getGroup(), "rule__Statement__Group__0");
					put(grammarAccess.getStatementAccess().getGroup_1(), "rule__Statement__Group_1__0");
					put(grammarAccess.getSequenceAccess().getGroup(), "rule__Sequence__Group__0");
					put(grammarAccess.getSequenceAccess().getGroup_1(), "rule__Sequence__Group_1__0");
					put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
					put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
					put(grammarAccess.getAbortAccess().getGroup(), "rule__Abort__Group__0");
					put(grammarAccess.getAbortEndAccess().getGroup(), "rule__AbortEnd__Group__0");
					put(grammarAccess.getAbortInstanceAccess().getGroup(), "rule__AbortInstance__Group__0");
					put(grammarAccess.getAbortInstanceAccess().getGroup_1(), "rule__AbortInstance__Group_1__0");
					put(grammarAccess.getAbortCaseAccess().getGroup(), "rule__AbortCase__Group__0");
					put(grammarAccess.getAbortCaseSingleAccess().getGroup(), "rule__AbortCaseSingle__Group__0");
					put(grammarAccess.getAbortCaseSingleAccess().getGroup_2(), "rule__AbortCaseSingle__Group_2__0");
					put(grammarAccess.getAwaitAccess().getGroup(), "rule__Await__Group__0");
					put(grammarAccess.getAwaitEndAccess().getGroup(), "rule__AwaitEnd__Group__0");
					put(grammarAccess.getAwaitInstanceAccess().getGroup(), "rule__AwaitInstance__Group__0");
					put(grammarAccess.getAwaitInstanceAccess().getGroup_1(), "rule__AwaitInstance__Group_1__0");
					put(grammarAccess.getAwaitCaseAccess().getGroup(), "rule__AwaitCase__Group__0");
					put(grammarAccess.getDoAccess().getGroup(), "rule__Do__Group__0");
					put(grammarAccess.getDoUptoAccess().getGroup(), "rule__DoUpto__Group__0");
					put(grammarAccess.getDoWatchingAccess().getGroup(), "rule__DoWatching__Group__0");
					put(grammarAccess.getDoWatchingEndAccess().getGroup(), "rule__DoWatchingEnd__Group__0");
					put(grammarAccess.getEmitAccess().getGroup(), "rule__Emit__Group__0");
					put(grammarAccess.getEmitAccess().getGroup_2(), "rule__Emit__Group_2__0");
					put(grammarAccess.getEveryDoAccess().getGroup(), "rule__EveryDo__Group__0");
					put(grammarAccess.getExitAccess().getGroup(), "rule__Exit__Group__0");
					put(grammarAccess.getExitAccess().getGroup_2(), "rule__Exit__Group_2__0");
					put(grammarAccess.getHaltAccess().getGroup(), "rule__Halt__Group__0");
					put(grammarAccess.getIfTestAccess().getGroup(), "rule__IfTest__Group__0");
					put(grammarAccess.getElsIfPartAccess().getGroup(), "rule__ElsIfPart__Group__0");
					put(grammarAccess.getElsIfAccess().getGroup(), "rule__ElsIf__Group__0");
					put(grammarAccess.getThenPartAccess().getGroup(), "rule__ThenPart__Group__0");
					put(grammarAccess.getElsePartAccess().getGroup(), "rule__ElsePart__Group__0");
					put(grammarAccess.getLoopAccess().getGroup(), "rule__Loop__Group__0");
					put(grammarAccess.getEndLoopAccess().getGroup(), "rule__EndLoop__Group__0");
					put(grammarAccess.getLoopEachAccess().getGroup(), "rule__LoopEach__Group__0");
					put(grammarAccess.getNothingAccess().getGroup(), "rule__Nothing__Group__0");
					put(grammarAccess.getPauseAccess().getGroup(), "rule__Pause__Group__0");
					put(grammarAccess.getPresentAccess().getGroup(), "rule__Present__Group__0");
					put(grammarAccess.getPresentEventBodyAccess().getGroup(), "rule__PresentEventBody__Group__0");
					put(grammarAccess.getPresentCaseListAccess().getGroup(), "rule__PresentCaseList__Group__0");
					put(grammarAccess.getPresentCaseAccess().getGroup(), "rule__PresentCase__Group__0");
					put(grammarAccess.getPresentCaseAccess().getGroup_2(), "rule__PresentCase__Group_2__0");
					put(grammarAccess.getPresentEventAccess().getGroup_1(), "rule__PresentEvent__Group_1__0");
					put(grammarAccess.getRepeatAccess().getGroup(), "rule__Repeat__Group__0");
					put(grammarAccess.getRunAccess().getGroup_0(), "rule__Run__Group_0__0");
					put(grammarAccess.getRunAccess().getGroup_0_2(), "rule__Run__Group_0_2__0");
					put(grammarAccess.getRunAccess().getGroup_1(), "rule__Run__Group_1__0");
					put(grammarAccess.getRunAccess().getGroup_1_2(), "rule__Run__Group_1_2__0");
					put(grammarAccess.getModuleRenamingAccess().getGroup(), "rule__ModuleRenaming__Group__0");
					put(grammarAccess.getModuleRenamingAccess().getGroup_1(), "rule__ModuleRenaming__Group_1__0");
					put(grammarAccess.getRenamingListAccess().getGroup(), "rule__RenamingList__Group__0");
					put(grammarAccess.getRenamingListAccess().getGroup_1(), "rule__RenamingList__Group_1__0");
					put(grammarAccess.getRenamingAccess().getGroup_0(), "rule__Renaming__Group_0__0");
					put(grammarAccess.getRenamingAccess().getGroup_0_2(), "rule__Renaming__Group_0_2__0");
					put(grammarAccess.getRenamingAccess().getGroup_1(), "rule__Renaming__Group_1__0");
					put(grammarAccess.getRenamingAccess().getGroup_1_2(), "rule__Renaming__Group_1_2__0");
					put(grammarAccess.getRenamingAccess().getGroup_2(), "rule__Renaming__Group_2__0");
					put(grammarAccess.getRenamingAccess().getGroup_2_2(), "rule__Renaming__Group_2_2__0");
					put(grammarAccess.getRenamingAccess().getGroup_3(), "rule__Renaming__Group_3__0");
					put(grammarAccess.getRenamingAccess().getGroup_3_2(), "rule__Renaming__Group_3_2__0");
					put(grammarAccess.getTypeRenamingAccess().getGroup(), "rule__TypeRenaming__Group__0");
					put(grammarAccess.getConstantRenamingAccess().getGroup(), "rule__ConstantRenaming__Group__0");
					put(grammarAccess.getFunctionRenamingAccess().getGroup(), "rule__FunctionRenaming__Group__0");
					put(grammarAccess.getProcedureRenamingAccess().getGroup(), "rule__ProcedureRenaming__Group__0");
					put(grammarAccess.getSignalRenamingAccess().getGroup(), "rule__SignalRenaming__Group__0");
					put(grammarAccess.getLocalSignalDeclAccess().getGroup(), "rule__LocalSignalDecl__Group__0");
					put(grammarAccess.getLocalSignalListAccess().getGroup(), "rule__LocalSignalList__Group__0");
					put(grammarAccess.getLocalSignalListAccess().getGroup_2(), "rule__LocalSignalList__Group_2__0");
					put(grammarAccess.getSuspendAccess().getGroup(), "rule__Suspend__Group__0");
					put(grammarAccess.getSustainAccess().getGroup(), "rule__Sustain__Group__0");
					put(grammarAccess.getSustainAccess().getGroup_2(), "rule__Sustain__Group_2__0");
					put(grammarAccess.getTrapAccess().getGroup(), "rule__Trap__Group__0");
					put(grammarAccess.getTrapDeclListAccess().getGroup(), "rule__TrapDeclList__Group__0");
					put(grammarAccess.getTrapDeclListAccess().getGroup_1(), "rule__TrapDeclList__Group_1__0");
					put(grammarAccess.getTrapDeclAccess().getGroup(), "rule__TrapDecl__Group__0");
					put(grammarAccess.getTrapHandlerListAccess().getGroup(), "rule__TrapHandlerList__Group__0");
					put(grammarAccess.getTrapHandlerAccess().getGroup(), "rule__TrapHandler__Group__0");
					put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
					put(grammarAccess.getVariableDeclAccess().getGroup(), "rule__VariableDecl__Group__0");
					put(grammarAccess.getVariableDeclAccess().getGroup_3(), "rule__VariableDecl__Group_3__0");
					put(grammarAccess.getVariableListAccess().getGroup(), "rule__VariableList__Group__0");
					put(grammarAccess.getVariableListAccess().getGroup_1(), "rule__VariableList__Group_1__0");
					put(grammarAccess.getVariableListAccess().getGroup_2(), "rule__VariableList__Group_2__0");
					put(grammarAccess.getVariableListAccess().getGroup_2_3(), "rule__VariableList__Group_2_3__0");
					put(grammarAccess.getWeakAbortAccess().getGroup(), "rule__WeakAbort__Group__0");
					put(grammarAccess.getWeakAbortEndAccess().getGroup(), "rule__WeakAbortEnd__Group__0");
					put(grammarAccess.getWeakAbortEndAccess().getGroup_1(), "rule__WeakAbortEnd__Group_1__0");
					put(grammarAccess.getWeakAbortInstanceAccess().getGroup(), "rule__WeakAbortInstance__Group__0");
					put(grammarAccess.getWeakAbortInstanceAccess().getGroup_1(), "rule__WeakAbortInstance__Group_1__0");
					put(grammarAccess.getWeakAbortCaseAccess().getGroup(), "rule__WeakAbortCase__Group__0");
					put(grammarAccess.getDataExprAccess().getGroup_0(), "rule__DataExpr__Group_0__0");
					put(grammarAccess.getDataExprAccess().getGroup_0_1(), "rule__DataExpr__Group_0_1__0");
					put(grammarAccess.getDataExprAccess().getGroup_1(), "rule__DataExpr__Group_1__0");
					put(grammarAccess.getDataBlockAccess().getGroup(), "rule__DataBlock__Group__0");
					put(grammarAccess.getDataCurrentAccess().getGroup(), "rule__DataCurrent__Group__0");
					put(grammarAccess.getDataPreAccess().getGroup(), "rule__DataPre__Group__0");
					put(grammarAccess.getDataTrapAccess().getGroup(), "rule__DataTrap__Group__0");
					put(grammarAccess.getDataFunctionAccess().getGroup(), "rule__DataFunction__Group__0");
					put(grammarAccess.getDataFunctionAccess().getGroup_3(), "rule__DataFunction__Group_3__0");
					put(grammarAccess.getSigExprAccess().getGroup(), "rule__SigExpr__Group__0");
					put(grammarAccess.getSigExprAccess().getGroup_1(), "rule__SigExpr__Group_1__0");
					put(grammarAccess.getSigExprANDAccess().getGroup(), "rule__SigExprAND__Group__0");
					put(grammarAccess.getSigExprANDAccess().getGroup_1(), "rule__SigExprAND__Group_1__0");
					put(grammarAccess.getSigExprUnaryAccess().getGroup_1(), "rule__SigExprUnary__Group_1__0");
					put(grammarAccess.getSigExprUnaryAccess().getGroup_2(), "rule__SigExprUnary__Group_2__0");
					put(grammarAccess.getDelayExprAccess().getGroup_1(), "rule__DelayExpr__Group_1__0");
					put(grammarAccess.getDelayEventAccess().getGroup_1(), "rule__DelayEvent__Group_1__0");
					put(grammarAccess.getDelayEventAccess().getGroup_2(), "rule__DelayEvent__Group_2__0");
					put(grammarAccess.getChannelDescriptionAccess().getGroup_0(), "rule__ChannelDescription__Group_0__0");
					put(grammarAccess.getChannelDescriptionAccess().getGroup_1(), "rule__ChannelDescription__Group_1__0");
					put(grammarAccess.getChannelDescriptionAccess().getGroup_2(), "rule__ChannelDescription__Group_2__0");
					put(grammarAccess.getSignalAccess().getGroup(), "rule__Signal__Group__0");
					put(grammarAccess.getSensorAccess().getGroup_0(), "rule__Sensor__Group_0__0");
					put(grammarAccess.getSensorAccess().getGroup_1(), "rule__Sensor__Group_1__0");
					put(grammarAccess.getProgramAccess().getModuleAssignment_0(), "rule__Program__ModuleAssignment_0");
					put(grammarAccess.getProgramAccess().getModuleAssignment_1(), "rule__Program__ModuleAssignment_1");
					put(grammarAccess.getModuleAccess().getNameAssignment_1(), "rule__Module__NameAssignment_1");
					put(grammarAccess.getModuleAccess().getModIntAssignment_3(), "rule__Module__ModIntAssignment_3");
					put(grammarAccess.getModuleAccess().getModBodyAssignment_4(), "rule__Module__ModBodyAssignment_4");
					put(grammarAccess.getModuleBodyAccess().getStatementAssignment(), "rule__ModuleBody__StatementAssignment");
					put(grammarAccess.getModuleInterfaceAccess().getIntSignalDeclAssignment_0(), "rule__ModuleInterface__IntSignalDeclAssignment_0");
					put(grammarAccess.getModuleInterfaceAccess().getIntTypeDeclAssignment_1(), "rule__ModuleInterface__IntTypeDeclAssignment_1");
					put(grammarAccess.getModuleInterfaceAccess().getIntSensorDeclAssignment_2(), "rule__ModuleInterface__IntSensorDeclAssignment_2");
					put(grammarAccess.getModuleInterfaceAccess().getIntConstantDeclAssignment_3(), "rule__ModuleInterface__IntConstantDeclAssignment_3");
					put(grammarAccess.getModuleInterfaceAccess().getIntRelationDeclAssignment_4(), "rule__ModuleInterface__IntRelationDeclAssignment_4");
					put(grammarAccess.getModuleInterfaceAccess().getIntFunctionDeclAssignment_5(), "rule__ModuleInterface__IntFunctionDeclAssignment_5");
					put(grammarAccess.getModuleInterfaceAccess().getIntProcedureDeclAssignment_6(), "rule__ModuleInterface__IntProcedureDeclAssignment_6");
					put(grammarAccess.getSignalDeclAccess().getSignalAssignment_0_2(), "rule__SignalDecl__SignalAssignment_0_2");
					put(grammarAccess.getSignalDeclAccess().getSignalAssignment_0_3_1(), "rule__SignalDecl__SignalAssignment_0_3_1");
					put(grammarAccess.getSignalDeclAccess().getSignalAssignment_1_2(), "rule__SignalDecl__SignalAssignment_1_2");
					put(grammarAccess.getSignalDeclAccess().getSignalAssignment_1_3_1(), "rule__SignalDecl__SignalAssignment_1_3_1");
					put(grammarAccess.getSignalDeclAccess().getSignalAssignment_2_2(), "rule__SignalDecl__SignalAssignment_2_2");
					put(grammarAccess.getSignalDeclAccess().getSignalAssignment_2_3_1(), "rule__SignalDecl__SignalAssignment_2_3_1");
					put(grammarAccess.getSignalDeclAccess().getSignalAssignment_3_2(), "rule__SignalDecl__SignalAssignment_3_2");
					put(grammarAccess.getSignalDeclAccess().getSignalAssignment_3_3_1(), "rule__SignalDecl__SignalAssignment_3_3_1");
					put(grammarAccess.getSensorDeclAccess().getSensorAssignment_1(), "rule__SensorDecl__SensorAssignment_1");
					put(grammarAccess.getSensorDeclAccess().getSensorAssignment_2_1(), "rule__SensorDecl__SensorAssignment_2_1");
					put(grammarAccess.getRelationDeclAccess().getRelationAssignment_2(), "rule__RelationDecl__RelationAssignment_2");
					put(grammarAccess.getRelationDeclAccess().getRelationAssignment_3_1(), "rule__RelationDecl__RelationAssignment_3_1");
					put(grammarAccess.getRelationImplicationAccess().getFirstAssignment_0(), "rule__RelationImplication__FirstAssignment_0");
					put(grammarAccess.getRelationImplicationAccess().getTypeAssignment_1(), "rule__RelationImplication__TypeAssignment_1");
					put(grammarAccess.getRelationImplicationAccess().getSecondAssignment_2(), "rule__RelationImplication__SecondAssignment_2");
					put(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_0(), "rule__RelationIncompatibility__IncompAssignment_0");
					put(grammarAccess.getRelationIncompatibilityAccess().getTypeAssignment_1(), "rule__RelationIncompatibility__TypeAssignment_1");
					put(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_2(), "rule__RelationIncompatibility__IncompAssignment_2");
					put(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_3_1(), "rule__RelationIncompatibility__IncompAssignment_3_1");
					put(grammarAccess.getTypeDeclAccess().getTypeAssignment_1(), "rule__TypeDecl__TypeAssignment_1");
					put(grammarAccess.getTypeDeclAccess().getTypeAssignment_2_1(), "rule__TypeDecl__TypeAssignment_2_1");
					put(grammarAccess.getTypeAccess().getNameAssignment(), "rule__Type__NameAssignment");
					put(grammarAccess.getConstantDeclAccess().getConstantAssignment_1(), "rule__ConstantDecl__ConstantAssignment_1");
					put(grammarAccess.getConstantDeclAccess().getConstantAssignment_2_1(), "rule__ConstantDecl__ConstantAssignment_2_1");
					put(grammarAccess.getOneTypeConstantDeclAccess().getConstantAssignment_0(), "rule__OneTypeConstantDecl__ConstantAssignment_0");
					put(grammarAccess.getOneTypeConstantDeclAccess().getConstantAssignment_1_1(), "rule__OneTypeConstantDecl__ConstantAssignment_1_1");
					put(grammarAccess.getOneTypeConstantDeclAccess().getTypeAssignment_3_0(), "rule__OneTypeConstantDecl__TypeAssignment_3_0");
					put(grammarAccess.getOneTypeConstantDeclAccess().getTypeAssignment_3_1(), "rule__OneTypeConstantDecl__TypeAssignment_3_1");
					put(grammarAccess.getConstantAccess().getNameAssignment_0(), "rule__Constant__NameAssignment_0");
					put(grammarAccess.getConstantAccess().getValueAssignment_1_1(), "rule__Constant__ValueAssignment_1_1");
					put(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_1(), "rule__FunctionDecl__FunctionAssignment_1");
					put(grammarAccess.getFunctionDeclAccess().getFunctionAssignment_2_1(), "rule__FunctionDecl__FunctionAssignment_2_1");
					put(grammarAccess.getFunctionAccess().getNameAssignment_0(), "rule__Function__NameAssignment_0");
					put(grammarAccess.getFunctionAccess().getIdListAssignment_2_0(), "rule__Function__IdListAssignment_2_0");
					put(grammarAccess.getFunctionAccess().getIdListAssignment_2_1_1(), "rule__Function__IdListAssignment_2_1_1");
					put(grammarAccess.getFunctionAccess().getTypeAssignment_5_0(), "rule__Function__TypeAssignment_5_0");
					put(grammarAccess.getFunctionAccess().getTypeAssignment_5_1(), "rule__Function__TypeAssignment_5_1");
					put(grammarAccess.getProcedureDeclAccess().getProcedureAssignment_1(), "rule__ProcedureDecl__ProcedureAssignment_1");
					put(grammarAccess.getProcedureDeclAccess().getProcedureAssignment_2_1(), "rule__ProcedureDecl__ProcedureAssignment_2_1");
					put(grammarAccess.getProcedureAccess().getNameAssignment_0(), "rule__Procedure__NameAssignment_0");
					put(grammarAccess.getProcedureAccess().getIdListAssignment_2_0(), "rule__Procedure__IdListAssignment_2_0");
					put(grammarAccess.getProcedureAccess().getIdListAssignment_2_1_1(), "rule__Procedure__IdListAssignment_2_1_1");
					put(grammarAccess.getProcedureAccess().getIdListAssignment_5_0(), "rule__Procedure__IdListAssignment_5_0");
					put(grammarAccess.getProcedureAccess().getIdListAssignment_5_1_1(), "rule__Procedure__IdListAssignment_5_1_1");
					put(grammarAccess.getStatementAccess().getRightAssignment_1_2(), "rule__Statement__RightAssignment_1_2");
					put(grammarAccess.getSequenceAccess().getRightAssignment_1_2(), "rule__Sequence__RightAssignment_1_2");
					put(grammarAccess.getBlockAccess().getStatementAssignment_1(), "rule__Block__StatementAssignment_1");
					put(grammarAccess.getAssignmentAccess().getVariableAssignment_0(), "rule__Assignment__VariableAssignment_0");
					put(grammarAccess.getAssignmentAccess().getExprAssignment_2(), "rule__Assignment__ExprAssignment_2");
					put(grammarAccess.getAbortAccess().getStatementAssignment_1(), "rule__Abort__StatementAssignment_1");
					put(grammarAccess.getAbortAccess().getBodyAssignment_3(), "rule__Abort__BodyAssignment_3");
					put(grammarAccess.getAbortInstanceAccess().getDelayAssignment_0(), "rule__AbortInstance__DelayAssignment_0");
					put(grammarAccess.getAbortInstanceAccess().getStatementAssignment_1_1(), "rule__AbortInstance__StatementAssignment_1_1");
					put(grammarAccess.getAbortInstanceAccess().getEndAssignment_1_2(), "rule__AbortInstance__EndAssignment_1_2");
					put(grammarAccess.getAbortCaseAccess().getCasesAssignment_0(), "rule__AbortCase__CasesAssignment_0");
					put(grammarAccess.getAbortCaseAccess().getCasesAssignment_1(), "rule__AbortCase__CasesAssignment_1");
					put(grammarAccess.getAbortCaseAccess().getEndAssignment_2(), "rule__AbortCase__EndAssignment_2");
					put(grammarAccess.getAbortCaseSingleAccess().getDelayAssignment_1(), "rule__AbortCaseSingle__DelayAssignment_1");
					put(grammarAccess.getAbortCaseSingleAccess().getStatementAssignment_2_1(), "rule__AbortCaseSingle__StatementAssignment_2_1");
					put(grammarAccess.getAwaitAccess().getBodyAssignment_1(), "rule__Await__BodyAssignment_1");
					put(grammarAccess.getAwaitInstanceAccess().getStatementAssignment_1_1(), "rule__AwaitInstance__StatementAssignment_1_1");
					put(grammarAccess.getAwaitInstanceAccess().getEndAssignment_1_2(), "rule__AwaitInstance__EndAssignment_1_2");
					put(grammarAccess.getAwaitCaseAccess().getCasesAssignment_0(), "rule__AwaitCase__CasesAssignment_0");
					put(grammarAccess.getAwaitCaseAccess().getCasesAssignment_1(), "rule__AwaitCase__CasesAssignment_1");
					put(grammarAccess.getAwaitCaseAccess().getEndAssignment_2(), "rule__AwaitCase__EndAssignment_2");
					put(grammarAccess.getDoAccess().getStatementAssignment_1(), "rule__Do__StatementAssignment_1");
					put(grammarAccess.getDoAccess().getEndAssignment_2_0(), "rule__Do__EndAssignment_2_0");
					put(grammarAccess.getDoAccess().getEndAssignment_2_1(), "rule__Do__EndAssignment_2_1");
					put(grammarAccess.getDoUptoAccess().getExprAssignment_1(), "rule__DoUpto__ExprAssignment_1");
					put(grammarAccess.getDoWatchingAccess().getDelayAssignment_1(), "rule__DoWatching__DelayAssignment_1");
					put(grammarAccess.getDoWatchingAccess().getEndAssignment_2(), "rule__DoWatching__EndAssignment_2");
					put(grammarAccess.getDoWatchingEndAccess().getStatementAssignment_1(), "rule__DoWatchingEnd__StatementAssignment_1");
					put(grammarAccess.getEmitAccess().getSignalAssignment_1_0(), "rule__Emit__SignalAssignment_1_0");
					put(grammarAccess.getEmitAccess().getTickAssignment_1_1(), "rule__Emit__TickAssignment_1_1");
					put(grammarAccess.getEmitAccess().getExprAssignment_2_1(), "rule__Emit__ExprAssignment_2_1");
					put(grammarAccess.getEveryDoAccess().getDelayAssignment_1(), "rule__EveryDo__DelayAssignment_1");
					put(grammarAccess.getEveryDoAccess().getStatementAssignment_3(), "rule__EveryDo__StatementAssignment_3");
					put(grammarAccess.getExitAccess().getTrapAssignment_1(), "rule__Exit__TrapAssignment_1");
					put(grammarAccess.getExitAccess().getDataExprAssignment_2_1(), "rule__Exit__DataExprAssignment_2_1");
					put(grammarAccess.getIfTestAccess().getExprAssignment_1(), "rule__IfTest__ExprAssignment_1");
					put(grammarAccess.getIfTestAccess().getThenAssignment_2(), "rule__IfTest__ThenAssignment_2");
					put(grammarAccess.getIfTestAccess().getElseIfAssignment_3(), "rule__IfTest__ElseIfAssignment_3");
					put(grammarAccess.getIfTestAccess().getElseAssignment_4(), "rule__IfTest__ElseAssignment_4");
					put(grammarAccess.getElsIfPartAccess().getElsifAssignment_0(), "rule__ElsIfPart__ElsifAssignment_0");
					put(grammarAccess.getElsIfPartAccess().getElsifAssignment_1(), "rule__ElsIfPart__ElsifAssignment_1");
					put(grammarAccess.getElsIfAccess().getExprAssignment_1(), "rule__ElsIf__ExprAssignment_1");
					put(grammarAccess.getElsIfAccess().getThenAssignment_2(), "rule__ElsIf__ThenAssignment_2");
					put(grammarAccess.getThenPartAccess().getStatementAssignment_1(), "rule__ThenPart__StatementAssignment_1");
					put(grammarAccess.getElsePartAccess().getStatementAssignment_1(), "rule__ElsePart__StatementAssignment_1");
					put(grammarAccess.getLoopAccess().getBodyAssignment_1(), "rule__Loop__BodyAssignment_1");
					put(grammarAccess.getLoopAccess().getEndAssignment_2_1(), "rule__Loop__EndAssignment_2_1");
					put(grammarAccess.getLoopDelayAccess().getDelayAssignment(), "rule__LoopDelay__DelayAssignment");
					put(grammarAccess.getLoopBodyAccess().getStatementAssignment(), "rule__LoopBody__StatementAssignment");
					put(grammarAccess.getPresentAccess().getBodyAssignment_1(), "rule__Present__BodyAssignment_1");
					put(grammarAccess.getPresentAccess().getElsePartAssignment_2(), "rule__Present__ElsePartAssignment_2");
					put(grammarAccess.getPresentEventBodyAccess().getEventAssignment_0(), "rule__PresentEventBody__EventAssignment_0");
					put(grammarAccess.getPresentEventBodyAccess().getThenPartAssignment_1(), "rule__PresentEventBody__ThenPartAssignment_1");
					put(grammarAccess.getPresentCaseListAccess().getCaseAssignment_0(), "rule__PresentCaseList__CaseAssignment_0");
					put(grammarAccess.getPresentCaseListAccess().getCaseAssignment_1(), "rule__PresentCaseList__CaseAssignment_1");
					put(grammarAccess.getPresentCaseAccess().getEventAssignment_1(), "rule__PresentCase__EventAssignment_1");
					put(grammarAccess.getPresentCaseAccess().getStatementAssignment_2_1(), "rule__PresentCase__StatementAssignment_2_1");
					put(grammarAccess.getPresentEventAccess().getExpressionAssignment_0(), "rule__PresentEvent__ExpressionAssignment_0");
					put(grammarAccess.getPresentEventAccess().getExpressionAssignment_1_1(), "rule__PresentEvent__ExpressionAssignment_1_1");
					put(grammarAccess.getRepeatAccess().getPositiveAssignment_0(), "rule__Repeat__PositiveAssignment_0");
					put(grammarAccess.getRepeatAccess().getDataExprAssignment_2(), "rule__Repeat__DataExprAssignment_2");
					put(grammarAccess.getRepeatAccess().getStatementAssignment_4(), "rule__Repeat__StatementAssignment_4");
					put(grammarAccess.getRunAccess().getModuleAssignment_0_1(), "rule__Run__ModuleAssignment_0_1");
					put(grammarAccess.getRunAccess().getListAssignment_0_2_1(), "rule__Run__ListAssignment_0_2_1");
					put(grammarAccess.getRunAccess().getModuleAssignment_1_1(), "rule__Run__ModuleAssignment_1_1");
					put(grammarAccess.getRunAccess().getListAssignment_1_2_1(), "rule__Run__ListAssignment_1_2_1");
					put(grammarAccess.getModuleRenamingAccess().getModuleAssignment_0(), "rule__ModuleRenaming__ModuleAssignment_0");
					put(grammarAccess.getModuleRenamingAccess().getRenamedAssignment_1_0(), "rule__ModuleRenaming__RenamedAssignment_1_0");
					put(grammarAccess.getModuleRenamingAccess().getNewNameAssignment_1_1(), "rule__ModuleRenaming__NewNameAssignment_1_1");
					put(grammarAccess.getRenamingListAccess().getListAssignment_0(), "rule__RenamingList__ListAssignment_0");
					put(grammarAccess.getRenamingListAccess().getListAssignment_1_1(), "rule__RenamingList__ListAssignment_1_1");
					put(grammarAccess.getRenamingAccess().getRenamingAssignment_0_1(), "rule__Renaming__RenamingAssignment_0_1");
					put(grammarAccess.getRenamingAccess().getRenamingAssignment_0_2_1(), "rule__Renaming__RenamingAssignment_0_2_1");
					put(grammarAccess.getRenamingAccess().getRenamingAssignment_1_1(), "rule__Renaming__RenamingAssignment_1_1");
					put(grammarAccess.getRenamingAccess().getRenamingAssignment_1_2_1(), "rule__Renaming__RenamingAssignment_1_2_1");
					put(grammarAccess.getRenamingAccess().getRenamingAssignment_2_1(), "rule__Renaming__RenamingAssignment_2_1");
					put(grammarAccess.getRenamingAccess().getRenamingAssignment_2_2_1(), "rule__Renaming__RenamingAssignment_2_2_1");
					put(grammarAccess.getRenamingAccess().getRenamingAssignment_3_1(), "rule__Renaming__RenamingAssignment_3_1");
					put(grammarAccess.getRenamingAccess().getRenamingAssignment_3_2_1(), "rule__Renaming__RenamingAssignment_3_2_1");
					put(grammarAccess.getTypeRenamingAccess().getNewNameAssignment_0(), "rule__TypeRenaming__NewNameAssignment_0");
					put(grammarAccess.getTypeRenamingAccess().getOldNameAssignment_2(), "rule__TypeRenaming__OldNameAssignment_2");
					put(grammarAccess.getConstantRenamingAccess().getValueAssignment_0(), "rule__ConstantRenaming__ValueAssignment_0");
					put(grammarAccess.getConstantRenamingAccess().getNewNameAssignment_2(), "rule__ConstantRenaming__NewNameAssignment_2");
					put(grammarAccess.getFunctionRenamingAccess().getNewNameAssignment_0(), "rule__FunctionRenaming__NewNameAssignment_0");
					put(grammarAccess.getFunctionRenamingAccess().getOldNameAssignment_2(), "rule__FunctionRenaming__OldNameAssignment_2");
					put(grammarAccess.getProcedureRenamingAccess().getNewNameAssignment_0(), "rule__ProcedureRenaming__NewNameAssignment_0");
					put(grammarAccess.getProcedureRenamingAccess().getOldNameAssignment_2(), "rule__ProcedureRenaming__OldNameAssignment_2");
					put(grammarAccess.getSignalRenamingAccess().getNewNameAssignment_0(), "rule__SignalRenaming__NewNameAssignment_0");
					put(grammarAccess.getSignalRenamingAccess().getOldNameAssignment_2(), "rule__SignalRenaming__OldNameAssignment_2");
					put(grammarAccess.getLocalSignalDeclAccess().getSignalListAssignment_1(), "rule__LocalSignalDecl__SignalListAssignment_1");
					put(grammarAccess.getLocalSignalDeclAccess().getStatementAssignment_3(), "rule__LocalSignalDecl__StatementAssignment_3");
					put(grammarAccess.getLocalSignalListAccess().getSignalAssignment_1(), "rule__LocalSignalList__SignalAssignment_1");
					put(grammarAccess.getLocalSignalListAccess().getSignalAssignment_2_1(), "rule__LocalSignalList__SignalAssignment_2_1");
					put(grammarAccess.getSuspendAccess().getStatementAssignment_1(), "rule__Suspend__StatementAssignment_1");
					put(grammarAccess.getSuspendAccess().getDelayAssignment_3(), "rule__Suspend__DelayAssignment_3");
					put(grammarAccess.getSustainAccess().getSignalAssignment_1_0(), "rule__Sustain__SignalAssignment_1_0");
					put(grammarAccess.getSustainAccess().getTickAssignment_1_1(), "rule__Sustain__TickAssignment_1_1");
					put(grammarAccess.getSustainAccess().getDataExprAssignment_2_1(), "rule__Sustain__DataExprAssignment_2_1");
					put(grammarAccess.getTrapAccess().getTrapDeclListAssignment_1(), "rule__Trap__TrapDeclListAssignment_1");
					put(grammarAccess.getTrapAccess().getStatementAssignment_3(), "rule__Trap__StatementAssignment_3");
					put(grammarAccess.getTrapAccess().getTrapHandlerListAssignment_4(), "rule__Trap__TrapHandlerListAssignment_4");
					put(grammarAccess.getTrapDeclListAccess().getTrapDeclAssignment_0(), "rule__TrapDeclList__TrapDeclAssignment_0");
					put(grammarAccess.getTrapDeclListAccess().getTrapDeclAssignment_1_1(), "rule__TrapDeclList__TrapDeclAssignment_1_1");
					put(grammarAccess.getTrapDeclAccess().getNameAssignment_0(), "rule__TrapDecl__NameAssignment_0");
					put(grammarAccess.getTrapDeclAccess().getChannelDescAssignment_1(), "rule__TrapDecl__ChannelDescAssignment_1");
					put(grammarAccess.getTrapHandlerListAccess().getTrapHandlerAssignment_0(), "rule__TrapHandlerList__TrapHandlerAssignment_0");
					put(grammarAccess.getTrapHandlerListAccess().getTrapHandlerAssignment_1(), "rule__TrapHandlerList__TrapHandlerAssignment_1");
					put(grammarAccess.getTrapHandlerAccess().getTrapExprAssignment_1(), "rule__TrapHandler__TrapExprAssignment_1");
					put(grammarAccess.getTrapHandlerAccess().getStatementAssignment_3(), "rule__TrapHandler__StatementAssignment_3");
					put(grammarAccess.getVariableAccess().getVarDeclAssignment_1(), "rule__Variable__VarDeclAssignment_1");
					put(grammarAccess.getVariableAccess().getStatementAssignment_3(), "rule__Variable__StatementAssignment_3");
					put(grammarAccess.getVariableDeclAccess().getVarListAssignment_0(), "rule__VariableDecl__VarListAssignment_0");
					put(grammarAccess.getVariableDeclAccess().getTypeAssignment_2_0(), "rule__VariableDecl__TypeAssignment_2_0");
					put(grammarAccess.getVariableDeclAccess().getTypeAssignment_2_1(), "rule__VariableDecl__TypeAssignment_2_1");
					put(grammarAccess.getVariableDeclAccess().getVarListAssignment_3_2(), "rule__VariableDecl__VarListAssignment_3_2");
					put(grammarAccess.getVariableDeclAccess().getTypeAssignment_3_4_0(), "rule__VariableDecl__TypeAssignment_3_4_0");
					put(grammarAccess.getVariableDeclAccess().getTypeAssignment_3_4_1(), "rule__VariableDecl__TypeAssignment_3_4_1");
					put(grammarAccess.getVariableListAccess().getVariableAssignment_0(), "rule__VariableList__VariableAssignment_0");
					put(grammarAccess.getVariableListAccess().getExpressionAssignment_1_1(), "rule__VariableList__ExpressionAssignment_1_1");
					put(grammarAccess.getVariableListAccess().getVariableAssignment_2_2(), "rule__VariableList__VariableAssignment_2_2");
					put(grammarAccess.getVariableListAccess().getExpressionAssignment_2_3_1(), "rule__VariableList__ExpressionAssignment_2_3_1");
					put(grammarAccess.getWeakAbortAccess().getStatementAssignment_2(), "rule__WeakAbort__StatementAssignment_2");
					put(grammarAccess.getWeakAbortAccess().getWeakAbortBodyAssignment_4(), "rule__WeakAbort__WeakAbortBodyAssignment_4");
					put(grammarAccess.getWeakAbortInstanceAccess().getDelayAssignment_0(), "rule__WeakAbortInstance__DelayAssignment_0");
					put(grammarAccess.getWeakAbortInstanceAccess().getStatementAssignment_1_1(), "rule__WeakAbortInstance__StatementAssignment_1_1");
					put(grammarAccess.getWeakAbortInstanceAccess().getEndAssignment_1_2(), "rule__WeakAbortInstance__EndAssignment_1_2");
					put(grammarAccess.getWeakAbortCaseAccess().getCasesAssignment_0(), "rule__WeakAbortCase__CasesAssignment_0");
					put(grammarAccess.getWeakAbortCaseAccess().getCasesAssignment_1(), "rule__WeakAbortCase__CasesAssignment_1");
					put(grammarAccess.getWeakAbortCaseAccess().getEndAssignment_2(), "rule__WeakAbortCase__EndAssignment_2");
					put(grammarAccess.getDataExprAccess().getOpAssignment_0_1_1(), "rule__DataExpr__OpAssignment_0_1_1");
					put(grammarAccess.getDataExprAccess().getRightAssignment_0_1_2(), "rule__DataExpr__RightAssignment_0_1_2");
					put(grammarAccess.getDataExprAccess().getOpAssignment_1_0(), "rule__DataExpr__OpAssignment_1_0");
					put(grammarAccess.getDataExprAccess().getExprAssignment_1_1(), "rule__DataExpr__ExprAssignment_1_1");
					put(grammarAccess.getDataValueIDAccess().getValueAssignment(), "rule__DataValueID__ValueAssignment");
					put(grammarAccess.getDataValueFloatAccess().getValueAssignment(), "rule__DataValueFloat__ValueAssignment");
					put(grammarAccess.getDataValueBooleanAccess().getValueAssignment(), "rule__DataValueBoolean__ValueAssignment");
					put(grammarAccess.getDataValueIntAccess().getValueAssignment(), "rule__DataValueInt__ValueAssignment");
					put(grammarAccess.getDataValueStringAccess().getValueAssignment(), "rule__DataValueString__ValueAssignment");
					put(grammarAccess.getDataBlockAccess().getDataExprAssignment_1(), "rule__DataBlock__DataExprAssignment_1");
					put(grammarAccess.getDataCurrentAccess().getSignalAssignment_1_0(), "rule__DataCurrent__SignalAssignment_1_0");
					put(grammarAccess.getDataCurrentAccess().getTickAssignment_1_1(), "rule__DataCurrent__TickAssignment_1_1");
					put(grammarAccess.getDataPreAccess().getSignalAssignment_3_0(), "rule__DataPre__SignalAssignment_3_0");
					put(grammarAccess.getDataPreAccess().getTickAssignment_3_1(), "rule__DataPre__TickAssignment_3_1");
					put(grammarAccess.getDataTrapAccess().getTrapAssignment_1(), "rule__DataTrap__TrapAssignment_1");
					put(grammarAccess.getDataFunctionAccess().getFunctionAssignment_0(), "rule__DataFunction__FunctionAssignment_0");
					put(grammarAccess.getDataFunctionAccess().getDataExprAssignment_2(), "rule__DataFunction__DataExprAssignment_2");
					put(grammarAccess.getDataFunctionAccess().getDataExprAssignment_3_1(), "rule__DataFunction__DataExprAssignment_3_1");
					put(grammarAccess.getSigExprAccess().getAndExprAssignment_0(), "rule__SigExpr__AndExprAssignment_0");
					put(grammarAccess.getSigExprAccess().getAndExprAssignment_1_1(), "rule__SigExpr__AndExprAssignment_1_1");
					put(grammarAccess.getSigExprANDAccess().getUnaExprAssignment_0(), "rule__SigExprAND__UnaExprAssignment_0");
					put(grammarAccess.getSigExprANDAccess().getUnaExprAssignment_1_1(), "rule__SigExprAND__UnaExprAssignment_1_1");
					put(grammarAccess.getSigExprUnaryAccess().getExprAssignment_0(), "rule__SigExprUnary__ExprAssignment_0");
					put(grammarAccess.getSigExprUnaryAccess().getSigExprAssignment_1_1(), "rule__SigExprUnary__SigExprAssignment_1_1");
					put(grammarAccess.getSigExprUnaryAccess().getSigExprAssignment_2_1(), "rule__SigExprUnary__SigExprAssignment_2_1");
					put(grammarAccess.getDelayExprAccess().getEventAssignment_0(), "rule__DelayExpr__EventAssignment_0");
					put(grammarAccess.getDelayExprAccess().getExprAssignment_1_0(), "rule__DelayExpr__ExprAssignment_1_0");
					put(grammarAccess.getDelayExprAccess().getEventAssignment_1_1(), "rule__DelayExpr__EventAssignment_1_1");
					put(grammarAccess.getDelayEventAccess().getSignalAssignment_0_0(), "rule__DelayEvent__SignalAssignment_0_0");
					put(grammarAccess.getDelayEventAccess().getTickAssignment_0_1(), "rule__DelayEvent__TickAssignment_0_1");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_0_1_0(), "rule__ChannelDescription__TypeAssignment_0_1_0");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_0_1_1(), "rule__ChannelDescription__TypeAssignment_0_1_1");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_1_1_0(), "rule__ChannelDescription__TypeAssignment_1_1_0");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_1_1_1(), "rule__ChannelDescription__TypeAssignment_1_1_1");
					put(grammarAccess.getChannelDescriptionAccess().getDataExprAssignment_2_1(), "rule__ChannelDescription__DataExprAssignment_2_1");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_2_3_0(), "rule__ChannelDescription__TypeAssignment_2_3_0");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_2_3_1(), "rule__ChannelDescription__TypeAssignment_2_3_1");
					put(grammarAccess.getSignalAccess().getNameAssignment_0(), "rule__Signal__NameAssignment_0");
					put(grammarAccess.getSignalAccess().getChannelAssignment_1(), "rule__Signal__ChannelAssignment_1");
					put(grammarAccess.getSensorAccess().getNameAssignment_0_0(), "rule__Sensor__NameAssignment_0_0");
					put(grammarAccess.getSensorAccess().getTypeAssignment_0_2_0(), "rule__Sensor__TypeAssignment_0_2_0");
					put(grammarAccess.getSensorAccess().getTypeAssignment_0_2_1(), "rule__Sensor__TypeAssignment_0_2_1");
					put(grammarAccess.getSensorAccess().getNameAssignment_1_0(), "rule__Sensor__NameAssignment_1_0");
					put(grammarAccess.getSensorAccess().getTypeAssignment_1_2_0(), "rule__Sensor__TypeAssignment_1_2_0");
					put(grammarAccess.getSensorAccess().getTypeAssignment_1_2_1(), "rule__Sensor__TypeAssignment_1_2_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.cau.cs.kieler.esterel.contentassist.antlr.internal.InternalEsterelParser typedParser = (de.cau.cs.kieler.esterel.contentassist.antlr.internal.InternalEsterelParser) parser;
			typedParser.entryRuleProgram();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public EsterelGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(EsterelGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
