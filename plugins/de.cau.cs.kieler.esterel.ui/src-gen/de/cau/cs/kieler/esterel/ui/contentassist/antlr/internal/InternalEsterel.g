/*
* generated by Xtext
*/
grammar InternalEsterel;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.cau.cs.kieler.esterel.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.kieler.esterel.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.kieler.esterel.services.EsterelGrammarAccess;

}

@parser::members {
 
 	private EsterelGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(EsterelGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProgram
entryRuleProgram 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ESTEREL_SL_COMMENT", "RULE_ESTEREL_ML_COMMENT", "RULE_WS");
}
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule Program
ruleProgram
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_ESTEREL_SL_COMMENT", "RULE_ESTEREL_ML_COMMENT", "RULE_WS");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProgramAccess().getModulesAssignment()); }
(rule__Program__ModulesAssignment)*
{ after(grammarAccess.getProgramAccess().getModulesAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleModule
entryRuleModule 
:
{ before(grammarAccess.getModuleRule()); }
	 ruleModule
{ after(grammarAccess.getModuleRule()); } 
	 EOF 
;

// Rule Module
ruleModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleAccess().getGroup()); }
(rule__Module__Group__0)
{ after(grammarAccess.getModuleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEndModule
entryRuleEndModule 
:
{ before(grammarAccess.getEndModuleRule()); }
	 ruleEndModule
{ after(grammarAccess.getEndModuleRule()); } 
	 EOF 
;

// Rule EndModule
ruleEndModule
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEndModuleAccess().getAlternatives()); }
(rule__EndModule__Alternatives)
{ after(grammarAccess.getEndModuleAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleBody
entryRuleModuleBody 
:
{ before(grammarAccess.getModuleBodyRule()); }
	 ruleModuleBody
{ after(grammarAccess.getModuleBodyRule()); } 
	 EOF 
;

// Rule ModuleBody
ruleModuleBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleBodyAccess().getStatementsAssignment()); }
(rule__ModuleBody__StatementsAssignment)
{ after(grammarAccess.getModuleBodyAccess().getStatementsAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleInterface
entryRuleModuleInterface 
:
{ before(grammarAccess.getModuleInterfaceRule()); }
	 ruleModuleInterface
{ after(grammarAccess.getModuleInterfaceRule()); } 
	 EOF 
;

// Rule ModuleInterface
ruleModuleInterface
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getModuleInterfaceAccess().getAlternatives()); }
(rule__ModuleInterface__Alternatives)
{ after(grammarAccess.getModuleInterfaceAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getModuleInterfaceAccess().getAlternatives()); }
(rule__ModuleInterface__Alternatives)*
{ after(grammarAccess.getModuleInterfaceAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleChannelDescription
entryRuleChannelDescription 
:
{ before(grammarAccess.getChannelDescriptionRule()); }
	 ruleChannelDescription
{ after(grammarAccess.getChannelDescriptionRule()); } 
	 EOF 
;

// Rule ChannelDescription
ruleChannelDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getChannelDescriptionAccess().getAlternatives()); }
(rule__ChannelDescription__Alternatives)
{ after(grammarAccess.getChannelDescriptionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEsterelTypeIdentifier
entryRuleEsterelTypeIdentifier 
:
{ before(grammarAccess.getEsterelTypeIdentifierRule()); }
	 ruleEsterelTypeIdentifier
{ after(grammarAccess.getEsterelTypeIdentifierRule()); } 
	 EOF 
;

// Rule EsterelTypeIdentifier
ruleEsterelTypeIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getAlternatives()); }
(rule__EsterelTypeIdentifier__Alternatives)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeIdentifier
entryRuleTypeIdentifier 
:
{ before(grammarAccess.getTypeIdentifierRule()); }
	 ruleTypeIdentifier
{ after(grammarAccess.getTypeIdentifierRule()); } 
	 EOF 
;

// Rule TypeIdentifier
ruleTypeIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeIdentifierAccess().getAlternatives()); }
(rule__TypeIdentifier__Alternatives)
{ after(grammarAccess.getTypeIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalSignalDecl
entryRuleLocalSignalDecl 
:
{ before(grammarAccess.getLocalSignalDeclRule()); }
	 ruleLocalSignalDecl
{ after(grammarAccess.getLocalSignalDeclRule()); } 
	 EOF 
;

// Rule LocalSignalDecl
ruleLocalSignalDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getGroup()); }
(rule__LocalSignalDecl__Group__0)
{ after(grammarAccess.getLocalSignalDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalSignalList
entryRuleLocalSignalList 
:
{ before(grammarAccess.getLocalSignalListRule()); }
	 ruleLocalSignalList
{ after(grammarAccess.getLocalSignalListRule()); } 
	 EOF 
;

// Rule LocalSignalList
ruleLocalSignalList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalSignalListAccess().getGroup()); }
(rule__LocalSignalList__Group__0)
{ after(grammarAccess.getLocalSignalListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSensorDecl
entryRuleSensorDecl 
:
{ before(grammarAccess.getSensorDeclRule()); }
	 ruleSensorDecl
{ after(grammarAccess.getSensorDeclRule()); } 
	 EOF 
;

// Rule SensorDecl
ruleSensorDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSensorDeclAccess().getGroup()); }
(rule__SensorDecl__Group__0)
{ after(grammarAccess.getSensorDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSensorWithType
entryRuleSensorWithType 
:
{ before(grammarAccess.getSensorWithTypeRule()); }
	 ruleSensorWithType
{ after(grammarAccess.getSensorWithTypeRule()); } 
	 EOF 
;

// Rule SensorWithType
ruleSensorWithType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSensorWithTypeAccess().getAlternatives()); }
(rule__SensorWithType__Alternatives)
{ after(grammarAccess.getSensorWithTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSensor
entryRuleSensor 
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSensorAccess().getNameAssignment()); }
(rule__Sensor__NameAssignment)
{ after(grammarAccess.getSensorAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationDecl
entryRuleRelationDecl 
:
{ before(grammarAccess.getRelationDeclRule()); }
	 ruleRelationDecl
{ after(grammarAccess.getRelationDeclRule()); } 
	 EOF 
;

// Rule RelationDecl
ruleRelationDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationDeclAccess().getGroup()); }
(rule__RelationDecl__Group__0)
{ after(grammarAccess.getRelationDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationType
entryRuleRelationType 
:
{ before(grammarAccess.getRelationTypeRule()); }
	 ruleRelationType
{ after(grammarAccess.getRelationTypeRule()); } 
	 EOF 
;

// Rule RelationType
ruleRelationType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationTypeAccess().getAlternatives()); }
(rule__RelationType__Alternatives)
{ after(grammarAccess.getRelationTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationImplication
entryRuleRelationImplication 
:
{ before(grammarAccess.getRelationImplicationRule()); }
	 ruleRelationImplication
{ after(grammarAccess.getRelationImplicationRule()); } 
	 EOF 
;

// Rule RelationImplication
ruleRelationImplication
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationImplicationAccess().getGroup()); }
(rule__RelationImplication__Group__0)
{ after(grammarAccess.getRelationImplicationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRelationIncompatibility
entryRuleRelationIncompatibility 
:
{ before(grammarAccess.getRelationIncompatibilityRule()); }
	 ruleRelationIncompatibility
{ after(grammarAccess.getRelationIncompatibilityRule()); } 
	 EOF 
;

// Rule RelationIncompatibility
ruleRelationIncompatibility
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getGroup()); }
(rule__RelationIncompatibility__Group__0)
{ after(grammarAccess.getRelationIncompatibilityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeDecl
entryRuleTypeDecl 
:
{ before(grammarAccess.getTypeDeclRule()); }
	 ruleTypeDecl
{ after(grammarAccess.getTypeDeclRule()); } 
	 EOF 
;

// Rule TypeDecl
ruleTypeDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeDeclAccess().getGroup()); }
(rule__TypeDecl__Group__0)
{ after(grammarAccess.getTypeDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getNameAssignment()); }
(rule__Type__NameAssignment)
{ after(grammarAccess.getTypeAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDecls
entryRuleConstantDecls 
:
{ before(grammarAccess.getConstantDeclsRule()); }
	 ruleConstantDecls
{ after(grammarAccess.getConstantDeclsRule()); } 
	 EOF 
;

// Rule ConstantDecls
ruleConstantDecls
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantDeclsAccess().getGroup()); }
(rule__ConstantDecls__Group__0)
{ after(grammarAccess.getConstantDeclsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOneTypeConstantDecls
entryRuleOneTypeConstantDecls 
:
{ before(grammarAccess.getOneTypeConstantDeclsRule()); }
	 ruleOneTypeConstantDecls
{ after(grammarAccess.getOneTypeConstantDeclsRule()); } 
	 EOF 
;

// Rule OneTypeConstantDecls
ruleOneTypeConstantDecls
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getGroup()); }
(rule__OneTypeConstantDecls__Group__0)
{ after(grammarAccess.getOneTypeConstantDeclsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantWithValue
entryRuleConstantWithValue 
:
{ before(grammarAccess.getConstantWithValueRule()); }
	 ruleConstantWithValue
{ after(grammarAccess.getConstantWithValueRule()); } 
	 EOF 
;

// Rule ConstantWithValue
ruleConstantWithValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantWithValueAccess().getGroup()); }
(rule__ConstantWithValue__Group__0)
{ after(grammarAccess.getConstantWithValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstant
entryRuleConstant 
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAccess().getGroup()); }
(rule__Constant__Group__0)
{ after(grammarAccess.getConstantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantAtom
entryRuleConstantAtom 
:
{ before(grammarAccess.getConstantAtomRule()); }
	 ruleConstantAtom
{ after(grammarAccess.getConstantAtomRule()); } 
	 EOF 
;

// Rule ConstantAtom
ruleConstantAtom
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantAtomAccess().getAlternatives()); }
(rule__ConstantAtom__Alternatives)
{ after(grammarAccess.getConstantAtomAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantLiteral
entryRuleConstantLiteral 
:
{ before(grammarAccess.getConstantLiteralRule()); }
	 ruleConstantLiteral
{ after(grammarAccess.getConstantLiteralRule()); } 
	 EOF 
;

// Rule ConstantLiteral
ruleConstantLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantLiteralAccess().getAlternatives()); }
(rule__ConstantLiteral__Alternatives)
{ after(grammarAccess.getConstantLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionDecl
entryRuleFunctionDecl 
:
{ before(grammarAccess.getFunctionDeclRule()); }
	 ruleFunctionDecl
{ after(grammarAccess.getFunctionDeclRule()); } 
	 EOF 
;

// Rule FunctionDecl
ruleFunctionDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionDeclAccess().getGroup()); }
(rule__FunctionDecl__Group__0)
{ after(grammarAccess.getFunctionDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunction
entryRuleFunction 
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionAccess().getGroup()); }
(rule__Function__Group__0)
{ after(grammarAccess.getFunctionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedureDecl
entryRuleProcedureDecl 
:
{ before(grammarAccess.getProcedureDeclRule()); }
	 ruleProcedureDecl
{ after(grammarAccess.getProcedureDeclRule()); } 
	 EOF 
;

// Rule ProcedureDecl
ruleProcedureDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcedureDeclAccess().getGroup()); }
(rule__ProcedureDecl__Group__0)
{ after(grammarAccess.getProcedureDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedure
entryRuleProcedure 
:
{ before(grammarAccess.getProcedureRule()); }
	 ruleProcedure
{ after(grammarAccess.getProcedureRule()); } 
	 EOF 
;

// Rule Procedure
ruleProcedure
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcedureAccess().getGroup()); }
(rule__Procedure__Group__0)
{ after(grammarAccess.getProcedureAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaskDecl
entryRuleTaskDecl 
:
{ before(grammarAccess.getTaskDeclRule()); }
	 ruleTaskDecl
{ after(grammarAccess.getTaskDeclRule()); } 
	 EOF 
;

// Rule TaskDecl
ruleTaskDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskDeclAccess().getGroup()); }
(rule__TaskDecl__Group__0)
{ after(grammarAccess.getTaskDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTask
entryRuleTask 
:
{ before(grammarAccess.getTaskRule()); }
	 ruleTask
{ after(grammarAccess.getTaskRule()); } 
	 EOF 
;

// Rule Task
ruleTask
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskAccess().getGroup()); }
(rule__Task__Group__0)
{ after(grammarAccess.getTaskAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}







// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getGroup()); }
(rule__Statement__Group__0)
{ after(grammarAccess.getStatementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicStatement
entryRuleAtomicStatement 
:
{ before(grammarAccess.getAtomicStatementRule()); }
	 ruleAtomicStatement
{ after(grammarAccess.getAtomicStatementRule()); } 
	 EOF 
;

// Rule AtomicStatement
ruleAtomicStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicStatementAccess().getAlternatives()); }
(rule__AtomicStatement__Alternatives)
{ after(grammarAccess.getAtomicStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSequence
entryRuleSequence 
:
{ before(grammarAccess.getSequenceRule()); }
	 ruleSequence
{ after(grammarAccess.getSequenceRule()); } 
	 EOF 
;

// Rule Sequence
ruleSequence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSequenceAccess().getGroup()); }
(rule__Sequence__Group__0)
{ after(grammarAccess.getSequenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBlock
entryRuleBlock 
:
{ before(grammarAccess.getBlockRule()); }
	 ruleBlock
{ after(grammarAccess.getBlockRule()); } 
	 EOF 
;

// Rule Block
ruleBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBlockAccess().getGroup()); }
(rule__Block__Group__0)
{ after(grammarAccess.getBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbort
entryRuleAbort 
:
{ before(grammarAccess.getAbortRule()); }
	 ruleAbort
{ after(grammarAccess.getAbortRule()); } 
	 EOF 
;

// Rule Abort
ruleAbort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbortAccess().getGroup()); }
(rule__Abort__Group__0)
{ after(grammarAccess.getAbortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbortBody
entryRuleAbortBody 
:
{ before(grammarAccess.getAbortBodyRule()); }
	 ruleAbortBody
{ after(grammarAccess.getAbortBodyRule()); } 
	 EOF 
;

// Rule AbortBody
ruleAbortBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbortBodyAccess().getAlternatives()); }
(rule__AbortBody__Alternatives)
{ after(grammarAccess.getAbortBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbortInstance
entryRuleAbortInstance 
:
{ before(grammarAccess.getAbortInstanceRule()); }
	 ruleAbortInstance
{ after(grammarAccess.getAbortInstanceRule()); } 
	 EOF 
;

// Rule AbortInstance
ruleAbortInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbortInstanceAccess().getGroup()); }
(rule__AbortInstance__Group__0)
{ after(grammarAccess.getAbortInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbortCase
entryRuleAbortCase 
:
{ before(grammarAccess.getAbortCaseRule()); }
	 ruleAbortCase
{ after(grammarAccess.getAbortCaseRule()); } 
	 EOF 
;

// Rule AbortCase
ruleAbortCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbortCaseAccess().getGroup()); }
(rule__AbortCase__Group__0)
{ after(grammarAccess.getAbortCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAbortCaseSingle
entryRuleAbortCaseSingle 
:
{ before(grammarAccess.getAbortCaseSingleRule()); }
	 ruleAbortCaseSingle
{ after(grammarAccess.getAbortCaseSingleRule()); } 
	 EOF 
;

// Rule AbortCaseSingle
ruleAbortCaseSingle
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getGroup()); }
(rule__AbortCaseSingle__Group__0)
{ after(grammarAccess.getAbortCaseSingleAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakAbort
entryRuleWeakAbort 
:
{ before(grammarAccess.getWeakAbortRule()); }
	 ruleWeakAbort
{ after(grammarAccess.getWeakAbortRule()); } 
	 EOF 
;

// Rule WeakAbort
ruleWeakAbort
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWeakAbortAccess().getGroup()); }
(rule__WeakAbort__Group__0)
{ after(grammarAccess.getWeakAbortAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakAbortBody
entryRuleWeakAbortBody 
:
{ before(grammarAccess.getWeakAbortBodyRule()); }
	 ruleWeakAbortBody
{ after(grammarAccess.getWeakAbortBodyRule()); } 
	 EOF 
;

// Rule WeakAbortBody
ruleWeakAbortBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWeakAbortBodyAccess().getAlternatives()); }
(rule__WeakAbortBody__Alternatives)
{ after(grammarAccess.getWeakAbortBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakAbortEnd
entryRuleWeakAbortEnd 
:
{ before(grammarAccess.getWeakAbortEndRule()); }
	 ruleWeakAbortEnd
{ after(grammarAccess.getWeakAbortEndRule()); } 
	 EOF 
;

// Rule WeakAbortEnd
ruleWeakAbortEnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWeakAbortEndAccess().getGroup()); }
(rule__WeakAbortEnd__Group__0)
{ after(grammarAccess.getWeakAbortEndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakAbortEndAlt
entryRuleWeakAbortEndAlt 
:
{ before(grammarAccess.getWeakAbortEndAltRule()); }
	 ruleWeakAbortEndAlt
{ after(grammarAccess.getWeakAbortEndAltRule()); } 
	 EOF 
;

// Rule WeakAbortEndAlt
ruleWeakAbortEndAlt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWeakAbortEndAltAccess().getGroup()); }
(rule__WeakAbortEndAlt__Group__0)
{ after(grammarAccess.getWeakAbortEndAltAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakAbortInstance
entryRuleWeakAbortInstance 
:
{ before(grammarAccess.getWeakAbortInstanceRule()); }
	 ruleWeakAbortInstance
{ after(grammarAccess.getWeakAbortInstanceRule()); } 
	 EOF 
;

// Rule WeakAbortInstance
ruleWeakAbortInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getGroup()); }
(rule__WeakAbortInstance__Group__0)
{ after(grammarAccess.getWeakAbortInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWeakAbortCase
entryRuleWeakAbortCase 
:
{ before(grammarAccess.getWeakAbortCaseRule()); }
	 ruleWeakAbortCase
{ after(grammarAccess.getWeakAbortCaseRule()); } 
	 EOF 
;

// Rule WeakAbortCase
ruleWeakAbortCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getGroup()); }
(rule__WeakAbortCase__Group__0)
{ after(grammarAccess.getWeakAbortCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwait
entryRuleAwait 
:
{ before(grammarAccess.getAwaitRule()); }
	 ruleAwait
{ after(grammarAccess.getAwaitRule()); } 
	 EOF 
;

// Rule Await
ruleAwait
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAwaitAccess().getGroup()); }
(rule__Await__Group__0)
{ after(grammarAccess.getAwaitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwaitBody
entryRuleAwaitBody 
:
{ before(grammarAccess.getAwaitBodyRule()); }
	 ruleAwaitBody
{ after(grammarAccess.getAwaitBodyRule()); } 
	 EOF 
;

// Rule AwaitBody
ruleAwaitBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAwaitBodyAccess().getAlternatives()); }
(rule__AwaitBody__Alternatives)
{ after(grammarAccess.getAwaitBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwaitInstance
entryRuleAwaitInstance 
:
{ before(grammarAccess.getAwaitInstanceRule()); }
	 ruleAwaitInstance
{ after(grammarAccess.getAwaitInstanceRule()); } 
	 EOF 
;

// Rule AwaitInstance
ruleAwaitInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAwaitInstanceAccess().getGroup()); }
(rule__AwaitInstance__Group__0)
{ after(grammarAccess.getAwaitInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwaitCase
entryRuleAwaitCase 
:
{ before(grammarAccess.getAwaitCaseRule()); }
	 ruleAwaitCase
{ after(grammarAccess.getAwaitCaseRule()); } 
	 EOF 
;

// Rule AwaitCase
ruleAwaitCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAwaitCaseAccess().getGroup()); }
(rule__AwaitCase__Group__0)
{ after(grammarAccess.getAwaitCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAwaitEnd
entryRuleAwaitEnd 
:
{ before(grammarAccess.getAwaitEndRule()); }
	 ruleAwaitEnd
{ after(grammarAccess.getAwaitEndRule()); } 
	 EOF 
;

// Rule AwaitEnd
ruleAwaitEnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAwaitEndAccess().getGroup()); }
(rule__AwaitEnd__Group__0)
{ after(grammarAccess.getAwaitEndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcCall
entryRuleProcCall 
:
{ before(grammarAccess.getProcCallRule()); }
	 ruleProcCall
{ after(grammarAccess.getProcCallRule()); } 
	 EOF 
;

// Rule ProcCall
ruleProcCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcCallAccess().getGroup()); }
(rule__ProcCall__Group__0)
{ after(grammarAccess.getProcCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDo
entryRuleDo 
:
{ before(grammarAccess.getDoRule()); }
	 ruleDo
{ after(grammarAccess.getDoRule()); } 
	 EOF 
;

// Rule Do
ruleDo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoAccess().getGroup()); }
(rule__Do__Group__0)
{ after(grammarAccess.getDoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoUpto
entryRuleDoUpto 
:
{ before(grammarAccess.getDoUptoRule()); }
	 ruleDoUpto
{ after(grammarAccess.getDoUptoRule()); } 
	 EOF 
;

// Rule DoUpto
ruleDoUpto
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoUptoAccess().getGroup()); }
(rule__DoUpto__Group__0)
{ after(grammarAccess.getDoUptoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoWatching
entryRuleDoWatching 
:
{ before(grammarAccess.getDoWatchingRule()); }
	 ruleDoWatching
{ after(grammarAccess.getDoWatchingRule()); } 
	 EOF 
;

// Rule DoWatching
ruleDoWatching
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoWatchingAccess().getGroup()); }
(rule__DoWatching__Group__0)
{ after(grammarAccess.getDoWatchingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDoWatchingEnd
entryRuleDoWatchingEnd 
:
{ before(grammarAccess.getDoWatchingEndRule()); }
	 ruleDoWatchingEnd
{ after(grammarAccess.getDoWatchingEndRule()); } 
	 EOF 
;

// Rule DoWatchingEnd
ruleDoWatchingEnd
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDoWatchingEndAccess().getGroup()); }
(rule__DoWatchingEnd__Group__0)
{ after(grammarAccess.getDoWatchingEndAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmit
entryRuleEmit 
:
{ before(grammarAccess.getEmitRule()); }
	 ruleEmit
{ after(grammarAccess.getEmitRule()); } 
	 EOF 
;

// Rule Emit
ruleEmit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmitAccess().getGroup()); }
(rule__Emit__Group__0)
{ after(grammarAccess.getEmitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEveryDo
entryRuleEveryDo 
:
{ before(grammarAccess.getEveryDoRule()); }
	 ruleEveryDo
{ after(grammarAccess.getEveryDoRule()); } 
	 EOF 
;

// Rule EveryDo
ruleEveryDo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEveryDoAccess().getGroup()); }
(rule__EveryDo__Group__0)
{ after(grammarAccess.getEveryDoAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExit
entryRuleExit 
:
{ before(grammarAccess.getExitRule()); }
	 ruleExit
{ after(grammarAccess.getExitRule()); } 
	 EOF 
;

// Rule Exit
ruleExit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExitAccess().getGroup()); }
(rule__Exit__Group__0)
{ after(grammarAccess.getExitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleHalt
entryRuleHalt 
:
{ before(grammarAccess.getHaltRule()); }
	 ruleHalt
{ after(grammarAccess.getHaltRule()); } 
	 EOF 
;

// Rule Halt
ruleHalt
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getHaltAccess().getGroup()); }
(rule__Halt__Group__0)
{ after(grammarAccess.getHaltAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIfTest
entryRuleIfTest 
:
{ before(grammarAccess.getIfTestRule()); }
	 ruleIfTest
{ after(grammarAccess.getIfTestRule()); } 
	 EOF 
;

// Rule IfTest
ruleIfTest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIfTestAccess().getGroup()); }
(rule__IfTest__Group__0)
{ after(grammarAccess.getIfTestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElsIf
entryRuleElsIf 
:
{ before(grammarAccess.getElsIfRule()); }
	 ruleElsIf
{ after(grammarAccess.getElsIfRule()); } 
	 EOF 
;

// Rule ElsIf
ruleElsIf
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElsIfAccess().getGroup()); }
(rule__ElsIf__Group__0)
{ after(grammarAccess.getElsIfAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThenPart
entryRuleThenPart 
:
{ before(grammarAccess.getThenPartRule()); }
	 ruleThenPart
{ after(grammarAccess.getThenPartRule()); } 
	 EOF 
;

// Rule ThenPart
ruleThenPart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThenPartAccess().getGroup()); }
(rule__ThenPart__Group__0)
{ after(grammarAccess.getThenPartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleElsePart
entryRuleElsePart 
:
{ before(grammarAccess.getElsePartRule()); }
	 ruleElsePart
{ after(grammarAccess.getElsePartRule()); } 
	 EOF 
;

// Rule ElsePart
ruleElsePart
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getElsePartAccess().getGroup()); }
(rule__ElsePart__Group__0)
{ after(grammarAccess.getElsePartAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoop
entryRuleLoop 
:
{ before(grammarAccess.getLoopRule()); }
	 ruleLoop
{ after(grammarAccess.getLoopRule()); } 
	 EOF 
;

// Rule Loop
ruleLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopAccess().getGroup()); }
(rule__Loop__Group__0)
{ after(grammarAccess.getLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEndLoop
entryRuleEndLoop 
:
{ before(grammarAccess.getEndLoopRule()); }
	 ruleEndLoop
{ after(grammarAccess.getEndLoopRule()); } 
	 EOF 
;

// Rule EndLoop
ruleEndLoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEndLoopAccess().getGroup()); }
(rule__EndLoop__Group__0)
{ after(grammarAccess.getEndLoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopEach
entryRuleLoopEach 
:
{ before(grammarAccess.getLoopEachRule()); }
	 ruleLoopEach
{ after(grammarAccess.getLoopEachRule()); } 
	 EOF 
;

// Rule LoopEach
ruleLoopEach
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopEachAccess().getGroup()); }
(rule__LoopEach__Group__0)
{ after(grammarAccess.getLoopEachAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopDelay
entryRuleLoopDelay 
:
{ before(grammarAccess.getLoopDelayRule()); }
	 ruleLoopDelay
{ after(grammarAccess.getLoopDelayRule()); } 
	 EOF 
;

// Rule LoopDelay
ruleLoopDelay
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopDelayAccess().getDelayAssignment()); }
(rule__LoopDelay__DelayAssignment)
{ after(grammarAccess.getLoopDelayAccess().getDelayAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLoopBody
entryRuleLoopBody 
:
{ before(grammarAccess.getLoopBodyRule()); }
	 ruleLoopBody
{ after(grammarAccess.getLoopBodyRule()); } 
	 EOF 
;

// Rule LoopBody
ruleLoopBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLoopBodyAccess().getStatementAssignment()); }
(rule__LoopBody__StatementAssignment)
{ after(grammarAccess.getLoopBodyAccess().getStatementAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNothing
entryRuleNothing 
:
{ before(grammarAccess.getNothingRule()); }
	 ruleNothing
{ after(grammarAccess.getNothingRule()); } 
	 EOF 
;

// Rule Nothing
ruleNothing
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNothingAccess().getGroup()); }
(rule__Nothing__Group__0)
{ after(grammarAccess.getNothingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePause
entryRulePause 
:
{ before(grammarAccess.getPauseRule()); }
	 rulePause
{ after(grammarAccess.getPauseRule()); } 
	 EOF 
;

// Rule Pause
rulePause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPauseAccess().getGroup()); }
(rule__Pause__Group__0)
{ after(grammarAccess.getPauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresent
entryRulePresent 
:
{ before(grammarAccess.getPresentRule()); }
	 rulePresent
{ after(grammarAccess.getPresentRule()); } 
	 EOF 
;

// Rule Present
rulePresent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPresentAccess().getGroup()); }
(rule__Present__Group__0)
{ after(grammarAccess.getPresentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresentBody
entryRulePresentBody 
:
{ before(grammarAccess.getPresentBodyRule()); }
	 rulePresentBody
{ after(grammarAccess.getPresentBodyRule()); } 
	 EOF 
;

// Rule PresentBody
rulePresentBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPresentBodyAccess().getAlternatives()); }
(rule__PresentBody__Alternatives)
{ after(grammarAccess.getPresentBodyAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresentEventBody
entryRulePresentEventBody 
:
{ before(grammarAccess.getPresentEventBodyRule()); }
	 rulePresentEventBody
{ after(grammarAccess.getPresentEventBodyRule()); } 
	 EOF 
;

// Rule PresentEventBody
rulePresentEventBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPresentEventBodyAccess().getGroup()); }
(rule__PresentEventBody__Group__0)
{ after(grammarAccess.getPresentEventBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresentCaseList
entryRulePresentCaseList 
:
{ before(grammarAccess.getPresentCaseListRule()); }
	 rulePresentCaseList
{ after(grammarAccess.getPresentCaseListRule()); } 
	 EOF 
;

// Rule PresentCaseList
rulePresentCaseList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPresentCaseListAccess().getGroup()); }
(rule__PresentCaseList__Group__0)
{ after(grammarAccess.getPresentCaseListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresentCase
entryRulePresentCase 
:
{ before(grammarAccess.getPresentCaseRule()); }
	 rulePresentCase
{ after(grammarAccess.getPresentCaseRule()); } 
	 EOF 
;

// Rule PresentCase
rulePresentCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPresentCaseAccess().getGroup()); }
(rule__PresentCase__Group__0)
{ after(grammarAccess.getPresentCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePresentEvent
entryRulePresentEvent 
:
{ before(grammarAccess.getPresentEventRule()); }
	 rulePresentEvent
{ after(grammarAccess.getPresentEventRule()); } 
	 EOF 
;

// Rule PresentEvent
rulePresentEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPresentEventAccess().getAlternatives()); }
(rule__PresentEvent__Alternatives)
{ after(grammarAccess.getPresentEventAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRepeat
entryRuleRepeat 
:
{ before(grammarAccess.getRepeatRule()); }
	 ruleRepeat
{ after(grammarAccess.getRepeatRule()); } 
	 EOF 
;

// Rule Repeat
ruleRepeat
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRepeatAccess().getGroup()); }
(rule__Repeat__Group__0)
{ after(grammarAccess.getRepeatAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRun
entryRuleRun 
:
{ before(grammarAccess.getRunRule()); }
	 ruleRun
{ after(grammarAccess.getRunRule()); } 
	 EOF 
;

// Rule Run
ruleRun
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRunAccess().getAlternatives()); }
(rule__Run__Alternatives)
{ after(grammarAccess.getRunAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModuleRenaming
entryRuleModuleRenaming 
:
{ before(grammarAccess.getModuleRenamingRule()); }
	 ruleModuleRenaming
{ after(grammarAccess.getModuleRenamingRule()); } 
	 EOF 
;

// Rule ModuleRenaming
ruleModuleRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModuleRenamingAccess().getAlternatives()); }
(rule__ModuleRenaming__Alternatives)
{ after(grammarAccess.getModuleRenamingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRenamingList
entryRuleRenamingList 
:
{ before(grammarAccess.getRenamingListRule()); }
	 ruleRenamingList
{ after(grammarAccess.getRenamingListRule()); } 
	 EOF 
;

// Rule RenamingList
ruleRenamingList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRenamingListAccess().getGroup()); }
(rule__RenamingList__Group__0)
{ after(grammarAccess.getRenamingListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRenaming
entryRuleRenaming 
:
{ before(grammarAccess.getRenamingRule()); }
	 ruleRenaming
{ after(grammarAccess.getRenamingRule()); } 
	 EOF 
;

// Rule Renaming
ruleRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRenamingAccess().getAlternatives()); }
(rule__Renaming__Alternatives)
{ after(grammarAccess.getRenamingAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeRenaming
entryRuleTypeRenaming 
:
{ before(grammarAccess.getTypeRenamingRule()); }
	 ruleTypeRenaming
{ after(grammarAccess.getTypeRenamingRule()); } 
	 EOF 
;

// Rule TypeRenaming
ruleTypeRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeRenamingAccess().getGroup()); }
(rule__TypeRenaming__Group__0)
{ after(grammarAccess.getTypeRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantRenaming
entryRuleConstantRenaming 
:
{ before(grammarAccess.getConstantRenamingRule()); }
	 ruleConstantRenaming
{ after(grammarAccess.getConstantRenamingRule()); } 
	 EOF 
;

// Rule ConstantRenaming
ruleConstantRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantRenamingAccess().getGroup()); }
(rule__ConstantRenaming__Group__0)
{ after(grammarAccess.getConstantRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionRenaming
entryRuleFunctionRenaming 
:
{ before(grammarAccess.getFunctionRenamingRule()); }
	 ruleFunctionRenaming
{ after(grammarAccess.getFunctionRenamingRule()); } 
	 EOF 
;

// Rule FunctionRenaming
ruleFunctionRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionRenamingAccess().getGroup()); }
(rule__FunctionRenaming__Group__0)
{ after(grammarAccess.getFunctionRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleProcedureRenaming
entryRuleProcedureRenaming 
:
{ before(grammarAccess.getProcedureRenamingRule()); }
	 ruleProcedureRenaming
{ after(grammarAccess.getProcedureRenamingRule()); } 
	 EOF 
;

// Rule ProcedureRenaming
ruleProcedureRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProcedureRenamingAccess().getGroup()); }
(rule__ProcedureRenaming__Group__0)
{ after(grammarAccess.getProcedureRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTaskRenaming
entryRuleTaskRenaming 
:
{ before(grammarAccess.getTaskRenamingRule()); }
	 ruleTaskRenaming
{ after(grammarAccess.getTaskRenamingRule()); } 
	 EOF 
;

// Rule TaskRenaming
ruleTaskRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTaskRenamingAccess().getGroup()); }
(rule__TaskRenaming__Group__0)
{ after(grammarAccess.getTaskRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalRenaming
entryRuleSignalRenaming 
:
{ before(grammarAccess.getSignalRenamingRule()); }
	 ruleSignalRenaming
{ after(grammarAccess.getSignalRenamingRule()); } 
	 EOF 
;

// Rule SignalRenaming
ruleSignalRenaming
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalRenamingAccess().getGroup()); }
(rule__SignalRenaming__Group__0)
{ after(grammarAccess.getSignalRenamingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBuildInFunction
entryRuleBuildInFunction 
:
{ before(grammarAccess.getBuildInFunctionRule()); }
	 ruleBuildInFunction
{ after(grammarAccess.getBuildInFunctionRule()); } 
	 EOF 
;

// Rule BuildInFunction
ruleBuildInFunction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBuildInFunctionAccess().getAlternatives()); }
(rule__BuildInFunction__Alternatives)
{ after(grammarAccess.getBuildInFunctionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuspend
entryRuleSuspend 
:
{ before(grammarAccess.getSuspendRule()); }
	 ruleSuspend
{ after(grammarAccess.getSuspendRule()); } 
	 EOF 
;

// Rule Suspend
ruleSuspend
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuspendAccess().getGroup()); }
(rule__Suspend__Group__0)
{ after(grammarAccess.getSuspendAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSustain
entryRuleSustain 
:
{ before(grammarAccess.getSustainRule()); }
	 ruleSustain
{ after(grammarAccess.getSustainRule()); } 
	 EOF 
;

// Rule Sustain
ruleSustain
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSustainAccess().getGroup()); }
(rule__Sustain__Group__0)
{ after(grammarAccess.getSustainAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrap
entryRuleTrap 
:
{ before(grammarAccess.getTrapRule()); }
	 ruleTrap
{ after(grammarAccess.getTrapRule()); } 
	 EOF 
;

// Rule Trap
ruleTrap
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapAccess().getGroup()); }
(rule__Trap__Group__0)
{ after(grammarAccess.getTrapAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapDeclList
entryRuleTrapDeclList 
:
{ before(grammarAccess.getTrapDeclListRule()); }
	 ruleTrapDeclList
{ after(grammarAccess.getTrapDeclListRule()); } 
	 EOF 
;

// Rule TrapDeclList
ruleTrapDeclList
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapDeclListAccess().getGroup()); }
(rule__TrapDeclList__Group__0)
{ after(grammarAccess.getTrapDeclListAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapDecl
entryRuleTrapDecl 
:
{ before(grammarAccess.getTrapDeclRule()); }
	 ruleTrapDecl
{ after(grammarAccess.getTrapDeclRule()); } 
	 EOF 
;

// Rule TrapDecl
ruleTrapDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapDeclAccess().getGroup()); }
(rule__TrapDecl__Group__0)
{ after(grammarAccess.getTrapDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapHandler
entryRuleTrapHandler 
:
{ before(grammarAccess.getTrapHandlerRule()); }
	 ruleTrapHandler
{ after(grammarAccess.getTrapHandlerRule()); } 
	 EOF 
;

// Rule TrapHandler
ruleTrapHandler
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapHandlerAccess().getGroup()); }
(rule__TrapHandler__Group__0)
{ after(grammarAccess.getTrapHandlerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLocalVariable
entryRuleLocalVariable 
:
{ before(grammarAccess.getLocalVariableRule()); }
	 ruleLocalVariable
{ after(grammarAccess.getLocalVariableRule()); } 
	 EOF 
;

// Rule LocalVariable
ruleLocalVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLocalVariableAccess().getGroup()); }
(rule__LocalVariable__Group__0)
{ after(grammarAccess.getLocalVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression 
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
(rule__AtomicExpression__Alternatives)
{ after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapExpression
entryRuleTrapExpression 
:
{ before(grammarAccess.getTrapExpressionRule()); }
	 ruleTrapExpression
{ after(grammarAccess.getTrapExpressionRule()); } 
	 EOF 
;

// Rule TrapExpression
ruleTrapExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapExpressionAccess().getGroup()); }
(rule__TrapExpression__Group__0)
{ after(grammarAccess.getTrapExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFunctionExpression
entryRuleFunctionExpression 
:
{ before(grammarAccess.getFunctionExpressionRule()); }
	 ruleFunctionExpression
{ after(grammarAccess.getFunctionExpressionRule()); } 
	 EOF 
;

// Rule FunctionExpression
ruleFunctionExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFunctionExpressionAccess().getGroup()); }
(rule__FunctionExpression__Group__0)
{ after(grammarAccess.getFunctionExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantExpression
entryRuleConstantExpression 
:
{ before(grammarAccess.getConstantExpressionRule()); }
	 ruleConstantExpression
{ after(grammarAccess.getConstantExpressionRule()); } 
	 EOF 
;

// Rule ConstantExpression
ruleConstantExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantExpressionAccess().getGroup()); }
(rule__ConstantExpression__Group__0)
{ after(grammarAccess.getConstantExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapExpr
entryRuleTrapExpr 
:
{ before(grammarAccess.getTrapExprRule()); }
	 ruleTrapExpr
{ after(grammarAccess.getTrapExprRule()); } 
	 EOF 
;

// Rule TrapExpr
ruleTrapExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapExprAccess().getSignalExpressionParserRuleCall()); }
	ruleSignalExpression
{ after(grammarAccess.getTrapExprAccess().getSignalExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalExpression
entryRuleSignalExpression 
:
{ before(grammarAccess.getSignalExpressionRule()); }
	 ruleSignalExpression
{ after(grammarAccess.getSignalExpressionRule()); } 
	 EOF 
;

// Rule SignalExpression
ruleSignalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalExpressionAccess().getGroup()); }
(rule__SignalExpression__Group__0)
{ after(grammarAccess.getSignalExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalAndExpression
entryRuleSignalAndExpression 
:
{ before(grammarAccess.getSignalAndExpressionRule()); }
	 ruleSignalAndExpression
{ after(grammarAccess.getSignalAndExpressionRule()); } 
	 EOF 
;

// Rule SignalAndExpression
ruleSignalAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getGroup()); }
(rule__SignalAndExpression__Group__0)
{ after(grammarAccess.getSignalAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalNotExpression
entryRuleSignalNotExpression 
:
{ before(grammarAccess.getSignalNotExpressionRule()); }
	 ruleSignalNotExpression
{ after(grammarAccess.getSignalNotExpressionRule()); } 
	 EOF 
;

// Rule SignalNotExpression
ruleSignalNotExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getAlternatives()); }
(rule__SignalNotExpression__Alternatives)
{ after(grammarAccess.getSignalNotExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalAtomicExpression
entryRuleSignalAtomicExpression 
:
{ before(grammarAccess.getSignalAtomicExpressionRule()); }
	 ruleSignalAtomicExpression
{ after(grammarAccess.getSignalAtomicExpressionRule()); } 
	 EOF 
;

// Rule SignalAtomicExpression
ruleSignalAtomicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getAlternatives()); }
(rule__SignalAtomicExpression__Alternatives)
{ after(grammarAccess.getSignalAtomicExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalReferenceExpr
entryRuleSignalReferenceExpr 
:
{ before(grammarAccess.getSignalReferenceExprRule()); }
	 ruleSignalReferenceExpr
{ after(grammarAccess.getSignalReferenceExprRule()); } 
	 EOF 
;

// Rule SignalReferenceExpr
ruleSignalReferenceExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalReferenceExprAccess().getValuedObjectAssignment()); }
(rule__SignalReferenceExpr__ValuedObjectAssignment)
{ after(grammarAccess.getSignalReferenceExprAccess().getValuedObjectAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalPreExpr
entryRuleSignalPreExpr 
:
{ before(grammarAccess.getSignalPreExprRule()); }
	 ruleSignalPreExpr
{ after(grammarAccess.getSignalPreExprRule()); } 
	 EOF 
;

// Rule SignalPreExpr
ruleSignalPreExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalPreExprAccess().getGroup()); }
(rule__SignalPreExpr__Group__0)
{ after(grammarAccess.getSignalPreExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrapReferenceExpr
entryRuleTrapReferenceExpr 
:
{ before(grammarAccess.getTrapReferenceExprRule()); }
	 ruleTrapReferenceExpr
{ after(grammarAccess.getTrapReferenceExprRule()); } 
	 EOF 
;

// Rule TrapReferenceExpr
ruleTrapReferenceExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTrapReferenceExprAccess().getGroup()); }
(rule__TrapReferenceExpr__Group__0)
{ after(grammarAccess.getTrapReferenceExprAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelayExpr
entryRuleDelayExpr 
:
{ before(grammarAccess.getDelayExprRule()); }
	 ruleDelayExpr
{ after(grammarAccess.getDelayExprRule()); } 
	 EOF 
;

// Rule DelayExpr
ruleDelayExpr
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelayExprAccess().getAlternatives()); }
(rule__DelayExpr__Alternatives)
{ after(grammarAccess.getDelayExprAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDelayEvent
entryRuleDelayEvent 
:
{ before(grammarAccess.getDelayEventRule()); }
	 ruleDelayEvent
{ after(grammarAccess.getDelayEventRule()); } 
	 EOF 
;

// Rule DelayEvent
ruleDelayEvent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDelayEventAccess().getAlternatives()); }
(rule__DelayEvent__Alternatives)
{ after(grammarAccess.getDelayEventAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExec
entryRuleExec 
:
{ before(grammarAccess.getExecRule()); }
	 ruleExec
{ after(grammarAccess.getExecRule()); } 
	 EOF 
;

// Rule Exec
ruleExec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecAccess().getGroup()); }
(rule__Exec__Group__0)
{ after(grammarAccess.getExecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExecBody
entryRuleExecBody 
:
{ before(grammarAccess.getExecBodyRule()); }
	 ruleExecBody
{ after(grammarAccess.getExecBodyRule()); } 
	 EOF 
;

// Rule ExecBody
ruleExecBody
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecBodyAccess().getGroup()); }
(rule__ExecBody__Group__0)
{ after(grammarAccess.getExecBodyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExecCase
entryRuleExecCase 
:
{ before(grammarAccess.getExecCaseRule()); }
	 ruleExecCase
{ after(grammarAccess.getExecCaseRule()); } 
	 EOF 
;

// Rule ExecCase
ruleExecCase
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecCaseAccess().getGroup()); }
(rule__ExecCase__Group__0)
{ after(grammarAccess.getExecCaseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTick
entryRuleTick 
:
{ before(grammarAccess.getTickRule()); }
	 ruleTick
{ after(grammarAccess.getTickRule()); } 
	 EOF 
;

// Rule Tick
ruleTick
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTickAccess().getTickKeyword()); }

	'tick' 

{ after(grammarAccess.getTickAccess().getTickKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression 
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanExpressionAccess().getOrExpressionParserRuleCall()); }
	ruleOrExpression
{ after(grammarAccess.getBooleanExpressionAccess().getOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareOperation
entryRuleCompareOperation 
:
{ before(grammarAccess.getCompareOperationRule()); }
	 ruleCompareOperation
{ after(grammarAccess.getCompareOperationRule()); } 
	 EOF 
;

// Rule CompareOperation
ruleCompareOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareOperationAccess().getAlternatives()); }
(rule__CompareOperation__Alternatives)
{ after(grammarAccess.getCompareOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotOrValuedExpression
entryRuleNotOrValuedExpression 
:
{ before(grammarAccess.getNotOrValuedExpressionRule()); }
	 ruleNotOrValuedExpression
{ after(grammarAccess.getNotOrValuedExpressionRule()); } 
	 EOF 
;

// Rule NotOrValuedExpression
ruleNotOrValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); }
(rule__NotOrValuedExpression__Alternatives)
{ after(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotExpression
entryRuleNotExpression 
:
{ before(grammarAccess.getNotExpressionRule()); }
	 ruleNotExpression
{ after(grammarAccess.getNotExpressionRule()); } 
	 EOF 
;

// Rule NotExpression
ruleNotExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotExpressionAccess().getAlternatives()); }
(rule__NotExpression__Alternatives)
{ after(grammarAccess.getNotExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedExpression
entryRuleValuedExpression 
:
{ before(grammarAccess.getValuedExpressionRule()); }
	 ruleValuedExpression
{ after(grammarAccess.getValuedExpressionRule()); } 
	 EOF 
;

// Rule ValuedExpression
ruleValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); }
	ruleAddExpression
{ after(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddExpression
entryRuleAddExpression 
:
{ before(grammarAccess.getAddExpressionRule()); }
	 ruleAddExpression
{ after(grammarAccess.getAddExpressionRule()); } 
	 EOF 
;

// Rule AddExpression
ruleAddExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup()); }
(rule__AddExpression__Group__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubExpression
entryRuleSubExpression 
:
{ before(grammarAccess.getSubExpressionRule()); }
	 ruleSubExpression
{ after(grammarAccess.getSubExpressionRule()); } 
	 EOF 
;

// Rule SubExpression
ruleSubExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup()); }
(rule__SubExpression__Group__0)
{ after(grammarAccess.getSubExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultExpression
entryRuleMultExpression 
:
{ before(grammarAccess.getMultExpressionRule()); }
	 ruleMultExpression
{ after(grammarAccess.getMultExpressionRule()); } 
	 EOF 
;

// Rule MultExpression
ruleMultExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup()); }
(rule__MultExpression__Group__0)
{ after(grammarAccess.getMultExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivExpression
entryRuleDivExpression 
:
{ before(grammarAccess.getDivExpressionRule()); }
	 ruleDivExpression
{ after(grammarAccess.getDivExpressionRule()); } 
	 EOF 
;

// Rule DivExpression
ruleDivExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup()); }
(rule__DivExpression__Group__0)
{ after(grammarAccess.getDivExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModExpression
entryRuleModExpression 
:
{ before(grammarAccess.getModExpressionRule()); }
	 ruleModExpression
{ after(grammarAccess.getModExpressionRule()); } 
	 EOF 
;

// Rule ModExpression
ruleModExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModExpressionAccess().getGroup()); }
(rule__ModExpression__Group__0)
{ after(grammarAccess.getModExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegExpression
entryRuleNegExpression 
:
{ before(grammarAccess.getNegExpressionRule()); }
	 ruleNegExpression
{ after(grammarAccess.getNegExpressionRule()); } 
	 EOF 
;

// Rule NegExpression
ruleNegExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegExpressionAccess().getAlternatives()); }
(rule__NegExpression__Alternatives)
{ after(grammarAccess.getNegExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicValuedExpression
entryRuleAtomicValuedExpression 
:
{ before(grammarAccess.getAtomicValuedExpressionRule()); }
	 ruleAtomicValuedExpression
{ after(grammarAccess.getAtomicValuedExpressionRule()); } 
	 EOF 
;

// Rule AtomicValuedExpression
ruleAtomicValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); }
(rule__AtomicValuedExpression__Alternatives)
{ after(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObjectTestExpression
entryRuleValuedObjectTestExpression 
:
{ before(grammarAccess.getValuedObjectTestExpressionRule()); }
	 ruleValuedObjectTestExpression
{ after(grammarAccess.getValuedObjectTestExpressionRule()); } 
	 EOF 
;

// Rule ValuedObjectTestExpression
ruleValuedObjectTestExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); }
(rule__ValuedObjectTestExpression__Alternatives)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObjectReference
entryRuleValuedObjectReference 
:
{ before(grammarAccess.getValuedObjectReferenceRule()); }
	 ruleValuedObjectReference
{ after(grammarAccess.getValuedObjectReferenceRule()); } 
	 EOF 
;

// Rule ValuedObjectReference
ruleValuedObjectReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment()); }
(rule__ValuedObjectReference__ValuedObjectAssignment)
{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextExpression
entryRuleTextExpression 
:
{ before(grammarAccess.getTextExpressionRule()); }
	 ruleTextExpression
{ after(grammarAccess.getTextExpressionRule()); } 
	 EOF 
;

// Rule TextExpression
ruleTextExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextExpressionAccess().getGroup()); }
(rule__TextExpression__Group__0)
{ after(grammarAccess.getTextExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getValueAssignment()); }
(rule__IntValue__ValueAssignment)
{ after(grammarAccess.getIntValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatValue
entryRuleFloatValue 
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatValueAccess().getValueAssignment()); }
(rule__FloatValue__ValueAssignment)
{ after(grammarAccess.getFloatValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanValue
entryRuleBooleanValue 
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
(rule__BooleanValue__ValueAssignment)
{ after(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration 
:
{ before(grammarAccess.getInterfaceDeclarationRule()); }
	 ruleInterfaceDeclaration
{ after(grammarAccess.getInterfaceDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getAlternatives()); }
(rule__InterfaceDeclaration__Alternatives)
{ after(grammarAccess.getInterfaceDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleISignal
entryRuleISignal 
:
{ before(grammarAccess.getISignalRule()); }
	 ruleISignal
{ after(grammarAccess.getISignalRule()); } 
	 EOF 
;

// Rule ISignal
ruleISignal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getISignalAccess().getGroup()); }
(rule__ISignal__Group__0)
{ after(grammarAccess.getISignalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceSignalDecl
entryRuleInterfaceSignalDecl 
:
{ before(grammarAccess.getInterfaceSignalDeclRule()); }
	 ruleInterfaceSignalDecl
{ after(grammarAccess.getInterfaceSignalDeclRule()); } 
	 EOF 
;

// Rule InterfaceSignalDecl
ruleInterfaceSignalDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getAlternatives()); }
(rule__InterfaceSignalDecl__Alternatives)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceVariableDecl
entryRuleInterfaceVariableDecl 
:
{ before(grammarAccess.getInterfaceVariableDeclRule()); }
	 ruleInterfaceVariableDecl
{ after(grammarAccess.getInterfaceVariableDeclRule()); } 
	 EOF 
;

// Rule InterfaceVariableDecl
ruleInterfaceVariableDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getGroup()); }
(rule__InterfaceVariableDecl__Group__0)
{ after(grammarAccess.getInterfaceVariableDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDecl
entryRuleVariableDecl 
:
{ before(grammarAccess.getVariableDeclRule()); }
	 ruleVariableDecl
{ after(grammarAccess.getVariableDeclRule()); } 
	 EOF 
;

// Rule VariableDecl
ruleVariableDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclAccess().getGroup()); }
(rule__VariableDecl__Group__0)
{ after(grammarAccess.getVariableDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIVariable
entryRuleIVariable 
:
{ before(grammarAccess.getIVariableRule()); }
	 ruleIVariable
{ after(grammarAccess.getIVariableRule()); } 
	 EOF 
;

// Rule IVariable
ruleIVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIVariableAccess().getGroup()); }
(rule__IVariable__Group__0)
{ after(grammarAccess.getIVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getAlternatives()); }
(rule__Annotation__Alternatives)
{ after(grammarAccess.getAnnotationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleCommentAnnotation
entryRuleCommentAnnotation 
:
{ before(grammarAccess.getCommentAnnotationRule()); }
	 ruleCommentAnnotation
{ after(grammarAccess.getCommentAnnotationRule()); } 
	 EOF 
;

// Rule CommentAnnotation
ruleCommentAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValueAssignment()); }
(rule__CommentAnnotation__ValueAssignment)
{ after(grammarAccess.getCommentAnnotationAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagAnnotation
entryRuleTagAnnotation 
:
{ before(grammarAccess.getTagAnnotationRule()); }
	 ruleTagAnnotation
{ after(grammarAccess.getTagAnnotationRule()); } 
	 EOF 
;

// Rule TagAnnotation
ruleTagAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagAnnotationAccess().getGroup()); }
(rule__TagAnnotation__Group__0)
{ after(grammarAccess.getTagAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyStringValueAnnotation
entryRuleKeyStringValueAnnotation 
:
{ before(grammarAccess.getKeyStringValueAnnotationRule()); }
	 ruleKeyStringValueAnnotation
{ after(grammarAccess.getKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyStringValueAnnotation
ruleKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
(rule__KeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedKeyStringValueAnnotation
entryRuleTypedKeyStringValueAnnotation 
:
{ before(grammarAccess.getTypedKeyStringValueAnnotationRule()); }
	 ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getTypedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule TypedKeyStringValueAnnotation
ruleTypedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
(rule__TypedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyBooleanValueAnnotation
entryRuleKeyBooleanValueAnnotation 
:
{ before(grammarAccess.getKeyBooleanValueAnnotationRule()); }
	 ruleKeyBooleanValueAnnotation
{ after(grammarAccess.getKeyBooleanValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyBooleanValueAnnotation
ruleKeyBooleanValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup()); }
(rule__KeyBooleanValueAnnotation__Group__0)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyIntValueAnnotation
entryRuleKeyIntValueAnnotation 
:
{ before(grammarAccess.getKeyIntValueAnnotationRule()); }
	 ruleKeyIntValueAnnotation
{ after(grammarAccess.getKeyIntValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyIntValueAnnotation
ruleKeyIntValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getGroup()); }
(rule__KeyIntValueAnnotation__Group__0)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyFloatValueAnnotation
entryRuleKeyFloatValueAnnotation 
:
{ before(grammarAccess.getKeyFloatValueAnnotationRule()); }
	 ruleKeyFloatValueAnnotation
{ after(grammarAccess.getKeyFloatValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyFloatValueAnnotation
ruleKeyFloatValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup()); }
(rule__KeyFloatValueAnnotation__Group__0)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtendedID
entryRuleExtendedID 
:
{ before(grammarAccess.getExtendedIDRule()); }
	 ruleExtendedID
{ after(grammarAccess.getExtendedIDRule()); } 
	 EOF 
;

// Rule ExtendedID
ruleExtendedID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup()); }
(rule__ExtendedID__Group__0)
{ after(grammarAccess.getExtendedIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule CompareOperator
ruleCompareOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
(rule__CompareOperator__Alternatives)
{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PreOperator
rulePreOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); }
(	'pre' 
)
{ after(grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OrOperator
ruleOrOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); }
(	'or' 
)
{ after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AndOperator
ruleAndOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration()); }
(	'and' 
)
{ after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule NotOperator
ruleNotOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); }
(	'not' 
)
{ after(grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AddOperator
ruleAddOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); }
(	'+' 
)
{ after(grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SubOperator
ruleSubOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); }
(	'-' 
)
{ after(grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MultOperator
ruleMultOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); }
(	'*' 
)
{ after(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ModOperator
ruleModOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); }
(	'mod' 
)
{ after(grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DivOperator
ruleDivOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); }
(	'/' 
)
{ after(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ValueTestOperator
ruleValueTestOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTestOperatorAccess().getVALEnumLiteralDeclaration()); }
(	'?' 
)
{ after(grammarAccess.getValueTestOperatorAccess().getVALEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ValueType
ruleValueType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
(rule__ValueType__Alternatives)
{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CombineOperator
ruleCombineOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
(rule__CombineOperator__Alternatives)
{ after(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__EndModule__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndModuleAccess().getGroup_0()); }
(rule__EndModule__Group_0__0)
{ after(grammarAccess.getEndModuleAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getEndModuleAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getEndModuleAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntSignalDeclsAssignment_0()); }
(rule__ModuleInterface__IntSignalDeclsAssignment_0)
{ after(grammarAccess.getModuleInterfaceAccess().getIntSignalDeclsAssignment_0()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntTypeDeclsAssignment_1()); }
(rule__ModuleInterface__IntTypeDeclsAssignment_1)
{ after(grammarAccess.getModuleInterfaceAccess().getIntTypeDeclsAssignment_1()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntSensorDeclsAssignment_2()); }
(rule__ModuleInterface__IntSensorDeclsAssignment_2)
{ after(grammarAccess.getModuleInterfaceAccess().getIntSensorDeclsAssignment_2()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntConstantDeclsAssignment_3()); }
(rule__ModuleInterface__IntConstantDeclsAssignment_3)
{ after(grammarAccess.getModuleInterfaceAccess().getIntConstantDeclsAssignment_3()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntRelationDeclsAssignment_4()); }
(rule__ModuleInterface__IntRelationDeclsAssignment_4)
{ after(grammarAccess.getModuleInterfaceAccess().getIntRelationDeclsAssignment_4()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntTaskDeclsAssignment_5()); }
(rule__ModuleInterface__IntTaskDeclsAssignment_5)
{ after(grammarAccess.getModuleInterfaceAccess().getIntTaskDeclsAssignment_5()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntFunctionDeclsAssignment_6()); }
(rule__ModuleInterface__IntFunctionDeclsAssignment_6)
{ after(grammarAccess.getModuleInterfaceAccess().getIntFunctionDeclsAssignment_6()); }
)

    |(
{ before(grammarAccess.getModuleInterfaceAccess().getIntProcedureDeclsAssignment_7()); }
(rule__ModuleInterface__IntProcedureDeclsAssignment_7)
{ after(grammarAccess.getModuleInterfaceAccess().getIntProcedureDeclsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getGroup_0()); }
(rule__ChannelDescription__Group_0__0)
{ after(grammarAccess.getChannelDescriptionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getChannelDescriptionAccess().getGroup_1()); }
(rule__ChannelDescription__Group_1__0)
{ after(grammarAccess.getChannelDescriptionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getChannelDescriptionAccess().getGroup_2()); }
(rule__ChannelDescription__Group_2__0)
{ after(grammarAccess.getChannelDescriptionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getTypeAssignment_0()); }
(rule__EsterelTypeIdentifier__TypeAssignment_0)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getTypeIDAssignment_1()); }
(rule__EsterelTypeIdentifier__TypeIDAssignment_1)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getTypeIDAssignment_1()); }
)

    |(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getGroup_2()); }
(rule__EsterelTypeIdentifier__Group_2__0)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__Alternatives_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getTypeAssignment_2_1_1_0()); }
(rule__EsterelTypeIdentifier__TypeAssignment_2_1_1_0)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getTypeAssignment_2_1_1_0()); }
)

    |(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getTypeIDAssignment_2_1_1_1()); }
(rule__EsterelTypeIdentifier__TypeIDAssignment_2_1_1_1)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getTypeIDAssignment_2_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__Alternatives_2_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getFuncAssignment_2_1_3_0()); }
(rule__EsterelTypeIdentifier__FuncAssignment_2_1_3_0)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getFuncAssignment_2_1_3_0()); }
)

    |(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getOperatorAssignment_2_1_3_1()); }
(rule__EsterelTypeIdentifier__OperatorAssignment_2_1_3_1)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getOperatorAssignment_2_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_0()); }
(rule__TypeIdentifier__TypeAssignment_0)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_1()); }
(rule__TypeIdentifier__TypeIDAssignment_1)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_1()); }
)

    |(
{ before(grammarAccess.getTypeIdentifierAccess().getGroup_2()); }
(rule__TypeIdentifier__Group_2__0)
{ after(grammarAccess.getTypeIdentifierAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getTypeIdentifierAccess().getGroup_3()); }
(rule__TypeIdentifier__Group_3__0)
{ after(grammarAccess.getTypeIdentifierAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_2_1_0()); }
(rule__TypeIdentifier__TypeAssignment_2_1_0)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_2_1_1()); }
(rule__TypeIdentifier__TypeIDAssignment_2_1_1)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getGroup_0()); }
(rule__SensorWithType__Group_0__0)
{ after(grammarAccess.getSensorWithTypeAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSensorWithTypeAccess().getGroup_1()); }
(rule__SensorWithType__Group_1__0)
{ after(grammarAccess.getSensorWithTypeAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationTypeAccess().getRelationImplicationParserRuleCall_0()); }
	ruleRelationImplication
{ after(grammarAccess.getRelationTypeAccess().getRelationImplicationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getRelationTypeAccess().getRelationIncompatibilityParserRuleCall_1()); }
	ruleRelationIncompatibility
{ after(grammarAccess.getRelationTypeAccess().getRelationIncompatibilityParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantAtom__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAtomAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
{ after(grammarAccess.getConstantAtomAccess().getINTTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstantAtomAccess().getConstantLiteralParserRuleCall_1()); }
	ruleConstantLiteral
{ after(grammarAccess.getConstantAtomAccess().getConstantLiteralParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantLiteral__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantLiteralAccess().getFLOATTerminalRuleCall_0()); }
	RULE_FLOAT
{ after(grammarAccess.getConstantLiteralAccess().getFLOATTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getConstantLiteralAccess().getBOOLEANTerminalRuleCall_1()); }
	RULE_BOOLEAN
{ after(grammarAccess.getConstantLiteralAccess().getBOOLEANTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getConstantLiteralAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
{ after(grammarAccess.getConstantLiteralAccess().getIDTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getConstantLiteralAccess().getSTRINGTerminalRuleCall_3()); }
	RULE_STRING
{ after(grammarAccess.getConstantLiteralAccess().getSTRINGTerminalRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicStatementAccess().getAbortParserRuleCall_0()); }
	ruleAbort
{ after(grammarAccess.getAtomicStatementAccess().getAbortParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getAssignmentParserRuleCall_1()); }
	ruleAssignment
{ after(grammarAccess.getAtomicStatementAccess().getAssignmentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getAwaitParserRuleCall_2()); }
	ruleAwait
{ after(grammarAccess.getAtomicStatementAccess().getAwaitParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getBlockParserRuleCall_3()); }
	ruleBlock
{ after(grammarAccess.getAtomicStatementAccess().getBlockParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getProcCallParserRuleCall_4()); }
	ruleProcCall
{ after(grammarAccess.getAtomicStatementAccess().getProcCallParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getDoParserRuleCall_5()); }
	ruleDo
{ after(grammarAccess.getAtomicStatementAccess().getDoParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getEmitParserRuleCall_6()); }
	ruleEmit
{ after(grammarAccess.getAtomicStatementAccess().getEmitParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getEveryDoParserRuleCall_7()); }
	ruleEveryDo
{ after(grammarAccess.getAtomicStatementAccess().getEveryDoParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getExitParserRuleCall_8()); }
	ruleExit
{ after(grammarAccess.getAtomicStatementAccess().getExitParserRuleCall_8()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getExecParserRuleCall_9()); }
	ruleExec
{ after(grammarAccess.getAtomicStatementAccess().getExecParserRuleCall_9()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getHaltParserRuleCall_10()); }
	ruleHalt
{ after(grammarAccess.getAtomicStatementAccess().getHaltParserRuleCall_10()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getIfTestParserRuleCall_11()); }
	ruleIfTest
{ after(grammarAccess.getAtomicStatementAccess().getIfTestParserRuleCall_11()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getLocalSignalDeclParserRuleCall_12()); }
	ruleLocalSignalDecl
{ after(grammarAccess.getAtomicStatementAccess().getLocalSignalDeclParserRuleCall_12()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getLoopParserRuleCall_13()); }
	ruleLoop
{ after(grammarAccess.getAtomicStatementAccess().getLoopParserRuleCall_13()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getNothingParserRuleCall_14()); }
	ruleNothing
{ after(grammarAccess.getAtomicStatementAccess().getNothingParserRuleCall_14()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getPauseParserRuleCall_15()); }
	rulePause
{ after(grammarAccess.getAtomicStatementAccess().getPauseParserRuleCall_15()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getPresentParserRuleCall_16()); }
	rulePresent
{ after(grammarAccess.getAtomicStatementAccess().getPresentParserRuleCall_16()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getRepeatParserRuleCall_17()); }
	ruleRepeat
{ after(grammarAccess.getAtomicStatementAccess().getRepeatParserRuleCall_17()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getRunParserRuleCall_18()); }
	ruleRun
{ after(grammarAccess.getAtomicStatementAccess().getRunParserRuleCall_18()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getSuspendParserRuleCall_19()); }
	ruleSuspend
{ after(grammarAccess.getAtomicStatementAccess().getSuspendParserRuleCall_19()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getSustainParserRuleCall_20()); }
	ruleSustain
{ after(grammarAccess.getAtomicStatementAccess().getSustainParserRuleCall_20()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getTrapParserRuleCall_21()); }
	ruleTrap
{ after(grammarAccess.getAtomicStatementAccess().getTrapParserRuleCall_21()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getLocalVariableParserRuleCall_22()); }
	ruleLocalVariable
{ after(grammarAccess.getAtomicStatementAccess().getLocalVariableParserRuleCall_22()); }
)

    |(
{ before(grammarAccess.getAtomicStatementAccess().getWeakAbortParserRuleCall_23()); }
	ruleWeakAbort
{ after(grammarAccess.getAtomicStatementAccess().getWeakAbortParserRuleCall_23()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortBodyAccess().getAbortInstanceParserRuleCall_0()); }
	ruleAbortInstance
{ after(grammarAccess.getAbortBodyAccess().getAbortInstanceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAbortBodyAccess().getAbortCaseParserRuleCall_1()); }
	ruleAbortCase
{ after(grammarAccess.getAbortBodyAccess().getAbortCaseParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortBodyAccess().getWeakAbortInstanceParserRuleCall_0()); }
	ruleWeakAbortInstance
{ after(grammarAccess.getWeakAbortBodyAccess().getWeakAbortInstanceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getWeakAbortBodyAccess().getWeakAbortCaseParserRuleCall_1()); }
	ruleWeakAbortCase
{ after(grammarAccess.getWeakAbortBodyAccess().getWeakAbortCaseParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitBodyAccess().getAwaitInstanceParserRuleCall_0()); }
	ruleAwaitInstance
{ after(grammarAccess.getAwaitBodyAccess().getAwaitInstanceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAwaitBodyAccess().getAwaitCaseParserRuleCall_1()); }
	ruleAwaitCase
{ after(grammarAccess.getAwaitBodyAccess().getAwaitCaseParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getEndAssignment_2_0()); }
(rule__Do__EndAssignment_2_0)
{ after(grammarAccess.getDoAccess().getEndAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getDoAccess().getEndAssignment_2_1()); }
(rule__Do__EndAssignment_2_1)
{ after(grammarAccess.getDoAccess().getEndAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getSignalAssignment_1_0()); }
(rule__Emit__SignalAssignment_1_0)
{ after(grammarAccess.getEmitAccess().getSignalAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getEmitAccess().getTickAssignment_1_1()); }
(rule__Emit__TickAssignment_1_1)
{ after(grammarAccess.getEmitAccess().getTickAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getEnd1Assignment_2_0()); }
(rule__Loop__End1Assignment_2_0)
{ after(grammarAccess.getLoopAccess().getEnd1Assignment_2_0()); }
)

    |(
{ before(grammarAccess.getLoopAccess().getEndAssignment_2_1()); }
(rule__Loop__EndAssignment_2_1)
{ after(grammarAccess.getLoopAccess().getEndAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentBody__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentBodyAccess().getPresentEventBodyParserRuleCall_0()); }
	rulePresentEventBody
{ after(grammarAccess.getPresentBodyAccess().getPresentEventBodyParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPresentBodyAccess().getPresentCaseListParserRuleCall_1()); }
	rulePresentCaseList
{ after(grammarAccess.getPresentBodyAccess().getPresentCaseListParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getExpressionAssignment_0()); }
(rule__PresentEvent__ExpressionAssignment_0)
{ after(grammarAccess.getPresentEventAccess().getExpressionAssignment_0()); }
)

    |(
{ before(grammarAccess.getPresentEventAccess().getGroup_1()); }
(rule__PresentEvent__Group_1__0)
{ after(grammarAccess.getPresentEventAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getPresentEventAccess().getTickAssignment_2()); }
(rule__PresentEvent__TickAssignment_2)
{ after(grammarAccess.getPresentEventAccess().getTickAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getGroup_0()); }
(rule__Run__Group_0__0)
{ after(grammarAccess.getRunAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRunAccess().getGroup_1()); }
(rule__Run__Group_1__0)
{ after(grammarAccess.getRunAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleAssignment_0()); }
(rule__ModuleRenaming__ModuleAssignment_0)
{ after(grammarAccess.getModuleRenamingAccess().getModuleAssignment_0()); }
)

    |(
{ before(grammarAccess.getModuleRenamingAccess().getGroup_1()); }
(rule__ModuleRenaming__Group_1__0)
{ after(grammarAccess.getModuleRenamingAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_0()); }
(rule__Renaming__Group_0__0)
{ after(grammarAccess.getRenamingAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_1()); }
(rule__Renaming__Group_1__0)
{ after(grammarAccess.getRenamingAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_2()); }
(rule__Renaming__Group_2__0)
{ after(grammarAccess.getRenamingAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_3()); }
(rule__Renaming__Group_3__0)
{ after(grammarAccess.getRenamingAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_4()); }
(rule__Renaming__Group_4__0)
{ after(grammarAccess.getRenamingAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getRenamingAccess().getGroup_5()); }
(rule__Renaming__Group_5__0)
{ after(grammarAccess.getRenamingAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getNewNameAssignment_0_0()); }
(rule__TypeRenaming__NewNameAssignment_0_0)
{ after(grammarAccess.getTypeRenamingAccess().getNewNameAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getTypeRenamingAccess().getNewTypeAssignment_0_1()); }
(rule__TypeRenaming__NewTypeAssignment_0_1)
{ after(grammarAccess.getTypeRenamingAccess().getNewTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getNewNameAssignment_0_0()); }
(rule__ConstantRenaming__NewNameAssignment_0_0)
{ after(grammarAccess.getConstantRenamingAccess().getNewNameAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getConstantRenamingAccess().getNewValueAssignment_0_1()); }
(rule__ConstantRenaming__NewValueAssignment_0_1)
{ after(grammarAccess.getConstantRenamingAccess().getNewValueAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getNewNameAssignment_0_0()); }
(rule__FunctionRenaming__NewNameAssignment_0_0)
{ after(grammarAccess.getFunctionRenamingAccess().getNewNameAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getFunctionRenamingAccess().getNewFuncAssignment_0_1()); }
(rule__FunctionRenaming__NewFuncAssignment_0_1)
{ after(grammarAccess.getFunctionRenamingAccess().getNewFuncAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getNewNameAssignment_0_0()); }
(rule__SignalRenaming__NewNameAssignment_0_0)
{ after(grammarAccess.getSignalRenamingAccess().getNewNameAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getSignalRenamingAccess().getTickKeyword_0_1()); }

	'tick' 

{ after(grammarAccess.getSignalRenamingAccess().getTickKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BuildInFunction__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBuildInFunctionAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getBuildInFunctionAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getBuildInFunctionAccess().getSolidusKeyword_1()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getPlusSignKeyword_2()); }

	'+' 

{ after(grammarAccess.getBuildInFunctionAccess().getPlusSignKeyword_2()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getHyphenMinusKeyword_3()); }

	'-' 

{ after(grammarAccess.getBuildInFunctionAccess().getHyphenMinusKeyword_3()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getModKeyword_4()); }

	'mod' 

{ after(grammarAccess.getBuildInFunctionAccess().getModKeyword_4()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getEqualsSignKeyword_5()); }

	'=' 

{ after(grammarAccess.getBuildInFunctionAccess().getEqualsSignKeyword_5()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getLessThanSignGreaterThanSignKeyword_6()); }

	'<>' 

{ after(grammarAccess.getBuildInFunctionAccess().getLessThanSignGreaterThanSignKeyword_6()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getGreaterThanSignKeyword_7()); }

	'>' 

{ after(grammarAccess.getBuildInFunctionAccess().getGreaterThanSignKeyword_7()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getLessThanSignKeyword_8()); }

	'<' 

{ after(grammarAccess.getBuildInFunctionAccess().getLessThanSignKeyword_8()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getLessThanSignEqualsSignKeyword_9()); }

	'<=' 

{ after(grammarAccess.getBuildInFunctionAccess().getLessThanSignEqualsSignKeyword_9()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getGreaterThanSignEqualsSignKeyword_10()); }

	'>=' 

{ after(grammarAccess.getBuildInFunctionAccess().getGreaterThanSignEqualsSignKeyword_10()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getNotKeyword_11()); }

	'not' 

{ after(grammarAccess.getBuildInFunctionAccess().getNotKeyword_11()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getAndKeyword_12()); }

	'and' 

{ after(grammarAccess.getBuildInFunctionAccess().getAndKeyword_12()); }
)

    |(
{ before(grammarAccess.getBuildInFunctionAccess().getOrKeyword_13()); }

	'or' 

{ after(grammarAccess.getBuildInFunctionAccess().getOrKeyword_13()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getSignalAssignment_1_0()); }
(rule__Sustain__SignalAssignment_1_0)
{ after(grammarAccess.getSustainAccess().getSignalAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getSustainAccess().getTickAssignment_1_1()); }
(rule__Sustain__TickAssignment_1_1)
{ after(grammarAccess.getSustainAccess().getTickAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getFunctionExpressionParserRuleCall_0()); }
	ruleFunctionExpression
{ after(grammarAccess.getAtomicExpressionAccess().getFunctionExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getTrapExpressionParserRuleCall_1()); }
	ruleTrapExpression
{ after(grammarAccess.getAtomicExpressionAccess().getTrapExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getBooleanValueParserRuleCall_2()); }
	ruleBooleanValue
{ after(grammarAccess.getAtomicExpressionAccess().getBooleanValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_3()); }
	ruleValuedObjectTestExpression
{ after(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_4()); }
	ruleTextExpression
{ after(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getGroup_5()); }
(rule__AtomicExpression__Group_5__0)
{ after(grammarAccess.getAtomicExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getConstantExpressionParserRuleCall_6()); }
	ruleConstantExpression
{ after(grammarAccess.getAtomicExpressionAccess().getConstantExpressionParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantExpressionAccess().getConstantAssignment_1_0()); }
(rule__ConstantExpression__ConstantAssignment_1_0)
{ after(grammarAccess.getConstantExpressionAccess().getConstantAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
(rule__ConstantExpression__ValueAssignment_1_1)
{ after(grammarAccess.getConstantExpressionAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getGroup_0()); }
(rule__SignalNotExpression__Group_0__0)
{ after(grammarAccess.getSignalNotExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getSignalNotExpressionAccess().getSignalAtomicExpressionParserRuleCall_1()); }
	ruleSignalAtomicExpression
{ after(grammarAccess.getSignalNotExpressionAccess().getSignalAtomicExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAtomicExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getSignalReferenceExprParserRuleCall_0()); }
	ruleSignalReferenceExpr
{ after(grammarAccess.getSignalAtomicExpressionAccess().getSignalReferenceExprParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getGroup_1()); }
(rule__SignalAtomicExpression__Group_1__0)
{ after(grammarAccess.getSignalAtomicExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getSignalPreExprParserRuleCall_2()); }
	ruleSignalPreExpr
{ after(grammarAccess.getSignalAtomicExpressionAccess().getSignalPreExprParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getTrapReferenceExprParserRuleCall_3()); }
	ruleTrapReferenceExpr
{ after(grammarAccess.getSignalAtomicExpressionAccess().getTrapReferenceExprParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getGroup_0()); }
(rule__DelayExpr__Group_0__0)
{ after(grammarAccess.getDelayExprAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getDelayExprAccess().getEventAssignment_1()); }
(rule__DelayExpr__EventAssignment_1)
{ after(grammarAccess.getDelayExprAccess().getEventAssignment_1()); }
)

    |(
{ before(grammarAccess.getDelayExprAccess().getGroup_2()); }
(rule__DelayExpr__Group_2__0)
{ after(grammarAccess.getDelayExprAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getTickAssignment_0()); }
(rule__DelayEvent__TickAssignment_0)
{ after(grammarAccess.getDelayEventAccess().getTickAssignment_0()); }
)

    |(
{ before(grammarAccess.getDelayEventAccess().getExprAssignment_1()); }
(rule__DelayEvent__ExprAssignment_1)
{ after(grammarAccess.getDelayEventAccess().getExprAssignment_1()); }
)

    |(
{ before(grammarAccess.getDelayEventAccess().getGroup_2()); }
(rule__DelayEvent__Group_2__0)
{ after(grammarAccess.getDelayEventAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getGroup_0_0()); }
(rule__Exec__Group_0_0__0)
{ after(grammarAccess.getExecAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getExecAccess().getGroup_0_1()); }
(rule__Exec__Group_0_1__0)
{ after(grammarAccess.getExecAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_0()); }
(	ruleBooleanExpression)
{ after(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1()); }
	ruleValuedExpression
{ after(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup_0()); }
(rule__CompareOperation__Group_0__0)
{ after(grammarAccess.getCompareOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCompareOperationAccess().getNotExpressionParserRuleCall_1()); }
	ruleNotExpression
{ after(grammarAccess.getCompareOperationAccess().getNotExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotOrValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); }
(	ruleValuedExpression)
{ after(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); }
	ruleNotExpression
{ after(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getGroup_0()); }
(rule__NotExpression__Group_0__0)
{ after(grammarAccess.getNotExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); }
	ruleAtomicExpression
{ after(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getGroup_0()); }
(rule__NegExpression__Group_0__0)
{ after(grammarAccess.getNegExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); }
	ruleAtomicValuedExpression
{ after(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); }
	ruleIntValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
	ruleFloatValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getGroup_2()); }
(rule__AtomicValuedExpression__Group_2__0)
{ after(grammarAccess.getAtomicValuedExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_3()); }
	ruleAtomicExpression
{ after(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); }
(rule__ValuedObjectTestExpression__Group_0__0)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_1()); }
(rule__ValuedObjectTestExpression__Group_1__0)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_2()); }
	ruleValuedObjectReference
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getInterfaceSignalDeclParserRuleCall_0()); }
	ruleInterfaceSignalDecl
{ after(grammarAccess.getInterfaceDeclarationAccess().getInterfaceSignalDeclParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInterfaceDeclarationAccess().getInterfaceVariableDeclParserRuleCall_1()); }
	ruleInterfaceVariableDecl
{ after(grammarAccess.getInterfaceDeclarationAccess().getInterfaceVariableDeclParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0()); }
(rule__InterfaceSignalDecl__Group_0__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1()); }
(rule__InterfaceSignalDecl__Group_1__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2()); }
(rule__InterfaceSignalDecl__Group_2__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3()); }
(rule__InterfaceSignalDecl__Group_3__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
	ruleCommentAnnotation
{ after(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_1()); }
	ruleTagAnnotation
{ after(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_2()); }
	ruleKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_3()); }
	ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_4()); }
	ruleKeyBooleanValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_5()); }
	ruleKeyIntValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_6()); }
	ruleKeyFloatValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
(	'<' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
(	'>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
(	'>=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
(	'<>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
(	'pure' 
)
{ after(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
(	'boolean' 
)
{ after(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
(	'unsigned' 
)
{ after(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
(	'integer' 
)
{ after(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
(	'float' 
)
{ after(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getDOUBLEEnumLiteralDeclaration_5()); }
(	'double' 
)
{ after(grammarAccess.getValueTypeAccess().getDOUBLEEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_6()); }
(	'string' 
)
{ after(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_7()); }
(	'host' 
)
{ after(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombineOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
(	'none' 
)
{ after(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
(	'*' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
(	'max' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
(	'min' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
(	'or' 
)
{ after(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
(	'and' 
)
{ after(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
(	'host' 
)
{ after(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Module__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__0__Impl
	rule__Module__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getModuleKeyword_0()); }

	'module' 

{ after(grammarAccess.getModuleAccess().getModuleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__1__Impl
	rule__Module__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameAssignment_1()); }
(rule__Module__NameAssignment_1)
{ after(grammarAccess.getModuleAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__2__Impl
	rule__Module__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getModuleAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__3__Impl
	rule__Module__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getInterfaceAssignment_3()); }
(rule__Module__InterfaceAssignment_3)?
{ after(grammarAccess.getModuleAccess().getInterfaceAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__4__Impl
	rule__Module__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getBodyAssignment_4()); }
(rule__Module__BodyAssignment_4)
{ after(grammarAccess.getModuleAccess().getBodyAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Module__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Module__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Module__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getEndAssignment_5()); }
(rule__Module__EndAssignment_5)
{ after(grammarAccess.getModuleAccess().getEndAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__EndModule__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EndModule__Group_0__0__Impl
	rule__EndModule__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndModule__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndModuleAccess().getEndKeyword_0_0()); }

	'end' 

{ after(grammarAccess.getEndModuleAccess().getEndKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EndModule__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EndModule__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndModule__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndModuleAccess().getModuleKeyword_0_1()); }

	'module' 

{ after(grammarAccess.getEndModuleAccess().getModuleKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChannelDescription__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDescription__Group_0__0__Impl
	rule__ChannelDescription__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getColonKeyword_0_0()); }

	':' 

{ after(grammarAccess.getChannelDescriptionAccess().getColonKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDescription__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_0_1()); }
(rule__ChannelDescription__TypeAssignment_0_1)
{ after(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ChannelDescription__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDescription__Group_1__0__Impl
	rule__ChannelDescription__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getChannelDescriptionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDescription__Group_1__1__Impl
	rule__ChannelDescription__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_1_1()); }
(rule__ChannelDescription__TypeAssignment_1_1)
{ after(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDescription__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getChannelDescriptionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ChannelDescription__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDescription__Group_2__0__Impl
	rule__ChannelDescription__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getColonEqualsSignKeyword_2_0()); }

	':=' 

{ after(grammarAccess.getChannelDescriptionAccess().getColonEqualsSignKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDescription__Group_2__1__Impl
	rule__ChannelDescription__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getExpressionAssignment_2_1()); }
(rule__ChannelDescription__ExpressionAssignment_2_1)
{ after(grammarAccess.getChannelDescriptionAccess().getExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDescription__Group_2__2__Impl
	rule__ChannelDescription__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getColonKeyword_2_2()); }

	':' 

{ after(grammarAccess.getChannelDescriptionAccess().getColonKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ChannelDescription__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ChannelDescription__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_2_3()); }
(rule__ChannelDescription__TypeAssignment_2_3)
{ after(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__EsterelTypeIdentifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelTypeIdentifier__Group_2__0__Impl
	rule__EsterelTypeIdentifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getEsterelTypeIdentifierAction_2_0()); }
(

)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getEsterelTypeIdentifierAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EsterelTypeIdentifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelTypeIdentifier__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getGroup_2_1()); }
(rule__EsterelTypeIdentifier__Group_2_1__0)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EsterelTypeIdentifier__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelTypeIdentifier__Group_2_1__0__Impl
	rule__EsterelTypeIdentifier__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getCombineKeyword_2_1_0()); }

	'combine' 

{ after(grammarAccess.getEsterelTypeIdentifierAccess().getCombineKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EsterelTypeIdentifier__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelTypeIdentifier__Group_2_1__1__Impl
	rule__EsterelTypeIdentifier__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getAlternatives_2_1_1()); }
(rule__EsterelTypeIdentifier__Alternatives_2_1_1)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getAlternatives_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EsterelTypeIdentifier__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelTypeIdentifier__Group_2_1__2__Impl
	rule__EsterelTypeIdentifier__Group_2_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getWithKeyword_2_1_2()); }

	'with' 

{ after(grammarAccess.getEsterelTypeIdentifierAccess().getWithKeyword_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EsterelTypeIdentifier__Group_2_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EsterelTypeIdentifier__Group_2_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__Group_2_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getAlternatives_2_1_3()); }
(rule__EsterelTypeIdentifier__Alternatives_2_1_3)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getAlternatives_2_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeIdentifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__0__Impl
	rule__TypeIdentifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getCombineKeyword_2_0()); }

	'combine' 

{ after(grammarAccess.getTypeIdentifierAccess().getCombineKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__1__Impl
	rule__TypeIdentifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getAlternatives_2_1()); }
(rule__TypeIdentifier__Alternatives_2_1)
{ after(grammarAccess.getTypeIdentifierAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__2__Impl
	rule__TypeIdentifier__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getWithKeyword_2_2()); }

	'with' 

{ after(grammarAccess.getTypeIdentifierAccess().getWithKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getOperatorAssignment_2_3()); }
(rule__TypeIdentifier__OperatorAssignment_2_3)
{ after(grammarAccess.getTypeIdentifierAccess().getOperatorAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeIdentifier__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_3__0__Impl
	rule__TypeIdentifier__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getEsterelTypeAction_3_0()); }
(

)
{ after(grammarAccess.getTypeIdentifierAccess().getEsterelTypeAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getEstTypeAssignment_3_1()); }
(rule__TypeIdentifier__EstTypeAssignment_3_1)
{ after(grammarAccess.getTypeIdentifierAccess().getEstTypeAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__LocalSignalDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__0__Impl
	rule__LocalSignalDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalKeyword_0()); }

	'signal' 

{ after(grammarAccess.getLocalSignalDeclAccess().getSignalKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__1__Impl
	rule__LocalSignalDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalListAssignment_1()); }
(rule__LocalSignalDecl__SignalListAssignment_1)
{ after(grammarAccess.getLocalSignalDeclAccess().getSignalListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__2__Impl
	rule__LocalSignalDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getInKeyword_2()); }

	'in' 

{ after(grammarAccess.getLocalSignalDeclAccess().getInKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__3__Impl
	rule__LocalSignalDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getStatementAssignment_3()); }
(rule__LocalSignalDecl__StatementAssignment_3)
{ after(grammarAccess.getLocalSignalDeclAccess().getStatementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__4__Impl
	rule__LocalSignalDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getLocalSignalDeclAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalDecl__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalDecl__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getOptEndAssignment_5()); }
(rule__LocalSignalDecl__OptEndAssignment_5)?
{ after(grammarAccess.getLocalSignalDeclAccess().getOptEndAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__LocalSignalList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalList__Group__0__Impl
	rule__LocalSignalList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getLocalSignalAction_0()); }
(

)
{ after(grammarAccess.getLocalSignalListAccess().getLocalSignalAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalList__Group__1__Impl
	rule__LocalSignalList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getSignalAssignment_1()); }
(rule__LocalSignalList__SignalAssignment_1)
{ after(grammarAccess.getLocalSignalListAccess().getSignalAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalList__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalList__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalList__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getGroup_2()); }
(rule__LocalSignalList__Group_2__0)*
{ after(grammarAccess.getLocalSignalListAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LocalSignalList__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalList__Group_2__0__Impl
	rule__LocalSignalList__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalList__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getLocalSignalListAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalSignalList__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalSignalList__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalList__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getSignalAssignment_2_1()); }
(rule__LocalSignalList__SignalAssignment_2_1)
{ after(grammarAccess.getLocalSignalListAccess().getSignalAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SensorDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group__0__Impl
	rule__SensorDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorKeyword_0()); }

	'sensor' 

{ after(grammarAccess.getSensorDeclAccess().getSensorKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group__1__Impl
	rule__SensorDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorsAssignment_1()); }
(rule__SensorDecl__SensorsAssignment_1)
{ after(grammarAccess.getSensorDeclAccess().getSensorsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group__2__Impl
	rule__SensorDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getGroup_2()); }
(rule__SensorDecl__Group_2__0)*
{ after(grammarAccess.getSensorDeclAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getSensorDeclAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__SensorDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group_2__0__Impl
	rule__SensorDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getSensorDeclAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorsAssignment_2_1()); }
(rule__SensorDecl__SensorsAssignment_2_1)
{ after(grammarAccess.getSensorDeclAccess().getSensorsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SensorWithType__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_0__0__Impl
	rule__SensorWithType__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getSensorAssignment_0_0()); }
(rule__SensorWithType__SensorAssignment_0_0)
{ after(grammarAccess.getSensorWithTypeAccess().getSensorAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorWithType__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getGroup_0_1()); }
(rule__SensorWithType__Group_0_1__0)
{ after(grammarAccess.getSensorWithTypeAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SensorWithType__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_0_1__0__Impl
	rule__SensorWithType__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getColonKeyword_0_1_0()); }

	':' 

{ after(grammarAccess.getSensorWithTypeAccess().getColonKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorWithType__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getTypeAssignment_0_1_1()); }
(rule__SensorWithType__TypeAssignment_0_1_1)
{ after(grammarAccess.getSensorWithTypeAccess().getTypeAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SensorWithType__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_1__0__Impl
	rule__SensorWithType__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getSensorAssignment_1_0()); }
(rule__SensorWithType__SensorAssignment_1_0)
{ after(grammarAccess.getSensorWithTypeAccess().getSensorAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorWithType__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_1__1__Impl
	rule__SensorWithType__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getLeftParenthesisKeyword_1_1()); }

	'(' 

{ after(grammarAccess.getSensorWithTypeAccess().getLeftParenthesisKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorWithType__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_1__2__Impl
	rule__SensorWithType__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getTypeAssignment_1_2()); }
(rule__SensorWithType__TypeAssignment_1_2)
{ after(grammarAccess.getSensorWithTypeAccess().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SensorWithType__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SensorWithType__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getRightParenthesisKeyword_1_3()); }

	')' 

{ after(grammarAccess.getSensorWithTypeAccess().getRightParenthesisKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RelationDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group__0__Impl
	rule__RelationDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationAction_0()); }
(

)
{ after(grammarAccess.getRelationDeclAccess().getRelationAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group__1__Impl
	rule__RelationDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationKeyword_1()); }

	'relation' 

{ after(grammarAccess.getRelationDeclAccess().getRelationKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group__2__Impl
	rule__RelationDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationsAssignment_2()); }
(rule__RelationDecl__RelationsAssignment_2)
{ after(grammarAccess.getRelationDeclAccess().getRelationsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group__3__Impl
	rule__RelationDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getGroup_3()); }
(rule__RelationDecl__Group_3__0)*
{ after(grammarAccess.getRelationDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getRelationDeclAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RelationDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group_3__0__Impl
	rule__RelationDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getCommaKeyword_3_0()); }

	',' 

{ after(grammarAccess.getRelationDeclAccess().getCommaKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationDecl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationsAssignment_3_1()); }
(rule__RelationDecl__RelationsAssignment_3_1)
{ after(grammarAccess.getRelationDeclAccess().getRelationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RelationImplication__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationImplication__Group__0__Impl
	rule__RelationImplication__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getFirstAssignment_0()); }
(rule__RelationImplication__FirstAssignment_0)
{ after(grammarAccess.getRelationImplicationAccess().getFirstAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationImplication__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationImplication__Group__1__Impl
	rule__RelationImplication__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getTypeAssignment_1()); }
(rule__RelationImplication__TypeAssignment_1)
{ after(grammarAccess.getRelationImplicationAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationImplication__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationImplication__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getSecondAssignment_2()); }
(rule__RelationImplication__SecondAssignment_2)
{ after(grammarAccess.getRelationImplicationAccess().getSecondAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RelationIncompatibility__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group__0__Impl
	rule__RelationIncompatibility__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_0()); }
(rule__RelationIncompatibility__IncompAssignment_0)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group__1__Impl
	rule__RelationIncompatibility__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getTypeAssignment_1()); }
(rule__RelationIncompatibility__TypeAssignment_1)
{ after(grammarAccess.getRelationIncompatibilityAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group__2__Impl
	rule__RelationIncompatibility__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_2()); }
(rule__RelationIncompatibility__IncompAssignment_2)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getGroup_3()); }
(rule__RelationIncompatibility__Group_3__0)*
{ after(grammarAccess.getRelationIncompatibilityAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RelationIncompatibility__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group_3__0__Impl
	rule__RelationIncompatibility__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getNumberSignKeyword_3_0()); }

	'#' 

{ after(grammarAccess.getRelationIncompatibilityAccess().getNumberSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RelationIncompatibility__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RelationIncompatibility__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_3_1()); }
(rule__RelationIncompatibility__IncompAssignment_3_1)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group__0__Impl
	rule__TypeDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypeKeyword_0()); }

	'type' 

{ after(grammarAccess.getTypeDeclAccess().getTypeKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group__1__Impl
	rule__TypeDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypesAssignment_1()); }
(rule__TypeDecl__TypesAssignment_1)
{ after(grammarAccess.getTypeDeclAccess().getTypesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group__2__Impl
	rule__TypeDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getGroup_2()); }
(rule__TypeDecl__Group_2__0)*
{ after(grammarAccess.getTypeDeclAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getTypeDeclAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TypeDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group_2__0__Impl
	rule__TypeDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTypeDeclAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypesAssignment_2_1()); }
(rule__TypeDecl__TypesAssignment_2_1)
{ after(grammarAccess.getTypeDeclAccess().getTypesAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantDecls__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group__0__Impl
	rule__ConstantDecls__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getConstantKeyword_0()); }

	'constant' 

{ after(grammarAccess.getConstantDeclsAccess().getConstantKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecls__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group__1__Impl
	rule__ConstantDecls__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getConstantsAssignment_1()); }
(rule__ConstantDecls__ConstantsAssignment_1)
{ after(grammarAccess.getConstantDeclsAccess().getConstantsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecls__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group__2__Impl
	rule__ConstantDecls__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getGroup_2()); }
(rule__ConstantDecls__Group_2__0)*
{ after(grammarAccess.getConstantDeclsAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecls__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getConstantDeclsAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstantDecls__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group_2__0__Impl
	rule__ConstantDecls__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getConstantDeclsAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDecls__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDecls__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getConstantsAssignment_2_1()); }
(rule__ConstantDecls__ConstantsAssignment_2_1)
{ after(grammarAccess.getConstantDeclsAccess().getConstantsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OneTypeConstantDecls__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group__0__Impl
	rule__OneTypeConstantDecls__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsAssignment_0()); }
(rule__OneTypeConstantDecls__ConstantsAssignment_0)
{ after(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecls__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group__1__Impl
	rule__OneTypeConstantDecls__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getGroup_1()); }
(rule__OneTypeConstantDecls__Group_1__0)*
{ after(grammarAccess.getOneTypeConstantDeclsAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecls__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group__2__Impl
	rule__OneTypeConstantDecls__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getOneTypeConstantDeclsAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecls__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getTypeAssignment_3()); }
(rule__OneTypeConstantDecls__TypeAssignment_3)
{ after(grammarAccess.getOneTypeConstantDeclsAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__OneTypeConstantDecls__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group_1__0__Impl
	rule__OneTypeConstantDecls__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getOneTypeConstantDeclsAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OneTypeConstantDecls__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OneTypeConstantDecls__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsAssignment_1_1()); }
(rule__OneTypeConstantDecls__ConstantsAssignment_1_1)
{ after(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantWithValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantWithValue__Group__0__Impl
	rule__ConstantWithValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantWithValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantWithValueAccess().getConstantAssignment_0()); }
(rule__ConstantWithValue__ConstantAssignment_0)
{ after(grammarAccess.getConstantWithValueAccess().getConstantAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantWithValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantWithValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantWithValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantWithValueAccess().getGroup_1()); }
(rule__ConstantWithValue__Group_1__0)?
{ after(grammarAccess.getConstantWithValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantWithValue__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantWithValue__Group_1__0__Impl
	rule__ConstantWithValue__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantWithValue__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantWithValueAccess().getEqualsSignKeyword_1_0()); }

	'=' 

{ after(grammarAccess.getConstantWithValueAccess().getEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantWithValue__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantWithValue__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantWithValue__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantWithValueAccess().getValueAssignment_1_1()); }
(rule__ConstantWithValue__ValueAssignment_1_1)
{ after(grammarAccess.getConstantWithValueAccess().getValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Constant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__0__Impl
	rule__Constant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getConstantAction_0()); }
(

)
{ after(grammarAccess.getConstantAccess().getConstantAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Constant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Constant__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameAssignment_1()); }
(rule__Constant__NameAssignment_1)
{ after(grammarAccess.getConstantAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group__0__Impl
	rule__FunctionDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionKeyword_0()); }

	'function' 

{ after(grammarAccess.getFunctionDeclAccess().getFunctionKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group__1__Impl
	rule__FunctionDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionsAssignment_1()); }
(rule__FunctionDecl__FunctionsAssignment_1)
{ after(grammarAccess.getFunctionDeclAccess().getFunctionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group__2__Impl
	rule__FunctionDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getGroup_2()); }
(rule__FunctionDecl__Group_2__0)*
{ after(grammarAccess.getFunctionDeclAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getFunctionDeclAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__FunctionDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group_2__0__Impl
	rule__FunctionDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getFunctionDeclAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionsAssignment_2_1()); }
(rule__FunctionDecl__FunctionsAssignment_2_1)
{ after(grammarAccess.getFunctionDeclAccess().getFunctionsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
(rule__Function__NameAssignment_0)
{ after(grammarAccess.getFunctionAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_2()); }
(rule__Function__Group_2__0)?
{ after(grammarAccess.getFunctionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__4__Impl
	rule__Function__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getFunctionAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTypeAssignment_5()); }
(rule__Function__TypeAssignment_5)
{ after(grammarAccess.getFunctionAccess().getTypeAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Function__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2__0__Impl
	rule__Function__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListAssignment_2_0()); }
(rule__Function__IdListAssignment_2_0)
{ after(grammarAccess.getFunctionAccess().getIdListAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getGroup_2_1()); }
(rule__Function__Group_2_1__0)*
{ after(grammarAccess.getFunctionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Function__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2_1__0__Impl
	rule__Function__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getFunctionAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Function__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListAssignment_2_1_1()); }
(rule__Function__IdListAssignment_2_1_1)
{ after(grammarAccess.getFunctionAccess().getIdListAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcedureDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group__0__Impl
	rule__ProcedureDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProcedureKeyword_0()); }

	'procedure' 

{ after(grammarAccess.getProcedureDeclAccess().getProcedureKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group__1__Impl
	rule__ProcedureDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProceduresAssignment_1()); }
(rule__ProcedureDecl__ProceduresAssignment_1)
{ after(grammarAccess.getProcedureDeclAccess().getProceduresAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group__2__Impl
	rule__ProcedureDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getGroup_2()); }
(rule__ProcedureDecl__Group_2__0)*
{ after(grammarAccess.getProcedureDeclAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getProcedureDeclAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ProcedureDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group_2__0__Impl
	rule__ProcedureDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getProcedureDeclAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProceduresAssignment_2_1()); }
(rule__ProcedureDecl__ProceduresAssignment_2_1)
{ after(grammarAccess.getProcedureDeclAccess().getProceduresAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__0__Impl
	rule__Procedure__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getNameAssignment_0()); }
(rule__Procedure__NameAssignment_0)
{ after(grammarAccess.getProcedureAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__1__Impl
	rule__Procedure__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__2__Impl
	rule__Procedure__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_2()); }
(rule__Procedure__Group_2__0)?
{ after(grammarAccess.getProcedureAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__3__Impl
	rule__Procedure__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__4__Impl
	rule__Procedure__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getProcedureAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__5__Impl
	rule__Procedure__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_5()); }
(rule__Procedure__Group_5__0)?
{ after(grammarAccess.getProcedureAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getProcedureAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Procedure__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2__0__Impl
	rule__Procedure__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdList1Assignment_2_0()); }
(rule__Procedure__IdList1Assignment_2_0)
{ after(grammarAccess.getProcedureAccess().getIdList1Assignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_2_1()); }
(rule__Procedure__Group_2_1__0)*
{ after(grammarAccess.getProcedureAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2_1__0__Impl
	rule__Procedure__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getProcedureAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdList1Assignment_2_1_1()); }
(rule__Procedure__IdList1Assignment_2_1_1)
{ after(grammarAccess.getProcedureAccess().getIdList1Assignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_5__0__Impl
	rule__Procedure__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdList2Assignment_5_0()); }
(rule__Procedure__IdList2Assignment_5_0)
{ after(grammarAccess.getProcedureAccess().getIdList2Assignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getGroup_5_1()); }
(rule__Procedure__Group_5_1__0)*
{ after(grammarAccess.getProcedureAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Procedure__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_5_1__0__Impl
	rule__Procedure__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getProcedureAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Procedure__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Procedure__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdList2Assignment_5_1_1()); }
(rule__Procedure__IdList2Assignment_5_1_1)
{ after(grammarAccess.getProcedureAccess().getIdList2Assignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TaskDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group__0__Impl
	rule__TaskDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getTaskKeyword_0()); }

	'task' 

{ after(grammarAccess.getTaskDeclAccess().getTaskKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group__1__Impl
	rule__TaskDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getTasksAssignment_1()); }
(rule__TaskDecl__TasksAssignment_1)
{ after(grammarAccess.getTaskDeclAccess().getTasksAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group__2__Impl
	rule__TaskDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getGroup_2()); }
(rule__TaskDecl__Group_2__0)*
{ after(grammarAccess.getTaskDeclAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getTaskDeclAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TaskDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group_2__0__Impl
	rule__TaskDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getTaskDeclAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getTasksAssignment_2_1()); }
(rule__TaskDecl__TasksAssignment_2_1)
{ after(grammarAccess.getTaskDeclAccess().getTasksAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__0__Impl
	rule__Task__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameAssignment_0()); }
(rule__Task__NameAssignment_0)
{ after(grammarAccess.getTaskAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__1__Impl
	rule__Task__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__2__Impl
	rule__Task__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_2()); }
(rule__Task__Group_2__0)?
{ after(grammarAccess.getTaskAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__3__Impl
	rule__Task__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getTaskAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__4__Impl
	rule__Task__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getTaskAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__5__Impl
	rule__Task__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_5()); }
(rule__Task__Group_5__0)?
{ after(grammarAccess.getTaskAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getTaskAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Task__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2__0__Impl
	rule__Task__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getIdList1Assignment_2_0()); }
(rule__Task__IdList1Assignment_2_0)
{ after(grammarAccess.getTaskAccess().getIdList1Assignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_2_1()); }
(rule__Task__Group_2_1__0)*
{ after(grammarAccess.getTaskAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2_1__0__Impl
	rule__Task__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getTaskAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getIdList1Assignment_2_1_1()); }
(rule__Task__IdList1Assignment_2_1_1)
{ after(grammarAccess.getTaskAccess().getIdList1Assignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_5__0__Impl
	rule__Task__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getIdList2Assignment_5_0()); }
(rule__Task__IdList2Assignment_5_0)
{ after(grammarAccess.getTaskAccess().getIdList2Assignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getGroup_5_1()); }
(rule__Task__Group_5_1__0)*
{ after(grammarAccess.getTaskAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Task__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_5_1__0__Impl
	rule__Task__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getTaskAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Task__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Task__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Task__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getIdList2Assignment_5_1_1()); }
(rule__Task__IdList2Assignment_5_1_1)
{ after(grammarAccess.getTaskAccess().getIdList2Assignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__0__Impl
	rule__Statement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getSequenceParserRuleCall_0()); }
	ruleSequence
{ after(grammarAccess.getStatementAccess().getSequenceParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getGroup_1()); }
(rule__Statement__Group_1__0)?
{ after(grammarAccess.getStatementAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__0__Impl
	rule__Statement__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getParallelListAction_1_0()); }
(

)
{ after(grammarAccess.getStatementAccess().getParallelListAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStatementAccess().getGroup_1_1()); }
(rule__Statement__Group_1_1__0)
{ after(grammarAccess.getStatementAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getStatementAccess().getGroup_1_1()); }
(rule__Statement__Group_1_1__0)*
{ after(grammarAccess.getStatementAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Statement__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1_1__0__Impl
	rule__Statement__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getVerticalLineVerticalLineKeyword_1_1_0()); }

	'||' 

{ after(grammarAccess.getStatementAccess().getVerticalLineVerticalLineKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Statement__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getListAssignment_1_1_1()); }
(rule__Statement__ListAssignment_1_1_1)
{ after(grammarAccess.getStatementAccess().getListAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__0__Impl
	rule__Sequence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getAtomicStatementParserRuleCall_0()); }
	ruleAtomicStatement
{ after(grammarAccess.getSequenceAccess().getAtomicStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__1__Impl
	rule__Sequence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getGroup_1()); }
(rule__Sequence__Group_1__0)?
{ after(grammarAccess.getSequenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getSemicolonKeyword_2()); }
(
	';' 
)?
{ after(grammarAccess.getSequenceAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sequence__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_1__0__Impl
	rule__Sequence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getSequenceListAction_1_0()); }
(

)
{ after(grammarAccess.getSequenceAccess().getSequenceListAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSequenceAccess().getGroup_1_1()); }
(rule__Sequence__Group_1_1__0)
{ after(grammarAccess.getSequenceAccess().getGroup_1_1()); }
)
(
{ before(grammarAccess.getSequenceAccess().getGroup_1_1()); }
(rule__Sequence__Group_1_1__0)*
{ after(grammarAccess.getSequenceAccess().getGroup_1_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Sequence__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_1_1__0__Impl
	rule__Sequence__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getSemicolonKeyword_1_1_0()); }

	';' 

{ after(grammarAccess.getSequenceAccess().getSemicolonKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sequence__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sequence__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getListAssignment_1_1_1()); }
(rule__Sequence__ListAssignment_1_1_1)
{ after(grammarAccess.getSequenceAccess().getListAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Block__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__0__Impl
	rule__Block__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getBlockAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__1__Impl
	rule__Block__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementAssignment_1()); }
(rule__Block__StatementAssignment_1)
{ after(grammarAccess.getBlockAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Block__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Block__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Block__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getBlockAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVarAssignment_0()); }
(rule__Assignment__VarAssignment_0)
{ after(grammarAccess.getAssignmentAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExprAssignment_2()); }
(rule__Assignment__ExprAssignment_2)
{ after(grammarAccess.getAssignmentAccess().getExprAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Abort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group__0__Impl
	rule__Abort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getAbortKeyword_0()); }

	'abort' 

{ after(grammarAccess.getAbortAccess().getAbortKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group__1__Impl
	rule__Abort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getStatementAssignment_1()); }
(rule__Abort__StatementAssignment_1)
{ after(grammarAccess.getAbortAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group__2__Impl
	rule__Abort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getWhenKeyword_2()); }

	'when' 

{ after(grammarAccess.getAbortAccess().getWhenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Abort__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Abort__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getBodyAssignment_3()); }
(rule__Abort__BodyAssignment_3)
{ after(grammarAccess.getAbortAccess().getBodyAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AbortInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortInstance__Group__0__Impl
	rule__AbortInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getDelayAssignment_0()); }
(rule__AbortInstance__DelayAssignment_0)
{ after(grammarAccess.getAbortInstanceAccess().getDelayAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbortInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortInstance__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getGroup_1()); }
(rule__AbortInstance__Group_1__0)?
{ after(grammarAccess.getAbortInstanceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AbortInstance__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortInstance__Group_1__0__Impl
	rule__AbortInstance__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getDoKeyword_1_0()); }

	'do' 

{ after(grammarAccess.getAbortInstanceAccess().getDoKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbortInstance__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortInstance__Group_1__1__Impl
	rule__AbortInstance__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getStatementAssignment_1_1()); }
(rule__AbortInstance__StatementAssignment_1_1)
{ after(grammarAccess.getAbortInstanceAccess().getStatementAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbortInstance__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortInstance__Group_1__2__Impl
	rule__AbortInstance__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getEndKeyword_1_2()); }

	'end' 

{ after(grammarAccess.getAbortInstanceAccess().getEndKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbortInstance__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortInstance__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getOptEndAssignment_1_3()); }
(rule__AbortInstance__OptEndAssignment_1_3)?
{ after(grammarAccess.getAbortInstanceAccess().getOptEndAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AbortCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortCase__Group__0__Impl
	rule__AbortCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getCasesAssignment_0()); }
(rule__AbortCase__CasesAssignment_0)
{ after(grammarAccess.getAbortCaseAccess().getCasesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbortCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortCase__Group__1__Impl
	rule__AbortCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getCasesAssignment_1()); }
(rule__AbortCase__CasesAssignment_1)*
{ after(grammarAccess.getAbortCaseAccess().getCasesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbortCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortCase__Group__2__Impl
	rule__AbortCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getEndKeyword_2()); }

	'end' 

{ after(grammarAccess.getAbortCaseAccess().getEndKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbortCase__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCase__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getOptEndAssignment_3()); }
(rule__AbortCase__OptEndAssignment_3)?
{ after(grammarAccess.getAbortCaseAccess().getOptEndAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AbortCaseSingle__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortCaseSingle__Group__0__Impl
	rule__AbortCaseSingle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCaseSingle__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getAbortCaseSingleAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbortCaseSingle__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortCaseSingle__Group__1__Impl
	rule__AbortCaseSingle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCaseSingle__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getDelayAssignment_1()); }
(rule__AbortCaseSingle__DelayAssignment_1)
{ after(grammarAccess.getAbortCaseSingleAccess().getDelayAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbortCaseSingle__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortCaseSingle__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCaseSingle__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getGroup_2()); }
(rule__AbortCaseSingle__Group_2__0)?
{ after(grammarAccess.getAbortCaseSingleAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AbortCaseSingle__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortCaseSingle__Group_2__0__Impl
	rule__AbortCaseSingle__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCaseSingle__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getDoKeyword_2_0()); }

	'do' 

{ after(grammarAccess.getAbortCaseSingleAccess().getDoKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AbortCaseSingle__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AbortCaseSingle__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCaseSingle__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getStatementAssignment_2_1()); }
(rule__AbortCaseSingle__StatementAssignment_2_1)
{ after(grammarAccess.getAbortCaseSingleAccess().getStatementAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WeakAbort__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbort__Group__0__Impl
	rule__WeakAbort__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbort__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getWeakAbortAction_0()); }
(

)
{ after(grammarAccess.getWeakAbortAccess().getWeakAbortAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbort__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbort__Group__1__Impl
	rule__WeakAbort__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbort__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getWeakKeyword_1()); }

	'weak' 

{ after(grammarAccess.getWeakAbortAccess().getWeakKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbort__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbort__Group__2__Impl
	rule__WeakAbort__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbort__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getAbortKeyword_2()); }

	'abort' 

{ after(grammarAccess.getWeakAbortAccess().getAbortKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbort__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbort__Group__3__Impl
	rule__WeakAbort__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbort__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getStatementAssignment_3()); }
(rule__WeakAbort__StatementAssignment_3)
{ after(grammarAccess.getWeakAbortAccess().getStatementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbort__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbort__Group__4__Impl
	rule__WeakAbort__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbort__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getWhenKeyword_4()); }

	'when' 

{ after(grammarAccess.getWeakAbortAccess().getWhenKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbort__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbort__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbort__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getBodyAssignment_5()); }
(rule__WeakAbort__BodyAssignment_5)
{ after(grammarAccess.getWeakAbortAccess().getBodyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__WeakAbortEnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortEnd__Group__0__Impl
	rule__WeakAbortEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortEnd__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAccess().getWeakAbortEndAction_0()); }
(

)
{ after(grammarAccess.getWeakAbortEndAccess().getWeakAbortEndAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortEnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortEnd__Group__1__Impl
	rule__WeakAbortEnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortEnd__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAccess().getEndKeyword_1()); }

	'end' 

{ after(grammarAccess.getWeakAbortEndAccess().getEndKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortEnd__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortEnd__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortEnd__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAccess().getOptEndAssignment_2()); }
(rule__WeakAbortEnd__OptEndAssignment_2)?
{ after(grammarAccess.getWeakAbortEndAccess().getOptEndAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WeakAbortEndAlt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortEndAlt__Group__0__Impl
	rule__WeakAbortEndAlt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortEndAlt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAltAccess().getEndAssignment_0()); }
(rule__WeakAbortEndAlt__EndAssignment_0)?
{ after(grammarAccess.getWeakAbortEndAltAccess().getEndAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortEndAlt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortEndAlt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortEndAlt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAltAccess().getEndAAssignment_1()); }
(rule__WeakAbortEndAlt__EndAAssignment_1)
{ after(grammarAccess.getWeakAbortEndAltAccess().getEndAAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__WeakAbortInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortInstance__Group__0__Impl
	rule__WeakAbortInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getWeakAbortInstanceAction_0()); }
(

)
{ after(grammarAccess.getWeakAbortInstanceAccess().getWeakAbortInstanceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortInstance__Group__1__Impl
	rule__WeakAbortInstance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getDelayAssignment_1()); }
(rule__WeakAbortInstance__DelayAssignment_1)
{ after(grammarAccess.getWeakAbortInstanceAccess().getDelayAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortInstance__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortInstance__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getGroup_2()); }
(rule__WeakAbortInstance__Group_2__0)?
{ after(grammarAccess.getWeakAbortInstanceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WeakAbortInstance__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortInstance__Group_2__0__Impl
	rule__WeakAbortInstance__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getDoKeyword_2_0()); }

	'do' 

{ after(grammarAccess.getWeakAbortInstanceAccess().getDoKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortInstance__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortInstance__Group_2__1__Impl
	rule__WeakAbortInstance__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getStatementAssignment_2_1()); }
(rule__WeakAbortInstance__StatementAssignment_2_1)
{ after(grammarAccess.getWeakAbortInstanceAccess().getStatementAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortInstance__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortInstance__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getEndAssignment_2_2()); }
(rule__WeakAbortInstance__EndAssignment_2_2)
{ after(grammarAccess.getWeakAbortInstanceAccess().getEndAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__WeakAbortCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortCase__Group__0__Impl
	rule__WeakAbortCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getWeakAbortCaseAction_0()); }
(

)
{ after(grammarAccess.getWeakAbortCaseAccess().getWeakAbortCaseAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortCase__Group__1__Impl
	rule__WeakAbortCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getCasesAssignment_1()); }
(rule__WeakAbortCase__CasesAssignment_1)
{ after(grammarAccess.getWeakAbortCaseAccess().getCasesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortCase__Group__2__Impl
	rule__WeakAbortCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getCasesAssignment_2()); }
(rule__WeakAbortCase__CasesAssignment_2)*
{ after(grammarAccess.getWeakAbortCaseAccess().getCasesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__WeakAbortCase__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__WeakAbortCase__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortCase__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getEndAssignment_3()); }
(rule__WeakAbortCase__EndAssignment_3)
{ after(grammarAccess.getWeakAbortCaseAccess().getEndAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Await__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group__0__Impl
	rule__Await__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getAwaitKeyword_0()); }

	'await' 

{ after(grammarAccess.getAwaitAccess().getAwaitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Await__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Await__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Await__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getBodyAssignment_1()); }
(rule__Await__BodyAssignment_1)
{ after(grammarAccess.getAwaitAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AwaitInstance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitInstance__Group__0__Impl
	rule__AwaitInstance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitInstance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getDelayAssignment_0()); }
(rule__AwaitInstance__DelayAssignment_0)
{ after(grammarAccess.getAwaitInstanceAccess().getDelayAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitInstance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitInstance__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitInstance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getGroup_1()); }
(rule__AwaitInstance__Group_1__0)?
{ after(grammarAccess.getAwaitInstanceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AwaitInstance__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitInstance__Group_1__0__Impl
	rule__AwaitInstance__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitInstance__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getDoKeyword_1_0()); }

	'do' 

{ after(grammarAccess.getAwaitInstanceAccess().getDoKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitInstance__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitInstance__Group_1__1__Impl
	rule__AwaitInstance__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitInstance__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getStatementAssignment_1_1()); }
(rule__AwaitInstance__StatementAssignment_1_1)
{ after(grammarAccess.getAwaitInstanceAccess().getStatementAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitInstance__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitInstance__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitInstance__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getEndAssignment_1_2()); }
(rule__AwaitInstance__EndAssignment_1_2)
{ after(grammarAccess.getAwaitInstanceAccess().getEndAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AwaitCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitCase__Group__0__Impl
	rule__AwaitCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getCasesAssignment_0()); }
(rule__AwaitCase__CasesAssignment_0)
{ after(grammarAccess.getAwaitCaseAccess().getCasesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitCase__Group__1__Impl
	rule__AwaitCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getCasesAssignment_1()); }
(rule__AwaitCase__CasesAssignment_1)*
{ after(grammarAccess.getAwaitCaseAccess().getCasesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitCase__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getEndAssignment_2()); }
(rule__AwaitCase__EndAssignment_2)
{ after(grammarAccess.getAwaitCaseAccess().getEndAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AwaitEnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitEnd__Group__0__Impl
	rule__AwaitEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitEnd__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitEndAccess().getEndKeyword_0()); }

	'end' 

{ after(grammarAccess.getAwaitEndAccess().getEndKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AwaitEnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AwaitEnd__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitEnd__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitEndAccess().getAwaitKeyword_1()); }
(
	'await' 
)?
{ after(grammarAccess.getAwaitEndAccess().getAwaitKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcCall__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__0__Impl
	rule__ProcCall__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getCallKeyword_0()); }

	'call' 

{ after(grammarAccess.getProcCallAccess().getCallKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__1__Impl
	rule__ProcCall__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getProcAssignment_1()); }
(rule__ProcCall__ProcAssignment_1)
{ after(grammarAccess.getProcCallAccess().getProcAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__2__Impl
	rule__ProcCall__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__3__Impl
	rule__ProcCall__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getGroup_3()); }
(rule__ProcCall__Group_3__0)?
{ after(grammarAccess.getProcCallAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__4__Impl
	rule__ProcCall__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__5__Impl
	rule__ProcCall__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_5()); }

	'(' 

{ after(grammarAccess.getProcCallAccess().getLeftParenthesisKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__6__Impl
	rule__ProcCall__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getGroup_6()); }
(rule__ProcCall__Group_6__0)?
{ after(grammarAccess.getProcCallAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_7()); }

	')' 

{ after(grammarAccess.getProcCallAccess().getRightParenthesisKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__ProcCall__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_3__0__Impl
	rule__ProcCall__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getVarListAssignment_3_0()); }
(rule__ProcCall__VarListAssignment_3_0)
{ after(grammarAccess.getProcCallAccess().getVarListAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getGroup_3_1()); }
(rule__ProcCall__Group_3_1__0)*
{ after(grammarAccess.getProcCallAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcCall__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_3_1__0__Impl
	rule__ProcCall__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getProcCallAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getVarListAssignment_3_1_1()); }
(rule__ProcCall__VarListAssignment_3_1_1)
{ after(grammarAccess.getProcCallAccess().getVarListAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcCall__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_6__0__Impl
	rule__ProcCall__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getKexpressionsAssignment_6_0()); }
(rule__ProcCall__KexpressionsAssignment_6_0)
{ after(grammarAccess.getProcCallAccess().getKexpressionsAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getGroup_6_1()); }
(rule__ProcCall__Group_6_1__0)*
{ after(grammarAccess.getProcCallAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ProcCall__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_6_1__0__Impl
	rule__ProcCall__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getCommaKeyword_6_1_0()); }

	',' 

{ after(grammarAccess.getProcCallAccess().getCommaKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcCall__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcCall__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getKexpressionsAssignment_6_1_1()); }
(rule__ProcCall__KexpressionsAssignment_6_1_1)
{ after(grammarAccess.getProcCallAccess().getKexpressionsAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Do__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group__0__Impl
	rule__Do__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getDoKeyword_0()); }

	'do' 

{ after(grammarAccess.getDoAccess().getDoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group__1__Impl
	rule__Do__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getStatementAssignment_1()); }
(rule__Do__StatementAssignment_1)
{ after(grammarAccess.getDoAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Do__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Do__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Do__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getAlternatives_2()); }
(rule__Do__Alternatives_2)
{ after(grammarAccess.getDoAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DoUpto__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoUpto__Group__0__Impl
	rule__DoUpto__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUpto__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoUptoAccess().getUptoKeyword_0()); }

	'upto' 

{ after(grammarAccess.getDoUptoAccess().getUptoKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoUpto__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoUpto__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoUpto__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoUptoAccess().getExprAssignment_1()); }
(rule__DoUpto__ExprAssignment_1)
{ after(grammarAccess.getDoUptoAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DoWatching__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWatching__Group__0__Impl
	rule__DoWatching__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatching__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingAccess().getWatchingKeyword_0()); }

	'watching' 

{ after(grammarAccess.getDoWatchingAccess().getWatchingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWatching__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWatching__Group__1__Impl
	rule__DoWatching__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatching__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingAccess().getDelayAssignment_1()); }
(rule__DoWatching__DelayAssignment_1)
{ after(grammarAccess.getDoWatchingAccess().getDelayAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWatching__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWatching__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatching__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingAccess().getEndAssignment_2()); }
(rule__DoWatching__EndAssignment_2)?
{ after(grammarAccess.getDoWatchingAccess().getEndAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DoWatchingEnd__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWatchingEnd__Group__0__Impl
	rule__DoWatchingEnd__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatchingEnd__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingEndAccess().getTimeoutKeyword_0()); }

	'timeout' 

{ after(grammarAccess.getDoWatchingEndAccess().getTimeoutKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWatchingEnd__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWatchingEnd__Group__1__Impl
	rule__DoWatchingEnd__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatchingEnd__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingEndAccess().getStatementAssignment_1()); }
(rule__DoWatchingEnd__StatementAssignment_1)
{ after(grammarAccess.getDoWatchingEndAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWatchingEnd__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWatchingEnd__Group__2__Impl
	rule__DoWatchingEnd__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatchingEnd__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingEndAccess().getEndKeyword_2()); }

	'end' 

{ after(grammarAccess.getDoWatchingEndAccess().getEndKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DoWatchingEnd__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DoWatchingEnd__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatchingEnd__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingEndAccess().getOptEndAssignment_3()); }
(rule__DoWatchingEnd__OptEndAssignment_3)?
{ after(grammarAccess.getDoWatchingEndAccess().getOptEndAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Emit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group__0__Impl
	rule__Emit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getEmitKeyword_0()); }

	'emit' 

{ after(grammarAccess.getEmitAccess().getEmitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group__1__Impl
	rule__Emit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getAlternatives_1()); }
(rule__Emit__Alternatives_1)
{ after(grammarAccess.getEmitAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getGroup_2()); }
(rule__Emit__Group_2__0)?
{ after(grammarAccess.getEmitAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Emit__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group_2__0__Impl
	rule__Emit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getEmitAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group_2__1__Impl
	rule__Emit__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getExprAssignment_2_1()); }
(rule__Emit__ExprAssignment_2_1)
{ after(grammarAccess.getEmitAccess().getExprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emit__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emit__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getEmitAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EveryDo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__0__Impl
	rule__EveryDo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getEveryKeyword_0()); }

	'every' 

{ after(grammarAccess.getEveryDoAccess().getEveryKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__1__Impl
	rule__EveryDo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getDelayAssignment_1()); }
(rule__EveryDo__DelayAssignment_1)
{ after(grammarAccess.getEveryDoAccess().getDelayAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__2__Impl
	rule__EveryDo__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getEveryDoAccess().getDoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__3__Impl
	rule__EveryDo__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getStatementAssignment_3()); }
(rule__EveryDo__StatementAssignment_3)
{ after(grammarAccess.getEveryDoAccess().getStatementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__4__Impl
	rule__EveryDo__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getEndKeyword_4()); }

	'end' 

{ after(grammarAccess.getEveryDoAccess().getEndKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EveryDo__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EveryDo__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getOptEndAssignment_5()); }
(rule__EveryDo__OptEndAssignment_5)?
{ after(grammarAccess.getEveryDoAccess().getOptEndAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Exit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group__0__Impl
	rule__Exit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getExitKeyword_0()); }

	'exit' 

{ after(grammarAccess.getExitAccess().getExitKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group__1__Impl
	rule__Exit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getTrapAssignment_1()); }
(rule__Exit__TrapAssignment_1)
{ after(grammarAccess.getExitAccess().getTrapAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getGroup_2()); }
(rule__Exit__Group_2__0)?
{ after(grammarAccess.getExitAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Exit__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group_2__0__Impl
	rule__Exit__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getExitAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group_2__1__Impl
	rule__Exit__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getExpressionAssignment_2_1()); }
(rule__Exit__ExpressionAssignment_2_1)
{ after(grammarAccess.getExitAccess().getExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exit__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exit__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getExitAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Halt__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Halt__Group__0__Impl
	rule__Halt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Halt__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHaltAccess().getHaltAction_0()); }
(

)
{ after(grammarAccess.getHaltAccess().getHaltAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Halt__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Halt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Halt__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getHaltAccess().getHaltKeyword_1()); }

	'halt' 

{ after(grammarAccess.getHaltAccess().getHaltKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IfTest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__0__Impl
	rule__IfTest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getIfKeyword_0()); }

	'if' 

{ after(grammarAccess.getIfTestAccess().getIfKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__1__Impl
	rule__IfTest__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getExprAssignment_1()); }
(rule__IfTest__ExprAssignment_1)
{ after(grammarAccess.getIfTestAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__2__Impl
	rule__IfTest__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenPartAssignment_2()); }
(rule__IfTest__ThenPartAssignment_2)?
{ after(grammarAccess.getIfTestAccess().getThenPartAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__3__Impl
	rule__IfTest__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElsifAssignment_3()); }
(rule__IfTest__ElsifAssignment_3)*
{ after(grammarAccess.getIfTestAccess().getElsifAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__4__Impl
	rule__IfTest__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElsePartAssignment_4()); }
(rule__IfTest__ElsePartAssignment_4)?
{ after(grammarAccess.getIfTestAccess().getElsePartAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__5__Impl
	rule__IfTest__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getIfTestAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IfTest__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IfTest__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getOptEndAssignment_6()); }
(rule__IfTest__OptEndAssignment_6)?
{ after(grammarAccess.getIfTestAccess().getOptEndAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ElsIf__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group__0__Impl
	rule__ElsIf__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getElsifKeyword_0()); }

	'elsif' 

{ after(grammarAccess.getElsIfAccess().getElsifKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElsIf__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group__1__Impl
	rule__ElsIf__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getExprAssignment_1()); }
(rule__ElsIf__ExprAssignment_1)
{ after(grammarAccess.getElsIfAccess().getExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElsIf__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsIf__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getThenPartAssignment_2()); }
(rule__ElsIf__ThenPartAssignment_2)?
{ after(grammarAccess.getElsIfAccess().getThenPartAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ThenPart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThenPart__Group__0__Impl
	rule__ThenPart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenPart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenPartAccess().getThenKeyword_0()); }

	'then' 

{ after(grammarAccess.getThenPartAccess().getThenKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ThenPart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ThenPart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ThenPart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenPartAccess().getStatementAssignment_1()); }
(rule__ThenPart__StatementAssignment_1)
{ after(grammarAccess.getThenPartAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ElsePart__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsePart__Group__0__Impl
	rule__ElsePart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsePart__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsePartAccess().getElseKeyword_0()); }

	'else' 

{ after(grammarAccess.getElsePartAccess().getElseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ElsePart__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ElsePart__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElsePart__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsePartAccess().getStatementAssignment_1()); }
(rule__ElsePart__StatementAssignment_1)
{ after(grammarAccess.getElsePartAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Loop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group__0__Impl
	rule__Loop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getLoopKeyword_0()); }

	'loop' 

{ after(grammarAccess.getLoopAccess().getLoopKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group__1__Impl
	rule__Loop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getBodyAssignment_1()); }
(rule__Loop__BodyAssignment_1)
{ after(grammarAccess.getLoopAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Loop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Loop__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getAlternatives_2()); }
(rule__Loop__Alternatives_2)
{ after(grammarAccess.getLoopAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EndLoop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EndLoop__Group__0__Impl
	rule__EndLoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EndLoop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndLoopAccess().getEndLoopAction_0()); }
(

)
{ after(grammarAccess.getEndLoopAccess().getEndLoopAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EndLoop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EndLoop__Group__1__Impl
	rule__EndLoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EndLoop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndLoopAccess().getEndKeyword_1()); }

	'end' 

{ after(grammarAccess.getEndLoopAccess().getEndKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EndLoop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EndLoop__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EndLoop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndLoopAccess().getEndOptAssignment_2()); }
(rule__EndLoop__EndOptAssignment_2)?
{ after(grammarAccess.getEndLoopAccess().getEndOptAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__LoopEach__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopEach__Group__0__Impl
	rule__LoopEach__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopEach__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopEachAccess().getEachKeyword_0()); }

	'each' 

{ after(grammarAccess.getLoopEachAccess().getEachKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LoopEach__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LoopEach__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LoopEach__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopEachAccess().getLoopDelayParserRuleCall_1()); }
	ruleLoopDelay
{ after(grammarAccess.getLoopEachAccess().getLoopDelayParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Nothing__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nothing__Group__0__Impl
	rule__Nothing__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Nothing__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNothingAccess().getNothingKeyword_0()); }

	'nothing' 

{ after(grammarAccess.getNothingAccess().getNothingKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Nothing__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Nothing__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Nothing__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNothingAccess().getNothingAction_1()); }
(

)
{ after(grammarAccess.getNothingAccess().getNothingAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pause__Group__0__Impl
	rule__Pause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPauseAccess().getPauseKeyword_0()); }

	'pause' 

{ after(grammarAccess.getPauseAccess().getPauseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pause__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPauseAccess().getPauseAction_1()); }
(

)
{ after(grammarAccess.getPauseAccess().getPauseAction_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Present__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group__0__Impl
	rule__Present__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getPresentKeyword_0()); }

	'present' 

{ after(grammarAccess.getPresentAccess().getPresentKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group__1__Impl
	rule__Present__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getBodyAssignment_1()); }
(rule__Present__BodyAssignment_1)
{ after(grammarAccess.getPresentAccess().getBodyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group__2__Impl
	rule__Present__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElsePartAssignment_2()); }
(rule__Present__ElsePartAssignment_2)?
{ after(grammarAccess.getPresentAccess().getElsePartAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group__3__Impl
	rule__Present__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getEndKeyword_3()); }

	'end' 

{ after(grammarAccess.getPresentAccess().getEndKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Present__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Present__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Present__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getOptEndAssignment_4()); }
(rule__Present__OptEndAssignment_4)?
{ after(grammarAccess.getPresentAccess().getOptEndAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__PresentEventBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentEventBody__Group__0__Impl
	rule__PresentEventBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEventBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventBodyAccess().getEventAssignment_0()); }
(rule__PresentEventBody__EventAssignment_0)
{ after(grammarAccess.getPresentEventBodyAccess().getEventAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentEventBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentEventBody__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEventBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventBodyAccess().getThenPartAssignment_1()); }
(rule__PresentEventBody__ThenPartAssignment_1)?
{ after(grammarAccess.getPresentEventBodyAccess().getThenPartAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PresentCaseList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCaseList__Group__0__Impl
	rule__PresentCaseList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCaseList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseListAccess().getCasesAssignment_0()); }
(rule__PresentCaseList__CasesAssignment_0)
{ after(grammarAccess.getPresentCaseListAccess().getCasesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCaseList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCaseList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCaseList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseListAccess().getCasesAssignment_1()); }
(rule__PresentCaseList__CasesAssignment_1)*
{ after(grammarAccess.getPresentCaseListAccess().getCasesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PresentCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group__0__Impl
	rule__PresentCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getPresentCaseAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group__1__Impl
	rule__PresentCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getEventAssignment_1()); }
(rule__PresentCase__EventAssignment_1)
{ after(grammarAccess.getPresentCaseAccess().getEventAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getGroup_2()); }
(rule__PresentCase__Group_2__0)?
{ after(grammarAccess.getPresentCaseAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PresentCase__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group_2__0__Impl
	rule__PresentCase__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getDoKeyword_2_0()); }

	'do' 

{ after(grammarAccess.getPresentCaseAccess().getDoKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentCase__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentCase__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getStatementAssignment_2_1()); }
(rule__PresentCase__StatementAssignment_2_1)
{ after(grammarAccess.getPresentCaseAccess().getStatementAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PresentEvent__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentEvent__Group_1__0__Impl
	rule__PresentEvent__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getFBAssignment_1_0()); }
(rule__PresentEvent__FBAssignment_1_0)
{ after(grammarAccess.getPresentEventAccess().getFBAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentEvent__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentEvent__Group_1__1__Impl
	rule__PresentEvent__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getExpressionAssignment_1_1()); }
(rule__PresentEvent__ExpressionAssignment_1_1)
{ after(grammarAccess.getPresentEventAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PresentEvent__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PresentEvent__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getEBAssignment_1_2()); }
(rule__PresentEvent__EBAssignment_1_2)
{ after(grammarAccess.getPresentEventAccess().getEBAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Repeat__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__0__Impl
	rule__Repeat__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getPositiveAssignment_0()); }
(rule__Repeat__PositiveAssignment_0)?
{ after(grammarAccess.getRepeatAccess().getPositiveAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__1__Impl
	rule__Repeat__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getRepeatKeyword_1()); }

	'repeat' 

{ after(grammarAccess.getRepeatAccess().getRepeatKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__2__Impl
	rule__Repeat__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getExpressionAssignment_2()); }
(rule__Repeat__ExpressionAssignment_2)
{ after(grammarAccess.getRepeatAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__3__Impl
	rule__Repeat__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getTimesKeyword_3()); }

	'times' 

{ after(grammarAccess.getRepeatAccess().getTimesKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__4__Impl
	rule__Repeat__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getStatementAssignment_4()); }
(rule__Repeat__StatementAssignment_4)
{ after(grammarAccess.getRepeatAccess().getStatementAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__5__Impl
	rule__Repeat__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getRepeatAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Repeat__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Repeat__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getOptEndAssignment_6()); }
(rule__Repeat__OptEndAssignment_6)?
{ after(grammarAccess.getRepeatAccess().getOptEndAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Run__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_0__0__Impl
	rule__Run__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getRunKeyword_0_0()); }

	'run' 

{ after(grammarAccess.getRunAccess().getRunKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_0__1__Impl
	rule__Run__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleAssignment_0_1()); }
(rule__Run__ModuleAssignment_0_1)
{ after(grammarAccess.getRunAccess().getModuleAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getGroup_0_2()); }
(rule__Run__Group_0_2__0)?
{ after(grammarAccess.getRunAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Run__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_0_2__0__Impl
	rule__Run__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_0_2_0()); }

	'[' 

{ after(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_0_2__1__Impl
	rule__Run__Group_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListAssignment_0_2_1()); }
(rule__Run__ListAssignment_0_2_1)
{ after(grammarAccess.getRunAccess().getListAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_0_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getRightSquareBracketKeyword_0_2_2()); }

	']' 

{ after(grammarAccess.getRunAccess().getRightSquareBracketKeyword_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Run__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1__0__Impl
	rule__Run__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getCopymoduleKeyword_1_0()); }

	'copymodule' 

{ after(grammarAccess.getRunAccess().getCopymoduleKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1__1__Impl
	rule__Run__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleAssignment_1_1()); }
(rule__Run__ModuleAssignment_1_1)
{ after(grammarAccess.getRunAccess().getModuleAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getGroup_1_2()); }
(rule__Run__Group_1_2__0)?
{ after(grammarAccess.getRunAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Run__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_2__0__Impl
	rule__Run__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_1_2_0()); }

	'[' 

{ after(grammarAccess.getRunAccess().getLeftSquareBracketKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_2__1__Impl
	rule__Run__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListAssignment_1_2_1()); }
(rule__Run__ListAssignment_1_2_1)
{ after(grammarAccess.getRunAccess().getListAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Run__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Run__Group_1_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Run__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getRightSquareBracketKeyword_1_2_2()); }

	']' 

{ after(grammarAccess.getRunAccess().getRightSquareBracketKeyword_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModuleRenaming__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleRenaming__Group_1__0__Impl
	rule__ModuleRenaming__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getNewNameAssignment_1_0()); }
(rule__ModuleRenaming__NewNameAssignment_1_0)
{ after(grammarAccess.getModuleRenamingAccess().getNewNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleRenaming__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleRenaming__Group_1__1__Impl
	rule__ModuleRenaming__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getSolidusKeyword_1_1()); }

	'/' 

{ after(grammarAccess.getModuleRenamingAccess().getSolidusKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModuleRenaming__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModuleRenaming__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleAssignment_1_2()); }
(rule__ModuleRenaming__ModuleAssignment_1_2)
{ after(grammarAccess.getModuleRenamingAccess().getModuleAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RenamingList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RenamingList__Group__0__Impl
	rule__RenamingList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RenamingList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getListAssignment_0()); }
(rule__RenamingList__ListAssignment_0)
{ after(grammarAccess.getRenamingListAccess().getListAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RenamingList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RenamingList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RenamingList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getGroup_1()); }
(rule__RenamingList__Group_1__0)*
{ after(grammarAccess.getRenamingListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RenamingList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RenamingList__Group_1__0__Impl
	rule__RenamingList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RenamingList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getSemicolonKeyword_1_0()); }

	';' 

{ after(grammarAccess.getRenamingListAccess().getSemicolonKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RenamingList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RenamingList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RenamingList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getListAssignment_1_1()); }
(rule__RenamingList__ListAssignment_1_1)
{ after(grammarAccess.getRenamingListAccess().getListAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_0__0__Impl
	rule__Renaming__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getTypeKeyword_0_0()); }

	'type' 

{ after(grammarAccess.getRenamingAccess().getTypeKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_0__1__Impl
	rule__Renaming__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_0_1()); }
(rule__Renaming__RenamingsAssignment_0_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_0_2()); }
(rule__Renaming__Group_0_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_0_2__0__Impl
	rule__Renaming__Group_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_0_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_0_2_1()); }
(rule__Renaming__RenamingsAssignment_0_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1__0__Impl
	rule__Renaming__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getConstantKeyword_1_0()); }

	'constant' 

{ after(grammarAccess.getRenamingAccess().getConstantKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1__1__Impl
	rule__Renaming__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_1()); }
(rule__Renaming__RenamingsAssignment_1_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_1_2()); }
(rule__Renaming__Group_1_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_2__0__Impl
	rule__Renaming__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_1_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_2_1()); }
(rule__Renaming__RenamingsAssignment_1_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_2__0__Impl
	rule__Renaming__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getFunctionKeyword_2_0()); }

	'function' 

{ after(grammarAccess.getRenamingAccess().getFunctionKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_2__1__Impl
	rule__Renaming__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_2_1()); }
(rule__Renaming__RenamingsAssignment_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_2_2()); }
(rule__Renaming__Group_2_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_2_2__0__Impl
	rule__Renaming__Group_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_2_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_2_2_1()); }
(rule__Renaming__RenamingsAssignment_2_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_3__0__Impl
	rule__Renaming__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getProcedureKeyword_3_0()); }

	'procedure' 

{ after(grammarAccess.getRenamingAccess().getProcedureKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_3__1__Impl
	rule__Renaming__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_3_1()); }
(rule__Renaming__RenamingsAssignment_3_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_3_2()); }
(rule__Renaming__Group_3_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_3_2__0__Impl
	rule__Renaming__Group_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_3_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_3_2_1()); }
(rule__Renaming__RenamingsAssignment_3_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_4__0__Impl
	rule__Renaming__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getTaskKeyword_4_0()); }

	'task' 

{ after(grammarAccess.getRenamingAccess().getTaskKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_4__1__Impl
	rule__Renaming__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_4_1()); }
(rule__Renaming__RenamingsAssignment_4_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_4_2()); }
(rule__Renaming__Group_4_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_4_2__0__Impl
	rule__Renaming__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_4_2_1()); }
(rule__Renaming__RenamingsAssignment_4_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Renaming__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_5__0__Impl
	rule__Renaming__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getSignalKeyword_5_0()); }

	'signal' 

{ after(grammarAccess.getRenamingAccess().getSignalKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_5__1__Impl
	rule__Renaming__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_5_1()); }
(rule__Renaming__RenamingsAssignment_5_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getGroup_5_2()); }
(rule__Renaming__Group_5_2__0)*
{ after(grammarAccess.getRenamingAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Renaming__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_5_2__0__Impl
	rule__Renaming__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getCommaKeyword_5_2_0()); }

	',' 

{ after(grammarAccess.getRenamingAccess().getCommaKeyword_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Renaming__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Renaming__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsAssignment_5_2_1()); }
(rule__Renaming__RenamingsAssignment_5_2_1)
{ after(grammarAccess.getRenamingAccess().getRenamingsAssignment_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRenaming__Group__0__Impl
	rule__TypeRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getAlternatives_0()); }
(rule__TypeRenaming__Alternatives_0)
{ after(grammarAccess.getTypeRenamingAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRenaming__Group__1__Impl
	rule__TypeRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getTypeRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getOldNameAssignment_2()); }
(rule__TypeRenaming__OldNameAssignment_2)
{ after(grammarAccess.getTypeRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ConstantRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantRenaming__Group__0__Impl
	rule__ConstantRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getAlternatives_0()); }
(rule__ConstantRenaming__Alternatives_0)
{ after(grammarAccess.getConstantRenamingAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantRenaming__Group__1__Impl
	rule__ConstantRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getConstantRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getOldNameAssignment_2()); }
(rule__ConstantRenaming__OldNameAssignment_2)
{ after(grammarAccess.getConstantRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionRenaming__Group__0__Impl
	rule__FunctionRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getAlternatives_0()); }
(rule__FunctionRenaming__Alternatives_0)
{ after(grammarAccess.getFunctionRenamingAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionRenaming__Group__1__Impl
	rule__FunctionRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getFunctionRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getOldNameAssignment_2()); }
(rule__FunctionRenaming__OldNameAssignment_2)
{ after(grammarAccess.getFunctionRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ProcedureRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureRenaming__Group__0__Impl
	rule__ProcedureRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureRenamingAccess().getNewNameAssignment_0()); }
(rule__ProcedureRenaming__NewNameAssignment_0)
{ after(grammarAccess.getProcedureRenamingAccess().getNewNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureRenaming__Group__1__Impl
	rule__ProcedureRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getProcedureRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ProcedureRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ProcedureRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureRenamingAccess().getOldNameAssignment_2()); }
(rule__ProcedureRenaming__OldNameAssignment_2)
{ after(grammarAccess.getProcedureRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TaskRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskRenaming__Group__0__Impl
	rule__TaskRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRenamingAccess().getNewNameAssignment_0()); }
(rule__TaskRenaming__NewNameAssignment_0)
{ after(grammarAccess.getTaskRenamingAccess().getNewNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskRenaming__Group__1__Impl
	rule__TaskRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getTaskRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TaskRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TaskRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRenamingAccess().getOldNameAssignment_2()); }
(rule__TaskRenaming__OldNameAssignment_2)
{ after(grammarAccess.getTaskRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalRenaming__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalRenaming__Group__0__Impl
	rule__SignalRenaming__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getAlternatives_0()); }
(rule__SignalRenaming__Alternatives_0)
{ after(grammarAccess.getSignalRenamingAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalRenaming__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalRenaming__Group__1__Impl
	rule__SignalRenaming__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getSignalRenamingAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalRenaming__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalRenaming__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getOldNameAssignment_2()); }
(rule__SignalRenaming__OldNameAssignment_2)
{ after(grammarAccess.getSignalRenamingAccess().getOldNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Suspend__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group__0__Impl
	rule__Suspend__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getSuspendKeyword_0()); }

	'suspend' 

{ after(grammarAccess.getSuspendAccess().getSuspendKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group__1__Impl
	rule__Suspend__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getStatementAssignment_1()); }
(rule__Suspend__StatementAssignment_1)
{ after(grammarAccess.getSuspendAccess().getStatementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group__2__Impl
	rule__Suspend__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getWhenKeyword_2()); }

	'when' 

{ after(grammarAccess.getSuspendAccess().getWhenKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suspend__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suspend__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getDelayAssignment_3()); }
(rule__Suspend__DelayAssignment_3)
{ after(grammarAccess.getSuspendAccess().getDelayAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Sustain__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group__0__Impl
	rule__Sustain__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getSustainKeyword_0()); }

	'sustain' 

{ after(grammarAccess.getSustainAccess().getSustainKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group__1__Impl
	rule__Sustain__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getAlternatives_1()); }
(rule__Sustain__Alternatives_1)
{ after(grammarAccess.getSustainAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getGroup_2()); }
(rule__Sustain__Group_2__0)?
{ after(grammarAccess.getSustainAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Sustain__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group_2__0__Impl
	rule__Sustain__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getSustainAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group_2__1__Impl
	rule__Sustain__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getExpressionAssignment_2_1()); }
(rule__Sustain__ExpressionAssignment_2_1)
{ after(grammarAccess.getSustainAccess().getExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Sustain__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Sustain__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getSustainAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Trap__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__0__Impl
	rule__Trap__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapKeyword_0()); }

	'trap' 

{ after(grammarAccess.getTrapAccess().getTrapKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__1__Impl
	rule__Trap__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapDeclListAssignment_1()); }
(rule__Trap__TrapDeclListAssignment_1)
{ after(grammarAccess.getTrapAccess().getTrapDeclListAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__2__Impl
	rule__Trap__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getInKeyword_2()); }

	'in' 

{ after(grammarAccess.getTrapAccess().getInKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__3__Impl
	rule__Trap__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getStatementAssignment_3()); }
(rule__Trap__StatementAssignment_3)
{ after(grammarAccess.getTrapAccess().getStatementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__4__Impl
	rule__Trap__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapHandlerAssignment_4()); }
(rule__Trap__TrapHandlerAssignment_4)*
{ after(grammarAccess.getTrapAccess().getTrapHandlerAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__5__Impl
	rule__Trap__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getEndKeyword_5()); }

	'end' 

{ after(grammarAccess.getTrapAccess().getEndKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trap__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trap__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getOptEndAssignment_6()); }
(rule__Trap__OptEndAssignment_6)?
{ after(grammarAccess.getTrapAccess().getOptEndAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TrapDeclList__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapDeclList__Group__0__Impl
	rule__TrapDeclList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDeclList__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getTrapDeclsAssignment_0()); }
(rule__TrapDeclList__TrapDeclsAssignment_0)
{ after(grammarAccess.getTrapDeclListAccess().getTrapDeclsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapDeclList__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapDeclList__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDeclList__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getGroup_1()); }
(rule__TrapDeclList__Group_1__0)*
{ after(grammarAccess.getTrapDeclListAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapDeclList__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapDeclList__Group_1__0__Impl
	rule__TrapDeclList__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDeclList__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getTrapDeclListAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapDeclList__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapDeclList__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDeclList__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getTrapDeclsAssignment_1_1()); }
(rule__TrapDeclList__TrapDeclsAssignment_1_1)
{ after(grammarAccess.getTrapDeclListAccess().getTrapDeclsAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TrapDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapDecl__Group__0__Impl
	rule__TrapDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclAccess().getTrapDeclAction_0()); }
(

)
{ after(grammarAccess.getTrapDeclAccess().getTrapDeclAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapDecl__Group__1__Impl
	rule__TrapDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclAccess().getNameAssignment_1()); }
(rule__TrapDecl__NameAssignment_1)
{ after(grammarAccess.getTrapDeclAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclAccess().getChannelDescrAssignment_2()); }
(rule__TrapDecl__ChannelDescrAssignment_2)?
{ after(grammarAccess.getTrapDeclAccess().getChannelDescrAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TrapHandler__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group__0__Impl
	rule__TrapHandler__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getHandleKeyword_0()); }

	'handle' 

{ after(grammarAccess.getTrapHandlerAccess().getHandleKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group__1__Impl
	rule__TrapHandler__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getTrapExprAssignment_1()); }
(rule__TrapHandler__TrapExprAssignment_1)
{ after(grammarAccess.getTrapHandlerAccess().getTrapExprAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group__2__Impl
	rule__TrapHandler__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getDoKeyword_2()); }

	'do' 

{ after(grammarAccess.getTrapHandlerAccess().getDoKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapHandler__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapHandler__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getStatementAssignment_3()); }
(rule__TrapHandler__StatementAssignment_3)
{ after(grammarAccess.getTrapHandlerAccess().getStatementAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__LocalVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__0__Impl
	rule__LocalVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getVarAssignment_0()); }
(rule__LocalVariable__VarAssignment_0)
{ after(grammarAccess.getLocalVariableAccess().getVarAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__1__Impl
	rule__LocalVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getInKeyword_1()); }

	'in' 

{ after(grammarAccess.getLocalVariableAccess().getInKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__2__Impl
	rule__LocalVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getStatementAssignment_2()); }
(rule__LocalVariable__StatementAssignment_2)
{ after(grammarAccess.getLocalVariableAccess().getStatementAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__3__Impl
	rule__LocalVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getEndKeyword_3()); }

	'end' 

{ after(grammarAccess.getLocalVariableAccess().getEndKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__LocalVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__LocalVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getOptEndAssignment_4()); }
(rule__LocalVariable__OptEndAssignment_4)?
{ after(grammarAccess.getLocalVariableAccess().getOptEndAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AtomicExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_5__0__Impl
	rule__AtomicExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_5__1__Impl
	rule__AtomicExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getBooleanExpressionParserRuleCall_5_1()); }
	ruleBooleanExpression
{ after(grammarAccess.getAtomicExpressionAccess().getBooleanExpressionParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_5_2()); }

	')' 

{ after(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TrapExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpression__Group__0__Impl
	rule__TrapExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExpressionAccess().getTrapExpressionAction_0()); }
(

)
{ after(grammarAccess.getTrapExpressionAccess().getTrapExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpression__Group__1__Impl
	rule__TrapExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExpressionAccess().getQuestionMarkQuestionMarkKeyword_1()); }

	'??' 

{ after(grammarAccess.getTrapExpressionAccess().getQuestionMarkQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapExpression__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExpressionAccess().getTrapAssignment_2()); }
(rule__TrapExpression__TrapAssignment_2)
{ after(grammarAccess.getTrapExpressionAccess().getTrapAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__FunctionExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__0__Impl
	rule__FunctionExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getFunctionExpressionAction_0()); }
(

)
{ after(grammarAccess.getFunctionExpressionAccess().getFunctionExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__1__Impl
	rule__FunctionExpression__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getFunctionAssignment_1()); }
(rule__FunctionExpression__FunctionAssignment_1)
{ after(grammarAccess.getFunctionExpressionAccess().getFunctionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__2__Impl
	rule__FunctionExpression__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getFunctionExpressionAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__3__Impl
	rule__FunctionExpression__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getGroup_3()); }
(rule__FunctionExpression__Group_3__0)?
{ after(grammarAccess.getFunctionExpressionAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getFunctionExpressionAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__FunctionExpression__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3__0__Impl
	rule__FunctionExpression__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getKexpressionsAssignment_3_0()); }
(rule__FunctionExpression__KexpressionsAssignment_3_0)
{ after(grammarAccess.getFunctionExpressionAccess().getKexpressionsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getGroup_3_1()); }
(rule__FunctionExpression__Group_3_1__0)*
{ after(grammarAccess.getFunctionExpressionAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__FunctionExpression__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3_1__0__Impl
	rule__FunctionExpression__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getFunctionExpressionAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__FunctionExpression__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__FunctionExpression__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getKexpressionsAssignment_3_1_1()); }
(rule__FunctionExpression__KexpressionsAssignment_3_1_1)
{ after(grammarAccess.getFunctionExpressionAccess().getKexpressionsAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantExpression__Group__0__Impl
	rule__ConstantExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantExpressionAccess().getConstantExpressionAction_0()); }
(

)
{ after(grammarAccess.getConstantExpressionAccess().getConstantExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantExpressionAccess().getAlternatives_1()); }
(rule__ConstantExpression__Alternatives_1)
{ after(grammarAccess.getConstantExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalExpression__Group__0__Impl
	rule__SignalExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getSignalAndExpressionParserRuleCall_0()); }
	ruleSignalAndExpression
{ after(grammarAccess.getSignalExpressionAccess().getSignalAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getGroup_1()); }
(rule__SignalExpression__Group_1__0)*
{ after(grammarAccess.getSignalExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalExpression__Group_1__0__Impl
	rule__SignalExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getSignalExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalExpression__Group_1__1__Impl
	rule__SignalExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getOperatorAssignment_1_1()); }
(rule__SignalExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getSignalExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__SignalExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getSignalExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalAndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAndExpression__Group__0__Impl
	rule__SignalAndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getSignalNotExpressionParserRuleCall_0()); }
	ruleSignalNotExpression
{ after(grammarAccess.getSignalAndExpressionAccess().getSignalNotExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getGroup_1()); }
(rule__SignalAndExpression__Group_1__0)*
{ after(grammarAccess.getSignalAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalAndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAndExpression__Group_1__0__Impl
	rule__SignalAndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getSignalAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAndExpression__Group_1__1__Impl
	rule__SignalAndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getOperatorAssignment_1_1()); }
(rule__SignalAndExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getSignalAndExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__SignalAndExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getSignalAndExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalNotExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalNotExpression__Group_0__0__Impl
	rule__SignalNotExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getSignalNotExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalNotExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalNotExpression__Group_0__1__Impl
	rule__SignalNotExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getOperatorAssignment_0_1()); }
(rule__SignalNotExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getSignalNotExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalNotExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalNotExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__SignalNotExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getSignalNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalAtomicExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAtomicExpression__Group_1__0__Impl
	rule__SignalAtomicExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAtomicExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getSignalAtomicExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAtomicExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAtomicExpression__Group_1__1__Impl
	rule__SignalAtomicExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAtomicExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getSignalExpressionParserRuleCall_1_1()); }
	ruleSignalExpression
{ after(grammarAccess.getSignalAtomicExpressionAccess().getSignalExpressionParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalAtomicExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalAtomicExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAtomicExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAtomicExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getSignalAtomicExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalPreExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalPreExpr__Group__0__Impl
	rule__SignalPreExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getOperatorExpressionAction_0()); }
(

)
{ after(grammarAccess.getSignalPreExprAccess().getOperatorExpressionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalPreExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalPreExpr__Group__1__Impl
	rule__SignalPreExpr__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getOperatorAssignment_1()); }
(rule__SignalPreExpr__OperatorAssignment_1)
{ after(grammarAccess.getSignalPreExprAccess().getOperatorAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalPreExpr__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalPreExpr__Group__2__Impl
	rule__SignalPreExpr__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getLeftParenthesisKeyword_2()); }

	'(' 

{ after(grammarAccess.getSignalPreExprAccess().getLeftParenthesisKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalPreExpr__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalPreExpr__Group__3__Impl
	rule__SignalPreExpr__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getSubExpressionsAssignment_3()); }
(rule__SignalPreExpr__SubExpressionsAssignment_3)
{ after(grammarAccess.getSignalPreExprAccess().getSubExpressionsAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalPreExpr__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalPreExpr__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getSignalPreExprAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TrapReferenceExpr__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapReferenceExpr__Group__0__Impl
	rule__TrapReferenceExpr__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapReferenceExpr__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapReferenceExprAccess().getTrapReferenceExprAction_0()); }
(

)
{ after(grammarAccess.getTrapReferenceExprAccess().getTrapReferenceExprAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TrapReferenceExpr__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TrapReferenceExpr__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TrapReferenceExpr__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapReferenceExprAccess().getValuedObjectAssignment_1()); }
(rule__TrapReferenceExpr__ValuedObjectAssignment_1)
{ after(grammarAccess.getTrapReferenceExprAccess().getValuedObjectAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DelayExpr__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayExpr__Group_0__0__Impl
	rule__DelayExpr__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getExprAssignment_0_0()); }
(rule__DelayExpr__ExprAssignment_0_0)
{ after(grammarAccess.getDelayExprAccess().getExprAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayExpr__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayExpr__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getEventAssignment_0_1()); }
(rule__DelayExpr__EventAssignment_0_1)
{ after(grammarAccess.getDelayExprAccess().getEventAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DelayExpr__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayExpr__Group_2__0__Impl
	rule__DelayExpr__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getIsImmediateAssignment_2_0()); }
(rule__DelayExpr__IsImmediateAssignment_2_0)
{ after(grammarAccess.getDelayExprAccess().getIsImmediateAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayExpr__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayExpr__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getEventAssignment_2_1()); }
(rule__DelayExpr__EventAssignment_2_1)
{ after(grammarAccess.getDelayExprAccess().getEventAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DelayEvent__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayEvent__Group_2__0__Impl
	rule__DelayEvent__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getFBAssignment_2_0()); }
(rule__DelayEvent__FBAssignment_2_0)
{ after(grammarAccess.getDelayEventAccess().getFBAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayEvent__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayEvent__Group_2__1__Impl
	rule__DelayEvent__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getExprAssignment_2_1()); }
(rule__DelayEvent__ExprAssignment_2_1)
{ after(grammarAccess.getDelayEventAccess().getExprAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DelayEvent__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DelayEvent__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getEBAssignment_2_2()); }
(rule__DelayEvent__EBAssignment_2_2)
{ after(grammarAccess.getDelayEventAccess().getEBAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Exec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group__0__Impl
	rule__Exec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getAlternatives_0()); }
(rule__Exec__Alternatives_0)
{ after(grammarAccess.getExecAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group__1__Impl
	rule__Exec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getEndKeyword_1()); }

	'end' 

{ after(grammarAccess.getExecAccess().getEndKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getOptEndAssignment_2()); }
(rule__Exec__OptEndAssignment_2)?
{ after(grammarAccess.getExecAccess().getOptEndAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Exec__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_0_0__0__Impl
	rule__Exec__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getExecKeyword_0_0_0()); }

	'exec' 

{ after(grammarAccess.getExecAccess().getExecKeyword_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_0_0__1__Impl
	rule__Exec__Group_0_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getTaskAssignment_0_0_1()); }
(rule__Exec__TaskAssignment_0_0_1)
{ after(grammarAccess.getExecAccess().getTaskAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_0_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_0_0__2__Impl
	rule__Exec__Group_0_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_0_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getBodyAssignment_0_0_2()); }
(rule__Exec__BodyAssignment_0_0_2)
{ after(grammarAccess.getExecAccess().getBodyAssignment_0_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_0_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_0_0__3__Impl
	rule__Exec__Group_0_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_0_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getReturnKeyword_0_0_3()); }

	'return' 

{ after(grammarAccess.getExecAccess().getReturnKeyword_0_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_0_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_0_0__4__Impl
	rule__Exec__Group_0_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_0_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getRetSignalAssignment_0_0_4()); }
(rule__Exec__RetSignalAssignment_0_0_4)
{ after(grammarAccess.getExecAccess().getRetSignalAssignment_0_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_0_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_0_0__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_0_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getGroup_0_0_5()); }
(rule__Exec__Group_0_0_5__0)?
{ after(grammarAccess.getExecAccess().getGroup_0_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Exec__Group_0_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_0_0_5__0__Impl
	rule__Exec__Group_0_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_0_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getDoKeyword_0_0_5_0()); }

	'do' 

{ after(grammarAccess.getExecAccess().getDoKeyword_0_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_0_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_0_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_0_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getStatementAssignment_0_0_5_1()); }
(rule__Exec__StatementAssignment_0_0_5_1)
{ after(grammarAccess.getExecAccess().getStatementAssignment_0_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exec__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_0_1__0__Impl
	rule__Exec__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getExecKeyword_0_1_0()); }

	'exec' 

{ after(grammarAccess.getExecAccess().getExecKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_0_1__1__Impl
	rule__Exec__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getExecCaseListAssignment_0_1_1()); }
(rule__Exec__ExecCaseListAssignment_0_1_1)
{ after(grammarAccess.getExecAccess().getExecCaseListAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exec__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exec__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getExecCaseListAssignment_0_1_2()); }
(rule__Exec__ExecCaseListAssignment_0_1_2)*
{ after(grammarAccess.getExecAccess().getExecCaseListAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExecBody__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group__0__Impl
	rule__ExecBody__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getExecBodyAction_0()); }
(

)
{ after(grammarAccess.getExecBodyAccess().getExecBodyAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecBody__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group__1__Impl
	rule__ExecBody__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getExecBodyAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecBody__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group__2__Impl
	rule__ExecBody__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getGroup_2()); }
(rule__ExecBody__Group_2__0)?
{ after(grammarAccess.getExecBodyAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecBody__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group__3__Impl
	rule__ExecBody__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getExecBodyAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecBody__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group__4__Impl
	rule__ExecBody__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getLeftParenthesisKeyword_4()); }

	'(' 

{ after(grammarAccess.getExecBodyAccess().getLeftParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecBody__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group__5__Impl
	rule__ExecBody__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getGroup_5()); }
(rule__ExecBody__Group_5__0)?
{ after(grammarAccess.getExecBodyAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecBody__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getRightParenthesisKeyword_6()); }

	')' 

{ after(grammarAccess.getExecBodyAccess().getRightParenthesisKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ExecBody__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group_2__0__Impl
	rule__ExecBody__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getVarsAssignment_2_0()); }
(rule__ExecBody__VarsAssignment_2_0)
{ after(grammarAccess.getExecBodyAccess().getVarsAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecBody__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getGroup_2_1()); }
(rule__ExecBody__Group_2_1__0)*
{ after(grammarAccess.getExecBodyAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecBody__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group_2_1__0__Impl
	rule__ExecBody__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getExecBodyAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecBody__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getVarsAssignment_2_1_1()); }
(rule__ExecBody__VarsAssignment_2_1_1)
{ after(grammarAccess.getExecBodyAccess().getVarsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecBody__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group_5__0__Impl
	rule__ExecBody__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getKexpressionsAssignment_5_0()); }
(rule__ExecBody__KexpressionsAssignment_5_0)
{ after(grammarAccess.getExecBodyAccess().getKexpressionsAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecBody__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getGroup_5_1()); }
(rule__ExecBody__Group_5_1__0)*
{ after(grammarAccess.getExecBodyAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecBody__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group_5_1__0__Impl
	rule__ExecBody__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getCommaKeyword_5_1_0()); }

	',' 

{ after(grammarAccess.getExecBodyAccess().getCommaKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecBody__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecBody__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getKexpressionsAssignment_5_1_1()); }
(rule__ExecBody__KexpressionsAssignment_5_1_1)
{ after(grammarAccess.getExecBodyAccess().getKexpressionsAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExecCase__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__0__Impl
	rule__ExecCase__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getCaseKeyword_0()); }

	'case' 

{ after(grammarAccess.getExecCaseAccess().getCaseKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__1__Impl
	rule__ExecCase__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getTaskAssignment_1()); }
(rule__ExecCase__TaskAssignment_1)
{ after(grammarAccess.getExecCaseAccess().getTaskAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__2__Impl
	rule__ExecCase__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getBodyAssignment_2()); }
(rule__ExecCase__BodyAssignment_2)
{ after(grammarAccess.getExecCaseAccess().getBodyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__3__Impl
	rule__ExecCase__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getReturnKeyword_3()); }

	'return' 

{ after(grammarAccess.getExecCaseAccess().getReturnKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__4__Impl
	rule__ExecCase__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getRetSignalAssignment_4()); }
(rule__ExecCase__RetSignalAssignment_4)
{ after(grammarAccess.getExecCaseAccess().getRetSignalAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getGroup_5()); }
(rule__ExecCase__Group_5__0)?
{ after(grammarAccess.getExecCaseAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ExecCase__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_5__0__Impl
	rule__ExecCase__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getDoKeyword_5_0()); }

	'do' 

{ after(grammarAccess.getExecCaseAccess().getDoKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecCase__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecCase__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getStatementAssignment_5_1()); }
(rule__ExecCase__StatementAssignment_5_1)
{ after(grammarAccess.getExecCaseAccess().getStatementAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
(rule__OrExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__OrExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getOrExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
	ruleCompareOperation
{ after(grammarAccess.getAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AndExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__AndExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getAndExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CompareOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0__0__Impl
	rule__CompareOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0_0()); }
(	ruleNotOrValuedExpression)
{ after(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup_0_1()); }
(rule__CompareOperation__Group_0_1__0)
{ after(grammarAccess.getCompareOperationAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareOperation__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0_1__0__Impl
	rule__CompareOperation__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_0_1_0()); }
(

)
{ after(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0_1__1__Impl
	rule__CompareOperation__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorAssignment_0_1_1()); }
(rule__CompareOperation__OperatorAssignment_0_1_1)
{ after(grammarAccess.getCompareOperationAccess().getOperatorAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_0_1_2()); }
(rule__CompareOperation__SubExpressionsAssignment_0_1_2)
{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NotExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__0__Impl
	rule__NotExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__1__Impl
	rule__NotExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); }
(rule__NotExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__NotExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AddExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__0__Impl
	rule__AddExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); }
	ruleSubExpression
{ after(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1()); }
(rule__AddExpression__Group_1__0)*
{ after(grammarAccess.getAddExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__0__Impl
	rule__AddExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__1__Impl
	rule__AddExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AddExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__AddExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group__0__Impl
	rule__SubExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); }
	ruleMultExpression
{ after(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup_1()); }
(rule__SubExpression__Group_1__0)*
{ after(grammarAccess.getSubExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__0__Impl
	rule__SubExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__1__Impl
	rule__SubExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1()); }
(rule__SubExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__SubExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group__0__Impl
	rule__MultExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); }
	ruleDivExpression
{ after(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup_1()); }
(rule__MultExpression__Group_1__0)*
{ after(grammarAccess.getMultExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__0__Impl
	rule__MultExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__1__Impl
	rule__MultExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1()); }
(rule__MultExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__MultExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DivExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group__0__Impl
	rule__DivExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); }
	ruleModExpression
{ after(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup_1()); }
(rule__DivExpression__Group_1__0)?
{ after(grammarAccess.getDivExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__0__Impl
	rule__DivExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__1__Impl
	rule__DivExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1()); }
(rule__DivExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__DivExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__0__Impl
	rule__ModExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); }
	ruleNegExpression
{ after(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getGroup_1()); }
(rule__ModExpression__Group_1__0)?
{ after(grammarAccess.getModExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__0__Impl
	rule__ModExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__1__Impl
	rule__ModExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ModExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__ModExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NegExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__0__Impl
	rule__NegExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__1__Impl
	rule__NegExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); }
(rule__NegExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__NegExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicValuedExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_2__0__Impl
	rule__AtomicValuedExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()); }
(
	'(' 
)
{ after(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicValuedExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_2__1__Impl
	rule__AtomicValuedExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_2_1()); }
	ruleValuedExpression
{ after(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicValuedExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuedObjectTestExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__0__Impl
	rule__ValuedObjectTestExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__1__Impl
	rule__ValuedObjectTestExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); }
(rule__ValuedObjectTestExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__2__Impl
	rule__ValuedObjectTestExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__3__Impl
	rule__ValuedObjectTestExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); }
(rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ValuedObjectTestExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_1__0__Impl
	rule__ValuedObjectTestExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_1__1__Impl
	rule__ValuedObjectTestExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ValuedObjectTestExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__ValuedObjectTestExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TextExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group__0__Impl
	rule__TextExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getCodeAssignment_0()); }
(rule__TextExpression__CodeAssignment_0)
{ after(grammarAccess.getTextExpressionAccess().getCodeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getGroup_1()); }
(rule__TextExpression__Group_1__0)?
{ after(grammarAccess.getTextExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TextExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group_1__0__Impl
	rule__TextExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getTextExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group_1__1__Impl
	rule__TextExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getTypeAssignment_1_1()); }
(rule__TextExpression__TypeAssignment_1_1)
{ after(grammarAccess.getTextExpressionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getTextExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ISignal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__0__Impl
	rule__ISignal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getNameAssignment_0()); }
(rule__ISignal__NameAssignment_0)
{ after(grammarAccess.getISignalAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getChannelDescrAssignment_1()); }
(rule__ISignal__ChannelDescrAssignment_1)?
{ after(grammarAccess.getISignalAccess().getChannelDescrAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceSignalDecl__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__0__Impl
	rule__InterfaceSignalDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputAction_0_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__1__Impl
	rule__InterfaceSignalDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputKeyword_0_1()); }

	'input' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__2__Impl
	rule__InterfaceSignalDecl__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_2()); }
(rule__InterfaceSignalDecl__SignalsAssignment_0_2)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__3__Impl
	rule__InterfaceSignalDecl__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0_3()); }
(rule__InterfaceSignalDecl__Group_0_3__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_0_4()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfaceSignalDecl__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0_3__0__Impl
	rule__InterfaceSignalDecl__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_0_3_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_3_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_0_3_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceSignalDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__0__Impl
	rule__InterfaceSignalDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getOutputAction_1_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getOutputAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__1__Impl
	rule__InterfaceSignalDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getOutputKeyword_1_1()); }

	'output' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getOutputKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__2__Impl
	rule__InterfaceSignalDecl__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_2()); }
(rule__InterfaceSignalDecl__SignalsAssignment_1_2)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__3__Impl
	rule__InterfaceSignalDecl__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1_3()); }
(rule__InterfaceSignalDecl__Group_1_3__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_1_4()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfaceSignalDecl__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1_3__0__Impl
	rule__InterfaceSignalDecl__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_3_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_1_3_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceSignalDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__0__Impl
	rule__InterfaceSignalDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputOutputAction_2_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputOutputAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__1__Impl
	rule__InterfaceSignalDecl__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputoutputKeyword_2_1()); }

	'inputoutput' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputoutputKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__2__Impl
	rule__InterfaceSignalDecl__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_2()); }
(rule__InterfaceSignalDecl__SignalsAssignment_2_2)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__3__Impl
	rule__InterfaceSignalDecl__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2_3()); }
(rule__InterfaceSignalDecl__Group_2_3__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_2_4()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfaceSignalDecl__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2_3__0__Impl
	rule__InterfaceSignalDecl__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_2_3_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_3_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_2_3_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceSignalDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__0__Impl
	rule__InterfaceSignalDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getReturnAction_3_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getReturnAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__1__Impl
	rule__InterfaceSignalDecl__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getReturnKeyword_3_1()); }

	'return' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getReturnKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__2__Impl
	rule__InterfaceSignalDecl__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_2()); }
(rule__InterfaceSignalDecl__SignalsAssignment_3_2)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__3__Impl
	rule__InterfaceSignalDecl__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3_3()); }
(rule__InterfaceSignalDecl__Group_3_3__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_3_4()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfaceSignalDecl__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3_3__0__Impl
	rule__InterfaceSignalDecl__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_3_3_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_3_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_3_3_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceVariableDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceVariableDecl__Group__0__Impl
	rule__InterfaceVariableDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getInterfaceVariableDeclAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceVariableDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceVariableDecl__Group__1__Impl
	rule__InterfaceVariableDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_1()); }
(rule__InterfaceVariableDecl__VarDeclsAssignment_1)
{ after(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceVariableDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceVariableDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getGroup_2()); }
(rule__InterfaceVariableDecl__Group_2__0)*
{ after(grammarAccess.getInterfaceVariableDeclAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InterfaceVariableDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceVariableDecl__Group_2__0__Impl
	rule__InterfaceVariableDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getInterfaceVariableDeclAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceVariableDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceVariableDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_2_1()); }
(rule__InterfaceVariableDecl__VarDeclsAssignment_2_1)
{ after(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__0__Impl
	rule__VariableDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesAssignment_0()); }
(rule__VariableDecl__VariablesAssignment_0)
{ after(grammarAccess.getVariableDeclAccess().getVariablesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__1__Impl
	rule__VariableDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getGroup_1()); }
(rule__VariableDecl__Group_1__0)*
{ after(grammarAccess.getVariableDeclAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__2__Impl
	rule__VariableDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getVariableDeclAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeAssignment_3()); }
(rule__VariableDecl__TypeAssignment_3)
{ after(grammarAccess.getVariableDeclAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group_1__0__Impl
	rule__VariableDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getVariableDeclAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesAssignment_1_1()); }
(rule__VariableDecl__VariablesAssignment_1_1)
{ after(grammarAccess.getVariableDeclAccess().getVariablesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group__0__Impl
	rule__IVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getNameAssignment_0()); }
(rule__IVariable__NameAssignment_0)
{ after(grammarAccess.getIVariableAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getGroup_1()); }
(rule__IVariable__Group_1__0)?
{ after(grammarAccess.getIVariableAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IVariable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group_1__0__Impl
	rule__IVariable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getColonEqualsSignKeyword_1_0()); }

	':=' 

{ after(grammarAccess.getIVariableAccess().getColonEqualsSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IVariable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getExpressionAssignment_1_1()); }
(rule__IVariable__ExpressionAssignment_1_1)
{ after(grammarAccess.getIVariableAccess().getExpressionAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TagAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__0__Impl
	rule__TagAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__1__Impl
	rule__TagAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
(rule__TagAnnotation__NameAssignment_1)
{ after(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getGroup_2()); }
(rule__TagAnnotation__Group_2__0)?
{ after(grammarAccess.getTagAnnotationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TagAnnotation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__0__Impl
	rule__TagAnnotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getTagAnnotationAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__1__Impl
	rule__TagAnnotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1()); }
(rule__TagAnnotation__AnnotationsAssignment_2_1)*
{ after(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getTagAnnotationAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__0__Impl
	rule__KeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__1__Impl
	rule__KeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__2__Impl
	rule__KeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyStringValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
(rule__KeyStringValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyStringValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__0__Impl
	rule__KeyStringValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__1__Impl
	rule__KeyStringValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__0__Impl
	rule__TypedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__1__Impl
	rule__TypedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__TypedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__2__Impl
	rule__TypedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__3__Impl
	rule__TypedKeyStringValueAnnotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
(rule__TypedKeyStringValueAnnotation__TypeAssignment_3)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__4__Impl
	rule__TypedKeyStringValueAnnotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__5__Impl
	rule__TypedKeyStringValueAnnotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueAssignment_5()); }
(rule__TypedKeyStringValueAnnotation__ValueAssignment_5)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
(rule__TypedKeyStringValueAnnotation__Group_6__0)?
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TypedKeyStringValueAnnotation__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
	rule__TypedKeyStringValueAnnotation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_6_0()); }

	'(' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
	rule__TypedKeyStringValueAnnotation__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAssignment_6_1()); }
(rule__TypedKeyStringValueAnnotation__AnnotationsAssignment_6_1)*
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightParenthesisKeyword_6_2()); }

	')' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyBooleanValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__0__Impl
	rule__KeyBooleanValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__1__Impl
	rule__KeyBooleanValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyBooleanValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__2__Impl
	rule__KeyBooleanValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyBooleanValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3()); }
(rule__KeyBooleanValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyBooleanValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__0__Impl
	rule__KeyBooleanValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__1__Impl
	rule__KeyBooleanValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyIntValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__0__Impl
	rule__KeyIntValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__1__Impl
	rule__KeyIntValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyIntValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__2__Impl
	rule__KeyIntValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyIntValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3()); }
(rule__KeyIntValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyIntValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__0__Impl
	rule__KeyIntValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__1__Impl
	rule__KeyIntValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyFloatValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__0__Impl
	rule__KeyFloatValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__1__Impl
	rule__KeyFloatValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyFloatValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__2__Impl
	rule__KeyFloatValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyFloatValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3()); }
(rule__KeyFloatValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyFloatValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__0__Impl
	rule__KeyFloatValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__1__Impl
	rule__KeyFloatValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__ExtendedID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__0__Impl
	rule__ExtendedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup_1()); }
(rule__ExtendedID__Group_1__0)*
{ after(grammarAccess.getExtendedIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtendedID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__0__Impl
	rule__ExtendedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Program__ModulesAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProgramAccess().getModulesModuleParserRuleCall_0()); }
	ruleModule{ after(grammarAccess.getProgramAccess().getModulesModuleParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getModuleAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__InterfaceAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getInterfaceModuleInterfaceParserRuleCall_3_0()); }
	ruleModuleInterface{ after(grammarAccess.getModuleAccess().getInterfaceModuleInterfaceParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__BodyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getBodyModuleBodyParserRuleCall_4_0()); }
	ruleModuleBody{ after(grammarAccess.getModuleAccess().getBodyModuleBodyParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Module__EndAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleAccess().getEndEndModuleParserRuleCall_5_0()); }
	ruleEndModule{ after(grammarAccess.getModuleAccess().getEndEndModuleParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleBody__StatementsAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleBodyAccess().getStatementsStatementParserRuleCall_0()); }
	ruleStatement{ after(grammarAccess.getModuleBodyAccess().getStatementsStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntSignalDeclsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntSignalDeclsInterfaceSignalDeclParserRuleCall_0_0()); }
	ruleInterfaceSignalDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntSignalDeclsInterfaceSignalDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntTypeDeclsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntTypeDeclsTypeDeclParserRuleCall_1_0()); }
	ruleTypeDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntTypeDeclsTypeDeclParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntSensorDeclsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntSensorDeclsSensorDeclParserRuleCall_2_0()); }
	ruleSensorDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntSensorDeclsSensorDeclParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntConstantDeclsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntConstantDeclsConstantDeclsParserRuleCall_3_0()); }
	ruleConstantDecls{ after(grammarAccess.getModuleInterfaceAccess().getIntConstantDeclsConstantDeclsParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntRelationDeclsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntRelationDeclsRelationDeclParserRuleCall_4_0()); }
	ruleRelationDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntRelationDeclsRelationDeclParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntTaskDeclsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntTaskDeclsTaskDeclParserRuleCall_5_0()); }
	ruleTaskDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntTaskDeclsTaskDeclParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntFunctionDeclsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntFunctionDeclsFunctionDeclParserRuleCall_6_0()); }
	ruleFunctionDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntFunctionDeclsFunctionDeclParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleInterface__IntProcedureDeclsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleInterfaceAccess().getIntProcedureDeclsProcedureDeclParserRuleCall_7_0()); }
	ruleProcedureDecl{ after(grammarAccess.getModuleInterfaceAccess().getIntProcedureDeclsProcedureDeclParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__TypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeEsterelTypeIdentifierParserRuleCall_0_1_0()); }
	ruleEsterelTypeIdentifier{ after(grammarAccess.getChannelDescriptionAccess().getTypeEsterelTypeIdentifierParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeEsterelTypeIdentifierParserRuleCall_1_1_0()); }
	ruleEsterelTypeIdentifier{ after(grammarAccess.getChannelDescriptionAccess().getTypeEsterelTypeIdentifierParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__ExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getChannelDescriptionAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ChannelDescription__TypeAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getChannelDescriptionAccess().getTypeEsterelTypeIdentifierParserRuleCall_2_3_0()); }
	ruleEsterelTypeIdentifier{ after(grammarAccess.getChannelDescriptionAccess().getTypeEsterelTypeIdentifierParserRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_0_0()); }
	ruleValueType{ after(grammarAccess.getEsterelTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__TypeIDAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEsterelTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__TypeAssignment_2_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_2_1_1_0_0()); }
	ruleValueType{ after(grammarAccess.getEsterelTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_2_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__TypeIDAssignment_2_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_2_1_1_1_0()); }
	RULE_ID{ after(grammarAccess.getEsterelTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_2_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__FuncAssignment_2_1_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getFuncFunctionCrossReference_2_1_3_0_0()); }
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getFuncFunctionIDTerminalRuleCall_2_1_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEsterelTypeIdentifierAccess().getFuncFunctionIDTerminalRuleCall_2_1_3_0_0_1()); }
)
{ after(grammarAccess.getEsterelTypeIdentifierAccess().getFuncFunctionCrossReference_2_1_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EsterelTypeIdentifier__OperatorAssignment_2_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEsterelTypeIdentifierAccess().getOperatorCombineOperatorEnumRuleCall_2_1_3_1_0()); }
	ruleCombineOperator{ after(grammarAccess.getEsterelTypeIdentifierAccess().getOperatorCombineOperatorEnumRuleCall_2_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_0_0()); }
	ruleValueType{ after(grammarAccess.getTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeIDAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_2_1_0_0()); }
	ruleValueType{ after(grammarAccess.getTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeIDAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__OperatorAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getOperatorCombineOperatorEnumRuleCall_2_3_0()); }
	ruleCombineOperator{ after(grammarAccess.getTypeIdentifierAccess().getOperatorCombineOperatorEnumRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__EstTypeAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getEstTypeTypeCrossReference_3_1_0()); }
(
{ before(grammarAccess.getTypeIdentifierAccess().getEstTypeTypeIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeIdentifierAccess().getEstTypeTypeIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getTypeIdentifierAccess().getEstTypeTypeCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__SignalListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getSignalListLocalSignalListParserRuleCall_1_0()); }
	ruleLocalSignalList{ after(grammarAccess.getLocalSignalDeclAccess().getSignalListLocalSignalListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getLocalSignalDeclAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalDecl__OptEndAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalDeclAccess().getOptEndSignalKeyword_5_0()); }
(
{ before(grammarAccess.getLocalSignalDeclAccess().getOptEndSignalKeyword_5_0()); }

	'signal' 

{ after(grammarAccess.getLocalSignalDeclAccess().getOptEndSignalKeyword_5_0()); }
)

{ after(grammarAccess.getLocalSignalDeclAccess().getOptEndSignalKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalList__SignalAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getSignalISignalParserRuleCall_1_0()); }
	ruleISignal{ after(grammarAccess.getLocalSignalListAccess().getSignalISignalParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalSignalList__SignalAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalSignalListAccess().getSignalISignalParserRuleCall_2_1_0()); }
	ruleISignal{ after(grammarAccess.getLocalSignalListAccess().getSignalISignalParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__SensorsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorsSensorWithTypeParserRuleCall_1_0()); }
	ruleSensorWithType{ after(grammarAccess.getSensorDeclAccess().getSensorsSensorWithTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorDecl__SensorsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorDeclAccess().getSensorsSensorWithTypeParserRuleCall_2_1_0()); }
	ruleSensorWithType{ after(grammarAccess.getSensorDeclAccess().getSensorsSensorWithTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__SensorAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getSensorSensorParserRuleCall_0_0_0()); }
	ruleSensor{ after(grammarAccess.getSensorWithTypeAccess().getSensorSensorParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__TypeAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getTypeTypeIdentifierParserRuleCall_0_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getSensorWithTypeAccess().getTypeTypeIdentifierParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__SensorAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getSensorSensorParserRuleCall_1_0_0()); }
	ruleSensor{ after(grammarAccess.getSensorWithTypeAccess().getSensorSensorParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SensorWithType__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorWithTypeAccess().getTypeTypeIdentifierParserRuleCall_1_2_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getSensorWithTypeAccess().getTypeTypeIdentifierParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getSensorAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__RelationsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationsRelationTypeParserRuleCall_2_0()); }
	ruleRelationType{ after(grammarAccess.getRelationDeclAccess().getRelationsRelationTypeParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationDecl__RelationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationDeclAccess().getRelationsRelationTypeParserRuleCall_3_1_0()); }
	ruleRelationType{ after(grammarAccess.getRelationDeclAccess().getRelationsRelationTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__FirstAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getFirstISignalCrossReference_0_0()); }
(
{ before(grammarAccess.getRelationImplicationAccess().getFirstISignalIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationImplicationAccess().getFirstISignalIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRelationImplicationAccess().getFirstISignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }
(
{ before(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }

	'=>' 

{ after(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }
)

{ after(grammarAccess.getRelationImplicationAccess().getTypeEqualsSignGreaterThanSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationImplication__SecondAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationImplicationAccess().getSecondISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getRelationImplicationAccess().getSecondISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationImplicationAccess().getSecondISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRelationImplicationAccess().getSecondISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__IncompAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_0_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }

	'#' 

{ after(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }
)

{ after(grammarAccess.getRelationIncompatibilityAccess().getTypeNumberSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__IncompAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RelationIncompatibility__IncompAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_3_1_0()); }
(
{ before(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_3_1_0_1()); }
	RULE_ID{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalIDTerminalRuleCall_3_1_0_1()); }
)
{ after(grammarAccess.getRelationIncompatibilityAccess().getIncompISignalCrossReference_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypesTypeParserRuleCall_1_0()); }
	ruleType{ after(grammarAccess.getTypeDeclAccess().getTypesTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDecl__TypesAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeDeclAccess().getTypesTypeParserRuleCall_2_1_0()); }
	ruleType{ after(grammarAccess.getTypeDeclAccess().getTypesTypeParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__ConstantsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getConstantsOneTypeConstantDeclsParserRuleCall_1_0()); }
	ruleOneTypeConstantDecls{ after(grammarAccess.getConstantDeclsAccess().getConstantsOneTypeConstantDeclsParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDecls__ConstantsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDeclsAccess().getConstantsOneTypeConstantDeclsParserRuleCall_2_1_0()); }
	ruleOneTypeConstantDecls{ after(grammarAccess.getConstantDeclsAccess().getConstantsOneTypeConstantDeclsParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__ConstantsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsConstantWithValueParserRuleCall_0_0()); }
	ruleConstantWithValue{ after(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsConstantWithValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__ConstantsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsConstantWithValueParserRuleCall_1_1_0()); }
	ruleConstantWithValue{ after(grammarAccess.getOneTypeConstantDeclsAccess().getConstantsConstantWithValueParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OneTypeConstantDecls__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOneTypeConstantDeclsAccess().getTypeTypeIdentifierParserRuleCall_3_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getOneTypeConstantDeclsAccess().getTypeTypeIdentifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantWithValue__ConstantAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantWithValueAccess().getConstantConstantParserRuleCall_0_0()); }
	ruleConstant{ after(grammarAccess.getConstantWithValueAccess().getConstantConstantParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantWithValue__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantWithValueAccess().getValueConstantAtomParserRuleCall_1_1_0()); }
	ruleConstantAtom{ after(grammarAccess.getConstantWithValueAccess().getValueConstantAtomParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getConstantAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__FunctionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionsFunctionParserRuleCall_1_0()); }
	ruleFunction{ after(grammarAccess.getFunctionDeclAccess().getFunctionsFunctionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionDecl__FunctionsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionDeclAccess().getFunctionsFunctionParserRuleCall_2_1_0()); }
	ruleFunction{ after(grammarAccess.getFunctionDeclAccess().getFunctionsFunctionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__IdListAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListTypeIdentifierParserRuleCall_2_0_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getFunctionAccess().getIdListTypeIdentifierParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__IdListAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getIdListTypeIdentifierParserRuleCall_2_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getFunctionAccess().getIdListTypeIdentifierParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Function__TypeAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionAccess().getTypeTypeIdentifierParserRuleCall_5_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getFunctionAccess().getTypeTypeIdentifierParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__ProceduresAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProceduresProcedureParserRuleCall_1_0()); }
	ruleProcedure{ after(grammarAccess.getProcedureDeclAccess().getProceduresProcedureParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureDecl__ProceduresAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureDeclAccess().getProceduresProcedureParserRuleCall_2_1_0()); }
	ruleProcedure{ after(grammarAccess.getProcedureDeclAccess().getProceduresProcedureParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getProcedureAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdList1Assignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdList1TypeIdentifierParserRuleCall_2_0_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getProcedureAccess().getIdList1TypeIdentifierParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdList1Assignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdList1TypeIdentifierParserRuleCall_2_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getProcedureAccess().getIdList1TypeIdentifierParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdList2Assignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdList2TypeIdentifierParserRuleCall_5_0_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getProcedureAccess().getIdList2TypeIdentifierParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Procedure__IdList2Assignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureAccess().getIdList2TypeIdentifierParserRuleCall_5_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getProcedureAccess().getIdList2TypeIdentifierParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__TasksAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getTasksTaskParserRuleCall_1_0()); }
	ruleTask{ after(grammarAccess.getTaskDeclAccess().getTasksTaskParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskDecl__TasksAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskDeclAccess().getTasksTaskParserRuleCall_2_1_0()); }
	ruleTask{ after(grammarAccess.getTaskDeclAccess().getTasksTaskParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getTaskAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__IdList1Assignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getIdList1TypeIdentifierParserRuleCall_2_0_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getTaskAccess().getIdList1TypeIdentifierParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__IdList1Assignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getIdList1TypeIdentifierParserRuleCall_2_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getTaskAccess().getIdList1TypeIdentifierParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__IdList2Assignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getIdList2TypeIdentifierParserRuleCall_5_0_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getTaskAccess().getIdList2TypeIdentifierParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Task__IdList2Assignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskAccess().getIdList2TypeIdentifierParserRuleCall_5_1_1_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getTaskAccess().getIdList2TypeIdentifierParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Statement__ListAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getListSequenceParserRuleCall_1_1_1_0()); }
	ruleSequence{ after(grammarAccess.getStatementAccess().getListSequenceParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sequence__ListAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSequenceAccess().getListAtomicStatementParserRuleCall_1_1_1_0()); }
	ruleAtomicStatement{ after(grammarAccess.getSequenceAccess().getListAtomicStatementParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Block__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBlockAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getBlockAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVarIVariableCrossReference_0_0()); }
(
{ before(grammarAccess.getAssignmentAccess().getVarIVariableIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAssignmentAccess().getVarIVariableIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssignmentAccess().getVarIVariableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExprAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExprExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getExprExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getAbortAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Abort__BodyAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortAccess().getBodyAbortBodyParserRuleCall_3_0()); }
	ruleAbortBody{ after(grammarAccess.getAbortAccess().getBodyAbortBodyParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__DelayAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getDelayDelayExprParserRuleCall_0_0()); }
	ruleDelayExpr{ after(grammarAccess.getAbortInstanceAccess().getDelayDelayExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__StatementAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getStatementStatementParserRuleCall_1_1_0()); }
	ruleStatement{ after(grammarAccess.getAbortInstanceAccess().getStatementStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortInstance__OptEndAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortInstanceAccess().getOptEndAbortKeyword_1_3_0()); }
(
{ before(grammarAccess.getAbortInstanceAccess().getOptEndAbortKeyword_1_3_0()); }

	'abort' 

{ after(grammarAccess.getAbortInstanceAccess().getOptEndAbortKeyword_1_3_0()); }
)

{ after(grammarAccess.getAbortInstanceAccess().getOptEndAbortKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCase__CasesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_0_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCase__CasesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCase__OptEndAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseAccess().getOptEndAbortKeyword_3_0()); }
(
{ before(grammarAccess.getAbortCaseAccess().getOptEndAbortKeyword_3_0()); }

	'abort' 

{ after(grammarAccess.getAbortCaseAccess().getOptEndAbortKeyword_3_0()); }
)

{ after(grammarAccess.getAbortCaseAccess().getOptEndAbortKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCaseSingle__DelayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getDelayDelayExprParserRuleCall_1_0()); }
	ruleDelayExpr{ after(grammarAccess.getAbortCaseSingleAccess().getDelayDelayExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AbortCaseSingle__StatementAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAbortCaseSingleAccess().getStatementStatementParserRuleCall_2_1_0()); }
	ruleStatement{ after(grammarAccess.getAbortCaseSingleAccess().getStatementStatementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbort__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getWeakAbortAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbort__BodyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortAccess().getBodyWeakAbortBodyParserRuleCall_5_0()); }
	ruleWeakAbortBody{ after(grammarAccess.getWeakAbortAccess().getBodyWeakAbortBodyParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortEnd__OptEndAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAccess().getOptEndWeakAbortEndAltParserRuleCall_2_0()); }
	ruleWeakAbortEndAlt{ after(grammarAccess.getWeakAbortEndAccess().getOptEndWeakAbortEndAltParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortEndAlt__EndAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAltAccess().getEndWeakKeyword_0_0()); }
(
{ before(grammarAccess.getWeakAbortEndAltAccess().getEndWeakKeyword_0_0()); }

	'weak' 

{ after(grammarAccess.getWeakAbortEndAltAccess().getEndWeakKeyword_0_0()); }
)

{ after(grammarAccess.getWeakAbortEndAltAccess().getEndWeakKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortEndAlt__EndAAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortEndAltAccess().getEndAAbortKeyword_1_0()); }
(
{ before(grammarAccess.getWeakAbortEndAltAccess().getEndAAbortKeyword_1_0()); }

	'abort' 

{ after(grammarAccess.getWeakAbortEndAltAccess().getEndAAbortKeyword_1_0()); }
)

{ after(grammarAccess.getWeakAbortEndAltAccess().getEndAAbortKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__DelayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getDelayDelayExprParserRuleCall_1_0()); }
	ruleDelayExpr{ after(grammarAccess.getWeakAbortInstanceAccess().getDelayDelayExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__StatementAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getStatementStatementParserRuleCall_2_1_0()); }
	ruleStatement{ after(grammarAccess.getWeakAbortInstanceAccess().getStatementStatementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortInstance__EndAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortInstanceAccess().getEndWeakAbortEndParserRuleCall_2_2_0()); }
	ruleWeakAbortEnd{ after(grammarAccess.getWeakAbortInstanceAccess().getEndWeakAbortEndParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortCase__CasesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getWeakAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortCase__CasesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_2_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getWeakAbortCaseAccess().getCasesAbortCaseSingleParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__WeakAbortCase__EndAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWeakAbortCaseAccess().getEndWeakAbortEndParserRuleCall_3_0()); }
	ruleWeakAbortEnd{ after(grammarAccess.getWeakAbortCaseAccess().getEndWeakAbortEndParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Await__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitAccess().getBodyAwaitBodyParserRuleCall_1_0()); }
	ruleAwaitBody{ after(grammarAccess.getAwaitAccess().getBodyAwaitBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitInstance__DelayAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getDelayDelayExprParserRuleCall_0_0()); }
	ruleDelayExpr{ after(grammarAccess.getAwaitInstanceAccess().getDelayDelayExprParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitInstance__StatementAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getStatementStatementParserRuleCall_1_1_0()); }
	ruleStatement{ after(grammarAccess.getAwaitInstanceAccess().getStatementStatementParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitInstance__EndAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitInstanceAccess().getEndAwaitEndParserRuleCall_1_2_0()); }
	ruleAwaitEnd{ after(grammarAccess.getAwaitInstanceAccess().getEndAwaitEndParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitCase__CasesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getCasesAbortCaseSingleParserRuleCall_0_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getAwaitCaseAccess().getCasesAbortCaseSingleParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitCase__CasesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
	ruleAbortCaseSingle{ after(grammarAccess.getAwaitCaseAccess().getCasesAbortCaseSingleParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AwaitCase__EndAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAwaitCaseAccess().getEndAwaitEndParserRuleCall_2_0()); }
	ruleAwaitEnd{ after(grammarAccess.getAwaitCaseAccess().getEndAwaitEndParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__ProcAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getProcProcedureCrossReference_1_0()); }
(
{ before(grammarAccess.getProcCallAccess().getProcProcedureIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getProcCallAccess().getProcProcedureIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getProcCallAccess().getProcProcedureCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__VarListAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getVarListIVariableCrossReference_3_0_0()); }
(
{ before(grammarAccess.getProcCallAccess().getVarListIVariableIDTerminalRuleCall_3_0_0_1()); }
	RULE_ID{ after(grammarAccess.getProcCallAccess().getVarListIVariableIDTerminalRuleCall_3_0_0_1()); }
)
{ after(grammarAccess.getProcCallAccess().getVarListIVariableCrossReference_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__VarListAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getVarListIVariableCrossReference_3_1_1_0()); }
(
{ before(grammarAccess.getProcCallAccess().getVarListIVariableIDTerminalRuleCall_3_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getProcCallAccess().getVarListIVariableIDTerminalRuleCall_3_1_1_0_1()); }
)
{ after(grammarAccess.getProcCallAccess().getVarListIVariableCrossReference_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__KexpressionsAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getKexpressionsExpressionParserRuleCall_6_0_0()); }
	ruleExpression{ after(grammarAccess.getProcCallAccess().getKexpressionsExpressionParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcCall__KexpressionsAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcCallAccess().getKexpressionsExpressionParserRuleCall_6_1_1_0()); }
	ruleExpression{ after(grammarAccess.getProcCallAccess().getKexpressionsExpressionParserRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getDoAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__EndAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getEndDoUptoParserRuleCall_2_0_0()); }
	ruleDoUpto{ after(grammarAccess.getDoAccess().getEndDoUptoParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Do__EndAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoAccess().getEndDoWatchingParserRuleCall_2_1_0()); }
	ruleDoWatching{ after(grammarAccess.getDoAccess().getEndDoWatchingParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoUpto__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoUptoAccess().getExprDelayExprParserRuleCall_1_0()); }
	ruleDelayExpr{ after(grammarAccess.getDoUptoAccess().getExprDelayExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatching__DelayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingAccess().getDelayDelayExprParserRuleCall_1_0()); }
	ruleDelayExpr{ after(grammarAccess.getDoWatchingAccess().getDelayDelayExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatching__EndAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingAccess().getEndDoWatchingEndParserRuleCall_2_0()); }
	ruleDoWatchingEnd{ after(grammarAccess.getDoWatchingAccess().getEndDoWatchingEndParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatchingEnd__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingEndAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getDoWatchingEndAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DoWatchingEnd__OptEndAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDoWatchingEndAccess().getOptEndTimeoutKeyword_3_0()); }
(
{ before(grammarAccess.getDoWatchingEndAccess().getOptEndTimeoutKeyword_3_0()); }

	'timeout' 

{ after(grammarAccess.getDoWatchingEndAccess().getOptEndTimeoutKeyword_3_0()); }
)

{ after(grammarAccess.getDoWatchingEndAccess().getOptEndTimeoutKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__SignalAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getSignalISignalCrossReference_1_0_0()); }
(
{ before(grammarAccess.getEmitAccess().getSignalISignalIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEmitAccess().getSignalISignalIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getEmitAccess().getSignalISignalCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__TickAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getTickTickParserRuleCall_1_1_0()); }
	ruleTick{ after(grammarAccess.getEmitAccess().getTickTickParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emit__ExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmitAccess().getExprExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getEmitAccess().getExprExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__DelayAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getDelayDelayExprParserRuleCall_1_0()); }
	ruleDelayExpr{ after(grammarAccess.getEveryDoAccess().getDelayDelayExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getEveryDoAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EveryDo__OptEndAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEveryDoAccess().getOptEndEveryKeyword_5_0()); }
(
{ before(grammarAccess.getEveryDoAccess().getOptEndEveryKeyword_5_0()); }

	'every' 

{ after(grammarAccess.getEveryDoAccess().getOptEndEveryKeyword_5_0()); }
)

{ after(grammarAccess.getEveryDoAccess().getOptEndEveryKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__TrapAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getTrapTrapDeclCrossReference_1_0()); }
(
{ before(grammarAccess.getExitAccess().getTrapTrapDeclIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getExitAccess().getTrapTrapDeclIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getExitAccess().getTrapTrapDeclCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exit__ExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExitAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getExitAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getIfTestAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ThenPartAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getThenPartThenPartParserRuleCall_2_0()); }
	ruleThenPart{ after(grammarAccess.getIfTestAccess().getThenPartThenPartParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ElsifAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElsifElsIfParserRuleCall_3_0()); }
	ruleElsIf{ after(grammarAccess.getIfTestAccess().getElsifElsIfParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__ElsePartAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getElsePartElsePartParserRuleCall_4_0()); }
	ruleElsePart{ after(grammarAccess.getIfTestAccess().getElsePartElsePartParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IfTest__OptEndAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIfTestAccess().getOptEndIfKeyword_6_0()); }
(
{ before(grammarAccess.getIfTestAccess().getOptEndIfKeyword_6_0()); }

	'if' 

{ after(grammarAccess.getIfTestAccess().getOptEndIfKeyword_6_0()); }
)

{ after(grammarAccess.getIfTestAccess().getOptEndIfKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getExprExpressionParserRuleCall_1_0()); }
	ruleExpression{ after(grammarAccess.getElsIfAccess().getExprExpressionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsIf__ThenPartAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsIfAccess().getThenPartThenPartParserRuleCall_2_0()); }
	ruleThenPart{ after(grammarAccess.getElsIfAccess().getThenPartThenPartParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ThenPart__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThenPartAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getThenPartAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ElsePart__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getElsePartAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getElsePartAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getBodyLoopBodyParserRuleCall_1_0()); }
	ruleLoopBody{ after(grammarAccess.getLoopAccess().getBodyLoopBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__End1Assignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getEnd1EndLoopParserRuleCall_2_0_0()); }
	ruleEndLoop{ after(grammarAccess.getLoopAccess().getEnd1EndLoopParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Loop__EndAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopAccess().getEndLoopEachParserRuleCall_2_1_0()); }
	ruleLoopEach{ after(grammarAccess.getLoopAccess().getEndLoopEachParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EndLoop__EndOptAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEndLoopAccess().getEndOptLoopKeyword_2_0()); }
(
{ before(grammarAccess.getEndLoopAccess().getEndOptLoopKeyword_2_0()); }

	'loop' 

{ after(grammarAccess.getEndLoopAccess().getEndOptLoopKeyword_2_0()); }
)

{ after(grammarAccess.getEndLoopAccess().getEndOptLoopKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopDelay__DelayAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopDelayAccess().getDelayDelayExprParserRuleCall_0()); }
	ruleDelayExpr{ after(grammarAccess.getLoopDelayAccess().getDelayDelayExprParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LoopBody__StatementAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLoopBodyAccess().getStatementStatementParserRuleCall_0()); }
	ruleStatement{ after(grammarAccess.getLoopBodyAccess().getStatementStatementParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__BodyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getBodyPresentBodyParserRuleCall_1_0()); }
	rulePresentBody{ after(grammarAccess.getPresentAccess().getBodyPresentBodyParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__ElsePartAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getElsePartElsePartParserRuleCall_2_0()); }
	ruleElsePart{ after(grammarAccess.getPresentAccess().getElsePartElsePartParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Present__OptEndAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentAccess().getOptEndPresentKeyword_4_0()); }
(
{ before(grammarAccess.getPresentAccess().getOptEndPresentKeyword_4_0()); }

	'present' 

{ after(grammarAccess.getPresentAccess().getOptEndPresentKeyword_4_0()); }
)

{ after(grammarAccess.getPresentAccess().getOptEndPresentKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEventBody__EventAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventBodyAccess().getEventPresentEventParserRuleCall_0_0()); }
	rulePresentEvent{ after(grammarAccess.getPresentEventBodyAccess().getEventPresentEventParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEventBody__ThenPartAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventBodyAccess().getThenPartThenPartParserRuleCall_1_0()); }
	ruleThenPart{ after(grammarAccess.getPresentEventBodyAccess().getThenPartThenPartParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCaseList__CasesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseListAccess().getCasesPresentCaseParserRuleCall_0_0()); }
	rulePresentCase{ after(grammarAccess.getPresentCaseListAccess().getCasesPresentCaseParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCaseList__CasesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseListAccess().getCasesPresentCaseParserRuleCall_1_0()); }
	rulePresentCase{ after(grammarAccess.getPresentCaseListAccess().getCasesPresentCaseParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__EventAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getEventPresentEventParserRuleCall_1_0()); }
	rulePresentEvent{ after(grammarAccess.getPresentCaseAccess().getEventPresentEventParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentCase__StatementAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentCaseAccess().getStatementStatementParserRuleCall_2_1_0()); }
	ruleStatement{ after(grammarAccess.getPresentCaseAccess().getStatementStatementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__ExpressionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getExpressionSignalExpressionParserRuleCall_0_0()); }
	ruleSignalExpression{ after(grammarAccess.getPresentEventAccess().getExpressionSignalExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__FBAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getFBLeftSquareBracketKeyword_1_0_0()); }
(
{ before(grammarAccess.getPresentEventAccess().getFBLeftSquareBracketKeyword_1_0_0()); }

	'[' 

{ after(grammarAccess.getPresentEventAccess().getFBLeftSquareBracketKeyword_1_0_0()); }
)

{ after(grammarAccess.getPresentEventAccess().getFBLeftSquareBracketKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getExpressionSignalExpressionParserRuleCall_1_1_0()); }
	ruleSignalExpression{ after(grammarAccess.getPresentEventAccess().getExpressionSignalExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__EBAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getEBRightSquareBracketKeyword_1_2_0()); }
(
{ before(grammarAccess.getPresentEventAccess().getEBRightSquareBracketKeyword_1_2_0()); }

	']' 

{ after(grammarAccess.getPresentEventAccess().getEBRightSquareBracketKeyword_1_2_0()); }
)

{ after(grammarAccess.getPresentEventAccess().getEBRightSquareBracketKeyword_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PresentEvent__TickAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPresentEventAccess().getTickTickParserRuleCall_2_0()); }
	ruleTick{ after(grammarAccess.getPresentEventAccess().getTickTickParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__PositiveAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_0_0()); }
(
{ before(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_0_0()); }

	'positive' 

{ after(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_0_0()); }
)

{ after(grammarAccess.getRepeatAccess().getPositivePositiveKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getRepeatAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__StatementAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getStatementStatementParserRuleCall_4_0()); }
	ruleStatement{ after(grammarAccess.getRepeatAccess().getStatementStatementParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Repeat__OptEndAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRepeatAccess().getOptEndRepeatKeyword_6_0()); }
(
{ before(grammarAccess.getRepeatAccess().getOptEndRepeatKeyword_6_0()); }

	'repeat' 

{ after(grammarAccess.getRepeatAccess().getOptEndRepeatKeyword_6_0()); }
)

{ after(grammarAccess.getRepeatAccess().getOptEndRepeatKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ModuleAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_0_1_0()); }
	ruleModuleRenaming{ after(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ListAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListRenamingListParserRuleCall_0_2_1_0()); }
	ruleRenamingList{ after(grammarAccess.getRunAccess().getListRenamingListParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ModuleAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_1_1_0()); }
	ruleModuleRenaming{ after(grammarAccess.getRunAccess().getModuleModuleRenamingParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Run__ListAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRunAccess().getListRenamingListParserRuleCall_1_2_1_0()); }
	ruleRenamingList{ after(grammarAccess.getRunAccess().getListRenamingListParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__ModuleAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleModuleCrossReference_0_0()); }
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleModuleIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getModuleRenamingAccess().getModuleModuleIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getModuleRenamingAccess().getModuleModuleCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__NewNameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getNewNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getModuleRenamingAccess().getNewNameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModuleRenaming__ModuleAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleModuleCrossReference_1_2_0()); }
(
{ before(grammarAccess.getModuleRenamingAccess().getModuleModuleIDTerminalRuleCall_1_2_0_1()); }
	RULE_ID{ after(grammarAccess.getModuleRenamingAccess().getModuleModuleIDTerminalRuleCall_1_2_0_1()); }
)
{ after(grammarAccess.getModuleRenamingAccess().getModuleModuleCrossReference_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RenamingList__ListAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getListRenamingParserRuleCall_0_0()); }
	ruleRenaming{ after(grammarAccess.getRenamingListAccess().getListRenamingParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RenamingList__ListAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingListAccess().getListRenamingParserRuleCall_1_1_0()); }
	ruleRenaming{ after(grammarAccess.getRenamingListAccess().getListRenamingParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsTypeRenamingParserRuleCall_0_1_0()); }
	ruleTypeRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsTypeRenamingParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsTypeRenamingParserRuleCall_0_2_1_0()); }
	ruleTypeRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsTypeRenamingParserRuleCall_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsConstantRenamingParserRuleCall_1_1_0()); }
	ruleConstantRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsConstantRenamingParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsConstantRenamingParserRuleCall_1_2_1_0()); }
	ruleConstantRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsConstantRenamingParserRuleCall_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsFunctionRenamingParserRuleCall_2_1_0()); }
	ruleFunctionRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsFunctionRenamingParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsFunctionRenamingParserRuleCall_2_2_1_0()); }
	ruleFunctionRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsFunctionRenamingParserRuleCall_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsProcedureRenamingParserRuleCall_3_1_0()); }
	ruleProcedureRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsProcedureRenamingParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsProcedureRenamingParserRuleCall_3_2_1_0()); }
	ruleProcedureRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsProcedureRenamingParserRuleCall_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsTaskRenamingParserRuleCall_4_1_0()); }
	ruleTaskRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsTaskRenamingParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsTaskRenamingParserRuleCall_4_2_1_0()); }
	ruleTaskRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsTaskRenamingParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsSignalRenamingParserRuleCall_5_1_0()); }
	ruleSignalRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsSignalRenamingParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Renaming__RenamingsAssignment_5_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRenamingAccess().getRenamingsSignalRenamingParserRuleCall_5_2_1_0()); }
	ruleSignalRenaming{ after(grammarAccess.getRenamingAccess().getRenamingsSignalRenamingParserRuleCall_5_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__NewNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getNewNameTypeCrossReference_0_0_0()); }
(
{ before(grammarAccess.getTypeRenamingAccess().getNewNameTypeIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeRenamingAccess().getNewNameTypeIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getTypeRenamingAccess().getNewNameTypeCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__NewTypeAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getNewTypeValueTypeEnumRuleCall_0_1_0()); }
	ruleValueType{ after(grammarAccess.getTypeRenamingAccess().getNewTypeValueTypeEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRenamingAccess().getOldNameTypeCrossReference_2_0()); }
(
{ before(grammarAccess.getTypeRenamingAccess().getOldNameTypeIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTypeRenamingAccess().getOldNameTypeIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTypeRenamingAccess().getOldNameTypeCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__NewNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getNewNameValuedObjectCrossReference_0_0_0()); }
(
{ before(grammarAccess.getConstantRenamingAccess().getNewNameValuedObjectIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getConstantRenamingAccess().getNewNameValuedObjectIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getConstantRenamingAccess().getNewNameValuedObjectCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__NewValueAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getNewValueConstantAtomParserRuleCall_0_1_0()); }
	ruleConstantAtom{ after(grammarAccess.getConstantRenamingAccess().getNewValueConstantAtomParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantRenamingAccess().getOldNameValuedObjectCrossReference_2_0()); }
(
{ before(grammarAccess.getConstantRenamingAccess().getOldNameValuedObjectIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getConstantRenamingAccess().getOldNameValuedObjectIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getConstantRenamingAccess().getOldNameValuedObjectCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__NewNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionCrossReference_0_0_0()); }
(
{ before(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getFunctionRenamingAccess().getNewNameFunctionCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__NewFuncAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getNewFuncBuildInFunctionParserRuleCall_0_1_0()); }
	ruleBuildInFunction{ after(grammarAccess.getFunctionRenamingAccess().getNewFuncBuildInFunctionParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionCrossReference_2_0()); }
(
{ before(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getFunctionRenamingAccess().getOldNameFunctionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureRenaming__NewNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureRenamingAccess().getNewNameProcedureCrossReference_0_0()); }
(
{ before(grammarAccess.getProcedureRenamingAccess().getNewNameProcedureIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getProcedureRenamingAccess().getNewNameProcedureIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getProcedureRenamingAccess().getNewNameProcedureCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ProcedureRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProcedureRenamingAccess().getOldNameProcedureCrossReference_2_0()); }
(
{ before(grammarAccess.getProcedureRenamingAccess().getOldNameProcedureIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getProcedureRenamingAccess().getOldNameProcedureIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getProcedureRenamingAccess().getOldNameProcedureCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRenaming__NewNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRenamingAccess().getNewNameTaskCrossReference_0_0()); }
(
{ before(grammarAccess.getTaskRenamingAccess().getNewNameTaskIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getTaskRenamingAccess().getNewNameTaskIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getTaskRenamingAccess().getNewNameTaskCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TaskRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTaskRenamingAccess().getOldNameTaskCrossReference_2_0()); }
(
{ before(grammarAccess.getTaskRenamingAccess().getOldNameTaskIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTaskRenamingAccess().getOldNameTaskIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTaskRenamingAccess().getOldNameTaskCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__NewNameAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getNewNameISignalCrossReference_0_0_0()); }
(
{ before(grammarAccess.getSignalRenamingAccess().getNewNameISignalIDTerminalRuleCall_0_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSignalRenamingAccess().getNewNameISignalIDTerminalRuleCall_0_0_0_1()); }
)
{ after(grammarAccess.getSignalRenamingAccess().getNewNameISignalCrossReference_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalRenaming__OldNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalRenamingAccess().getOldNameISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getSignalRenamingAccess().getOldNameISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getSignalRenamingAccess().getOldNameISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getSignalRenamingAccess().getOldNameISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__StatementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getStatementStatementParserRuleCall_1_0()); }
	ruleStatement{ after(grammarAccess.getSuspendAccess().getStatementStatementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suspend__DelayAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuspendAccess().getDelayDelayExprParserRuleCall_3_0()); }
	ruleDelayExpr{ after(grammarAccess.getSuspendAccess().getDelayDelayExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__SignalAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getSignalISignalCrossReference_1_0_0()); }
(
{ before(grammarAccess.getSustainAccess().getSignalISignalIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSustainAccess().getSignalISignalIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getSustainAccess().getSignalISignalCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__TickAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getTickTickParserRuleCall_1_1_0()); }
	ruleTick{ after(grammarAccess.getSustainAccess().getTickTickParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sustain__ExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSustainAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
	ruleExpression{ after(grammarAccess.getSustainAccess().getExpressionExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__TrapDeclListAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapDeclListTrapDeclListParserRuleCall_1_0()); }
	ruleTrapDeclList{ after(grammarAccess.getTrapAccess().getTrapDeclListTrapDeclListParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getTrapAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__TrapHandlerAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getTrapHandlerTrapHandlerParserRuleCall_4_0()); }
	ruleTrapHandler{ after(grammarAccess.getTrapAccess().getTrapHandlerTrapHandlerParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trap__OptEndAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapAccess().getOptEndTrapKeyword_6_0()); }
(
{ before(grammarAccess.getTrapAccess().getOptEndTrapKeyword_6_0()); }

	'trap' 

{ after(grammarAccess.getTrapAccess().getOptEndTrapKeyword_6_0()); }
)

{ after(grammarAccess.getTrapAccess().getOptEndTrapKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDeclList__TrapDeclsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getTrapDeclsTrapDeclParserRuleCall_0_0()); }
	ruleTrapDecl{ after(grammarAccess.getTrapDeclListAccess().getTrapDeclsTrapDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDeclList__TrapDeclsAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclListAccess().getTrapDeclsTrapDeclParserRuleCall_1_1_0()); }
	ruleTrapDecl{ after(grammarAccess.getTrapDeclListAccess().getTrapDeclsTrapDeclParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDecl__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTrapDeclAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapDecl__ChannelDescrAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapDeclAccess().getChannelDescrChannelDescriptionParserRuleCall_2_0()); }
	ruleChannelDescription{ after(grammarAccess.getTrapDeclAccess().getChannelDescrChannelDescriptionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__TrapExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getTrapExprTrapExprParserRuleCall_1_0()); }
	ruleTrapExpr{ after(grammarAccess.getTrapHandlerAccess().getTrapExprTrapExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapHandler__StatementAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapHandlerAccess().getStatementStatementParserRuleCall_3_0()); }
	ruleStatement{ after(grammarAccess.getTrapHandlerAccess().getStatementStatementParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__VarAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getVarInterfaceVariableDeclParserRuleCall_0_0()); }
	ruleInterfaceVariableDecl{ after(grammarAccess.getLocalVariableAccess().getVarInterfaceVariableDeclParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__StatementAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getStatementStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getLocalVariableAccess().getStatementStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__LocalVariable__OptEndAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLocalVariableAccess().getOptEndVarKeyword_4_0()); }
(
{ before(grammarAccess.getLocalVariableAccess().getOptEndVarKeyword_4_0()); }

	'var' 

{ after(grammarAccess.getLocalVariableAccess().getOptEndVarKeyword_4_0()); }
)

{ after(grammarAccess.getLocalVariableAccess().getOptEndVarKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapExpression__TrapAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapExpressionAccess().getTrapISignalCrossReference_2_0()); }
(
{ before(grammarAccess.getTrapExpressionAccess().getTrapISignalIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getTrapExpressionAccess().getTrapISignalIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTrapExpressionAccess().getTrapISignalCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__FunctionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionCrossReference_1_0()); }
(
{ before(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getFunctionExpressionAccess().getFunctionFunctionCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__KexpressionsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getKexpressionsExpressionParserRuleCall_3_0_0()); }
	ruleExpression{ after(grammarAccess.getFunctionExpressionAccess().getKexpressionsExpressionParserRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FunctionExpression__KexpressionsAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFunctionExpressionAccess().getKexpressionsExpressionParserRuleCall_3_1_1_0()); }
	ruleExpression{ after(grammarAccess.getFunctionExpressionAccess().getKexpressionsExpressionParserRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ConstantAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantExpressionAccess().getConstantConstantCrossReference_1_0_0()); }
(
{ before(grammarAccess.getConstantExpressionAccess().getConstantConstantIDTerminalRuleCall_1_0_0_1()); }
	RULE_ID{ after(grammarAccess.getConstantExpressionAccess().getConstantConstantIDTerminalRuleCall_1_0_0_1()); }
)
{ after(grammarAccess.getConstantExpressionAccess().getConstantConstantCrossReference_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantExpression__ValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantExpressionAccess().getValueConstantAtomParserRuleCall_1_1_0()); }
	ruleConstantAtom{ after(grammarAccess.getConstantExpressionAccess().getValueConstantAtomParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getOperatorOrOperatorEnumRuleCall_1_1_0()); }
	ruleOrOperator{ after(grammarAccess.getSignalExpressionAccess().getOperatorOrOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalExpressionAccess().getSubExpressionsSignalAndExpressionParserRuleCall_1_2_0()); }
	ruleSignalAndExpression{ after(grammarAccess.getSignalExpressionAccess().getSubExpressionsSignalAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getOperatorAndOperatorEnumRuleCall_1_1_0()); }
	ruleAndOperator{ after(grammarAccess.getSignalAndExpressionAccess().getOperatorAndOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalAndExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAndExpressionAccess().getSubExpressionsSignalNotExpressionParserRuleCall_1_2_0()); }
	ruleSignalNotExpression{ after(grammarAccess.getSignalAndExpressionAccess().getSubExpressionsSignalNotExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); }
	ruleNotOperator{ after(grammarAccess.getSignalNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalNotExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalNotExpressionAccess().getSubExpressionsSignalNotExpressionParserRuleCall_0_2_0()); }
	ruleSignalNotExpression{ after(grammarAccess.getSignalNotExpressionAccess().getSubExpressionsSignalNotExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReferenceExpr__ValuedObjectAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceExprAccess().getValuedObjectISignalCrossReference_0()); }
(
{ before(grammarAccess.getSignalReferenceExprAccess().getValuedObjectISignalIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getSignalReferenceExprAccess().getValuedObjectISignalIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getSignalReferenceExprAccess().getValuedObjectISignalCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__OperatorAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getOperatorPreOperatorEnumRuleCall_1_0()); }
	rulePreOperator{ after(grammarAccess.getSignalPreExprAccess().getOperatorPreOperatorEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalPreExpr__SubExpressionsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalPreExprAccess().getSubExpressionsSignalReferenceExprParserRuleCall_3_0()); }
	ruleSignalReferenceExpr{ after(grammarAccess.getSignalPreExprAccess().getSubExpressionsSignalReferenceExprParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TrapReferenceExpr__ValuedObjectAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTrapReferenceExprAccess().getValuedObjectTrapDeclCrossReference_1_0()); }
(
{ before(grammarAccess.getTrapReferenceExprAccess().getValuedObjectTrapDeclIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getTrapReferenceExprAccess().getValuedObjectTrapDeclIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getTrapReferenceExprAccess().getValuedObjectTrapDeclCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__ExprAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getExprExpressionParserRuleCall_0_0_0()); }
	ruleExpression{ after(grammarAccess.getDelayExprAccess().getExprExpressionParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__EventAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getEventDelayEventParserRuleCall_0_1_0()); }
	ruleDelayEvent{ after(grammarAccess.getDelayExprAccess().getEventDelayEventParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__EventAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getEventDelayEventParserRuleCall_1_0()); }
	ruleDelayEvent{ after(grammarAccess.getDelayExprAccess().getEventDelayEventParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__IsImmediateAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getIsImmediateImmediateKeyword_2_0_0()); }
(
{ before(grammarAccess.getDelayExprAccess().getIsImmediateImmediateKeyword_2_0_0()); }

	'immediate' 

{ after(grammarAccess.getDelayExprAccess().getIsImmediateImmediateKeyword_2_0_0()); }
)

{ after(grammarAccess.getDelayExprAccess().getIsImmediateImmediateKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayExpr__EventAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayExprAccess().getEventDelayEventParserRuleCall_2_1_0()); }
	ruleDelayEvent{ after(grammarAccess.getDelayExprAccess().getEventDelayEventParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__TickAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getTickTickParserRuleCall_0_0()); }
	ruleTick{ after(grammarAccess.getDelayEventAccess().getTickTickParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__ExprAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getExprSignalReferenceExprParserRuleCall_1_0()); }
	ruleSignalReferenceExpr{ after(grammarAccess.getDelayEventAccess().getExprSignalReferenceExprParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__FBAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getFBLeftSquareBracketKeyword_2_0_0()); }
(
{ before(grammarAccess.getDelayEventAccess().getFBLeftSquareBracketKeyword_2_0_0()); }

	'[' 

{ after(grammarAccess.getDelayEventAccess().getFBLeftSquareBracketKeyword_2_0_0()); }
)

{ after(grammarAccess.getDelayEventAccess().getFBLeftSquareBracketKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__ExprAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getExprSignalExpressionParserRuleCall_2_1_0()); }
	ruleSignalExpression{ after(grammarAccess.getDelayEventAccess().getExprSignalExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DelayEvent__EBAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDelayEventAccess().getEBRightSquareBracketKeyword_2_2_0()); }
(
{ before(grammarAccess.getDelayEventAccess().getEBRightSquareBracketKeyword_2_2_0()); }

	']' 

{ after(grammarAccess.getDelayEventAccess().getEBRightSquareBracketKeyword_2_2_0()); }
)

{ after(grammarAccess.getDelayEventAccess().getEBRightSquareBracketKeyword_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__TaskAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getTaskTaskCrossReference_0_0_1_0()); }
(
{ before(grammarAccess.getExecAccess().getTaskTaskIDTerminalRuleCall_0_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getExecAccess().getTaskTaskIDTerminalRuleCall_0_0_1_0_1()); }
)
{ after(grammarAccess.getExecAccess().getTaskTaskCrossReference_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__BodyAssignment_0_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getBodyExecBodyParserRuleCall_0_0_2_0()); }
	ruleExecBody{ after(grammarAccess.getExecAccess().getBodyExecBodyParserRuleCall_0_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__RetSignalAssignment_0_0_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getRetSignalISignalCrossReference_0_0_4_0()); }
(
{ before(grammarAccess.getExecAccess().getRetSignalISignalIDTerminalRuleCall_0_0_4_0_1()); }
	RULE_ID{ after(grammarAccess.getExecAccess().getRetSignalISignalIDTerminalRuleCall_0_0_4_0_1()); }
)
{ after(grammarAccess.getExecAccess().getRetSignalISignalCrossReference_0_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__StatementAssignment_0_0_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getStatementStatementParserRuleCall_0_0_5_1_0()); }
	ruleStatement{ after(grammarAccess.getExecAccess().getStatementStatementParserRuleCall_0_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__ExecCaseListAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getExecCaseListExecCaseParserRuleCall_0_1_1_0()); }
	ruleExecCase{ after(grammarAccess.getExecAccess().getExecCaseListExecCaseParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__ExecCaseListAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getExecCaseListExecCaseParserRuleCall_0_1_2_0()); }
	ruleExecCase{ after(grammarAccess.getExecAccess().getExecCaseListExecCaseParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exec__OptEndAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecAccess().getOptEndExecKeyword_2_0()); }
(
{ before(grammarAccess.getExecAccess().getOptEndExecKeyword_2_0()); }

	'exec' 

{ after(grammarAccess.getExecAccess().getOptEndExecKeyword_2_0()); }
)

{ after(grammarAccess.getExecAccess().getOptEndExecKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__VarsAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getVarsIVariableCrossReference_2_0_0()); }
(
{ before(grammarAccess.getExecBodyAccess().getVarsIVariableIDTerminalRuleCall_2_0_0_1()); }
	RULE_ID{ after(grammarAccess.getExecBodyAccess().getVarsIVariableIDTerminalRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getExecBodyAccess().getVarsIVariableCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__VarsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getVarsIVariableCrossReference_2_1_1_0()); }
(
{ before(grammarAccess.getExecBodyAccess().getVarsIVariableIDTerminalRuleCall_2_1_1_0_1()); }
	RULE_ID{ after(grammarAccess.getExecBodyAccess().getVarsIVariableIDTerminalRuleCall_2_1_1_0_1()); }
)
{ after(grammarAccess.getExecBodyAccess().getVarsIVariableCrossReference_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__KexpressionsAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getKexpressionsExpressionParserRuleCall_5_0_0()); }
	ruleExpression{ after(grammarAccess.getExecBodyAccess().getKexpressionsExpressionParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecBody__KexpressionsAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecBodyAccess().getKexpressionsExpressionParserRuleCall_5_1_1_0()); }
	ruleExpression{ after(grammarAccess.getExecBodyAccess().getKexpressionsExpressionParserRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__TaskAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getTaskTaskCrossReference_1_0()); }
(
{ before(grammarAccess.getExecCaseAccess().getTaskTaskIDTerminalRuleCall_1_0_1()); }
	RULE_ID{ after(grammarAccess.getExecCaseAccess().getTaskTaskIDTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getExecCaseAccess().getTaskTaskCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__BodyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getBodyExecBodyParserRuleCall_2_0()); }
	ruleExecBody{ after(grammarAccess.getExecCaseAccess().getBodyExecBodyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__RetSignalAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getRetSignalISignalCrossReference_4_0()); }
(
{ before(grammarAccess.getExecCaseAccess().getRetSignalISignalIDTerminalRuleCall_4_0_1()); }
	RULE_ID{ after(grammarAccess.getExecCaseAccess().getRetSignalISignalIDTerminalRuleCall_4_0_1()); }
)
{ after(grammarAccess.getExecCaseAccess().getRetSignalISignalCrossReference_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecCase__StatementAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecCaseAccess().getStatementStatementParserRuleCall_5_1_0()); }
	ruleStatement{ after(grammarAccess.getExecCaseAccess().getStatementStatementParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorEnumRuleCall_1_1_0()); }
	ruleOrOperator{ after(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getSubExpressionsAndExpressionParserRuleCall_1_2_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getSubExpressionsAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorEnumRuleCall_1_1_0()); }
	ruleAndOperator{ after(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_0()); }
	ruleCompareOperation{ after(grammarAccess.getAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__OperatorAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_0_1_1_0()); }
	ruleCompareOperator{ after(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__SubExpressionsAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_0_1_2_0()); }
	ruleNotOrValuedExpression{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); }
	ruleNotOperator{ after(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); }
	ruleNotExpression{ after(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0()); }
	ruleAddOperator{ after(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_0()); }
	ruleSubExpression{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0()); }
	ruleSubOperator{ after(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_0()); }
	ruleMultExpression{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0()); }
	ruleMultOperator{ after(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_0()); }
	ruleDivExpression{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0()); }
	ruleDivOperator{ after(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_0()); }
	ruleModExpression{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0()); }
	ruleModOperator{ after(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_0()); }
	ruleAtomicValuedExpression{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); }
	ruleSubOperator{ after(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); }
	ruleNegExpression{ after(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0()); }
	rulePreOperator{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); }
	ruleValuedObjectTestExpression{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValueTestOperatorEnumRuleCall_1_1_0()); }
	ruleValueTestOperator{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValueTestOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_1_2_0()); }
	ruleValuedObjectReference{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__ValuedObjectAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0()); }
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__CodeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getCodeHOSTCODETerminalRuleCall_0_0()); }
	RULE_HOSTCODE{ after(grammarAccess.getTextExpressionAccess().getCodeHOSTCODETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getTypeIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTextExpressionAccess().getTypeIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getFloatValueAccess().getValueFLOATTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getValueBOOLEANTerminalRuleCall_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getBooleanValueAccess().getValueBOOLEANTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__ChannelDescrAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getChannelDescrChannelDescriptionParserRuleCall_1_0()); }
	ruleChannelDescription{ after(grammarAccess.getISignalAccess().getChannelDescrChannelDescriptionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_2_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_3_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_2_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_3_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_2_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_3_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_2_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_3_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__VarDeclsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsVariableDeclParserRuleCall_1_0()); }
	ruleVariableDecl{ after(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsVariableDeclParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__VarDeclsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsVariableDeclParserRuleCall_2_1_0()); }
	ruleVariableDecl{ after(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsVariableDeclParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__VariablesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_0_0()); }
	ruleIVariable{ after(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__VariablesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_1_1_0()); }
	ruleIVariable{ after(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeTypeIdentifierParserRuleCall_3_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getVariableDeclAccess().getTypeTypeIdentifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getIVariableAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__ExpressionAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getIVariableAccess().getExpressionExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommentAnnotation__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValueCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
	RULE_COMMENT_ANNOTATION{ after(grammarAccess.getCommentAnnotationAccess().getValueCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__AnnotationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getAnnotationsAnnotationParserRuleCall_2_1_0()); }
	ruleAnnotation{ after(grammarAccess.getTagAnnotationAccess().getAnnotationsAnnotationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_5_0()); }
	ruleEString{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__AnnotationsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_6_1_0()); }
	ruleAnnotation{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueBOOLEANTerminalRuleCall_2_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueBOOLEANTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyIntValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getValueINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getKeyIntValueAnnotationAccess().getValueINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getValueFLOATTerminalRuleCall_2_0()); }
	RULE_FLOAT{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getValueFLOATTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}



RULE_ESTEREL_SL_COMMENT : '%' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ESTEREL_ML_COMMENT : '%' '{' ( options {greedy=false;} : . )*'}' '%';

RULE_STRING : '"' (~('"')|'"' '"')* '"';

RULE_HOSTCODE : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_COMMENT_ANNOTATION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_INT : '-'? ('0'..'9')+;

RULE_FLOAT : ('-'? ('0'..'9')+ '.' ('0'..'9')* (('e'|'E') ('+'|'-')? ('0'..'9')+)? 'f'?|'-'? ('0'..'9')+ 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


