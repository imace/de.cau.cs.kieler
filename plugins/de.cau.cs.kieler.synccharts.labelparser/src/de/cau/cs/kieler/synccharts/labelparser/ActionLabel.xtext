grammar de.cau.cs.kieler.synccharts.labelparser.ActionLabel with de.cau.cs.kieler.core.expressions.Expressions
//// we do not need to generate the transitionlabel ecore model, because we
//// only reuse classes of the official synccharts metamodel
//generate transitionlabel "http://kieler.cs.cau.de/synccharts/actionlabel"


import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "platform:/resource/de.cau.cs.kieler.synccharts/model/synccharts.ecore" as synccharts
import "platform:/resource/de.cau.cs.kieler.core.expressions/model/expressions.ecore" as expressions

Action returns synccharts::Action:
    {synccharts::Action}
	(isImmediate?='#')? (delay=INT)? (trigger=BooleanExpression)? ("/" (effects+=Effect (',')? )*)?; 		

Effect returns synccharts::Effect: 
	Emission | Assignment | TextEffect;
		
Emission returns synccharts::Emission:
	signal=[expressions::Signal]	
	(("(" newValue=ValuedExpression ")")
   |("(" newValue=BooleanExpression ")") )?;

Assignment returns synccharts::Assignment:
	variable=[expressions::Variable] ":=" 
	 ( expression=ValuedExpression
	 | expression=BooleanExpression);

TextEffect returns synccharts::TextEffect:
 	code=STRING ("(" type=ID ")")?;
	
