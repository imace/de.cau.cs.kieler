/*
 * generated by Xtext
 */
package de.cau.cs.kieler.synccharts.scoping;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.IScopedElement;
import org.eclipse.xtext.scoping.impl.AbstractDeclarativeScopeProvider;

import com.google.inject.Scope;

import de.cau.cs.kieler.synccharts.Region;
import de.cau.cs.kieler.synccharts.Signal;
import de.cau.cs.kieler.synccharts.State;
import de.cau.cs.kieler.synccharts.Variable;

/**
 * This class contains custom scoping description.
 * 
 * see : http://www.eclipse.org/Xtext/documentation/latest/xtext.html#scoping on
 * how and when to use it
 * 
 */
public class ActionLabelScopeProvider extends
        AbstractDeclarativeScopeProvider {

    public static EObject parent;

    @Override
    public IScope getScope(EObject context, EReference reference) {
        if (parent != null)
            return new ValuedObjectScope(parent);
        return super.getScope(context, reference);
    }

  
}
