import uml;

// ================================================================================================
// ==              Restrictions for Maude simulation of UML state machine diagrams               ==
// ================================================================================================


// ------------------------------------------------------------------------------------------------
// General Transitions

// All transitions that originate from initial nodes must not have a trigger
context Transition if (this.source.metaType.toString().endsWith("Pseudostate") && ((Pseudostate)this.source).kind.toString().matches("initial")) 
WARNING "MAUDE: Initial transition should not have a trigger or action (these are ignored). (Transition from '"+this.source.name+ "' to '" + this.target.name + "')" :
  (name == null || name.matches(""))
;

// For all transitions that
// 1. do not originate from initial nodes AND
// 2. do not originate/target from/to forks nodes AND
// 3. do not originate/target from/to join nodes
// Check if the transition trigger is empty!
context Transition if ((!this.source.metaType.toString().endsWith("Pseudostate") && !this.target.metaType.toString().endsWith("Pseudostate")) 
                       || ((this.source.metaType.toString().endsWith("Pseudostate") 
                           && !((Pseudostate)this.source).kind.toString().matches("initial") 
                           && !((Pseudostate)this.source).kind.toString().matches("fork") 
                           && !((Pseudostate)this.source).kind.toString().matches("join"))
                       	 && (this.target.metaType.toString().endsWith("Pseudostate") 
                           && !((Pseudostate)this.source).kind.toString().matches("fork") 
                           && !((Pseudostate)this.source).kind.toString().matches("join")) )) 
ERROR "MAUDE: Transition must have a trigger. (Transition from '"+this.source.name+ "' to '" + this.target.name + "')" :
  (name != null &&  name.contains("/") && (name.split("/").get(0)).length > 0)
;


// ------------------------------------------------------------------------------------------------
// General States
 
// States should have a name
context State 
WARNING "MAUDE: State should have a name! (In region '"+this.container.name+"')" :
  (name != null && !name.matches(""))
;

context Vertex if (this.container != null)   
  WARNING "State '"+this.name+"' is not reachable! Every state needs at least one incoming transition!" :
  (this.incoming.size > 0)
;


// ------------------------------------------------------------------------------------------------
// Initial and Final States

// All initial nodes must have a outgoing transition 
context Pseudostate if (this.kind.toString().matches("initial"))
ERROR "MAUDE: Initial node '"+this.name+"' must have outgoing transitions." :
  (this.outgoing.size > 0)
;

// All initial nodes must not have a incoming transitions 
context Pseudostate if (this.kind.toString().matches("initial"))
ERROR "MAUDE: Initial node '"+this.name+"' must not have incoming transitions." :
  (this.incoming.size == 0)
;

// All final nodes must have a incoming transitions
context FinalState 
ERROR "MAUDE: Final state '"+this.name+"' must have incoming transitions." :
  (this.incoming.size > 0)
;
  
// All final nodes must not have a outgoing transitions
context FinalState 
ERROR "MAUDE: Final state '"+this.name+"' must not have outgoing transitions." :
  (this.outgoing.size == 0)
;

// All regions should have exactly one initial node
context Region
ERROR "MAUDE: Region '"+this.name+"' must have an initial node." :
   this.eContents.select(e|e.metaType.toString().endsWith("Pseudostate") && ((Pseudostate)e).kind.toString().matches("initial")).size > 0
;
context Region
ERROR "MAUDE: Region '"+this.name+"' must not have more than one initial node." :
   this.eContents.select(e|e.metaType.toString().endsWith("Pseudostate") && ((Pseudostate)e).kind.toString().matches("initial")).size < 2
;


// ------------------------------------------------------------------------------------------------
// Other Pseudostates

// A Join/Fork state should have incoming and outgoing transitions
context Pseudostate if (this.kind.toString().matches("fork") || this.kind.toString().matches("join"))
ERROR "MAUDE: Join or fork node '"+this.name+"' must have outgoing and incoming transitions." :
  (this.incoming.size > 0 && this.outgoing.size > 0)
;

	