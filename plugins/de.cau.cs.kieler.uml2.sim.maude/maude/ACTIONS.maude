****************************************************************
*** ToDos in diesem File
*** - Kommentare
*** - gatherActions siehe unten
****************************************************************


fmod ACTIONS is 
	including ACTIONSSYNTAX .
	
	vars a a2 : Action .
	vars A A2 : Actions .
	
  op intersection(_,_) : Actions Actions -> Bool .
  eq intersection((a A),A2) = occurs(a,A2) or intersection(A,A2) .
  eq intersection(nil,A2) = false .

	op neIntersection(_,_) : Actions Actions -> Bool [memo] .
	eq neIntersection((a A),A2) = occurs(a,A2) or neIntersection(A,A2) .
	eq neIntersection(nil,A2) = false .
		 	
  op actionConflict_ : Action -> Bool .
  eq actionConflict (seq A) = actionConflictSeq A .
  eq actionConflict (par A) = actionConflictPar A .
  eq actionConflict a = false [owise] .
	
  op actionConflictSeq_ : Actions -> Bool .
  eq actionConflictSeq (a A) = (actionConflict a) or (actionConflictSeq A) .
  eq actionConflictSeq nil = false .

  op actionConflictPar_ : Actions -> Bool .
  eq actionConflictPar (a A) = (actionConflict a) or (neIntersection ((gatherActions a), ($gatherActions A))) or actionConflictPar A .
  eq actionConflictPar nil = false .
	
  *** TODO gatherActions und $gatherActions 
  op gatherActions_ : Action -> Actions [memo] .
  eq gatherActions (par A) = ($gatherActions A) .
  eq gatherActions (seq A) = ($gatherActions A) .
  eq gatherActions a = a [owise] .	 
	
  op $gatherActions_ : Actions -> Actions .
  eq $gatherActions (a A) = (gatherActions a) ($gatherActions A) .
  eq $gatherActions nil = nil .	 	
endfm
