<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="de.cau.cs.kieler.karma" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="de.cau.cs.kieler.karma" id="de.cau.cs.kieler.karma" name="de.cau.cs.kieler.karma"/>
      </appinfo>
      <documentation>
         Extension point for defining conditions under which certain figures should be used to represent modelelements.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="configuration"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appinfo>
                  <meta.attribute translatable="true"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="featureValueCondition">
      <annotation>
         <documentation>
            a contition that compares a feature with a value
         </documentation>
      </annotation>
      <complexType>
         <attribute name="feature" type="string" use="required">
            <annotation>
               <documentation>
                  The concrete feature that can be found in the epackage.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="type" type="string" use="required">
            <annotation>
               <documentation>
                  Type that has the above feature.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string" use="required">
            <annotation>
               <documentation>
                  The desired value the feature should have.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="figureParam" type="string">
            <annotation>
               <documentation>
                  This string will be given to te figure provider. The figure provider should be able to handle the string and return a figure according to this string.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="listSizeCondition">
      <annotation>
         <documentation>
            A condition that tests the size of list. &quot;Feature&quot; and &quot;Type&quot; are used to find a method in the packages with the form of get&lt;type&gt;_&lt;feature&gt;().
         </documentation>
      </annotation>
      <complexType>
         <attribute name="feature" type="string" use="required">
            <annotation>
               <documentation>
                  The concrete feature that can be found in the epackage.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="type" type="string" use="required">
            <annotation>
               <documentation>
                  Type that has the above feature.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="size" type="string" use="required">
            <annotation>
               <documentation>
                  The desired size of the list. Should be parseable to an integer, will fail otherwise.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="figureParam" type="string">
            <annotation>
               <documentation>
                  This string will be given to te figure provider. The figure provider should be able to handle the string and return a figure according to this string.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="compoundCondition">
      <annotation>
         <documentation>
            a condition that is composed of a list of other conditions
         </documentation>
      </annotation>
      <complexType>
         <choice minOccurs="2" maxOccurs="unbounded">
            <element ref="featureValueCondition"/>
            <element ref="listSizeCondition"/>
            <element ref="customCondition"/>
            <element ref="compoundCondition"/>
         </choice>
         <attribute name="figureParam" type="string" use="required">
            <annotation>
               <documentation>
                  This string will be given to te figure provider. The figure provider should be able to handle the string and return a figure according to this string.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="customCondition">
      <annotation>
         <documentation>
            A custom condition to be defined by the user.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="condition" type="string" use="required">
            <annotation>
               <documentation>
                  The custom condition class.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":de.cau.cs.kieler.karma.ICustomCondition"/>
               </appinfo>
            </annotation>
         </attribute>
         <attribute name="figureParam" type="string">
            <annotation>
               <documentation>
                  This string will be given to te figure provider. The figure provider should be able to handle the string and return a figure according to this string.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="key" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="configuration">
      <complexType>
         <sequence>
            <choice>
               <element ref="conditions"/>
               <element ref="mutatableObject"/>
            </choice>
            <element ref="package" minOccurs="1" maxOccurs="unbounded"/>
            <element ref="editPart" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="FigureProvider" type="string" use="required">
            <annotation>
               <documentation>
                  The figure string  from the conditions will be given to this class and will return the figure that will be displayed.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":de.cau.cs.kieler.karma.IFigureProvider"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="package">
      <annotation>
         <documentation>
            A package that holds features and other things a condition can reference.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  The class of the package.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn="org.eclipse.emf.ecore.EPackage:"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="conditions">
      <annotation>
         <documentation>
            List of the conditions and the corresponding string for displaying figures.
         </documentation>
      </annotation>
      <complexType>
         <choice>
            <element ref="featureValueCondition" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="listSizeCondition" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="compoundCondition" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="customCondition" minOccurs="0" maxOccurs="unbounded"/>
         </choice>
      </complexType>
   </element>

   <element name="editPart">
      <annotation>
         <documentation>
            The edit part of the model element that the mechanism should be used with.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="editPart" type="string" use="required">
            <annotation>
               <documentation>
                  The class of the edit part.
               </documentation>
               <appinfo>
                  <meta.attribute kind="java" basedOn=":org.eclipse.gef.EditPart"/>
               </appinfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="mutatableObject" type="string">
   </element>


   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         [Enter extension point usage example here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiinfo"/>
      </appinfo>
      <documentation>
         [Enter API information here.]
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         [Enter information about supplied implementation of this extension point.]
      </documentation>
   </annotation>


</schema>
