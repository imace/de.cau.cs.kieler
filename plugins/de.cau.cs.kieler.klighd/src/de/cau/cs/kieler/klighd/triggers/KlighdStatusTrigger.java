/*
 * KIELER - Kiel Integrated Environment for Layout Eclipse Rich Client
 *
 * http://www.informatik.uni-kiel.de/rtsys/kieler/
 * 
 * Copyright 2011 by
 * + Christian-Albrechts-University of Kiel
 *   + Department of Computer Science
 *     + Real-Time and Embedded Systems Group
 * 
 * This code is provided under the terms of the Eclipse Public License (EPL).
 * See the file epl-v10.html for the license text.
 */
package de.cau.cs.kieler.klighd.triggers;

import de.cau.cs.kieler.core.kivi.AbstractTrigger;
import de.cau.cs.kieler.core.kivi.ITrigger;
import de.cau.cs.kieler.klighd.IViewer;
import de.cau.cs.kieler.klighd.ViewContext;

/**
 * @author mri
 */
public class KlighdStatusTrigger extends AbstractTrigger {

    /** the trigger instance. */
    private static KlighdStatusTrigger instance = null;

    /**
     * Returns the trigger instance.
     * 
     * @return the instance of this trigger
     */
    public static KlighdStatusTrigger getInstance() {
        return instance;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void register() {
        instance = this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public void unregister() {
        instance = null;
    }

    /**
     * The state generated by the status trigger. Contains information about a status change of a
     * KLighD visualization in a KLighD view.
     */
    public static class KlighdStatusState extends AbstractKlighdTriggerState {

        /** the possible statuses. */
        public enum Status {
            /** visualization created successfully. */
            CREATE_SUCCESS,
            /** failed to create visualization. */
            CREATE_FAILURE,
            /** visualization updated. */
            UPDATE,
            /** visualization closed. */
            CLOSE,
            /** nothing special. */
            NOTHING
        }

        /** the status. */
        private Status status;

        /**
         * Constructs a KLighD status state.
         */
        public KlighdStatusState() {
            super();
            this.status = Status.NOTHING;
        }

        /**
         * Constructs a KLighD status state connected with a status, view, viewer and a view context
         * in which the trigger that lead to this trigger state fired.
         * 
         * @param status
         *            the status
         * @param viewId
         *            the identifier of the view
         * @param viewContext
         *            the view context
         * @param viewer
         *            the viewer
         */
        public KlighdStatusState(final Status status, final String viewId,
                final ViewContext viewContext, final IViewer<?> viewer) {
            super(viewId, viewContext, viewer);
            this.status = status;
        }

        /**
         * Returns the status.
         * 
         * @return the status
         */
        public Status getStatus() {
            return status;
        }

        /**
         * {@inheritDoc}
         */
        public Class<? extends ITrigger> getTriggerClass() {
            return KlighdStatusTrigger.class;
        }

    }

}
