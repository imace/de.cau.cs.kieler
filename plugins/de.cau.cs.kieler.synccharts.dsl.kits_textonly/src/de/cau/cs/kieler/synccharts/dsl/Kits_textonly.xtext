grammar de.cau.cs.kieler.synccharts.dsl.Kits_textonly with org.eclipse.xtext.common.Terminals
generate kits_textonly "http://www.cau.de/cs/kieler/synccharts/dsl/Kits_textonly"



//========================================================================================
//===  									    REGIONS  					               ===
//========================================================================================
Region :
	('region' id=ID)?
	
	(	variables+=Variable
	|	signals+=Signal
	|   innerStates+=State
	) +
;
//========================================================================================
//===  									    STATES  					               ===
//========================================================================================
State :	
		( ((isInitial?='init')(isFinal?='final')) (type=StateType) 'state' name=FullStateID
  	| ((isInitial?='init')(isFinal?='final')) (type=StateType) 'state'
  	| ((isInitial?='init')(isFinal?='final')) (type=StateType) name=FullStateID
  	| ((isInitial?='init')(isFinal?='final')) 'state' name=FullStateID
  	| ((isInitial?='init')(isFinal?='final')) (type=StateType)
  	| ((isInitial?='init')(isFinal?='final')) 'state'
  	| ((isInitial?='init')(isFinal?='final')) name=FullStateID
  	| ((isInitial?='init')(isFinal?='final'))
  	
  	| ((isFinal?='final')(isInitial?='init')) (type=StateType) 'state' name=FullStateID
  	| ((isFinal?='final')(isInitial?='init')) (type=StateType) 'state'
  	| ((isFinal?='final')(isInitial?='init')) (type=StateType) name=FullStateID
  	| ((isFinal?='final')(isInitial?='init')) 'state' name=FullStateID
  	| ((isFinal?='final')(isInitial?='init')) (type=StateType)
  	| ((isFinal?='final')(isInitial?='init')) 'state'
  	| ((isFinal?='final')(isInitial?='init')) name=FullStateID
  	| ((isFinal?='final')(isInitial?='init'))
  	
  	| (isInitial?='init') (type=StateType) 'state' name=FullStateID
  	| (isInitial?='init') (type=StateType) 'state'
  	| (isInitial?='init') (type=StateType) name=FullStateID  
  	| (isInitial?='init') 'state' name=FullStateID
  	| (isInitial?='init') (type=StateType) 
  	| (isInitial?='init') 'state'
  	| (isInitial?='init') name=FullStateID
  	| (isInitial?='init')
  	
  	| (isFinal?='final')  (type=StateType) 'state' name=FullStateID
  	| (isFinal?='final')  (type=StateType) 'state' 
  	| (isFinal?='final')  (type=StateType) name=FullStateID
  	| (isFinal?='final')  'state' name=FullStateID
  	| (isFinal?='final')  (type=StateType)
  	| (isFinal?='final')  'state' name=FullStateID
  	| (isFinal?='final')  name=FullStateID
  	| (isFinal?='final')
  	
  	| (type=StateType) 'state' name=FullStateID
  	| (type=StateType) 'state'
  	| (type=StateType) name=FullStateID
  	| (type=StateType)
  	
  	| 'state' name=FullStateID
  	| 'state'
  		
  	| name=FullStateID
  	)

  (label=STRING)? //	('['(signalRenamings+=Renaming ',')* signalRenamings+=Renaming']')?
  (bodyText=STRING)? 
  
   ('{' 
	    (	 	('onentry' entryActions+=Action) 
	  		| 	('oninner' innerActions+=Action) 
	  		|   ('onexit' exitActions+=Action ) 
	  		| 	('suspension' suspensionTrigger=Action) // kein effect, kein delay, kein immediate
	  		| 	(signals+=Signal)  
	  		| 	(regions+=Region ('||' regions+=Region)*)
	  	)+
   	'}')?

   	
   	(outgoingTransitions+=Transition)* 
;
Renaming	:oldID=STRING'/'newID=STRING;
FullStateID : ((ID'@')?ID);

	//========================================================================================
	//===  									    ACTIONS  					               ===
	//========================================================================================
Action:
	((isImmediate?='#')? (delay=INT ';')? (triggersAndEffects=STRING))
| 
	Transition
	
;

	//========================================================================================
	//===  									    TRANSITION 					               ===
	//========================================================================================
	
Transition:
//either reference existing state or create a new one or leave it blank (in that case, the transition belongs to the containing state)
	(sourceState=[State|FullStateID] | newSourceState=TransitionState)? 
	type=TransitionType
	(targetState=[State|FullStateID] | newTargetState=TransitionState) 
	( 'with' triggersAndEffects=STRING )?
	(isHistory?=' history')?
	';'
;
TransitionState returns State:
	( ((isInitial?='init')(isFinal?='final')) (type=StateType) 'state' name=FullStateID
	| ((isInitial?='init')(isFinal?='final')) (type=StateType) 'state'
	| ((isInitial?='init')(isFinal?='final')) (type=StateType) name=FullStateID
	| ((isInitial?='init')(isFinal?='final')) 'state' name=FullStateID
	| ((isInitial?='init')(isFinal?='final')) (type=StateType)
	| ((isInitial?='init')(isFinal?='final')) 'state'
	| ((isInitial?='init')(isFinal?='final')) name=FullStateID
	| ((isInitial?='init')(isFinal?='final'))
	
	| ((isFinal?='final')(isInitial?='init')) (type=StateType) 'state' name=FullStateID
	| ((isFinal?='final')(isInitial?='init')) (type=StateType) 'state'
	| ((isFinal?='final')(isInitial?='init')) (type=StateType) name=FullStateID
	| ((isFinal?='final')(isInitial?='init')) 'state' name=FullStateID
	| ((isFinal?='final')(isInitial?='init')) (type=StateType)
	| ((isFinal?='final')(isInitial?='init')) 'state'
	| ((isFinal?='final')(isInitial?='init')) name=FullStateID
	| ((isFinal?='final')(isInitial?='init'))
	
	| (isInitial?='init') (type=StateType) 'state' name=FullStateID
	| (isInitial?='init') (type=StateType) 'state'
	| (isInitial?='init') (type=StateType) name=FullStateID  
	| (isInitial?='init') 'state' name=FullStateID
	| (isInitial?='init') (type=StateType) 
	| (isInitial?='init') 'state'
	| (isInitial?='init') name=FullStateID
	| (isInitial?='init')
	
	| (isFinal?='final')  (type=StateType) 'state' name=FullStateID
	| (isFinal?='final')  (type=StateType) 'state' 
	| (isFinal?='final')  (type=StateType) name=FullStateID
	| (isFinal?='final')  'state' name=FullStateID
	| (isFinal?='final')  (type=StateType)
	| (isFinal?='final')  'state' name=FullStateID
	| (isFinal?='final')  name=FullStateID
	| (isFinal?='final')
	
	| (type=StateType) 'state' name=FullStateID
	| (type=StateType) 'state'
	| (type=StateType) name=FullStateID
	| (type=StateType)
	
	| 'state' name=FullStateID
	| 'state'
		
	| name=FullStateID
	) 
	
;
 	//========================================================================================
	//===  									    VAR,SIG  					               ===
	//========================================================================================
ValuedObject:
	Signal | Variable
;
Variable:
	'var' name=ID 
	( 
	  (': ' type=ValueType)//or type only, type being either pre-defined or hostcode
	| (':=' initialValue=ID ': ' type=ValueType) // either initial value and type 
	)  
;
Signal:
 	//a signal is EITHER local OR (input or output or both)
	(	(isLocal?='local')
	| 
		(	(isInput?='input')
		|
		 	(isOutput?='output')
		|
		 	((isInput?='input')(isOutput?='output'))
		 )		
	)
	name=ID 
	
	(':=' initialValue=ID)? 
	
	( 
		(': ' type=ValueType) // either initial value and type
	| 	(': combine' type=ValueType 'with' (combineOperator=CombineOperator|hostCombineOperator=STRING)) //or initial value and combine type
	) 
;
	//========================================================================================
	//===  								 ENUMS, DATATYPES etc      			               ===
	//========================================================================================
enum StateType		: NORMAL='state' | PSEUDO='cond' | REFERENCE='ref' | TEXTUAL='textual'; 
enum CombineOperator: NONE | ADD='+' | MULT='*' | AND='AND'| OR='OR' |HOST='hostCombineOperator';
enum ValueType: PURE | BOOL='boolean' | UNSIGNED='unsigned' | INTEGER='integer' | FLOAT='float' | HOST='hostType';	
enum TransitionType : WEAKABORT='-->' |  STRONGABORT='o->' | NORMALTERMINATION='>->' ;
