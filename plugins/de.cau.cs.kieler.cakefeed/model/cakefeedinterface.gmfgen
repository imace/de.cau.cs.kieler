<?xml version="1.0" encoding="UTF-8"?>
<gmfgen:GenEditorGenerator xmi:version="2.0"
    xmlns:xmi="http://www.omg.org/XMI"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:gmfgen="http://www.eclipse.org/gmf/2009/GenModel" packageNamePrefix="cakefeed.diagram"
    diagramFileExtension="fbi"
    domainFileExtension="fb">
  <diagram
      visualID="1000"
      editPartClassName="InterfaceEditPart"
      itemSemanticEditPolicyClassName="InterfaceItemSemanticEditPolicy"
      canonicalEditPolicyClassName="InterfaceCanonicalEditPolicy"
      iconProviderPriority="Low"
      validationProviderPriority="Low">
    <diagramRunTimeClass
        href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Diagram"/>
    <elementType
        xsi:type="gmfgen:MetamodelType"
        editHelperClassName="InterfaceEditHelper"/>
    <viewmap
        xsi:type="gmfgen:FigureViewmap"
        figureQualifiedClassName="org.eclipse.draw2d.FreeformLayer"/>
    <domainDiagramElement
        href="cakefeed.genmodel#//cakefeed/Interface"/>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3001"
        editPartClassName="InputEventPortEditPart"
        itemSemanticEditPolicyClassName="InputEventPortItemSemanticEditPolicy"
        canonicalEditPolicyClassName="InputEventPortCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="InputEventPortGraphicalNodeEditPolicy"
        createCommandClassName="InputEventPortCreateCommand"
        containers="//@diagram/@topLevelNodes.0"
        preferredSideName="WEST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="InputEventPortEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="InputEventPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class InputEventPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fIEPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public InputEventPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fIEPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fIEPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fIEPortNameLabel);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure redRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;redRectangle0.setLineWidth(1);&#xA;&#x9;redRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#x9;redRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;redRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(redRectangle0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getIEPortNameLabel() {&#xA;&#x9;&#x9;return fIEPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/InputEventPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputEventPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputEventPorts"/>
      </modelFacet>
      <labels
          visualID="5001"
          editPartClassName="InputEventPortPortNameEditPart"
          itemSemanticEditPolicyClassName="InputEventPortPortNameItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getIEPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3002"
        editPartClassName="InputDataPortEditPart"
        itemSemanticEditPolicyClassName="InputDataPortItemSemanticEditPolicy"
        canonicalEditPolicyClassName="InputDataPortCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="InputDataPortGraphicalNodeEditPolicy"
        createCommandClassName="InputDataPortCreateCommand"
        containers="//@diagram/@topLevelNodes.0"
        preferredSideName="WEST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="InputDataPortEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="InputDataPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class InputDataPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fIDPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public InputDataPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fIDPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fIDPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fIDPortNameLabel);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blueRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blueRectangle0.setLineWidth(1);&#xA;&#x9;blueRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;&#x9;blueRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;blueRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(blueRectangle0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getIDPortNameLabel() {&#xA;&#x9;&#x9;return fIDPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/InputDataPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputDataPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputDataPorts"/>
      </modelFacet>
      <labels
          visualID="5002"
          editPartClassName="InputDataPortPortNameEditPart"
          itemSemanticEditPolicyClassName="InputDataPortPortNameItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getIDPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3003"
        editPartClassName="OutputEventPortEditPart"
        itemSemanticEditPolicyClassName="OutputEventPortItemSemanticEditPolicy"
        canonicalEditPolicyClassName="OutputEventPortCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="OutputEventPortGraphicalNodeEditPolicy"
        createCommandClassName="OutputEventPortCreateCommand"
        containers="//@diagram/@topLevelNodes.0"
        preferredSideName="EAST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="OutputEventPortEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="OutputEventPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class OutputEventPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fOEPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public OutputEventPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure redRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;redRectangle0.setLineWidth(1);&#xA;&#x9;redRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#x9;redRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;redRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(redRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;fOEPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fOEPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fOEPortNameLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getOEPortNameLabel() {&#xA;&#x9;&#x9;return fOEPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/OutputEventPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputEventPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputEventPorts"/>
      </modelFacet>
      <labels
          visualID="5003"
          editPartClassName="OutputEventPortPortNameEditPart"
          itemSemanticEditPolicyClassName="OutputEventPortPortNameItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getOEPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3004"
        editPartClassName="OutputDataPortEditPart"
        itemSemanticEditPolicyClassName="OutputDataPortItemSemanticEditPolicy"
        canonicalEditPolicyClassName="OutputDataPortCanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="OutputDataPortGraphicalNodeEditPolicy"
        createCommandClassName="OutputDataPortCreateCommand"
        containers="//@diagram/@topLevelNodes.0"
        preferredSideName="EAST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="OutputDataPortEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="OutputDataPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class OutputDataPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fODPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public OutputDataPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blueRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blueRectangle0.setLineWidth(1);&#xA;&#x9;blueRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;&#x9;blueRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;blueRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(blueRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;fODPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fODPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fODPortNameLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getODPortNameLabel() {&#xA;&#x9;&#x9;return fODPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/OutputDataPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputDataPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputDataPorts"/>
      </modelFacet>
      <labels
          visualID="5004"
          editPartClassName="OutputDataPortPortNameEditPart"
          itemSemanticEditPolicyClassName="OutputDataPortPortNameItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getODPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3005"
        editPartClassName="InputEventPort2EditPart"
        itemSemanticEditPolicyClassName="InputEventPort2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="InputEventPort2CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="InputEventPort2GraphicalNodeEditPolicy"
        createCommandClassName="InputEventPort2CreateCommand"
        containers="//@diagram/@topLevelNodes.1"
        preferredSideName="WEST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="InputEventPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class InputEventPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fIEPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public InputEventPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fIEPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fIEPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fIEPortNameLabel);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure redRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;redRectangle0.setLineWidth(1);&#xA;&#x9;redRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#x9;redRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;redRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(redRectangle0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getIEPortNameLabel() {&#xA;&#x9;&#x9;return fIEPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/InputEventPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputEventPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputEventPorts"/>
      </modelFacet>
      <labels
          visualID="5006"
          editPartClassName="InputEventPortPortName2EditPart"
          itemSemanticEditPolicyClassName="InputEventPortPortName2ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getIEPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3006"
        editPartClassName="InputDataPort2EditPart"
        itemSemanticEditPolicyClassName="InputDataPort2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="InputDataPort2CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="InputDataPort2GraphicalNodeEditPolicy"
        createCommandClassName="InputDataPort2CreateCommand"
        containers="//@diagram/@topLevelNodes.1"
        preferredSideName="WEST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="InputDataPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class InputDataPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fIDPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public InputDataPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fIDPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fIDPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fIDPortNameLabel);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blueRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blueRectangle0.setLineWidth(1);&#xA;&#x9;blueRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;&#x9;blueRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;blueRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(blueRectangle0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getIDPortNameLabel() {&#xA;&#x9;&#x9;return fIDPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/InputDataPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputDataPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputDataPorts"/>
      </modelFacet>
      <labels
          visualID="5007"
          editPartClassName="InputDataPortPortName2EditPart"
          itemSemanticEditPolicyClassName="InputDataPortPortName2ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getIDPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3007"
        editPartClassName="OutputEventPort2EditPart"
        itemSemanticEditPolicyClassName="OutputEventPort2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="OutputEventPort2CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="OutputEventPort2GraphicalNodeEditPolicy"
        createCommandClassName="OutputEventPort2CreateCommand"
        containers="//@diagram/@topLevelNodes.1"
        preferredSideName="EAST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.2/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="OutputEventPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class OutputEventPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fOEPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public OutputEventPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure redRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;redRectangle0.setLineWidth(1);&#xA;&#x9;redRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#x9;redRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;redRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(redRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;fOEPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fOEPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fOEPortNameLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getOEPortNameLabel() {&#xA;&#x9;&#x9;return fOEPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/OutputEventPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputEventPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputEventPorts"/>
      </modelFacet>
      <labels
          visualID="5008"
          editPartClassName="OutputEventPortPortName2EditPart"
          itemSemanticEditPolicyClassName="OutputEventPortPortName2ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getOEPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3008"
        editPartClassName="OutputDataPort2EditPart"
        itemSemanticEditPolicyClassName="OutputDataPort2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="OutputDataPort2CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="OutputDataPort2GraphicalNodeEditPolicy"
        createCommandClassName="OutputDataPort2CreateCommand"
        containers="//@diagram/@topLevelNodes.1"
        preferredSideName="EAST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.3/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="OutputDataPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class OutputDataPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fODPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public OutputDataPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blueRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blueRectangle0.setLineWidth(1);&#xA;&#x9;blueRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;&#x9;blueRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;blueRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(blueRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;fODPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fODPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fODPortNameLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getODPortNameLabel() {&#xA;&#x9;&#x9;return fODPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/OutputDataPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputDataPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputDataPorts"/>
      </modelFacet>
      <labels
          visualID="5009"
          editPartClassName="OutputDataPortPortName2EditPart"
          itemSemanticEditPolicyClassName="OutputDataPortPortName2ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getODPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3009"
        editPartClassName="InputEventPort3EditPart"
        itemSemanticEditPolicyClassName="InputEventPort3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="InputEventPort3CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="InputEventPort3GraphicalNodeEditPolicy"
        createCommandClassName="InputEventPort3CreateCommand"
        containers="//@diagram/@topLevelNodes.2"
        preferredSideName="WEST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.0/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="InputEventPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class InputEventPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fIEPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public InputEventPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fIEPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fIEPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fIEPortNameLabel);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure redRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;redRectangle0.setLineWidth(1);&#xA;&#x9;redRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#x9;redRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;redRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(redRectangle0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getIEPortNameLabel() {&#xA;&#x9;&#x9;return fIEPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/InputEventPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputEventPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputEventPorts"/>
      </modelFacet>
      <labels
          visualID="5011"
          editPartClassName="InputEventPortPortName3EditPart"
          itemSemanticEditPolicyClassName="InputEventPortPortName3ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getIEPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3010"
        editPartClassName="InputDataPort3EditPart"
        itemSemanticEditPolicyClassName="InputDataPort3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="InputDataPort3CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="InputDataPort3GraphicalNodeEditPolicy"
        createCommandClassName="InputDataPort3CreateCommand"
        containers="//@diagram/@topLevelNodes.2"
        preferredSideName="WEST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="InputDataPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class InputDataPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fIDPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public InputDataPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;fIDPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fIDPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fIDPortNameLabel);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blueRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blueRectangle0.setLineWidth(1);&#xA;&#x9;blueRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;&#x9;blueRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;blueRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(blueRectangle0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getIDPortNameLabel() {&#xA;&#x9;&#x9;return fIDPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/InputDataPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputDataPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/inputDataPorts"/>
      </modelFacet>
      <labels
          visualID="5012"
          editPartClassName="InputDataPortPortName3EditPart"
          itemSemanticEditPolicyClassName="InputDataPortPortName3ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getIDPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3011"
        editPartClassName="OutputEventPort3EditPart"
        itemSemanticEditPolicyClassName="OutputEventPort3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="OutputEventPort3CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="OutputEventPort3GraphicalNodeEditPolicy"
        createCommandClassName="OutputEventPort3CreateCommand"
        containers="//@diagram/@topLevelNodes.2"
        preferredSideName="EAST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.2/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="OutputEventPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class OutputEventPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fOEPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public OutputEventPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure redRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;redRectangle0.setLineWidth(1);&#xA;&#x9;redRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#x9;redRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;redRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;redRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(redRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;fOEPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fOEPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fOEPortNameLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getOEPortNameLabel() {&#xA;&#x9;&#x9;return fOEPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/OutputEventPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputEventPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputEventPorts"/>
      </modelFacet>
      <labels
          visualID="5013"
          editPartClassName="OutputEventPortPortName3EditPart"
          itemSemanticEditPolicyClassName="OutputEventPortPortName3ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getOEPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <childNodes
        xsi:type="gmfgen:GenChildSideAffixedNode"
        visualID="3012"
        editPartClassName="OutputDataPort3EditPart"
        itemSemanticEditPolicyClassName="OutputDataPort3ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="OutputDataPort3CanonicalEditPolicy"
        graphicalNodeEditPolicyClassName="OutputDataPort3GraphicalNodeEditPolicy"
        createCommandClassName="OutputDataPort3CreateCommand"
        containers="//@diagram/@topLevelNodes.2"
        preferredSideName="EAST">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@childNodes.3/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          layoutType="TOOLBAR_LAYOUT"
          className="OutputDataPortFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class OutputDataPortFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fODPortNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public OutputDataPortFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.ToolbarLayout layoutThis = new org.eclipse.draw2d.ToolbarLayout();&#xA;&#x9;layoutThis.setStretchMinorAxis(false);&#xA;&#x9;layoutThis.setMinorAlignment(org.eclipse.draw2d.ToolbarLayout.ALIGN_CENTER&#xA;);&#xA;&#xA;&#x9;layoutThis.setSpacing(0);&#xA;&#x9;layoutThis.setVertical(false);&#xA;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setFill(false);&#xA;this.setOutline(false);&#xA;this.setLineWidth(1);&#xA;this.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(15)&#xA;));&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blueRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blueRectangle0.setLineWidth(1);&#xA;&#x9;blueRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;&#x9;blueRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;blueRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;blueRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(5)&#xA;, getMapMode().DPtoLP(5)&#xA;));&#xA;&#xA;this.add(blueRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure blackRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;blackRectangle0.setLineWidth(1);&#xA;&#x9;blackRectangle0.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;blackRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;blackRectangle0.setPreferredSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMaximumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;blackRectangle0.setMinimumSize(new org.eclipse.draw2d.geometry.Dimension(getMapMode().DPtoLP(50)&#xA;, getMapMode().DPtoLP(1)&#xA;));&#xA;&#xA;this.add(blackRectangle0);&#xA;&#xA;&#xA;&#xA;fODPortNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fODPortNameLabel.setText(&quot;&quot;);&#xA;&#xA;this.add(fODPortNameLabel);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getODPortNameLabel() {&#xA;&#x9;&#x9;return fODPortNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;"/>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/OutputDataPort"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputDataPorts"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/FunctionBlock/outputDataPorts"/>
      </modelFacet>
      <labels
          visualID="5014"
          editPartClassName="OutputDataPortPortName3EditPart"
          itemSemanticEditPolicyClassName="OutputDataPortPortName3ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getODPortNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/Port/portName"/>
        </modelFacet>
      </labels>
    </childNodes>
    <topLevelNodes
        visualID="2001"
        editPartClassName="BasicFunctionBlockEditPart"
        itemSemanticEditPolicyClassName="BasicFunctionBlockItemSemanticEditPolicy"
        canonicalEditPolicyClassName="BasicFunctionBlockCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.0 //@diagram/@childNodes.1 //@diagram/@childNodes.2 //@diagram/@childNodes.3"
        graphicalNodeEditPolicyClassName="BasicFunctionBlockGraphicalNodeEditPolicy"
        createCommandClassName="BasicFunctionBlockCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="BasicFunctionBlockEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="FunctionBlockFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class FunctionBlockFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFunctionBlockTypeNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public FunctionBlockFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGray);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure functionBlockControlRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;functionBlockControlRectangle0.setLineWidth(1);&#xA;&#x9;functionBlockControlRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#xA;this.add(functionBlockControlRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure functionBlockTypeRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;functionBlockTypeRectangle0.setFill(false);&#xA;functionBlockTypeRectangle0.setOutline(false);&#xA;functionBlockTypeRectangle0.setLineWidth(1);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFunctionBlockTypeRectangle0 = new org.eclipse.draw2d.GridData();&#xA;constraintFunctionBlockTypeRectangle0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFunctionBlockTypeRectangle0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFunctionBlockTypeRectangle0.horizontalIndent = 0;&#xA;constraintFunctionBlockTypeRectangle0.horizontalSpan = 1;&#xA;constraintFunctionBlockTypeRectangle0.verticalSpan = 1;&#xA;constraintFunctionBlockTypeRectangle0.grabExcessHorizontalSpace = false;&#xA;constraintFunctionBlockTypeRectangle0.grabExcessVerticalSpace = false;&#xA;this.add(functionBlockTypeRectangle0, constraintFunctionBlockTypeRectangle0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutFunctionBlockTypeRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutFunctionBlockTypeRectangle0.numColumns = 1;&#xA;&#x9;layoutFunctionBlockTypeRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;functionBlockTypeRectangle0.setLayoutManager(layoutFunctionBlockTypeRectangle0);&#xA;&#xA;&#xA;&#xA;fFunctionBlockTypeNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFunctionBlockTypeNameLabel.setText(&quot;&quot;);&#xA;&#xA;functionBlockTypeRectangle0.add(fFunctionBlockTypeNameLabel);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure functionBlockDataRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;functionBlockDataRectangle0.setLineWidth(1);&#xA;&#x9;functionBlockDataRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;&#xA;this.add(functionBlockDataRectangle0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFunctionBlockTypeNameLabel() {&#xA;&#x9;&#x9;return fFunctionBlockTypeNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/BasicFunctionBlock"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/Interface/functionBlock"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/Interface/functionBlock"/>
      </modelFacet>
      <labels
          visualID="5005"
          editPartClassName="BasicFunctionBlockTypeNameEditPart"
          itemSemanticEditPolicyClassName="BasicFunctionBlockTypeNameItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFunctionBlockTypeNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/FunctionBlock/typeName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/FunctionBlock/typeName"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2002"
        editPartClassName="CompositeFunctionBlockEditPart"
        itemSemanticEditPolicyClassName="CompositeFunctionBlockItemSemanticEditPolicy"
        canonicalEditPolicyClassName="CompositeFunctionBlockCanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.4 //@diagram/@childNodes.5 //@diagram/@childNodes.6 //@diagram/@childNodes.7"
        graphicalNodeEditPolicyClassName="CompositeFunctionBlockGraphicalNodeEditPolicy"
        createCommandClassName="CompositeFunctionBlockCreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="CompositeFunctionBlockEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="FunctionBlockFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class FunctionBlockFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFunctionBlockTypeNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public FunctionBlockFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGray);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure functionBlockControlRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;functionBlockControlRectangle0.setLineWidth(1);&#xA;&#x9;functionBlockControlRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#xA;this.add(functionBlockControlRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure functionBlockTypeRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;functionBlockTypeRectangle0.setFill(false);&#xA;functionBlockTypeRectangle0.setOutline(false);&#xA;functionBlockTypeRectangle0.setLineWidth(1);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFunctionBlockTypeRectangle0 = new org.eclipse.draw2d.GridData();&#xA;constraintFunctionBlockTypeRectangle0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFunctionBlockTypeRectangle0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFunctionBlockTypeRectangle0.horizontalIndent = 0;&#xA;constraintFunctionBlockTypeRectangle0.horizontalSpan = 1;&#xA;constraintFunctionBlockTypeRectangle0.verticalSpan = 1;&#xA;constraintFunctionBlockTypeRectangle0.grabExcessHorizontalSpace = false;&#xA;constraintFunctionBlockTypeRectangle0.grabExcessVerticalSpace = false;&#xA;this.add(functionBlockTypeRectangle0, constraintFunctionBlockTypeRectangle0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutFunctionBlockTypeRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutFunctionBlockTypeRectangle0.numColumns = 1;&#xA;&#x9;layoutFunctionBlockTypeRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;functionBlockTypeRectangle0.setLayoutManager(layoutFunctionBlockTypeRectangle0);&#xA;&#xA;&#xA;&#xA;fFunctionBlockTypeNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFunctionBlockTypeNameLabel.setText(&quot;&quot;);&#xA;&#xA;functionBlockTypeRectangle0.add(fFunctionBlockTypeNameLabel);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure functionBlockDataRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;functionBlockDataRectangle0.setLineWidth(1);&#xA;&#x9;functionBlockDataRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;&#xA;this.add(functionBlockDataRectangle0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFunctionBlockTypeNameLabel() {&#xA;&#x9;&#x9;return fFunctionBlockTypeNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/CompositeFunctionBlock"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/Interface/functionBlock"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/Interface/functionBlock"/>
      </modelFacet>
      <labels
          visualID="5010"
          editPartClassName="CompositeFunctionBlockTypeNameEditPart"
          itemSemanticEditPolicyClassName="CompositeFunctionBlockTypeNameItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFunctionBlockTypeNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/FunctionBlock/typeName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/FunctionBlock/typeName"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <topLevelNodes
        visualID="2003"
        editPartClassName="CompositeFunctionBlock2EditPart"
        itemSemanticEditPolicyClassName="CompositeFunctionBlock2ItemSemanticEditPolicy"
        canonicalEditPolicyClassName="CompositeFunctionBlock2CanonicalEditPolicy"
        childNodes="//@diagram/@childNodes.8 //@diagram/@childNodes.9 //@diagram/@childNodes.10 //@diagram/@childNodes.11"
        graphicalNodeEditPolicyClassName="CompositeFunctionBlock2GraphicalNodeEditPolicy"
        createCommandClassName="CompositeFunctionBlock2CreateCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
      <elementType
          xsi:type="gmfgen:SpecializationType"
          metamodelType="//@diagram/@topLevelNodes.1/@elementType"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="FunctionBlockFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class FunctionBlockFigureDescriptor extends org.eclipse.draw2d.RectangleFigure {&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel fFunctionBlockTypeNameLabel; &#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public FunctionBlockFigureDescriptor() {&#xA;&#x9;&#x9;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutThis = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutThis.numColumns = 1;&#xA;&#x9;layoutThis.makeColumnsEqualWidth = true;&#xA;&#x9;this.setLayoutManager(layoutThis);&#xA;&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#x9;this.setBackgroundColor(org.eclipse.draw2d.ColorConstants.lightGray);&#xA;&#x9;&#x9;createContents();&#xA;&#x9;}&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private void createContents(){&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure functionBlockControlRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;functionBlockControlRectangle0.setLineWidth(1);&#xA;&#x9;functionBlockControlRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.red);&#xA;&#xA;this.add(functionBlockControlRectangle0);&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure functionBlockTypeRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;functionBlockTypeRectangle0.setFill(false);&#xA;functionBlockTypeRectangle0.setOutline(false);&#xA;functionBlockTypeRectangle0.setLineWidth(1);&#xA;&#xA;&#xA;org.eclipse.draw2d.GridData constraintFunctionBlockTypeRectangle0 = new org.eclipse.draw2d.GridData();&#xA;constraintFunctionBlockTypeRectangle0.verticalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFunctionBlockTypeRectangle0.horizontalAlignment = org.eclipse.draw2d.GridData.CENTER;&#xA;constraintFunctionBlockTypeRectangle0.horizontalIndent = 0;&#xA;constraintFunctionBlockTypeRectangle0.horizontalSpan = 1;&#xA;constraintFunctionBlockTypeRectangle0.verticalSpan = 1;&#xA;constraintFunctionBlockTypeRectangle0.grabExcessHorizontalSpace = false;&#xA;constraintFunctionBlockTypeRectangle0.grabExcessVerticalSpace = false;&#xA;this.add(functionBlockTypeRectangle0, constraintFunctionBlockTypeRectangle0);&#xA;&#xA;&#xA;&#x9;org.eclipse.draw2d.GridLayout layoutFunctionBlockTypeRectangle0 = new org.eclipse.draw2d.GridLayout();&#xA;&#x9;layoutFunctionBlockTypeRectangle0.numColumns = 1;&#xA;&#x9;layoutFunctionBlockTypeRectangle0.makeColumnsEqualWidth = true;&#xA;&#x9;functionBlockTypeRectangle0.setLayoutManager(layoutFunctionBlockTypeRectangle0);&#xA;&#xA;&#xA;&#xA;fFunctionBlockTypeNameLabel = new org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel();&#xA;fFunctionBlockTypeNameLabel.setText(&quot;&quot;);&#xA;&#xA;functionBlockTypeRectangle0.add(fFunctionBlockTypeNameLabel);&#xA;&#xA;&#xA;&#xA;&#xA;org.eclipse.draw2d.RectangleFigure functionBlockDataRectangle0 = new org.eclipse.draw2d.RectangleFigure();&#xA;functionBlockDataRectangle0.setLineWidth(1);&#xA;&#x9;functionBlockDataRectangle0.setBackgroundColor(org.eclipse.draw2d.ColorConstants.blue);&#xA;&#xA;this.add(functionBlockDataRectangle0);&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private boolean myUseLocalCoordinates = false;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected boolean useLocalCoordinates() {&#xA;&#x9;&#x9;return myUseLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;protected void setUseLocalCoordinates(boolean useLocalCoordinates) {&#xA;&#x9;&#x9;myUseLocalCoordinates = useLocalCoordinates;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel getFunctionBlockTypeNameLabel() {&#xA;&#x9;&#x9;return fFunctionBlockTypeNameLabel;&#xA;&#x9;}&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"
            fixedBackground="true"/>
      </viewmap>
      <modelFacet>
        <metaClass
            href="cakefeed.genmodel#//cakefeed/CompositeFunctionBlock"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/Interface/functionBlock"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/Interface/functionBlock"/>
      </modelFacet>
      <labels
          visualID="5015"
          editPartClassName="CompositeFunctionBlockTypeName2EditPart"
          itemSemanticEditPolicyClassName="CompositeFunctionBlockTypeName2ItemSemanticEditPolicy"
          elementIcon="true">
        <diagramRunTimeClass
            href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Node"/>
        <viewmap
            xsi:type="gmfgen:ParentAssignedViewmap"
            getterName="getFunctionBlockTypeNameLabel"
            figureQualifiedClassName="org.eclipse.gmf.runtime.draw2d.ui.figures.WrappingLabel"/>
        <modelFacet
            xsi:type="gmfgen:FeatureLabelModelFacet"
            parser="//@labelParsers/@implementations.0">
          <metaFeatures
              href="cakefeed.genmodel#//cakefeed/FunctionBlock/typeName"/>
          <editableMetaFeatures
              href="cakefeed.genmodel#//cakefeed/FunctionBlock/typeName"/>
        </modelFacet>
      </labels>
    </topLevelNodes>
    <links
        visualID="4001"
        editPartClassName="InputAssociationEditPart"
        itemSemanticEditPolicyClassName="InputAssociationItemSemanticEditPolicy"
        createCommandClassName="InputAssociationCreateCommand"
        reorientCommandClassName="InputAssociationReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="InputAssociationEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="AssociationFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AssociationFigureDescriptor extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AssociationFigureDescriptor() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="cakefeed.genmodel#//cakefeed/InputAssociation"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/InputEventPort/inputAssociations"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/InputEventPort/inputAssociations"/>
        <sourceMetaFeature
            href="cakefeed.genmodel#//cakefeed/InputAssociation/sourceInputEventPort"/>
        <targetMetaFeature
            href="cakefeed.genmodel#//cakefeed/InputAssociation/targetInputDataPort"/>
      </modelFacet>
    </links>
    <links
        visualID="4002"
        editPartClassName="OutputAssociationEditPart"
        itemSemanticEditPolicyClassName="OutputAssociationItemSemanticEditPolicy"
        createCommandClassName="OutputAssociationCreateCommand"
        reorientCommandClassName="OutputAssociationReorientCommand">
      <diagramRunTimeClass
          href="../../../plugin/org.eclipse.gmf.runtime.notation/model/notation.genmodel#//notation/Edge"/>
      <elementType
          xsi:type="gmfgen:MetamodelType"
          editHelperClassName="OutputAssociationEditHelper"/>
      <viewmap
          xsi:type="gmfgen:InnerClassViewmap"
          className="AssociationFigureDescriptor"
          classBody="&#xA;/**&#xA; * @generated&#xA; */&#xA;public class AssociationFigureDescriptor extends org.eclipse.gmf.runtime.draw2d.ui.figures.PolylineConnectionEx {&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;public AssociationFigureDescriptor() {&#xA;&#x9;&#x9;this.setLineWidth(1);&#xA;&#x9;this.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;&#xA;&#x9;&#x9;setSourceDecoration(createSourceDecoration());&#xA;&#x9;&#x9;setTargetDecoration(createTargetDecoration());&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createSourceDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#x9;/**&#xA;&#x9; * @generated&#xA;&#x9; */&#xA;&#x9;private org.eclipse.draw2d.RotatableDecoration createTargetDecoration() {&#xA;&#x9;&#x9;org.eclipse.draw2d.PolygonDecoration df = new org.eclipse.draw2d.PolygonDecoration();&#xA;df.setLineWidth(1);&#xA;&#x9;df.setForegroundColor(org.eclipse.draw2d.ColorConstants.black);&#xA;org.eclipse.draw2d.geometry.PointList pl = new org.eclipse.draw2d.geometry.PointList();&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(1)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;pl.addPoint(getMapMode().DPtoLP(-1)&#xA;, getMapMode().DPtoLP(-1)&#xA;);&#xA;df.setTemplate(pl);&#xA;df.setScale(getMapMode().DPtoLP(7)&#xA;, getMapMode().DPtoLP(3)&#xA;);&#xA;&#x9;&#x9;return df;&#xA;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;">
        <attributes
            xsi:type="gmfgen:StyleAttributes"
            fixedForeground="true"/>
      </viewmap>
      <modelFacet
          xsi:type="gmfgen:TypeLinkModelFacet">
        <metaClass
            href="cakefeed.genmodel#//cakefeed/OutputAssociation"/>
        <containmentMetaFeature
            href="cakefeed.genmodel#//cakefeed/OutputEventPort/outputAssociations"/>
        <childMetaFeature
            href="cakefeed.genmodel#//cakefeed/OutputEventPort/outputAssociations"/>
        <sourceMetaFeature
            href="cakefeed.genmodel#//cakefeed/OutputAssociation/sourceOutputEventPort"/>
        <targetMetaFeature
            href="cakefeed.genmodel#//cakefeed/OutputAssociation/targetOutputDataPort"/>
      </modelFacet>
    </links>
    <palette>
      <groups
          title="ToolGroup">
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="BasicFunctionBlockCreationTool"
            description="Create a new Basic Function Block"
            genNodes="//@diagram/@topLevelNodes.0"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="CompositeFunctionBlockCreationTool"
            description="Create a new Composite Function Block"
            genNodes="//@diagram/@topLevelNodes.1"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="ServiceInterfaceFunctionBlockCreationTool"
            description="Create a new Service Interface Function Block"
            genNodes="//@diagram/@topLevelNodes.2"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="PortCreationTool"
            description="Create a new Port"
            genNodes="//@diagram/@childNodes.0 //@diagram/@childNodes.1 //@diagram/@childNodes.2 //@diagram/@childNodes.3 //@diagram/@childNodes.4 //@diagram/@childNodes.5 //@diagram/@childNodes.6 //@diagram/@childNodes.7 //@diagram/@childNodes.8 //@diagram/@childNodes.9 //@diagram/@childNodes.10 //@diagram/@childNodes.11"/>
        <entries
            xsi:type="gmfgen:ToolEntry"
            title="AssociationCreationTool"
            description="Create a new Association"
            genLinks="//@diagram/@links.0 //@diagram/@links.1"/>
      </groups>
    </palette>
    <preferencePages
        xsi:type="gmfgen:GenStandardPreferencePage"
        iD="de.cau.cs.kieler.cakefeed.diagram.general"
        name="Cakefeed Diagram">
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="de.cau.cs.kieler.cakefeed.diagram.appearance"
          name="Appearance"
          kind="Appearance"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="de.cau.cs.kieler.cakefeed.diagram.connections"
          name="Connections"
          kind="Connections"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="de.cau.cs.kieler.cakefeed.diagram.printing"
          name="Printing"
          kind="Printing"/>
      <children
          xsi:type="gmfgen:GenStandardPreferencePage"
          iD="de.cau.cs.kieler.cakefeed.diagram.rulersAndGrid"
          name="Rulers And Grid"
          kind="RulersAndGrid"/>
    </preferencePages>
  </diagram>
  <plugin
      iD="de.cau.cs.kieler.cakefeed.interface.diagram">
    <requiredPlugins>org.eclipse.draw2d</requiredPlugins>
    <requiredPlugins>org.eclipse.gmf.runtime.draw2d.ui</requiredPlugins>
  </plugin>
  <editor/>
  <navigator>
    <childReferences
        child="//@diagram"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.0"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.1"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.2"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.0"
        child="//@diagram/@childNodes.3"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.0"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@childNodes.4"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@childNodes.5"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@childNodes.6"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.1"
        child="//@diagram/@childNodes.7"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.1"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.2"
        child="//@diagram/@childNodes.8"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.2"
        child="//@diagram/@childNodes.9"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.2"
        child="//@diagram/@childNodes.10"/>
    <childReferences
        parent="//@diagram/@topLevelNodes.2"
        child="//@diagram/@childNodes.11"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@topLevelNodes.2"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.0"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.1"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.1"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.5"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.5"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.9"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.9"
        child="//@diagram/@links.0"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.0"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.0"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.4"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.4"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.0"
        child="//@diagram/@childNodes.8"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.8"
        child="//@diagram/@links.0"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram"
        child="//@diagram/@links.1"
        groupName="links"
        groupIcon="icons/linksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.3"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.3"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.7"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.7"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.11"
        referenceType="out_target"
        groupName="target"
        groupIcon="icons/linkTargetNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.11"
        child="//@diagram/@links.1"
        referenceType="in_source"
        groupName="incoming links"
        groupIcon="icons/incomingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.2"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.2"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.6"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.6"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@links.1"
        child="//@diagram/@childNodes.10"
        referenceType="in_source"
        groupName="source"
        groupIcon="icons/linkSourceNavigatorGroup.gif"/>
    <childReferences
        parent="//@diagram/@childNodes.10"
        child="//@diagram/@links.1"
        referenceType="out_target"
        groupName="outgoing links"
        groupIcon="icons/outgoingLinksNavigatorGroup.gif"/>
  </navigator>
  <diagramUpdater/>
  <propertySheet>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="appearance"/>
    <tabs
        xsi:type="gmfgen:GenStandardPropertyTab"
        iD="diagram"/>
    <tabs
        xsi:type="gmfgen:GenCustomPropertyTab"
        iD="domain"
        label="Core">
      <filter
          xsi:type="gmfgen:TypeTabFilter">
        <types>org.eclipse.gmf.runtime.notation.View</types>
        <types>org.eclipse.gef.EditPart</types>
        <generatedTypes>abstractNavigatorItem</generatedTypes>
      </filter>
    </tabs>
  </propertySheet>
  <domainGenModel
      href="cakefeed.genmodel#/"/>
  <labelParsers
      extensibleViaService="true">
    <implementations
        xsi:type="gmfgen:PredefinedParser"
        uses="//@diagram/@childNodes.0/@labels.0/@modelFacet //@diagram/@childNodes.1/@labels.0/@modelFacet //@diagram/@childNodes.2/@labels.0/@modelFacet //@diagram/@childNodes.3/@labels.0/@modelFacet //@diagram/@topLevelNodes.0/@labels.0/@modelFacet //@diagram/@childNodes.4/@labels.0/@modelFacet //@diagram/@childNodes.5/@labels.0/@modelFacet //@diagram/@childNodes.6/@labels.0/@modelFacet //@diagram/@childNodes.7/@labels.0/@modelFacet //@diagram/@topLevelNodes.1/@labels.0/@modelFacet //@diagram/@childNodes.8/@labels.0/@modelFacet //@diagram/@childNodes.9/@labels.0/@modelFacet //@diagram/@childNodes.10/@labels.0/@modelFacet //@diagram/@childNodes.11/@labels.0/@modelFacet //@diagram/@topLevelNodes.2/@labels.0/@modelFacet"/>
  </labelParsers>
  <contextMenus
      context="//@diagram">
    <items
        xsi:type="gmfgen:LoadResourceAction"/>
  </contextMenus>
</gmfgen:GenEditorGenerator>
