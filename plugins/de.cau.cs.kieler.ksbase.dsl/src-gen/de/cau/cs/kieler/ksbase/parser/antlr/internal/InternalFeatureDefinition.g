/*
* generated by Xtext
*/
grammar InternalFeatureDefinition;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.cau.cs.kieler.ksbase.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.cau.cs.kieler.ksbase.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import de.cau.cs.kieler.ksbase.services.FeatureDefinitionGrammarAccess;

}

@parser::members {
 
 	private FeatureDefinitionGrammarAccess grammarAccess;
 	
    public InternalFeatureDefinitionParser(TokenStream input, IAstFactory factory, FeatureDefinitionGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("de/cau/cs/kieler/ksbase/parser/antlr/internal/InternalFeatureDefinition.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "FeatureDefinitions";	
   	} 
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleFeatureDefinitions
entryRuleFeatureDefinitions returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getFeatureDefinitionsRule(), currentNode); }
	 iv_ruleFeatureDefinitions=ruleFeatureDefinitions 
	 { $current=$iv_ruleFeatureDefinitions.current; } 
	 EOF 
;

// Rule FeatureDefinitions
ruleFeatureDefinitions returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('ModelPackage = ' 
    {
        createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getModelPackageKeyword_0(), null); 
    }
(	
	
	    lv_modelName_1=	RULE_STRING
	{
		createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getModelNameSTRINGTerminalRuleCall_1_0(), "modelName"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureDefinitionsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "modelName", lv_modelName_1, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getSemicolonKeyword_2(), null); 
    }
('ModelPackagePath = ' 
    {
        createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getModelPackagePathKeyword_3_0(), null); 
    }
(	
	
	    lv_modelPath_4=	RULE_STRING
	{
		createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getModelPathSTRINGTerminalRuleCall_3_1_0(), "modelPath"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureDefinitionsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "modelPath", lv_modelPath_4, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getSemicolonKeyword_3_2(), null); 
    }
)?'FeatureMenuTitle = ' 
    {
        createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getFeatureMenuTitleKeyword_4(), null); 
    }
(	
	
	    lv_featureMenuTitle_7=	RULE_STRING
	{
		createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getFeatureMenuTitleSTRINGTerminalRuleCall_5_0(), "featureMenuTitle"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureDefinitionsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "featureMenuTitle", lv_featureMenuTitle_7, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getSemicolonKeyword_6(), null); 
    }
('TransformationFile = ' 
    {
        createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getTransformationFileKeyword_7_0(), null); 
    }
(	
	
	    lv_featureFile_10=	RULE_STRING
	{
		createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getFeatureFileSTRINGTerminalRuleCall_7_1_0(), "featureFile"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureDefinitionsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "featureFile", lv_featureFile_10, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getFeatureDefinitionsAccess().getSemicolonKeyword_7_2(), null); 
    }
)?(	
	
	    
	    { 
	        currentNode=createCompositeNode(grammarAccess.getFeatureDefinitionsAccess().getElementsFeatureTypeParserRuleCall_8_0(), currentNode); 
	    }
	    lv_elements_12=ruleFeatureType 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureDefinitionsRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        
	        try {
	       		add($current, "elements", lv_elements_12, "FeatureType", currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }
	
)*);





// Entry rule entryRuleFeatureType
entryRuleFeatureType returns [EObject current=null] :
	{ currentNode = createCompositeNode(grammarAccess.getFeatureTypeRule(), currentNode); }
	 iv_ruleFeatureType=ruleFeatureType 
	 { $current=$iv_ruleFeatureType.current; } 
	 EOF 
;

// Rule FeatureType
ruleFeatureType returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
('Feature' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getFeatureKeyword_0(), null); 
    }
(	
	
	    lv_name_1=	RULE_ID
	{
		createLeafNode(grammarAccess.getFeatureTypeAccess().getNameIDTerminalRuleCall_1_0(), "name"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "name", lv_name_1, "ID", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)'{' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
('File = ' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getFileKeyword_3_0(), null); 
    }
(	
	
	    lv_fileName_4=	RULE_STRING
	{
		createLeafNode(grammarAccess.getFeatureTypeAccess().getFileNameSTRINGTerminalRuleCall_3_1_0(), "fileName"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "fileName", lv_fileName_4, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getSemicolonKeyword_3_2(), null); 
    }
)?'MethodName = ' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getMethodNameKeyword_4(), null); 
    }
(	
	
	    lv_methodName_7=	RULE_STRING
	{
		createLeafNode(grammarAccess.getFeatureTypeAccess().getMethodNameSTRINGTerminalRuleCall_5_0(), "methodName"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "methodName", lv_methodName_7, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getSemicolonKeyword_6(), null); 
    }
('NumParameter = ' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getNumParameterKeyword_7_0(), null); 
    }
(	
	
	    lv_numParameter_10=	RULE_INT
	{
		createLeafNode(grammarAccess.getFeatureTypeAccess().getNumParameterINTTerminalRuleCall_7_1_0(), "numParameter"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "numParameter", lv_numParameter_10, "INT", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getSemicolonKeyword_7_2(), null); 
    }
)?('Parameter = ' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getParameterKeyword_8_0(), null); 
    }
(	
	
	    lv_parameter_13=	RULE_STRING
	{
		createLeafNode(grammarAccess.getFeatureTypeAccess().getParameterSTRINGTerminalRuleCall_8_1_0(), "parameter"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		add($current, "parameter", lv_parameter_13, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getSemicolonKeyword_8_2(), null); 
    }
)+'MenuEntry = ' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getMenuEntryKeyword_9(), null); 
    }
(	
	
	    lv_menuEntry_16=	RULE_STRING
	{
		createLeafNode(grammarAccess.getFeatureTypeAccess().getMenuEntrySTRINGTerminalRuleCall_10_0(), "menuEntry"); 
	}
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFeatureTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "menuEntry", lv_menuEntry_16, "STRING", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }
	
)';' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getSemicolonKeyword_11(), null); 
    }
'}' 
    {
        createLeafNode(grammarAccess.getFeatureTypeAccess().getRightCurlyBracketKeyword_12(), null); 
    }
);





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


