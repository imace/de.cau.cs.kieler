



	
load model-checker.maude
load STATES
load EVENTS
load ACTIONS
load TRANS
load SM
load STEPSEM

fmod eclipseInterface is
 including STATEMACHINE .
 including TRANSITIONS .
 including STATES .
*** // Events //
  ops  : -> Event .
  op allEvents : -> Events .

*** // allActions //	
  ops  : -> Action .

***// States //
  ops CC CA CB CE CInnerState2 CInnerState1 CD CG CF : -> ModState .	
    eq CC = root(R "Region") : C "InnerState1" : R "Region" : C "C" .
    eq CA = root(R "Region") : C "InnerState1" : R "Region" : C "A" .
    eq CB = root(R "Region") : C "InnerState1" : R "Region" : C "InnerState2" : R "Region" : C "B" .
    eq CE = root(R "Region") : C "InnerState1" : R "Region" : C "E" .
    eq CInnerState2 = root(R "Region") : C "InnerState1" : R "Region" : C "InnerState2" .
    eq CInnerState1 = root(R "Region") : C "InnerState1" .
    eq CD = root(R "Region") : C "InnerState1" : R "Region" : C "D" .
    eq CG = root(R "Region") : C "G" .
    eq CF = root(R "Region") : C "InnerState1" : R "Region" : C "F" .	
***// Regions //
  ops RRegion RRegion RRegion : -> Region .
    eq RRegion = root(R "Region") : C "InnerState1" : R "Region" : C "InnerState2" : R "Region" .
    eq RRegion = root(R "Region") : C "InnerState1" : R "Region" .
    eq RRegion = root(R "Region") .
***// allVerts //
  op allVerts : -> Verts .
  eq allVerts = RRegion, RRegion, RRegion , CC, CA, CB, CE, CInnerState2, CInnerState1, CD, CG, CF .
	
***// defaults //
  ops defRRegion defRRegion defRRegion : -> Default .
  op allDefs : -> Defaults .
  eq allDefs = defRRegion, defRRegion, defRRegion .
  
***// deep defaults //
  ops dDefRRegion dDefRRegion dDefRRegion : -> DeepDefault .
  op allDHDefs : -> DeepDefaults .
  eq allDHDefs = dDefRRegion, dDefRRegion, dDefRRegion .

***// shallow defaults //
  ops sDefRRegion sDefRRegion sDefRRegion : -> ShallowDefault .
  
  op allSHDefs : -> ShallowDefaults .
  eq allSHDefs = sDefRRegion, sDefRRegion, sDefRRegion .

*** Transitions 
*** ToDo: (Important): Compute sources and targets sets
*** ToDo: Remove initial states transitions (DONE? -> isConsidered) 
  ops J2J_398WIKVqEd-uwMsarPjhnQ  D2F_59nu4KVqEd-uwMsarPjhnQ  B2J_12e6YKVqEd-uwMsarPjhnQ  F2E_6nvC4KVqEd-uwMsarPjhnQ  J2F_5cgl4KVqEd-uwMsarPjhnQ  F2J_8EWx4KVqEd-uwMsarPjhnQ  J2G_9yJJYKVqEd-uwMsarPjhnQ  J2F_8oXd4KVqEd-uwMsarPjhnQ  A2J_1SeOYKVqEd-uwMsarPjhnQ  C2J_4oFfUKVqEd-uwMsarPjhnQ :-> ModTransition .
    {B,A,C,D} nil nil nil {E,G,F}
  
  
  
  
  op allTrans :-> Transitons .
  eq allTrans = J2J_398WIKVqEd-uwMsarPjhnQ  D2F_59nu4KVqEd-uwMsarPjhnQ  B2J_12e6YKVqEd-uwMsarPjhnQ  F2E_6nvC4KVqEd-uwMsarPjhnQ  J2F_5cgl4KVqEd-uwMsarPjhnQ  F2J_8EWx4KVqEd-uwMsarPjhnQ  J2G_9yJJYKVqEd-uwMsarPjhnQ  J2F_8oXd4KVqEd-uwMsarPjhnQ  A2J_1SeOYKVqEd-uwMsarPjhnQ  C2J_4oFfUKVqEd-uwMsarPjhnQ .


***/// A state machine consits of Vertices Defaultsstatesfunction ShallowDefaultstatesfunction DeepDefaultstatesfunction EntryActionsfunction ExitActionsFunction Transitions 
  op SMINT : -> StateMachine .
  ***// ToDo: add entry/exit actions//
  eq SMINT = (SM allVerts allDefs allSHDefs allDHDefs empty empty allTrans) .

  
endfm
****(
#####################################################
Vorschlag Interface fuer Eclipse 
#####################################################
search (maState "UML" ($stableC <Konfiguration> <HistoryKonfiguration> <Events>) =>* mastate such that isDone mastate .

- <Konfiguration>: eine durch "," getrennte Menge von Regionen und States. Diese muss den Anforderungen im Standard entsprechen.
  z.B: Rroot, Csusp (aus Test.maude)
- <HistoryKonfiguration>: kann erstmal empty sein
- <Events>: eine durch "," getrennte Menge von Events die abgearbeitet werden soll

search (maState "UML" ($stableC (Rroot, Csusp) empty res .
)***
	