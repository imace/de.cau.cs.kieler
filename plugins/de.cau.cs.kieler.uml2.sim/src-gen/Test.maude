
load model-checker.maude
load STATES
load EVENTS
load ACTIONS
load TRANS
load SM
load STEPSEM

fmod eclipseInterface is
 including STATEMACHINE .
 including TRANSITIONS .
 including STATES .
*** // Events //
  ops ee1 res ee0 ee0 susp ee1 : -> Event .
  op allEvents : -> Events .

*** // allActions //	
  ops a3  a4 a4  a1 : -> Action .

***// States //
  ops CE CB CN Csusp Cinner Couter CG : -> ModState .	
    eq CE = root(R "root") : C "outer" : R "inOuter" : C "inner" : R "inInner0" : C "E" .
    eq CB = root(R "root") : C "outer" : R "inOuter" : C "B" .
    eq CN = root(R "root") : C "outer" : R "inOuter" : C "inner" : R "inInner1" : C "N" .
    eq Csusp = root(R "root") : C "susp" .
    eq Cinner = root(R "root") : C "outer" : R "inOuter" : C "inner" .
    eq Couter = root(R "root") : C "outer" .
    eq CG = root(R "root") : C "outer" : R "inOuter" : C "inner" : R "inInner0" : C "G" .	
***// Regions //
  ops RinOuter Rroot RinInner0 RinInner1 : -> Region .
    eq RinOuter = root(R "root") : C "outer" : R "inOuter" .
    eq Rroot = root(R "root") .
    eq RinInner0 = root(R "root") : C "outer" : R "inOuter" : C "inner" : R "inInner0" .
    eq RinInner1 = root(R "root") : C "outer" : R "inOuter" : C "inner" : R "inInner1" .
***// allVerts //
  op allVerts : -> Verts .
  eq allVerts = RinOuter, Rroot, RinInner0, RinInner1 , CE, CB, CN, Csusp, Cinner, Couter, CG .
	
***// defaults //
  ops defRinOuter defRroot defRinInner0 defRinInner1 : -> Default .
 eq defRinInner0 = RinInner0 default CE .
 eq defRinInner1 = RinInner1 default CN .
 eq defRinOuter = RinOuter default CB .
 eq defRroot = Rroot default Couter .
  op allDefs : -> Defaults .
  eq allDefs = defRinOuter, defRroot, defRinInner0, defRinInner1 .
  
***// deep defaults //
  ops dDefRinOuter dDefRroot dDefRinInner0 dDefRinInner1 : -> DeepDefault .
 eq dDefRinOuter = RinOuter deepdefault CB .
  op allDHDefs : -> DeepDefaults .
  eq allDHDefs = dDefRinOuter, dDefRroot, dDefRinInner0, dDefRinInner1 .

***// shallow defaults //
  ops sDefRinOuter sDefRroot sDefRinInner0 sDefRinInner1 : -> ShallowDefault .
  
  op allSHDefs : -> ShallowDefaults .
  eq allSHDefs = sDefRinOuter, sDefRroot, sDefRinInner0, sDefRinInner1 .

*** Transitions 
*** ToDo: (Important): Compute sources and targets sets
*** ToDo: Remove initial states transitions 
  ops DH2B_NM-3IIuKEd-yoIYGk1D8vA  I2E_jRuWIIuJEd-yoIYGk1D8vA  G2_Zk1koIuKEd-yoIYGk1D8vA  susp2DH_LbxYMIuKEd-yoIYGk1D8vA  B2F_qDngsIuJEd-yoIYGk1D8vA  F2N_S-ydsIuKEd-yoIYGk1D8vA  G2J_VgYQsIuKEd-yoIYGk1D8vA  J2_XzxPoIuKEd-yoIYGk1D8vA  F2E_ob7KIIuJEd-yoIYGk1D8vA  outer2susp_I39-sIuKEd-yoIYGk1D8vA  I2N_SZjCoIuKEd-yoIYGk1D8vA  N2J_WOFEMIuKEd-yoIYGk1D8vA  E2G_lT5CMIuJEd-yoIYGk1D8vA  I2B_ub69sIuJEd-yoIYGk1D8vA  I2outer_H6AhoIuKEd-yoIYGk1D8vA :-> ModTransition .
eq tr_DH2B_NM-3IIuKEd-yoIYGk1D8vA = DH_KS5roIuKEd-yoIYGk1D8vA null nil skip empty empty empty RinOuter .
eq tr_G2_Zk1koIuKEd-yoIYGk1D8vA = G_gmI5oIuJEd-yoIYGk1D8vA ee1 nil a3 empty empty empty RinInner0 .
eq tr_susp2DH_LbxYMIuKEd-yoIYGk1D8vA = susp_FiQnIIuKEd-yoIYGk1D8vA res nil  empty empty empty Rroot .
eq tr_B2F_qDngsIuJEd-yoIYGk1D8vA = B_aCTZMIuJEd-yoIYGk1D8vA ee0 nil a4 empty empty empty RinOuter .
eq tr_F2N_S-ydsIuKEd-yoIYGk1D8vA = F_XkAKwIuJEd-yoIYGk1D8vA null nil skip empty empty empty RinOuter .
eq tr_G2J_VgYQsIuKEd-yoIYGk1D8vA = G_gmI5oIuJEd-yoIYGk1D8vA null nil skip empty empty empty RinInner0 .
eq tr_J2_XzxPoIuKEd-yoIYGk1D8vA = J_Uhp-oIuKEd-yoIYGk1D8vA ee0 nil a4 empty empty empty RinOuter .
eq tr_F2E_ob7KIIuJEd-yoIYGk1D8vA = F_XkAKwIuJEd-yoIYGk1D8vA null nil skip empty empty empty RinOuter .
eq tr_outer2susp_I39-sIuKEd-yoIYGk1D8vA = outer_PpBRMIuJEd-yoIYGk1D8vA susp nil  empty empty empty Rroot .
eq tr_N2J_WOFEMIuKEd-yoIYGk1D8vA = N_RL-cQIuKEd-yoIYGk1D8vA null nil skip empty empty empty RinInner1 .
eq tr_E2G_lT5CMIuJEd-yoIYGk1D8vA = E_fj2WMIuJEd-yoIYGk1D8vA ee1 nil a1 empty empty empty RinInner0 .  
  op allTrans :-> Transitons .
  eq allTrans = DH2B_NM-3IIuKEd-yoIYGk1D8vA  I2E_jRuWIIuJEd-yoIYGk1D8vA  G2_Zk1koIuKEd-yoIYGk1D8vA  susp2DH_LbxYMIuKEd-yoIYGk1D8vA  B2F_qDngsIuJEd-yoIYGk1D8vA  F2N_S-ydsIuKEd-yoIYGk1D8vA  G2J_VgYQsIuKEd-yoIYGk1D8vA  J2_XzxPoIuKEd-yoIYGk1D8vA  F2E_ob7KIIuJEd-yoIYGk1D8vA  outer2susp_I39-sIuKEd-yoIYGk1D8vA  I2N_SZjCoIuKEd-yoIYGk1D8vA  N2J_WOFEMIuKEd-yoIYGk1D8vA  E2G_lT5CMIuJEd-yoIYGk1D8vA  I2B_ub69sIuJEd-yoIYGk1D8vA  I2outer_H6AhoIuKEd-yoIYGk1D8vA .


***/// A state machine consits of Vertices Defaultsstatesfunction ShallowDefaultstatesfunction DeepDefaultstatesfunction EntryActionsfunction ExitActionsFunction Transitions 
  op SMINT : -> StateMachine .
  ***// ToDo: add entry/exit actions//
  eq SMINT = (SM allVerts allDefs allSHDefs allDHDefs empty empty allTrans) .

  
endfm
***(
mod TSS is
	including SATISFACTION .
	including STEPSEM .
	including eclipseInterface .
	including LTL .
	including MODEL-CHECKER .
	including LTL-SIMPLIFIER .
***(
	op init : -> MState .
	eq init = (maState "UML" ($stableC (prettyVerts cf1) empty) (ee0, ee1, ee2, ee3, ee4)) .
)***	
	var msst mastate : MState .
	vars V V2 : Verts .
	var ac ac2 : Actions .
	var T : Transitions .
	var ES : EventSS .
	var mode : String .
	vars HC : HistoryConfs .
	
	subsort MState < State .
	
	op aCf : Actions -> Prop .
	op inC : Verts -> Prop .
	eq maState mode ($stableC V HC) ES |= inC(V2) = (prettyVerts V2) subset V  .
	eq maState mode ($unstableC V HC T ac) ES |= aCf(ac2) = actionConflict par (ac ac2) .
	eq maState mode ($unstableC V HC T ac) ES |= aCf(nil) = actionConflict ac .
endm
)***
	