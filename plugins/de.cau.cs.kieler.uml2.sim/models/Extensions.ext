import uml;

//extension Extensions reexport;

String trigger2(Transition transition):
  let transitionLabel = transition.name:
  getTrigger(transitionLabel)
;

//Effect effect2(Transition transition):
//  let effect = new Trigger:
//  let transitionName = transition.name:
//  let event = new Event:
//  event.setName(getTrigger(transitionName)) ->
//  effect.
//;


List[String] getTriggerEvents(StateMachine sm):
 ((Set[Transition])sm.eAllContents.select(e|e.metaType == Transition)).trigger2()
;

String getEffect(String transitionLabel):
  JAVA de.cau.cs.kieler.uml2.sim.JavaEscape.getEffect(java.lang.String)
;
String getTrigger(String transitionLabel):
  JAVA de.cau.cs.kieler.uml2.sim.JavaEscape.getTrigger(java.lang.String)
;

//Void test():
//  let transition = new Transition :
//  let transitionList = new List[Transition] : 
//  transition.trigger2() ->
//  transitionList.trigger2() ->
//  trigger2(transition)
//;