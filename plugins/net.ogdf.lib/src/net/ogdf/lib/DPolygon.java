/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.ogdf.lib;

public class DPolygon extends DPolyline {
  private long swigCPtr;

  protected DPolygon(long cPtr, boolean cMemoryOwn) {
    super(OgdfJNI.SWIGDPolygonUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(DPolygon obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgdfJNI.delete_DPolygon(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public DPolygon(boolean cc) {
    this(OgdfJNI.new_DPolygon__SWIG_0(cc), true);
  }

  public DPolygon() {
    this(OgdfJNI.new_DPolygon__SWIG_1(), true);
  }

  public DPolygon(DRect rect, boolean cc) {
    this(OgdfJNI.new_DPolygon__SWIG_2(DRect.getCPtr(rect), rect, cc), true);
  }

  public DPolygon(DRect rect) {
    this(OgdfJNI.new_DPolygon__SWIG_3(DRect.getCPtr(rect), rect), true);
  }

  public DPolygon(DPolygon dop) {
    this(OgdfJNI.new_DPolygon__SWIG_4(DPolygon.getCPtr(dop), dop), true);
  }

  public boolean counterclock() {
    return OgdfJNI.DPolygon_counterclock(swigCPtr, this);
  }

  public DSegment segment(SWIGTYPE_p_ListConstIteratorT_ogdf__DPoint_t it) {
    return new DSegment(OgdfJNI.DPolygon_segment(swigCPtr, this, SWIGTYPE_p_ListConstIteratorT_ogdf__DPoint_t.getCPtr(it)), true);
  }

  public SWIGTYPE_p_ListIteratorT_ogdf__DPoint_t insertPoint(DPoint p) {
    return new SWIGTYPE_p_ListIteratorT_ogdf__DPoint_t(OgdfJNI.DPolygon_insertPoint__SWIG_0(swigCPtr, this, DPoint.getCPtr(p), p), true);
  }

  public SWIGTYPE_p_ListIteratorT_ogdf__DPoint_t insertPoint(DPoint p, SWIGTYPE_p_ListIteratorT_ogdf__DPoint_t p1, SWIGTYPE_p_ListIteratorT_ogdf__DPoint_t p2) {
    return new SWIGTYPE_p_ListIteratorT_ogdf__DPoint_t(OgdfJNI.DPolygon_insertPoint__SWIG_1(swigCPtr, this, DPoint.getCPtr(p), p, SWIGTYPE_p_ListIteratorT_ogdf__DPoint_t.getCPtr(p1), SWIGTYPE_p_ListIteratorT_ogdf__DPoint_t.getCPtr(p2)), true);
  }

  public void insertCrossPoint(DPoint p) {
    OgdfJNI.DPolygon_insertCrossPoint(swigCPtr, this, DPoint.getCPtr(p), p);
  }

  public int getCrossPoints(DPolygon p, SWIGTYPE_p_ListT_ogdf__DPoint_t crossPoints) {
    return OgdfJNI.DPolygon_getCrossPoints(swigCPtr, this, DPolygon.getCPtr(p), p, SWIGTYPE_p_ListT_ogdf__DPoint_t.getCPtr(crossPoints));
  }

  public void unify() {
    OgdfJNI.DPolygon_unify(swigCPtr, this);
  }

  public void normalize() {
    OgdfJNI.DPolygon_normalize(swigCPtr, this);
  }

  public void writeGML(String filename) {
    OgdfJNI.DPolygon_writeGML__SWIG_0(swigCPtr, this, filename);
  }

  public void writeGML(SWIGTYPE_p_ostream stream) {
    OgdfJNI.DPolygon_writeGML__SWIG_1(swigCPtr, this, SWIGTYPE_p_ostream.getCPtr(stream));
  }

}
