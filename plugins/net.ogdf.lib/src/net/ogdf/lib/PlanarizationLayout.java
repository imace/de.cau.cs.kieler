/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.31
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.ogdf.lib;

public class PlanarizationLayout extends UMLLayoutModule {
  private long swigCPtr;

  protected PlanarizationLayout(long cPtr, boolean cMemoryOwn) {
    super(OgdfJNI.SWIGPlanarizationLayoutUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(PlanarizationLayout obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if(swigCPtr != 0 && swigCMemOwn) {
      swigCMemOwn = false;
      OgdfJNI.delete_PlanarizationLayout(swigCPtr);
    }
    swigCPtr = 0;
    super.delete();
  }

  public void setSubgraph(PlanarSubgraphModule psm) {
    psm.setMemOwn(false);
    setSubgraph_(psm);
  }
  public void setPlanarLayouter(LayoutPlanRepModule lprm) {
	lprm.setMemOwn(false);
	setPlanarLayouter_(lprm);
  }

  public PlanarizationLayout() {
    this(OgdfJNI.new_PlanarizationLayout(), true);
  }

  public void call(GraphAttributes arg0) {
    OgdfJNI.PlanarizationLayout_call__SWIG_0(swigCPtr, this, GraphAttributes.getCPtr(arg0), arg0);
  }

  public void call(UMLGraph arg0) {
    OgdfJNI.PlanarizationLayout_call__SWIG_1(swigCPtr, this, UMLGraph.getCPtr(arg0), arg0);
  }

  public double pageRatio() {
    return OgdfJNI.PlanarizationLayout_pageRatio__SWIG_0(swigCPtr, this);
  }

  public void pageRatio(double arg0) {
    OgdfJNI.PlanarizationLayout_pageRatio__SWIG_1(swigCPtr, this, arg0);
  }

  public boolean preprocessCliques() {
    return OgdfJNI.PlanarizationLayout_preprocessCliques__SWIG_0(swigCPtr, this);
  }

  public void preprocessCliques(boolean arg0) {
    OgdfJNI.PlanarizationLayout_preprocessCliques__SWIG_1(swigCPtr, this, arg0);
  }

  public int minCliqueSize() {
    return OgdfJNI.PlanarizationLayout_minCliqueSize__SWIG_0(swigCPtr, this);
  }

  public void minCliqueSize(int arg0) {
    OgdfJNI.PlanarizationLayout_minCliqueSize__SWIG_1(swigCPtr, this, arg0);
  }

  public void setSubgraph_(PlanarSubgraphModule psm) {
    OgdfJNI.PlanarizationLayout_setSubgraph_(swigCPtr, this, PlanarSubgraphModule.getCPtr(psm), psm);
  }

  public void setPlanarLayouter_(LayoutPlanRepModule lprm) {
    OgdfJNI.PlanarizationLayout_setPlanarLayouter_(swigCPtr, this, LayoutPlanRepModule.getCPtr(lprm), lprm);
  }

}
