/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.ogdf.lib;

public class GraphAttributes {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected GraphAttributes(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GraphAttributes obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgdfJNI.delete_GraphAttributes(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static GraphAttributes.EdgeStyle intToStyle(int i) {
    return GraphAttributes.EdgeStyle.swigToEnum(OgdfJNI.GraphAttributes_intToStyle(i));
  }

  public static GraphAttributes.BrushPattern intToPattern(int i) {
    return GraphAttributes.BrushPattern.swigToEnum(OgdfJNI.GraphAttributes_intToPattern(i));
  }

  public GraphAttributes() {
    this(OgdfJNI.new_GraphAttributes__SWIG_0(), true);
  }

  public GraphAttributes(Graph G, int initAttributes) {
    this(OgdfJNI.new_GraphAttributes__SWIG_1(Graph.getCPtr(G), G, initAttributes), true);
  }

  public GraphAttributes(Graph G) {
    this(OgdfJNI.new_GraphAttributes__SWIG_2(Graph.getCPtr(G), G), true);
  }

  public void init(Graph G, int initAttr) {
    OgdfJNI.GraphAttributes_init(swigCPtr, this, Graph.getCPtr(G), G, initAttr);
  }

  public int attributes() {
    return OgdfJNI.GraphAttributes_attributes(swigCPtr, this);
  }

  public void initAttributes(int attr) {
    OgdfJNI.GraphAttributes_initAttributes(swigCPtr, this, attr);
  }

  public void destroyAttributes(int attr) {
    OgdfJNI.GraphAttributes_destroyAttributes(swigCPtr, this, attr);
  }

  public Graph constGraph() {
    return new Graph(OgdfJNI.GraphAttributes_constGraph(swigCPtr, this), false);
  }

  public SWIGTYPE_p_String templateNode(NodeElement v) {
    return new SWIGTYPE_p_String(OgdfJNI.GraphAttributes_templateNode__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v), false);
  }

  public double x(NodeElement v) {
    return OgdfJNI.GraphAttributes_x__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v);
  }

  public double y(NodeElement v) {
    return OgdfJNI.GraphAttributes_y__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v);
  }

  public SWIGTYPE_p_ogdf__NodeArrayT_double_t width() {
    return new SWIGTYPE_p_ogdf__NodeArrayT_double_t(OgdfJNI.GraphAttributes_width__SWIG_0(swigCPtr, this), false);
  }

  public double width(NodeElement v) {
    return OgdfJNI.GraphAttributes_width__SWIG_2(swigCPtr, this, NodeElement.getCPtr(v), v);
  }

  public SWIGTYPE_p_ogdf__NodeArrayT_double_t height() {
    return new SWIGTYPE_p_ogdf__NodeArrayT_double_t(OgdfJNI.GraphAttributes_height__SWIG_0(swigCPtr, this), false);
  }

  public double height(NodeElement v) {
    return OgdfJNI.GraphAttributes_height__SWIG_2(swigCPtr, this, NodeElement.getCPtr(v), v);
  }

  public int level(NodeElement v) {
    return OgdfJNI.GraphAttributes_level__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v);
  }

  public GraphAttributes.BrushPattern nodePattern(NodeElement v) {
    return GraphAttributes.BrushPattern.swigToEnum(OgdfJNI.GraphAttributes_nodePattern__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v));
  }

  public GraphAttributes.EdgeStyle styleNode(NodeElement v) {
    return GraphAttributes.EdgeStyle.swigToEnum(OgdfJNI.GraphAttributes_styleNode__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v));
  }

  public double lineWidthNode(NodeElement v) {
    return OgdfJNI.GraphAttributes_lineWidthNode__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v);
  }

  public SWIGTYPE_p_String nodeLine(NodeElement v) {
    return new SWIGTYPE_p_String(OgdfJNI.GraphAttributes_nodeLine__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v), false);
  }

  public DPolyline bends(EdgeElement e) {
    return new DPolyline(OgdfJNI.GraphAttributes_bends__SWIG_0(swigCPtr, this, EdgeElement.getCPtr(e), e), false);
  }

  public int intWeight(EdgeElement e) {
    return OgdfJNI.GraphAttributes_intWeight__SWIG_0(swigCPtr, this, EdgeElement.getCPtr(e), e);
  }

  public double doubleWeight(EdgeElement e) {
    return OgdfJNI.GraphAttributes_doubleWeight__SWIG_0(swigCPtr, this, EdgeElement.getCPtr(e), e);
  }

  public double edgeWidth(EdgeElement e) {
    return OgdfJNI.GraphAttributes_edgeWidth__SWIG_0(swigCPtr, this, EdgeElement.getCPtr(e), e);
  }

  public SWIGTYPE_p_String colorNode(NodeElement v) {
    return new SWIGTYPE_p_String(OgdfJNI.GraphAttributes_colorNode__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v), false);
  }

  public int shapeNode(NodeElement v) {
    return OgdfJNI.GraphAttributes_shapeNode__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v);
  }

  public SWIGTYPE_p_String labelNode(NodeElement v) {
    return new SWIGTYPE_p_String(OgdfJNI.GraphAttributes_labelNode__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v), false);
  }

  public SWIGTYPE_p_String labelEdge(EdgeElement e) {
    return new SWIGTYPE_p_String(OgdfJNI.GraphAttributes_labelEdge__SWIG_0(swigCPtr, this, EdgeElement.getCPtr(e), e), false);
  }

  public Graph.EdgeType type(EdgeElement e) {
    return Graph.EdgeType.swigToEnum(OgdfJNI.GraphAttributes_type__SWIG_0(swigCPtr, this, EdgeElement.getCPtr(e), e));
  }

  public Graph.NodeType type(NodeElement v) {
    return Graph.NodeType.swigToEnum(OgdfJNI.GraphAttributes_type__SWIG_2(swigCPtr, this, NodeElement.getCPtr(v), v));
  }

  public int idNode(NodeElement v) {
    return OgdfJNI.GraphAttributes_idNode__SWIG_0(swigCPtr, this, NodeElement.getCPtr(v), v);
  }

  public GraphAttributes.EdgeArrow arrowEdge(EdgeElement e) {
    return GraphAttributes.EdgeArrow.swigToEnum(OgdfJNI.GraphAttributes_arrowEdge__SWIG_0(swigCPtr, this, EdgeElement.getCPtr(e), e));
  }

  public GraphAttributes.EdgeStyle styleEdge(EdgeElement e) {
    return GraphAttributes.EdgeStyle.swigToEnum(OgdfJNI.GraphAttributes_styleEdge__SWIG_0(swigCPtr, this, EdgeElement.getCPtr(e), e));
  }

  public SWIGTYPE_p_String colorEdge(EdgeElement e) {
    return new SWIGTYPE_p_String(OgdfJNI.GraphAttributes_colorEdge__SWIG_0(swigCPtr, this, EdgeElement.getCPtr(e), e), false);
  }

  public long subGraphBits(EdgeElement e) {
    return OgdfJNI.GraphAttributes_subGraphBits__SWIG_0(swigCPtr, this, EdgeElement.getCPtr(e), e);
  }

  public boolean inSubGraph(EdgeElement e, int n) {
    return OgdfJNI.GraphAttributes_inSubGraph(swigCPtr, this, EdgeElement.getCPtr(e), e, n);
  }

  public void addSubGraph(EdgeElement e, int n) {
    OgdfJNI.GraphAttributes_addSubGraph(swigCPtr, this, EdgeElement.getCPtr(e), e, n);
  }

  public void removeSubGraph(EdgeElement e, int n) {
    OgdfJNI.GraphAttributes_removeSubGraph(swigCPtr, this, EdgeElement.getCPtr(e), e, n);
  }

  public DRect boundingBox() {
    return new DRect(OgdfJNI.GraphAttributes_boundingBox(swigCPtr, this), true);
  }

  public boolean isAssociationClass(NodeElement v) {
    return OgdfJNI.GraphAttributes_isAssociationClass(swigCPtr, this, NodeElement.getCPtr(v), v);
  }

  public void addNodeCenter2Bends(int mode) {
    OgdfJNI.GraphAttributes_addNodeCenter2Bends__SWIG_0(swigCPtr, this, mode);
  }

  public void addNodeCenter2Bends() {
    OgdfJNI.GraphAttributes_addNodeCenter2Bends__SWIG_1(swigCPtr, this);
  }

  public void clearAllBends() {
    OgdfJNI.GraphAttributes_clearAllBends(swigCPtr, this);
  }

  public int hierarchyList(SWIGTYPE_p_ogdf__ListT_ogdf__ListT_ogdf__NodeElement_p_t_p_t list) {
    return OgdfJNI.GraphAttributes_hierarchyList__SWIG_0(swigCPtr, this, SWIGTYPE_p_ogdf__ListT_ogdf__ListT_ogdf__NodeElement_p_t_p_t.getCPtr(list));
  }

  public int hierarchyList(SWIGTYPE_p_ogdf__ListT_ogdf__ListT_ogdf__EdgeElement_p_t_p_t list) {
    return OgdfJNI.GraphAttributes_hierarchyList__SWIG_1(swigCPtr, this, SWIGTYPE_p_ogdf__ListT_ogdf__ListT_ogdf__EdgeElement_p_t_p_t.getCPtr(list));
  }

  public void setAllWidth(double w) {
    OgdfJNI.GraphAttributes_setAllWidth(swigCPtr, this, w);
  }

  public void setAllHeight(double h) {
    OgdfJNI.GraphAttributes_setAllHeight(swigCPtr, this, h);
  }

  public boolean readGML(Graph G, SWIGTYPE_p_String fileName) {
    return OgdfJNI.GraphAttributes_readGML__SWIG_0(swigCPtr, this, Graph.getCPtr(G), G, SWIGTYPE_p_String.getCPtr(fileName));
  }

  public boolean readGML(Graph G, SWIGTYPE_p_istream is) {
    return OgdfJNI.GraphAttributes_readGML__SWIG_1(swigCPtr, this, Graph.getCPtr(G), G, SWIGTYPE_p_istream.getCPtr(is));
  }

  public void writeGML(SWIGTYPE_p_String fileName) {
    OgdfJNI.GraphAttributes_writeGML__SWIG_0(swigCPtr, this, SWIGTYPE_p_String.getCPtr(fileName));
  }

  public void writeGML(SWIGTYPE_p_ostream os) {
    OgdfJNI.GraphAttributes_writeGML__SWIG_1(swigCPtr, this, SWIGTYPE_p_ostream.getCPtr(os));
  }

  public boolean readXML(Graph G, SWIGTYPE_p_String fileName) {
    return OgdfJNI.GraphAttributes_readXML__SWIG_0(swigCPtr, this, Graph.getCPtr(G), G, SWIGTYPE_p_String.getCPtr(fileName));
  }

  public boolean readXML(Graph G, SWIGTYPE_p_istream is) {
    return OgdfJNI.GraphAttributes_readXML__SWIG_1(swigCPtr, this, Graph.getCPtr(G), G, SWIGTYPE_p_istream.getCPtr(is));
  }

  public void writeXML(SWIGTYPE_p_String fileName, String delimiter, String offset) {
    OgdfJNI.GraphAttributes_writeXML__SWIG_0(swigCPtr, this, SWIGTYPE_p_String.getCPtr(fileName), delimiter, offset);
  }

  public void writeXML(SWIGTYPE_p_String fileName, String delimiter) {
    OgdfJNI.GraphAttributes_writeXML__SWIG_1(swigCPtr, this, SWIGTYPE_p_String.getCPtr(fileName), delimiter);
  }

  public void writeXML(SWIGTYPE_p_String fileName) {
    OgdfJNI.GraphAttributes_writeXML__SWIG_2(swigCPtr, this, SWIGTYPE_p_String.getCPtr(fileName));
  }

  public void writeXML(SWIGTYPE_p_ostream os, String delimiter, String offset) {
    OgdfJNI.GraphAttributes_writeXML__SWIG_3(swigCPtr, this, SWIGTYPE_p_ostream.getCPtr(os), delimiter, offset);
  }

  public void writeXML(SWIGTYPE_p_ostream os, String delimiter) {
    OgdfJNI.GraphAttributes_writeXML__SWIG_4(swigCPtr, this, SWIGTYPE_p_ostream.getCPtr(os), delimiter);
  }

  public void writeXML(SWIGTYPE_p_ostream os) {
    OgdfJNI.GraphAttributes_writeXML__SWIG_5(swigCPtr, this, SWIGTYPE_p_ostream.getCPtr(os));
  }

  public boolean readRudy(Graph G, SWIGTYPE_p_String fileName) {
    return OgdfJNI.GraphAttributes_readRudy__SWIG_0(swigCPtr, this, Graph.getCPtr(G), G, SWIGTYPE_p_String.getCPtr(fileName));
  }

  public boolean readRudy(Graph G, SWIGTYPE_p_istream is) {
    return OgdfJNI.GraphAttributes_readRudy__SWIG_1(swigCPtr, this, Graph.getCPtr(G), G, SWIGTYPE_p_istream.getCPtr(is));
  }

  public void writeRudy(SWIGTYPE_p_String fileName) {
    OgdfJNI.GraphAttributes_writeRudy__SWIG_0(swigCPtr, this, SWIGTYPE_p_String.getCPtr(fileName));
  }

  public void writeRudy(SWIGTYPE_p_ostream os) {
    OgdfJNI.GraphAttributes_writeRudy__SWIG_1(swigCPtr, this, SWIGTYPE_p_ostream.getCPtr(os));
  }

  public void removeUnnecessaryBendsHV() {
    OgdfJNI.GraphAttributes_removeUnnecessaryBendsHV(swigCPtr, this);
  }

  public enum EdgeArrow {
    none,
    last,
    first,
    both,
    undefined;

    public final int swigValue() {
      return swigValue;
    }

    public static EdgeArrow swigToEnum(int swigValue) {
      EdgeArrow[] swigValues = EdgeArrow.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (EdgeArrow swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + EdgeArrow.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private EdgeArrow() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private EdgeArrow(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private EdgeArrow(EdgeArrow swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

  public enum EdgeStyle {
    esNoPen(0),
    esSolid(1),
    esDash(2),
    esDot(3),
    esDashdot(4),
    esDashdotdot(5);

    public final int swigValue() {
      return swigValue;
    }

    public static EdgeStyle swigToEnum(int swigValue) {
      EdgeStyle[] swigValues = EdgeStyle.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (EdgeStyle swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + EdgeStyle.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private EdgeStyle() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private EdgeStyle(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private EdgeStyle(EdgeStyle swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

  public enum BrushPattern {
    bpNone(0),
    bpSolid(1),
    bpDense1(2),
    bpDense2(3),
    bpDense3(4),
    bpDense4(5),
    bpDense5(6),
    bpDense6(7),
    bpDense7(8),
    bpHorizontal(9),
    bpVertical(10),
    bpCross(11),
    BackwardDiagonal(12),
    ForwardDiagonal(13),
    DiagonalCross(14);

    public final int swigValue() {
      return swigValue;
    }

    public static BrushPattern swigToEnum(int swigValue) {
      BrushPattern[] swigValues = BrushPattern.class.getEnumConstants();
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (BrushPattern swigEnum : swigValues)
        if (swigEnum.swigValue == swigValue)
          return swigEnum;
      throw new IllegalArgumentException("No enum " + BrushPattern.class + " with value " + swigValue);
    }

    @SuppressWarnings("unused")
    private BrushPattern() {
      this.swigValue = SwigNext.next++;
    }

    @SuppressWarnings("unused")
    private BrushPattern(int swigValue) {
      this.swigValue = swigValue;
      SwigNext.next = swigValue+1;
    }

    @SuppressWarnings("unused")
    private BrushPattern(BrushPattern swigEnum) {
      this.swigValue = swigEnum.swigValue;
      SwigNext.next = this.swigValue+1;
    }

    private final int swigValue;

    private static class SwigNext {
      private static int next = 0;
    }
  }

  public final static int nodeGraphics = 0x00001;
  public final static int edgeGraphics = 0x00002;
  public final static int nodeLevel = 0x00004;
  public final static int edgeIntWeight = 0x00008;
  public final static int edgeDoubleWeight = 0x00010;
  public final static int edgeLabel = 0x00020;
  public final static int nodeLabel = 0x00040;
  public final static int edgeType = 0x00080;
  public final static int nodeType = 0x00100;
  public final static int nodeColor = 0x00200;
  public final static int nodeId = 0x00400;
  public final static int edgeArrow = 0x00800;
  public final static int edgeColor = 0x01000;
  public final static int edgeStyle = 0x02000;
  public final static int nodeStyle = 0x04000;
  public final static int nodeTemplate = 0x08000;
  public final static int edgeSubGraph = 0x10000;

  public final static int oval = 0x8001;
  public final static int rectangle = 0x8002;

}
