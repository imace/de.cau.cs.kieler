/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package net.ogdf.lib;

public class GraphListBase {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected GraphListBase(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(GraphListBase obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        OgdfJNI.delete_GraphListBase(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public GraphListBase() {
    this(OgdfJNI.new_GraphListBase(), true);
  }

  public void pushBack(GraphElement pX) {
    OgdfJNI.GraphListBase_pushBack(swigCPtr, this, GraphElement.getCPtr(pX), pX);
  }

  public void insertAfter(GraphElement pX, GraphElement pY) {
    OgdfJNI.GraphListBase_insertAfter(swigCPtr, this, GraphElement.getCPtr(pX), pX, GraphElement.getCPtr(pY), pY);
  }

  public void insertBefore(GraphElement pX, GraphElement pY) {
    OgdfJNI.GraphListBase_insertBefore(swigCPtr, this, GraphElement.getCPtr(pX), pX, GraphElement.getCPtr(pY), pY);
  }

  public void del(GraphElement pX) {
    OgdfJNI.GraphListBase_del(swigCPtr, this, GraphElement.getCPtr(pX), pX);
  }

  public void reverse() {
    OgdfJNI.GraphListBase_reverse(swigCPtr, this);
  }

  public void swap(GraphElement pX, GraphElement pY) {
    OgdfJNI.GraphListBase_swap(swigCPtr, this, GraphElement.getCPtr(pX), pX, GraphElement.getCPtr(pY), pY);
  }

  public boolean consistencyCheck() {
    return OgdfJNI.GraphListBase_consistencyCheck(swigCPtr, this);
  }

}
