/*
* generated by Xtext
*/
package de.cau.cs.kieler.synccharts.text.interfaces.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.cau.cs.kieler.synccharts.text.interfaces.services.InterfacesGrammarAccess;

public class InterfacesParser extends AbstractContentAssistParser {
	
	@Inject
	private InterfacesGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.cau.cs.kieler.synccharts.text.interfaces.ui.contentassist.antlr.internal.InternalInterfacesParser createParser() {
		de.cau.cs.kieler.synccharts.text.interfaces.ui.contentassist.antlr.internal.InternalInterfacesParser result = new de.cau.cs.kieler.synccharts.text.interfaces.ui.contentassist.antlr.internal.InternalInterfacesParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getStateExtendAccess().getAlternatives(), "rule__StateExtend__Alternatives");
					put(grammarAccess.getRegionSignalDecAccess().getAlternatives_2(), "rule__RegionSignalDec__Alternatives_2");
					put(grammarAccess.getRegionSignalDecAccess().getAlternatives_3(), "rule__RegionSignalDec__Alternatives_3");
					put(grammarAccess.getSignalAccess().getAlternatives(), "rule__Signal__Alternatives");
					put(grammarAccess.getVariableAccess().getAlternatives(), "rule__Variable__Alternatives");
					put(grammarAccess.getEffectAccess().getAlternatives(), "rule__Effect__Alternatives");
					put(grammarAccess.getRootAccess().getAlternatives(), "rule__Root__Alternatives");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getCompareOperationAccess().getAlternatives(), "rule__CompareOperation__Alternatives");
					put(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives(), "rule__NotOrValuedExpression__Alternatives");
					put(grammarAccess.getNotExpressionAccess().getAlternatives(), "rule__NotExpression__Alternatives");
					put(grammarAccess.getNegExpressionAccess().getAlternatives(), "rule__NegExpression__Alternatives");
					put(grammarAccess.getAtomicExpressionAccess().getAlternatives(), "rule__AtomicExpression__Alternatives");
					put(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives(), "rule__AtomicValuedExpression__Alternatives");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives(), "rule__ValuedObjectTestExpression__Alternatives");
					put(grammarAccess.getAnyTypeAccess().getAlternatives(), "rule__AnyType__Alternatives");
					put(grammarAccess.getInterfaceDeclarationAccess().getAlternatives(), "rule__InterfaceDeclaration__Alternatives");
					put(grammarAccess.getInterfaceSignalDeclAccess().getAlternatives(), "rule__InterfaceSignalDecl__Alternatives");
					put(grammarAccess.getChannelDescriptionAccess().getAlternatives(), "rule__ChannelDescription__Alternatives");
					put(grammarAccess.getTypeIdentifierAccess().getAlternatives(), "rule__TypeIdentifier__Alternatives");
					put(grammarAccess.getTypeIdentifierAccess().getAlternatives_2_1(), "rule__TypeIdentifier__Alternatives_2_1");
					put(grammarAccess.getAnnotationAccess().getAlternatives(), "rule__Annotation__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getCompareOperatorAccess().getAlternatives(), "rule__CompareOperator__Alternatives");
					put(grammarAccess.getValueTypeAccess().getAlternatives(), "rule__ValueType__Alternatives");
					put(grammarAccess.getCombineOperatorAccess().getAlternatives(), "rule__CombineOperator__Alternatives");
					put(grammarAccess.getStateExtendAccess().getGroup_1(), "rule__StateExtend__Group_1__0");
					put(grammarAccess.getStateExtendAccess().getGroup_2(), "rule__StateExtend__Group_2__0");
					put(grammarAccess.getStateExtendAccess().getGroup_3(), "rule__StateExtend__Group_3__0");
					put(grammarAccess.getStateExtendAccess().getGroup_4(), "rule__StateExtend__Group_4__0");
					put(grammarAccess.getStateExtendAccess().getGroup_5(), "rule__StateExtend__Group_5__0");
					put(grammarAccess.getRegionSignalDecAccess().getGroup(), "rule__RegionSignalDec__Group__0");
					put(grammarAccess.getRegionSignalDecAccess().getGroup_2_0(), "rule__RegionSignalDec__Group_2_0__0");
					put(grammarAccess.getRegionSignalDecAccess().getGroup_2_0_2(), "rule__RegionSignalDec__Group_2_0_2__0");
					put(grammarAccess.getRegionSignalDecAccess().getGroup_2_1(), "rule__RegionSignalDec__Group_2_1__0");
					put(grammarAccess.getRegionSignalDecAccess().getGroup_2_1_2(), "rule__RegionSignalDec__Group_2_1_2__0");
					put(grammarAccess.getRegionSignalDecAccess().getGroup_3_0(), "rule__RegionSignalDec__Group_3_0__0");
					put(grammarAccess.getRegionSignalDecAccess().getGroup_3_0_3(), "rule__RegionSignalDec__Group_3_0_3__0");
					put(grammarAccess.getRegionSignalDecAccess().getGroup_3_1(), "rule__RegionSignalDec__Group_3_1__0");
					put(grammarAccess.getRegionSignalDecAccess().getGroup_3_1_3(), "rule__RegionSignalDec__Group_3_1_3__0");
					put(grammarAccess.getVariablesAccess().getGroup(), "rule__Variables__Group__0");
					put(grammarAccess.getVariablesAccess().getGroup_0(), "rule__Variables__Group_0__0");
					put(grammarAccess.getVariablesAccess().getGroup_0_1(), "rule__Variables__Group_0_1__0");
					put(grammarAccess.getSignalsAccess().getGroup(), "rule__Signals__Group__0");
					put(grammarAccess.getSignalsAccess().getGroup_0(), "rule__Signals__Group_0__0");
					put(grammarAccess.getSignalsAccess().getGroup_0_1(), "rule__Signals__Group_0_1__0");
					put(grammarAccess.getInputSignalsAccess().getGroup(), "rule__InputSignals__Group__0");
					put(grammarAccess.getInputSignalsAccess().getGroup_0(), "rule__InputSignals__Group_0__0");
					put(grammarAccess.getInputSignalsAccess().getGroup_0_1(), "rule__InputSignals__Group_0_1__0");
					put(grammarAccess.getOutputSignalsAccess().getGroup(), "rule__OutputSignals__Group__0");
					put(grammarAccess.getOutputSignalsAccess().getGroup_0(), "rule__OutputSignals__Group_0__0");
					put(grammarAccess.getOutputSignalsAccess().getGroup_0_1(), "rule__OutputSignals__Group_0_1__0");
					put(grammarAccess.getInOutputSignalsAccess().getGroup(), "rule__InOutputSignals__Group__0");
					put(grammarAccess.getInOutputSignalsAccess().getGroup_0(), "rule__InOutputSignals__Group_0__0");
					put(grammarAccess.getInOutputSignalsAccess().getGroup_0_1(), "rule__InOutputSignals__Group_0_1__0");
					put(grammarAccess.getSignalAccess().getGroup_1(), "rule__Signal__Group_1__0");
					put(grammarAccess.getSignalAccess().getGroup_2(), "rule__Signal__Group_2__0");
					put(grammarAccess.getSignalAccess().getGroup_2_1(), "rule__Signal__Group_2_1__0");
					put(grammarAccess.getSignalAccess().getGroup_3(), "rule__Signal__Group_3__0");
					put(grammarAccess.getSignalAccess().getGroup_3_1(), "rule__Signal__Group_3_1__0");
					put(grammarAccess.getSignalAccess().getGroup_4(), "rule__Signal__Group_4__0");
					put(grammarAccess.getSignalAccess().getGroup_4_1(), "rule__Signal__Group_4_1__0");
					put(grammarAccess.getSignalAccess().getGroup_4_2(), "rule__Signal__Group_4_2__0");
					put(grammarAccess.getSignalAccess().getGroup_5(), "rule__Signal__Group_5__0");
					put(grammarAccess.getSignalAccess().getGroup_6(), "rule__Signal__Group_6__0");
					put(grammarAccess.getSignalAccess().getGroup_6_1(), "rule__Signal__Group_6_1__0");
					put(grammarAccess.getSignalAccess().getGroup_7(), "rule__Signal__Group_7__0");
					put(grammarAccess.getSignalAccess().getGroup_7_1(), "rule__Signal__Group_7_1__0");
					put(grammarAccess.getSignalAccess().getGroup_7_2(), "rule__Signal__Group_7_2__0");
					put(grammarAccess.getSignalAccess().getGroup_8(), "rule__Signal__Group_8__0");
					put(grammarAccess.getSignalAccess().getGroup_8_1(), "rule__Signal__Group_8_1__0");
					put(grammarAccess.getSignalAccess().getGroup_9(), "rule__Signal__Group_9__0");
					put(grammarAccess.getSignalAccess().getGroup_9_1(), "rule__Signal__Group_9_1__0");
					put(grammarAccess.getVariableAccess().getGroup_1(), "rule__Variable__Group_1__0");
					put(grammarAccess.getVariableAccess().getGroup_2(), "rule__Variable__Group_2__0");
					put(grammarAccess.getVariableAccess().getGroup_2_1(), "rule__Variable__Group_2_1__0");
					put(grammarAccess.getVariableAccess().getGroup_3(), "rule__Variable__Group_3__0");
					put(grammarAccess.getVariableAccess().getGroup_3_1(), "rule__Variable__Group_3_1__0");
					put(grammarAccess.getVariableAccess().getGroup_4(), "rule__Variable__Group_4__0");
					put(grammarAccess.getVariableAccess().getGroup_5(), "rule__Variable__Group_5__0");
					put(grammarAccess.getVariableAccess().getGroup_5_1(), "rule__Variable__Group_5_1__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup_4(), "rule__Transition__Group_4__0");
					put(grammarAccess.getTransitionAccess().getGroup_4_2(), "rule__Transition__Group_4_2__0");
					put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
					put(grammarAccess.getActionAccess().getGroup_4(), "rule__Action__Group_4__0");
					put(grammarAccess.getActionAccess().getGroup_4_2(), "rule__Action__Group_4_2__0");
					put(grammarAccess.getEmissionAccess().getGroup(), "rule__Emission__Group__0");
					put(grammarAccess.getEmissionAccess().getGroup_1(), "rule__Emission__Group_1__0");
					put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
					put(grammarAccess.getTextEffectAccess().getGroup(), "rule__TextEffect__Group__0");
					put(grammarAccess.getTextEffectAccess().getGroup_1(), "rule__TextEffect__Group_1__0");
					put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getCompareOperationAccess().getGroup_0(), "rule__CompareOperation__Group_0__0");
					put(grammarAccess.getCompareOperationAccess().getGroup_0_1(), "rule__CompareOperation__Group_0_1__0");
					put(grammarAccess.getNotExpressionAccess().getGroup_0(), "rule__NotExpression__Group_0__0");
					put(grammarAccess.getAddExpressionAccess().getGroup(), "rule__AddExpression__Group__0");
					put(grammarAccess.getAddExpressionAccess().getGroup_1(), "rule__AddExpression__Group_1__0");
					put(grammarAccess.getSubExpressionAccess().getGroup(), "rule__SubExpression__Group__0");
					put(grammarAccess.getSubExpressionAccess().getGroup_1(), "rule__SubExpression__Group_1__0");
					put(grammarAccess.getMultExpressionAccess().getGroup(), "rule__MultExpression__Group__0");
					put(grammarAccess.getMultExpressionAccess().getGroup_1(), "rule__MultExpression__Group_1__0");
					put(grammarAccess.getDivExpressionAccess().getGroup(), "rule__DivExpression__Group__0");
					put(grammarAccess.getDivExpressionAccess().getGroup_1(), "rule__DivExpression__Group_1__0");
					put(grammarAccess.getModExpressionAccess().getGroup(), "rule__ModExpression__Group__0");
					put(grammarAccess.getModExpressionAccess().getGroup_1(), "rule__ModExpression__Group_1__0");
					put(grammarAccess.getNegExpressionAccess().getGroup_0(), "rule__NegExpression__Group_0__0");
					put(grammarAccess.getAtomicExpressionAccess().getGroup_2(), "rule__AtomicExpression__Group_2__0");
					put(grammarAccess.getAtomicValuedExpressionAccess().getGroup_2(), "rule__AtomicValuedExpression__Group_2__0");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0(), "rule__ValuedObjectTestExpression__Group_0__0");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_1(), "rule__ValuedObjectTestExpression__Group_1__0");
					put(grammarAccess.getTextExpressionAccess().getGroup(), "rule__TextExpression__Group__0");
					put(grammarAccess.getTextExpressionAccess().getGroup_1(), "rule__TextExpression__Group_1__0");
					put(grammarAccess.getISignalAccess().getGroup(), "rule__ISignal__Group__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0(), "rule__InterfaceSignalDecl__Group_0__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0_3(), "rule__InterfaceSignalDecl__Group_0_3__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1(), "rule__InterfaceSignalDecl__Group_1__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1_3(), "rule__InterfaceSignalDecl__Group_1_3__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2(), "rule__InterfaceSignalDecl__Group_2__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2_3(), "rule__InterfaceSignalDecl__Group_2_3__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3(), "rule__InterfaceSignalDecl__Group_3__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3_3(), "rule__InterfaceSignalDecl__Group_3_3__0");
					put(grammarAccess.getChannelDescriptionAccess().getGroup_0(), "rule__ChannelDescription__Group_0__0");
					put(grammarAccess.getChannelDescriptionAccess().getGroup_1(), "rule__ChannelDescription__Group_1__0");
					put(grammarAccess.getChannelDescriptionAccess().getGroup_2(), "rule__ChannelDescription__Group_2__0");
					put(grammarAccess.getInterfaceVariableDeclAccess().getGroup(), "rule__InterfaceVariableDecl__Group__0");
					put(grammarAccess.getInterfaceVariableDeclAccess().getGroup_2(), "rule__InterfaceVariableDecl__Group_2__0");
					put(grammarAccess.getVariableDeclAccess().getGroup(), "rule__VariableDecl__Group__0");
					put(grammarAccess.getVariableDeclAccess().getGroup_1(), "rule__VariableDecl__Group_1__0");
					put(grammarAccess.getIVariableAccess().getGroup(), "rule__IVariable__Group__0");
					put(grammarAccess.getIVariableAccess().getGroup_1(), "rule__IVariable__Group_1__0");
					put(grammarAccess.getTypeIdentifierAccess().getGroup_2(), "rule__TypeIdentifier__Group_2__0");
					put(grammarAccess.getTagAnnotationAccess().getGroup(), "rule__TagAnnotation__Group__0");
					put(grammarAccess.getTagAnnotationAccess().getGroup_2(), "rule__TagAnnotation__Group_2__0");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getGroup(), "rule__KeyStringValueAnnotation__Group__0");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3(), "rule__KeyStringValueAnnotation__Group_3__0");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup(), "rule__TypedKeyStringValueAnnotation__Group__0");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6(), "rule__TypedKeyStringValueAnnotation__Group_6__0");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup(), "rule__KeyBooleanValueAnnotation__Group__0");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3(), "rule__KeyBooleanValueAnnotation__Group_3__0");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getGroup(), "rule__KeyIntValueAnnotation__Group__0");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3(), "rule__KeyIntValueAnnotation__Group_3__0");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup(), "rule__KeyFloatValueAnnotation__Group__0");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3(), "rule__KeyFloatValueAnnotation__Group_3__0");
					put(grammarAccess.getImportAnnotationAccess().getGroup(), "rule__ImportAnnotation__Group__0");
					put(grammarAccess.getExtendedIDAccess().getGroup(), "rule__ExtendedID__Group__0");
					put(grammarAccess.getExtendedIDAccess().getGroup_1(), "rule__ExtendedID__Group_1__0");
					put(grammarAccess.getStateExtendAccess().getRegionsAssignment_0(), "rule__StateExtend__RegionsAssignment_0");
					put(grammarAccess.getStateExtendAccess().getInOutputSignalsAssignment_1_2(), "rule__StateExtend__InOutputSignalsAssignment_1_2");
					put(grammarAccess.getStateExtendAccess().getOutputSignalsAssignment_2_1(), "rule__StateExtend__OutputSignalsAssignment_2_1");
					put(grammarAccess.getStateExtendAccess().getInputSignalsAssignment_3_1(), "rule__StateExtend__InputSignalsAssignment_3_1");
					put(grammarAccess.getStateExtendAccess().getSignalsAssignment_4_1(), "rule__StateExtend__SignalsAssignment_4_1");
					put(grammarAccess.getStateExtendAccess().getVariableAssignment_5_1(), "rule__StateExtend__VariableAssignment_5_1");
					put(grammarAccess.getRegionSignalDecAccess().getRegionAssignment_0(), "rule__RegionSignalDec__RegionAssignment_0");
					put(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_2_0_1(), "rule__RegionSignalDec__VarsAssignment_2_0_1");
					put(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_2_0_2_1(), "rule__RegionSignalDec__VarsAssignment_2_0_2_1");
					put(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_2_1_1(), "rule__RegionSignalDec__SignalsAssignment_2_1_1");
					put(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_2_1_2_1(), "rule__RegionSignalDec__SignalsAssignment_2_1_2_1");
					put(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_3_0_2(), "rule__RegionSignalDec__VarsAssignment_3_0_2");
					put(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_3_0_3_1(), "rule__RegionSignalDec__VarsAssignment_3_0_3_1");
					put(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_3_1_2(), "rule__RegionSignalDec__SignalsAssignment_3_1_2");
					put(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_3_1_3_1(), "rule__RegionSignalDec__SignalsAssignment_3_1_3_1");
					put(grammarAccess.getVariablesAccess().getVarsAssignment_0_0(), "rule__Variables__VarsAssignment_0_0");
					put(grammarAccess.getVariablesAccess().getVarsAssignment_0_1_1(), "rule__Variables__VarsAssignment_0_1_1");
					put(grammarAccess.getSignalsAccess().getSignalsAssignment_0_0(), "rule__Signals__SignalsAssignment_0_0");
					put(grammarAccess.getSignalsAccess().getSignalsAssignment_0_1_1(), "rule__Signals__SignalsAssignment_0_1_1");
					put(grammarAccess.getInputSignalsAccess().getSignalsAssignment_0_0(), "rule__InputSignals__SignalsAssignment_0_0");
					put(grammarAccess.getInputSignalsAccess().getSignalsAssignment_0_1_1(), "rule__InputSignals__SignalsAssignment_0_1_1");
					put(grammarAccess.getOutputSignalsAccess().getSignalsAssignment_0_0(), "rule__OutputSignals__SignalsAssignment_0_0");
					put(grammarAccess.getOutputSignalsAccess().getSignalsAssignment_0_1_1(), "rule__OutputSignals__SignalsAssignment_0_1_1");
					put(grammarAccess.getInOutputSignalsAccess().getSignalsAssignment_0_0(), "rule__InOutputSignals__SignalsAssignment_0_0");
					put(grammarAccess.getInOutputSignalsAccess().getSignalsAssignment_0_1_1(), "rule__InOutputSignals__SignalsAssignment_0_1_1");
					put(grammarAccess.getSignalAccess().getNameAssignment_0(), "rule__Signal__NameAssignment_0");
					put(grammarAccess.getSignalAccess().getNameAssignment_1_0(), "rule__Signal__NameAssignment_1_0");
					put(grammarAccess.getSignalAccess().getTypeAssignment_1_2(), "rule__Signal__TypeAssignment_1_2");
					put(grammarAccess.getSignalAccess().getNameAssignment_2_0(), "rule__Signal__NameAssignment_2_0");
					put(grammarAccess.getSignalAccess().getInitialValueAssignment_2_1_1(), "rule__Signal__InitialValueAssignment_2_1_1");
					put(grammarAccess.getSignalAccess().getNameAssignment_3_0(), "rule__Signal__NameAssignment_3_0");
					put(grammarAccess.getSignalAccess().getInitialValueAssignment_3_1_1(), "rule__Signal__InitialValueAssignment_3_1_1");
					put(grammarAccess.getSignalAccess().getTypeAssignment_3_3(), "rule__Signal__TypeAssignment_3_3");
					put(grammarAccess.getSignalAccess().getNameAssignment_4_0(), "rule__Signal__NameAssignment_4_0");
					put(grammarAccess.getSignalAccess().getInitialValueAssignment_4_1_1(), "rule__Signal__InitialValueAssignment_4_1_1");
					put(grammarAccess.getSignalAccess().getTypeAssignment_4_2_1(), "rule__Signal__TypeAssignment_4_2_1");
					put(grammarAccess.getSignalAccess().getCombineOperatorAssignment_4_2_3(), "rule__Signal__CombineOperatorAssignment_4_2_3");
					put(grammarAccess.getSignalAccess().getNameAssignment_5_0(), "rule__Signal__NameAssignment_5_0");
					put(grammarAccess.getSignalAccess().getHostTypeAssignment_5_2(), "rule__Signal__HostTypeAssignment_5_2");
					put(grammarAccess.getSignalAccess().getNameAssignment_6_0(), "rule__Signal__NameAssignment_6_0");
					put(grammarAccess.getSignalAccess().getInitialValueAssignment_6_1_1(), "rule__Signal__InitialValueAssignment_6_1_1");
					put(grammarAccess.getSignalAccess().getHostTypeAssignment_6_3(), "rule__Signal__HostTypeAssignment_6_3");
					put(grammarAccess.getSignalAccess().getNameAssignment_7_0(), "rule__Signal__NameAssignment_7_0");
					put(grammarAccess.getSignalAccess().getInitialValueAssignment_7_1_1(), "rule__Signal__InitialValueAssignment_7_1_1");
					put(grammarAccess.getSignalAccess().getHostTypeAssignment_7_2_1(), "rule__Signal__HostTypeAssignment_7_2_1");
					put(grammarAccess.getSignalAccess().getHostCombineOperatorAssignment_7_2_3(), "rule__Signal__HostCombineOperatorAssignment_7_2_3");
					put(grammarAccess.getSignalAccess().getNameAssignment_8_0(), "rule__Signal__NameAssignment_8_0");
					put(grammarAccess.getSignalAccess().getTypeAssignment_8_1_1(), "rule__Signal__TypeAssignment_8_1_1");
					put(grammarAccess.getSignalAccess().getCombineOperatorAssignment_8_1_3(), "rule__Signal__CombineOperatorAssignment_8_1_3");
					put(grammarAccess.getSignalAccess().getNameAssignment_9_0(), "rule__Signal__NameAssignment_9_0");
					put(grammarAccess.getSignalAccess().getHostTypeAssignment_9_1_1(), "rule__Signal__HostTypeAssignment_9_1_1");
					put(grammarAccess.getSignalAccess().getHostCombineOperatorAssignment_9_1_3(), "rule__Signal__HostCombineOperatorAssignment_9_1_3");
					put(grammarAccess.getVariableAccess().getNameAssignment_0(), "rule__Variable__NameAssignment_0");
					put(grammarAccess.getVariableAccess().getNameAssignment_1_0(), "rule__Variable__NameAssignment_1_0");
					put(grammarAccess.getVariableAccess().getTypeAssignment_1_2(), "rule__Variable__TypeAssignment_1_2");
					put(grammarAccess.getVariableAccess().getNameAssignment_2_0(), "rule__Variable__NameAssignment_2_0");
					put(grammarAccess.getVariableAccess().getInitialValueAssignment_2_1_1(), "rule__Variable__InitialValueAssignment_2_1_1");
					put(grammarAccess.getVariableAccess().getNameAssignment_3_0(), "rule__Variable__NameAssignment_3_0");
					put(grammarAccess.getVariableAccess().getInitialValueAssignment_3_1_1(), "rule__Variable__InitialValueAssignment_3_1_1");
					put(grammarAccess.getVariableAccess().getTypeAssignment_3_3(), "rule__Variable__TypeAssignment_3_3");
					put(grammarAccess.getVariableAccess().getNameAssignment_4_0(), "rule__Variable__NameAssignment_4_0");
					put(grammarAccess.getVariableAccess().getHostTypeAssignment_4_2(), "rule__Variable__HostTypeAssignment_4_2");
					put(grammarAccess.getVariableAccess().getNameAssignment_5_0(), "rule__Variable__NameAssignment_5_0");
					put(grammarAccess.getVariableAccess().getInitialValueAssignment_5_1_1(), "rule__Variable__InitialValueAssignment_5_1_1");
					put(grammarAccess.getVariableAccess().getHostTypeAssignment_5_3(), "rule__Variable__HostTypeAssignment_5_3");
					put(grammarAccess.getTransitionAccess().getIsImmediateAssignment_1(), "rule__Transition__IsImmediateAssignment_1");
					put(grammarAccess.getTransitionAccess().getDelayAssignment_2(), "rule__Transition__DelayAssignment_2");
					put(grammarAccess.getTransitionAccess().getTriggerAssignment_3(), "rule__Transition__TriggerAssignment_3");
					put(grammarAccess.getTransitionAccess().getEffectsAssignment_4_1(), "rule__Transition__EffectsAssignment_4_1");
					put(grammarAccess.getTransitionAccess().getEffectsAssignment_4_2_1(), "rule__Transition__EffectsAssignment_4_2_1");
					put(grammarAccess.getActionAccess().getIsImmediateAssignment_1(), "rule__Action__IsImmediateAssignment_1");
					put(grammarAccess.getActionAccess().getDelayAssignment_2(), "rule__Action__DelayAssignment_2");
					put(grammarAccess.getActionAccess().getTriggerAssignment_3(), "rule__Action__TriggerAssignment_3");
					put(grammarAccess.getActionAccess().getEffectsAssignment_4_1(), "rule__Action__EffectsAssignment_4_1");
					put(grammarAccess.getActionAccess().getEffectsAssignment_4_2_1(), "rule__Action__EffectsAssignment_4_2_1");
					put(grammarAccess.getEmissionAccess().getSignalAssignment_0(), "rule__Emission__SignalAssignment_0");
					put(grammarAccess.getEmissionAccess().getNewValueAssignment_1_1(), "rule__Emission__NewValueAssignment_1_1");
					put(grammarAccess.getAssignmentAccess().getVariableAssignment_0(), "rule__Assignment__VariableAssignment_0");
					put(grammarAccess.getAssignmentAccess().getExpressionAssignment_2(), "rule__Assignment__ExpressionAssignment_2");
					put(grammarAccess.getTextEffectAccess().getCodeAssignment_0(), "rule__TextEffect__CodeAssignment_0");
					put(grammarAccess.getTextEffectAccess().getTypeAssignment_1_1(), "rule__TextEffect__TypeAssignment_1_1");
					put(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1(), "rule__OrExpression__OperatorAssignment_1_1");
					put(grammarAccess.getOrExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__OrExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1(), "rule__AndExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAndExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__AndExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getCompareOperationAccess().getOperatorAssignment_0_1_1(), "rule__CompareOperation__OperatorAssignment_0_1_1");
					put(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_0_1_2(), "rule__CompareOperation__SubExpressionsAssignment_0_1_2");
					put(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1(), "rule__NotExpression__OperatorAssignment_0_1");
					put(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2(), "rule__NotExpression__SubExpressionsAssignment_0_2");
					put(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1(), "rule__AddExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__AddExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1(), "rule__SubExpression__OperatorAssignment_1_1");
					put(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__SubExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1(), "rule__MultExpression__OperatorAssignment_1_1");
					put(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__MultExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1(), "rule__DivExpression__OperatorAssignment_1_1");
					put(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__DivExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1(), "rule__ModExpression__OperatorAssignment_1_1");
					put(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__ModExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1(), "rule__NegExpression__OperatorAssignment_0_1");
					put(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2(), "rule__NegExpression__SubExpressionsAssignment_0_2");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1(), "rule__ValuedObjectTestExpression__OperatorAssignment_0_1");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3(), "rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_1_1(), "rule__ValuedObjectTestExpression__OperatorAssignment_1_1");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__ValuedObjectTestExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment(), "rule__ValuedObjectReference__ValuedObjectAssignment");
					put(grammarAccess.getTextExpressionAccess().getCodeAssignment_0(), "rule__TextExpression__CodeAssignment_0");
					put(grammarAccess.getTextExpressionAccess().getTypeAssignment_1_1(), "rule__TextExpression__TypeAssignment_1_1");
					put(grammarAccess.getIntValueAccess().getValueAssignment(), "rule__IntValue__ValueAssignment");
					put(grammarAccess.getFloatValueAccess().getValueAssignment(), "rule__FloatValue__ValueAssignment");
					put(grammarAccess.getBooleanValueAccess().getValueAssignment(), "rule__BooleanValue__ValueAssignment");
					put(grammarAccess.getISignalAccess().getNameAssignment_0(), "rule__ISignal__NameAssignment_0");
					put(grammarAccess.getISignalAccess().getChannelDescrAssignment_1(), "rule__ISignal__ChannelDescrAssignment_1");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_2(), "rule__InterfaceSignalDecl__SignalsAssignment_0_2");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_3_1(), "rule__InterfaceSignalDecl__SignalsAssignment_0_3_1");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_2(), "rule__InterfaceSignalDecl__SignalsAssignment_1_2");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_3_1(), "rule__InterfaceSignalDecl__SignalsAssignment_1_3_1");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_2(), "rule__InterfaceSignalDecl__SignalsAssignment_2_2");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_3_1(), "rule__InterfaceSignalDecl__SignalsAssignment_2_3_1");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_2(), "rule__InterfaceSignalDecl__SignalsAssignment_3_2");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_3_1(), "rule__InterfaceSignalDecl__SignalsAssignment_3_3_1");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_0_1(), "rule__ChannelDescription__TypeAssignment_0_1");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_1_1(), "rule__ChannelDescription__TypeAssignment_1_1");
					put(grammarAccess.getChannelDescriptionAccess().getExpressionAssignment_2_1(), "rule__ChannelDescription__ExpressionAssignment_2_1");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_2_3(), "rule__ChannelDescription__TypeAssignment_2_3");
					put(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_1(), "rule__InterfaceVariableDecl__VarDeclsAssignment_1");
					put(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_2_1(), "rule__InterfaceVariableDecl__VarDeclsAssignment_2_1");
					put(grammarAccess.getVariableDeclAccess().getVariablesAssignment_0(), "rule__VariableDecl__VariablesAssignment_0");
					put(grammarAccess.getVariableDeclAccess().getVariablesAssignment_1_1(), "rule__VariableDecl__VariablesAssignment_1_1");
					put(grammarAccess.getVariableDeclAccess().getTypeAssignment_3(), "rule__VariableDecl__TypeAssignment_3");
					put(grammarAccess.getIVariableAccess().getNameAssignment_0(), "rule__IVariable__NameAssignment_0");
					put(grammarAccess.getIVariableAccess().getExpressionAssignment_1_1(), "rule__IVariable__ExpressionAssignment_1_1");
					put(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_0(), "rule__TypeIdentifier__TypeAssignment_0");
					put(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_1(), "rule__TypeIdentifier__TypeIDAssignment_1");
					put(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_2_1_0(), "rule__TypeIdentifier__TypeAssignment_2_1_0");
					put(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_2_1_1(), "rule__TypeIdentifier__TypeIDAssignment_2_1_1");
					put(grammarAccess.getTypeIdentifierAccess().getOperatorAssignment_2_3(), "rule__TypeIdentifier__OperatorAssignment_2_3");
					put(grammarAccess.getCommentAnnotationAccess().getValueAssignment(), "rule__CommentAnnotation__ValueAssignment");
					put(grammarAccess.getTagAnnotationAccess().getNameAssignment_1(), "rule__TagAnnotation__NameAssignment_1");
					put(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1(), "rule__TagAnnotation__AnnotationsAssignment_2_1");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__KeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2(), "rule__KeyStringValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__TypedKeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3(), "rule__TypedKeyStringValueAnnotation__TypeAssignment_3");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueAssignment_5(), "rule__TypedKeyStringValueAnnotation__ValueAssignment_5");
					put(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAssignment_6_1(), "rule__TypedKeyStringValueAnnotation__AnnotationsAssignment_6_1");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1(), "rule__KeyBooleanValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2(), "rule__KeyBooleanValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1(), "rule__KeyIntValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2(), "rule__KeyIntValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1(), "rule__KeyFloatValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2(), "rule__KeyFloatValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getImportAnnotationAccess().getImportURIAssignment_1(), "rule__ImportAnnotation__ImportURIAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.cau.cs.kieler.synccharts.text.interfaces.ui.contentassist.antlr.internal.InternalInterfacesParser typedParser = (de.cau.cs.kieler.synccharts.text.interfaces.ui.contentassist.antlr.internal.InternalInterfacesParser) parser;
			typedParser.entryRuleStateExtend();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public InterfacesGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(InterfacesGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
