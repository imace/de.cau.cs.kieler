/*
* generated by Xtext
*/
package de.cau.cs.kieler.synccharts.text.kitsState.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.cau.cs.kieler.synccharts.text.kitsState.services.KitsStateGrammarAccess;

public class KitsStateParser extends AbstractContentAssistParser {
	
	@Inject
	private KitsStateGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.cau.cs.kieler.synccharts.text.kitsState.ui.contentassist.antlr.internal.InternalKitsStateParser createParser() {
		de.cau.cs.kieler.synccharts.text.kitsState.ui.contentassist.antlr.internal.InternalKitsStateParser result = new de.cau.cs.kieler.synccharts.text.kitsState.ui.contentassist.antlr.internal.InternalKitsStateParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getRootRegionAccess().getAlternatives_1_5(), "rule__RootRegion__Alternatives_1_5");
					put(grammarAccess.getSingleRegionAccess().getAlternatives_0_5(), "rule__SingleRegion__Alternatives_0_5");
					put(grammarAccess.getRegionAccess().getAlternatives_5(), "rule__Region__Alternatives_5");
					put(grammarAccess.getStateAccess().getAlternatives_1(), "rule__State__Alternatives_1");
					put(grammarAccess.getStateAccess().getAlternatives_6(), "rule__State__Alternatives_6");
					put(grammarAccess.getStateAccess().getAlternatives_6_1_1_0(), "rule__State__Alternatives_6_1_1_0");
					put(grammarAccess.getTransitionAccess().getAlternatives_4_1(), "rule__Transition__Alternatives_4_1");
					put(grammarAccess.getSignalAccess().getAlternatives(), "rule__Signal__Alternatives");
					put(grammarAccess.getASignalAccess().getAlternatives_6(), "rule__ASignal__Alternatives_6");
					put(grammarAccess.getASignalAccess().getAlternatives_6_0_1(), "rule__ASignal__Alternatives_6_0_1");
					put(grammarAccess.getASignalAccess().getAlternatives_6_1_2(), "rule__ASignal__Alternatives_6_1_2");
					put(grammarAccess.getASignalAccess().getAlternatives_6_1_4(), "rule__ASignal__Alternatives_6_1_4");
					put(grammarAccess.getISignalAccess().getAlternatives_6(), "rule__ISignal__Alternatives_6");
					put(grammarAccess.getISignalAccess().getAlternatives_6_0_1(), "rule__ISignal__Alternatives_6_0_1");
					put(grammarAccess.getISignalAccess().getAlternatives_6_1_2(), "rule__ISignal__Alternatives_6_1_2");
					put(grammarAccess.getISignalAccess().getAlternatives_6_1_4(), "rule__ISignal__Alternatives_6_1_4");
					put(grammarAccess.getVariableAccess().getAlternatives(), "rule__Variable__Alternatives");
					put(grammarAccess.getAVariableAccess().getAlternatives_5(), "rule__AVariable__Alternatives_5");
					put(grammarAccess.getIVariableAccess().getAlternatives_5(), "rule__IVariable__Alternatives_5");
					put(grammarAccess.getEffectAccess().getAlternatives(), "rule__Effect__Alternatives");
					put(grammarAccess.getRootAccess().getAlternatives(), "rule__Root__Alternatives");
					put(grammarAccess.getExpressionAccess().getAlternatives(), "rule__Expression__Alternatives");
					put(grammarAccess.getCompareOperationAccess().getAlternatives(), "rule__CompareOperation__Alternatives");
					put(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives(), "rule__NotOrValuedExpression__Alternatives");
					put(grammarAccess.getNotExpressionAccess().getAlternatives(), "rule__NotExpression__Alternatives");
					put(grammarAccess.getNegExpressionAccess().getAlternatives(), "rule__NegExpression__Alternatives");
					put(grammarAccess.getAtomicExpressionAccess().getAlternatives(), "rule__AtomicExpression__Alternatives");
					put(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives(), "rule__AtomicValuedExpression__Alternatives");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives(), "rule__ValuedObjectTestExpression__Alternatives");
					put(grammarAccess.getAnyTypeAccess().getAlternatives(), "rule__AnyType__Alternatives");
					put(grammarAccess.getInterfaceDeclarationAccess().getAlternatives(), "rule__InterfaceDeclaration__Alternatives");
					put(grammarAccess.getInterfaceSignalDeclAccess().getAlternatives(), "rule__InterfaceSignalDecl__Alternatives");
					put(grammarAccess.getChannelDescriptionAccess().getAlternatives(), "rule__ChannelDescription__Alternatives");
					put(grammarAccess.getTypeIdentifierAccess().getAlternatives(), "rule__TypeIdentifier__Alternatives");
					put(grammarAccess.getTypeIdentifierAccess().getAlternatives_2_1(), "rule__TypeIdentifier__Alternatives_2_1");
					put(grammarAccess.getAnnotationAccess().getAlternatives(), "rule__Annotation__Alternatives");
					put(grammarAccess.getEStringAccess().getAlternatives(), "rule__EString__Alternatives");
					put(grammarAccess.getStateTypeAccess().getAlternatives(), "rule__StateType__Alternatives");
					put(grammarAccess.getTransitionTypeAccess().getAlternatives(), "rule__TransitionType__Alternatives");
					put(grammarAccess.getCompareOperatorAccess().getAlternatives(), "rule__CompareOperator__Alternatives");
					put(grammarAccess.getValueTypeAccess().getAlternatives(), "rule__ValueType__Alternatives");
					put(grammarAccess.getCombineOperatorAccess().getAlternatives(), "rule__CombineOperator__Alternatives");
					put(grammarAccess.getRootRegionAccess().getGroup(), "rule__RootRegion__Group__0");
					put(grammarAccess.getRootRegionAccess().getGroup_1(), "rule__RootRegion__Group_1__0");
					put(grammarAccess.getSingleRegionAccess().getGroup(), "rule__SingleRegion__Group__0");
					put(grammarAccess.getSingleRegionAccess().getGroup_0(), "rule__SingleRegion__Group_0__0");
					put(grammarAccess.getTextualCodeAccess().getGroup(), "rule__TextualCode__Group__0");
					put(grammarAccess.getTextualCodeAccess().getGroup_2(), "rule__TextualCode__Group_2__0");
					put(grammarAccess.getRegionAccess().getGroup(), "rule__Region__Group__0");
					put(grammarAccess.getStateAccess().getGroup(), "rule__State__Group__0");
					put(grammarAccess.getStateAccess().getGroup_1_0(), "rule__State__Group_1_0__0");
					put(grammarAccess.getStateAccess().getGroup_1_1(), "rule__State__Group_1_1__0");
					put(grammarAccess.getStateAccess().getGroup_6_0(), "rule__State__Group_6_0__0");
					put(grammarAccess.getStateAccess().getGroup_6_0_2(), "rule__State__Group_6_0_2__0");
					put(grammarAccess.getStateAccess().getGroup_6_0_2_2(), "rule__State__Group_6_0_2_2__0");
					put(grammarAccess.getStateAccess().getGroup_6_1(), "rule__State__Group_6_1__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1(), "rule__State__Group_6_1_1__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1_0_2(), "rule__State__Group_6_1_1_0_2__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1_0_3(), "rule__State__Group_6_1_1_0_3__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1_0_4(), "rule__State__Group_6_1_1_0_4__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1_0_5(), "rule__State__Group_6_1_1_0_5__0");
					put(grammarAccess.getStateAccess().getGroup_6_1_1_2(), "rule__State__Group_6_1_1_2__0");
					put(grammarAccess.getTransitionAccess().getGroup(), "rule__Transition__Group__0");
					put(grammarAccess.getTransitionAccess().getGroup_4(), "rule__Transition__Group_4__0");
					put(grammarAccess.getTransitionAccess().getGroup_4_1_0(), "rule__Transition__Group_4_1_0__0");
					put(grammarAccess.getTransitionAccess().getGroup_4_1_0_3(), "rule__Transition__Group_4_1_0_3__0");
					put(grammarAccess.getTransitionAccess().getGroup_4_1_0_3_2(), "rule__Transition__Group_4_1_0_3_2__0");
					put(grammarAccess.getASignalAccess().getGroup(), "rule__ASignal__Group__0");
					put(grammarAccess.getASignalAccess().getGroup_5(), "rule__ASignal__Group_5__0");
					put(grammarAccess.getASignalAccess().getGroup_6_0(), "rule__ASignal__Group_6_0__0");
					put(grammarAccess.getASignalAccess().getGroup_6_1(), "rule__ASignal__Group_6_1__0");
					put(grammarAccess.getISignalAccess().getGroup(), "rule__ISignal__Group__0");
					put(grammarAccess.getISignalAccess().getGroup_5(), "rule__ISignal__Group_5__0");
					put(grammarAccess.getISignalAccess().getGroup_6_0(), "rule__ISignal__Group_6_0__0");
					put(grammarAccess.getISignalAccess().getGroup_6_1(), "rule__ISignal__Group_6_1__0");
					put(grammarAccess.getAVariableAccess().getGroup(), "rule__AVariable__Group__0");
					put(grammarAccess.getAVariableAccess().getGroup_3(), "rule__AVariable__Group_3__0");
					put(grammarAccess.getIVariableAccess().getGroup(), "rule__IVariable__Group__0");
					put(grammarAccess.getIVariableAccess().getGroup_3(), "rule__IVariable__Group_3__0");
					put(grammarAccess.getSubstitutionAccess().getGroup(), "rule__Substitution__Group__0");
					put(grammarAccess.getActionAccess().getGroup(), "rule__Action__Group__0");
					put(grammarAccess.getActionAccess().getGroup_4(), "rule__Action__Group_4__0");
					put(grammarAccess.getActionAccess().getGroup_4_2(), "rule__Action__Group_4_2__0");
					put(grammarAccess.getEmissionAccess().getGroup(), "rule__Emission__Group__0");
					put(grammarAccess.getEmissionAccess().getGroup_1(), "rule__Emission__Group_1__0");
					put(grammarAccess.getAssignmentAccess().getGroup(), "rule__Assignment__Group__0");
					put(grammarAccess.getTextEffectAccess().getGroup(), "rule__TextEffect__Group__0");
					put(grammarAccess.getTextEffectAccess().getGroup_1(), "rule__TextEffect__Group_1__0");
					put(grammarAccess.getOrExpressionAccess().getGroup(), "rule__OrExpression__Group__0");
					put(grammarAccess.getOrExpressionAccess().getGroup_1(), "rule__OrExpression__Group_1__0");
					put(grammarAccess.getAndExpressionAccess().getGroup(), "rule__AndExpression__Group__0");
					put(grammarAccess.getAndExpressionAccess().getGroup_1(), "rule__AndExpression__Group_1__0");
					put(grammarAccess.getCompareOperationAccess().getGroup_0(), "rule__CompareOperation__Group_0__0");
					put(grammarAccess.getCompareOperationAccess().getGroup_0_1(), "rule__CompareOperation__Group_0_1__0");
					put(grammarAccess.getNotExpressionAccess().getGroup_0(), "rule__NotExpression__Group_0__0");
					put(grammarAccess.getAddExpressionAccess().getGroup(), "rule__AddExpression__Group__0");
					put(grammarAccess.getAddExpressionAccess().getGroup_1(), "rule__AddExpression__Group_1__0");
					put(grammarAccess.getSubExpressionAccess().getGroup(), "rule__SubExpression__Group__0");
					put(grammarAccess.getSubExpressionAccess().getGroup_1(), "rule__SubExpression__Group_1__0");
					put(grammarAccess.getMultExpressionAccess().getGroup(), "rule__MultExpression__Group__0");
					put(grammarAccess.getMultExpressionAccess().getGroup_1(), "rule__MultExpression__Group_1__0");
					put(grammarAccess.getDivExpressionAccess().getGroup(), "rule__DivExpression__Group__0");
					put(grammarAccess.getDivExpressionAccess().getGroup_1(), "rule__DivExpression__Group_1__0");
					put(grammarAccess.getModExpressionAccess().getGroup(), "rule__ModExpression__Group__0");
					put(grammarAccess.getModExpressionAccess().getGroup_1(), "rule__ModExpression__Group_1__0");
					put(grammarAccess.getNegExpressionAccess().getGroup_0(), "rule__NegExpression__Group_0__0");
					put(grammarAccess.getAtomicExpressionAccess().getGroup_2(), "rule__AtomicExpression__Group_2__0");
					put(grammarAccess.getAtomicValuedExpressionAccess().getGroup_2(), "rule__AtomicValuedExpression__Group_2__0");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0(), "rule__ValuedObjectTestExpression__Group_0__0");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_1(), "rule__ValuedObjectTestExpression__Group_1__0");
					put(grammarAccess.getTextExpressionAccess().getGroup(), "rule__TextExpression__Group__0");
					put(grammarAccess.getTextExpressionAccess().getGroup_1(), "rule__TextExpression__Group_1__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0(), "rule__InterfaceSignalDecl__Group_0__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0_3(), "rule__InterfaceSignalDecl__Group_0_3__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1(), "rule__InterfaceSignalDecl__Group_1__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1_3(), "rule__InterfaceSignalDecl__Group_1_3__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2(), "rule__InterfaceSignalDecl__Group_2__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2_3(), "rule__InterfaceSignalDecl__Group_2_3__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3(), "rule__InterfaceSignalDecl__Group_3__0");
					put(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3_3(), "rule__InterfaceSignalDecl__Group_3_3__0");
					put(grammarAccess.getChannelDescriptionAccess().getGroup_0(), "rule__ChannelDescription__Group_0__0");
					put(grammarAccess.getChannelDescriptionAccess().getGroup_1(), "rule__ChannelDescription__Group_1__0");
					put(grammarAccess.getChannelDescriptionAccess().getGroup_2(), "rule__ChannelDescription__Group_2__0");
					put(grammarAccess.getInterfaceVariableDeclAccess().getGroup(), "rule__InterfaceVariableDecl__Group__0");
					put(grammarAccess.getInterfaceVariableDeclAccess().getGroup_2(), "rule__InterfaceVariableDecl__Group_2__0");
					put(grammarAccess.getVariableDeclAccess().getGroup(), "rule__VariableDecl__Group__0");
					put(grammarAccess.getVariableDeclAccess().getGroup_1(), "rule__VariableDecl__Group_1__0");
					put(grammarAccess.getTypeIdentifierAccess().getGroup_2(), "rule__TypeIdentifier__Group_2__0");
					put(grammarAccess.getTagAnnotationAccess().getGroup(), "rule__TagAnnotation__Group__0");
					put(grammarAccess.getTagAnnotationAccess().getGroup_2(), "rule__TagAnnotation__Group_2__0");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getGroup(), "rule__KeyStringValueAnnotation__Group__0");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3(), "rule__KeyStringValueAnnotation__Group_3__0");
					put(grammarAccess.getTypedStringAnnotationAccess().getGroup(), "rule__TypedStringAnnotation__Group__0");
					put(grammarAccess.getTypedStringAnnotationAccess().getGroup_4(), "rule__TypedStringAnnotation__Group_4__0");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup(), "rule__KeyBooleanValueAnnotation__Group__0");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3(), "rule__KeyBooleanValueAnnotation__Group_3__0");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getGroup(), "rule__KeyIntValueAnnotation__Group__0");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3(), "rule__KeyIntValueAnnotation__Group_3__0");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup(), "rule__KeyFloatValueAnnotation__Group__0");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3(), "rule__KeyFloatValueAnnotation__Group_3__0");
					put(grammarAccess.getImportAnnotationAccess().getGroup(), "rule__ImportAnnotation__Group__0");
					put(grammarAccess.getRootRegionAccess().getAnnotationsAssignment_0(), "rule__RootRegion__AnnotationsAssignment_0");
					put(grammarAccess.getRootRegionAccess().getAnnotationsAssignment_1_0(), "rule__RootRegion__AnnotationsAssignment_1_0");
					put(grammarAccess.getRootRegionAccess().getIdAssignment_1_2(), "rule__RootRegion__IdAssignment_1_2");
					put(grammarAccess.getRootRegionAccess().getLabelAssignment_1_3(), "rule__RootRegion__LabelAssignment_1_3");
					put(grammarAccess.getRootRegionAccess().getVariablesAssignment_1_5_0(), "rule__RootRegion__VariablesAssignment_1_5_0");
					put(grammarAccess.getRootRegionAccess().getSignalsAssignment_1_5_1(), "rule__RootRegion__SignalsAssignment_1_5_1");
					put(grammarAccess.getRootRegionAccess().getBodyTextAssignment_1_6(), "rule__RootRegion__BodyTextAssignment_1_6");
					put(grammarAccess.getRootRegionAccess().getStatesAssignment_2(), "rule__RootRegion__StatesAssignment_2");
					put(grammarAccess.getSingleRegionAccess().getAnnotationsAssignment_0_0(), "rule__SingleRegion__AnnotationsAssignment_0_0");
					put(grammarAccess.getSingleRegionAccess().getIdAssignment_0_2(), "rule__SingleRegion__IdAssignment_0_2");
					put(grammarAccess.getSingleRegionAccess().getLabelAssignment_0_3(), "rule__SingleRegion__LabelAssignment_0_3");
					put(grammarAccess.getSingleRegionAccess().getVariablesAssignment_0_5_0(), "rule__SingleRegion__VariablesAssignment_0_5_0");
					put(grammarAccess.getSingleRegionAccess().getSignalsAssignment_0_5_1(), "rule__SingleRegion__SignalsAssignment_0_5_1");
					put(grammarAccess.getSingleRegionAccess().getBodyTextAssignment_0_6(), "rule__SingleRegion__BodyTextAssignment_0_6");
					put(grammarAccess.getSingleRegionAccess().getStatesAssignment_1(), "rule__SingleRegion__StatesAssignment_1");
					put(grammarAccess.getTextualCodeAccess().getTypeAssignment_2_1(), "rule__TextualCode__TypeAssignment_2_1");
					put(grammarAccess.getTextualCodeAccess().getCodeAssignment_4(), "rule__TextualCode__CodeAssignment_4");
					put(grammarAccess.getRegionAccess().getAnnotationsAssignment_0(), "rule__Region__AnnotationsAssignment_0");
					put(grammarAccess.getRegionAccess().getIdAssignment_2(), "rule__Region__IdAssignment_2");
					put(grammarAccess.getRegionAccess().getLabelAssignment_3(), "rule__Region__LabelAssignment_3");
					put(grammarAccess.getRegionAccess().getVariablesAssignment_5_0(), "rule__Region__VariablesAssignment_5_0");
					put(grammarAccess.getRegionAccess().getSignalsAssignment_5_1(), "rule__Region__SignalsAssignment_5_1");
					put(grammarAccess.getRegionAccess().getBodyTextAssignment_6(), "rule__Region__BodyTextAssignment_6");
					put(grammarAccess.getRegionAccess().getStatesAssignment_7(), "rule__Region__StatesAssignment_7");
					put(grammarAccess.getStateAccess().getAnnotationsAssignment_0(), "rule__State__AnnotationsAssignment_0");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_1_0_0(), "rule__State__IsInitialAssignment_1_0_0");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_1_0_1(), "rule__State__IsFinalAssignment_1_0_1");
					put(grammarAccess.getStateAccess().getIsFinalAssignment_1_1_0(), "rule__State__IsFinalAssignment_1_1_0");
					put(grammarAccess.getStateAccess().getIsInitialAssignment_1_1_1(), "rule__State__IsInitialAssignment_1_1_1");
					put(grammarAccess.getStateAccess().getTypeAssignment_2(), "rule__State__TypeAssignment_2");
					put(grammarAccess.getStateAccess().getIdAssignment_4(), "rule__State__IdAssignment_4");
					put(grammarAccess.getStateAccess().getLabelAssignment_5(), "rule__State__LabelAssignment_5");
					put(grammarAccess.getStateAccess().getBodyReferenceAssignment_6_0_1(), "rule__State__BodyReferenceAssignment_6_0_1");
					put(grammarAccess.getStateAccess().getRenamingsAssignment_6_0_2_1(), "rule__State__RenamingsAssignment_6_0_2_1");
					put(grammarAccess.getStateAccess().getRenamingsAssignment_6_0_2_2_1(), "rule__State__RenamingsAssignment_6_0_2_2_1");
					put(grammarAccess.getStateAccess().getSignalsAssignment_6_1_1_0_0(), "rule__State__SignalsAssignment_6_1_1_0_0");
					put(grammarAccess.getStateAccess().getVariablesAssignment_6_1_1_0_1(), "rule__State__VariablesAssignment_6_1_1_0_1");
					put(grammarAccess.getStateAccess().getEntryActionsAssignment_6_1_1_0_2_1(), "rule__State__EntryActionsAssignment_6_1_1_0_2_1");
					put(grammarAccess.getStateAccess().getInnerActionsAssignment_6_1_1_0_3_1(), "rule__State__InnerActionsAssignment_6_1_1_0_3_1");
					put(grammarAccess.getStateAccess().getExitActionsAssignment_6_1_1_0_4_1(), "rule__State__ExitActionsAssignment_6_1_1_0_4_1");
					put(grammarAccess.getStateAccess().getSuspensionTriggerAssignment_6_1_1_0_5_1(), "rule__State__SuspensionTriggerAssignment_6_1_1_0_5_1");
					put(grammarAccess.getStateAccess().getBodyTextAssignment_6_1_1_1(), "rule__State__BodyTextAssignment_6_1_1_1");
					put(grammarAccess.getStateAccess().getRegionsAssignment_6_1_1_2_0(), "rule__State__RegionsAssignment_6_1_1_2_0");
					put(grammarAccess.getStateAccess().getRegionsAssignment_6_1_1_2_1(), "rule__State__RegionsAssignment_6_1_1_2_1");
					put(grammarAccess.getStateAccess().getOutgoingTransitionsAssignment_7(), "rule__State__OutgoingTransitionsAssignment_7");
					put(grammarAccess.getTransitionAccess().getAnnotationsAssignment_0(), "rule__Transition__AnnotationsAssignment_0");
					put(grammarAccess.getTransitionAccess().getTypeAssignment_1(), "rule__Transition__TypeAssignment_1");
					put(grammarAccess.getTransitionAccess().getPriorityAssignment_2(), "rule__Transition__PriorityAssignment_2");
					put(grammarAccess.getTransitionAccess().getTargetStateAssignment_3(), "rule__Transition__TargetStateAssignment_3");
					put(grammarAccess.getTransitionAccess().getIsImmediateAssignment_4_1_0_0(), "rule__Transition__IsImmediateAssignment_4_1_0_0");
					put(grammarAccess.getTransitionAccess().getDelayAssignment_4_1_0_1(), "rule__Transition__DelayAssignment_4_1_0_1");
					put(grammarAccess.getTransitionAccess().getTriggerAssignment_4_1_0_2(), "rule__Transition__TriggerAssignment_4_1_0_2");
					put(grammarAccess.getTransitionAccess().getEffectsAssignment_4_1_0_3_1(), "rule__Transition__EffectsAssignment_4_1_0_3_1");
					put(grammarAccess.getTransitionAccess().getEffectsAssignment_4_1_0_3_2_1(), "rule__Transition__EffectsAssignment_4_1_0_3_2_1");
					put(grammarAccess.getTransitionAccess().getLabelAssignment_4_1_1(), "rule__Transition__LabelAssignment_4_1_1");
					put(grammarAccess.getTransitionAccess().getIsHistoryAssignment_5(), "rule__Transition__IsHistoryAssignment_5");
					put(grammarAccess.getASignalAccess().getAnnotationsAssignment_0(), "rule__ASignal__AnnotationsAssignment_0");
					put(grammarAccess.getASignalAccess().getIsInputAssignment_1(), "rule__ASignal__IsInputAssignment_1");
					put(grammarAccess.getASignalAccess().getIsOutputAssignment_2(), "rule__ASignal__IsOutputAssignment_2");
					put(grammarAccess.getASignalAccess().getNameAssignment_4(), "rule__ASignal__NameAssignment_4");
					put(grammarAccess.getASignalAccess().getInitialValueAssignment_5_1(), "rule__ASignal__InitialValueAssignment_5_1");
					put(grammarAccess.getASignalAccess().getTypeAssignment_6_0_1_0(), "rule__ASignal__TypeAssignment_6_0_1_0");
					put(grammarAccess.getASignalAccess().getHostTypeAssignment_6_0_1_1(), "rule__ASignal__HostTypeAssignment_6_0_1_1");
					put(grammarAccess.getASignalAccess().getTypeAssignment_6_1_2_0(), "rule__ASignal__TypeAssignment_6_1_2_0");
					put(grammarAccess.getASignalAccess().getHostTypeAssignment_6_1_2_1(), "rule__ASignal__HostTypeAssignment_6_1_2_1");
					put(grammarAccess.getASignalAccess().getCombineOperatorAssignment_6_1_4_0(), "rule__ASignal__CombineOperatorAssignment_6_1_4_0");
					put(grammarAccess.getASignalAccess().getHostCombineOperatorAssignment_6_1_4_1(), "rule__ASignal__HostCombineOperatorAssignment_6_1_4_1");
					put(grammarAccess.getISignalAccess().getAnnotationsAssignment_0(), "rule__ISignal__AnnotationsAssignment_0");
					put(grammarAccess.getISignalAccess().getIsInputAssignment_1(), "rule__ISignal__IsInputAssignment_1");
					put(grammarAccess.getISignalAccess().getIsOutputAssignment_2(), "rule__ISignal__IsOutputAssignment_2");
					put(grammarAccess.getISignalAccess().getNameAssignment_4(), "rule__ISignal__NameAssignment_4");
					put(grammarAccess.getISignalAccess().getInitialValueAssignment_5_1(), "rule__ISignal__InitialValueAssignment_5_1");
					put(grammarAccess.getISignalAccess().getTypeAssignment_6_0_1_0(), "rule__ISignal__TypeAssignment_6_0_1_0");
					put(grammarAccess.getISignalAccess().getHostTypeAssignment_6_0_1_1(), "rule__ISignal__HostTypeAssignment_6_0_1_1");
					put(grammarAccess.getISignalAccess().getTypeAssignment_6_1_2_0(), "rule__ISignal__TypeAssignment_6_1_2_0");
					put(grammarAccess.getISignalAccess().getHostTypeAssignment_6_1_2_1(), "rule__ISignal__HostTypeAssignment_6_1_2_1");
					put(grammarAccess.getISignalAccess().getCombineOperatorAssignment_6_1_4_0(), "rule__ISignal__CombineOperatorAssignment_6_1_4_0");
					put(grammarAccess.getISignalAccess().getHostCombineOperatorAssignment_6_1_4_1(), "rule__ISignal__HostCombineOperatorAssignment_6_1_4_1");
					put(grammarAccess.getAVariableAccess().getAnnotationsAssignment_0(), "rule__AVariable__AnnotationsAssignment_0");
					put(grammarAccess.getAVariableAccess().getNameAssignment_2(), "rule__AVariable__NameAssignment_2");
					put(grammarAccess.getAVariableAccess().getInitialValueAssignment_3_1(), "rule__AVariable__InitialValueAssignment_3_1");
					put(grammarAccess.getAVariableAccess().getTypeAssignment_5_0(), "rule__AVariable__TypeAssignment_5_0");
					put(grammarAccess.getAVariableAccess().getHostTypeAssignment_5_1(), "rule__AVariable__HostTypeAssignment_5_1");
					put(grammarAccess.getIVariableAccess().getAnnotationsAssignment_0(), "rule__IVariable__AnnotationsAssignment_0");
					put(grammarAccess.getIVariableAccess().getNameAssignment_2(), "rule__IVariable__NameAssignment_2");
					put(grammarAccess.getIVariableAccess().getInitialValueAssignment_3_1(), "rule__IVariable__InitialValueAssignment_3_1");
					put(grammarAccess.getIVariableAccess().getTypeAssignment_5_0(), "rule__IVariable__TypeAssignment_5_0");
					put(grammarAccess.getIVariableAccess().getHostTypeAssignment_5_1(), "rule__IVariable__HostTypeAssignment_5_1");
					put(grammarAccess.getSubstitutionAccess().getActualAssignment_0(), "rule__Substitution__ActualAssignment_0");
					put(grammarAccess.getSubstitutionAccess().getFormalAssignment_2(), "rule__Substitution__FormalAssignment_2");
					put(grammarAccess.getActionAccess().getIsImmediateAssignment_1(), "rule__Action__IsImmediateAssignment_1");
					put(grammarAccess.getActionAccess().getDelayAssignment_2(), "rule__Action__DelayAssignment_2");
					put(grammarAccess.getActionAccess().getTriggerAssignment_3(), "rule__Action__TriggerAssignment_3");
					put(grammarAccess.getActionAccess().getEffectsAssignment_4_1(), "rule__Action__EffectsAssignment_4_1");
					put(grammarAccess.getActionAccess().getEffectsAssignment_4_2_1(), "rule__Action__EffectsAssignment_4_2_1");
					put(grammarAccess.getEmissionAccess().getSignalAssignment_0(), "rule__Emission__SignalAssignment_0");
					put(grammarAccess.getEmissionAccess().getNewValueAssignment_1_1(), "rule__Emission__NewValueAssignment_1_1");
					put(grammarAccess.getAssignmentAccess().getVariableAssignment_0(), "rule__Assignment__VariableAssignment_0");
					put(grammarAccess.getAssignmentAccess().getExpressionAssignment_2(), "rule__Assignment__ExpressionAssignment_2");
					put(grammarAccess.getTextEffectAccess().getCodeAssignment_0(), "rule__TextEffect__CodeAssignment_0");
					put(grammarAccess.getTextEffectAccess().getTypeAssignment_1_1(), "rule__TextEffect__TypeAssignment_1_1");
					put(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1(), "rule__OrExpression__OperatorAssignment_1_1");
					put(grammarAccess.getOrExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__OrExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1(), "rule__AndExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAndExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__AndExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getCompareOperationAccess().getOperatorAssignment_0_1_1(), "rule__CompareOperation__OperatorAssignment_0_1_1");
					put(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_0_1_2(), "rule__CompareOperation__SubExpressionsAssignment_0_1_2");
					put(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1(), "rule__NotExpression__OperatorAssignment_0_1");
					put(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2(), "rule__NotExpression__SubExpressionsAssignment_0_2");
					put(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1(), "rule__AddExpression__OperatorAssignment_1_1");
					put(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__AddExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1(), "rule__SubExpression__OperatorAssignment_1_1");
					put(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__SubExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1(), "rule__MultExpression__OperatorAssignment_1_1");
					put(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__MultExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1(), "rule__DivExpression__OperatorAssignment_1_1");
					put(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__DivExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1(), "rule__ModExpression__OperatorAssignment_1_1");
					put(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__ModExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1(), "rule__NegExpression__OperatorAssignment_0_1");
					put(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2(), "rule__NegExpression__SubExpressionsAssignment_0_2");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1(), "rule__ValuedObjectTestExpression__OperatorAssignment_0_1");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3(), "rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_1_1(), "rule__ValuedObjectTestExpression__OperatorAssignment_1_1");
					put(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_1_2(), "rule__ValuedObjectTestExpression__SubExpressionsAssignment_1_2");
					put(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment(), "rule__ValuedObjectReference__ValuedObjectAssignment");
					put(grammarAccess.getTextExpressionAccess().getCodeAssignment_0(), "rule__TextExpression__CodeAssignment_0");
					put(grammarAccess.getTextExpressionAccess().getTypeAssignment_1_1(), "rule__TextExpression__TypeAssignment_1_1");
					put(grammarAccess.getIntValueAccess().getValueAssignment(), "rule__IntValue__ValueAssignment");
					put(grammarAccess.getFloatValueAccess().getValueAssignment(), "rule__FloatValue__ValueAssignment");
					put(grammarAccess.getBooleanValueAccess().getValueAssignment(), "rule__BooleanValue__ValueAssignment");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_2(), "rule__InterfaceSignalDecl__SignalsAssignment_0_2");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_3_1(), "rule__InterfaceSignalDecl__SignalsAssignment_0_3_1");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_2(), "rule__InterfaceSignalDecl__SignalsAssignment_1_2");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_3_1(), "rule__InterfaceSignalDecl__SignalsAssignment_1_3_1");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_2(), "rule__InterfaceSignalDecl__SignalsAssignment_2_2");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_3_1(), "rule__InterfaceSignalDecl__SignalsAssignment_2_3_1");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_2(), "rule__InterfaceSignalDecl__SignalsAssignment_3_2");
					put(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_3_1(), "rule__InterfaceSignalDecl__SignalsAssignment_3_3_1");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_0_1(), "rule__ChannelDescription__TypeAssignment_0_1");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_1_1(), "rule__ChannelDescription__TypeAssignment_1_1");
					put(grammarAccess.getChannelDescriptionAccess().getExpressionAssignment_2_1(), "rule__ChannelDescription__ExpressionAssignment_2_1");
					put(grammarAccess.getChannelDescriptionAccess().getTypeAssignment_2_3(), "rule__ChannelDescription__TypeAssignment_2_3");
					put(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_1(), "rule__InterfaceVariableDecl__VarDeclsAssignment_1");
					put(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_2_1(), "rule__InterfaceVariableDecl__VarDeclsAssignment_2_1");
					put(grammarAccess.getVariableDeclAccess().getVariablesAssignment_0(), "rule__VariableDecl__VariablesAssignment_0");
					put(grammarAccess.getVariableDeclAccess().getVariablesAssignment_1_1(), "rule__VariableDecl__VariablesAssignment_1_1");
					put(grammarAccess.getVariableDeclAccess().getTypeAssignment_3(), "rule__VariableDecl__TypeAssignment_3");
					put(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_0(), "rule__TypeIdentifier__TypeAssignment_0");
					put(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_1(), "rule__TypeIdentifier__TypeIDAssignment_1");
					put(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_2_1_0(), "rule__TypeIdentifier__TypeAssignment_2_1_0");
					put(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_2_1_1(), "rule__TypeIdentifier__TypeIDAssignment_2_1_1");
					put(grammarAccess.getTypeIdentifierAccess().getOperatorAssignment_2_3(), "rule__TypeIdentifier__OperatorAssignment_2_3");
					put(grammarAccess.getCommentAnnotationAccess().getValueAssignment(), "rule__CommentAnnotation__ValueAssignment");
					put(grammarAccess.getTagAnnotationAccess().getNameAssignment_1(), "rule__TagAnnotation__NameAssignment_1");
					put(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1(), "rule__TagAnnotation__AnnotationsAssignment_2_1");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1(), "rule__KeyStringValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2(), "rule__KeyStringValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getTypedStringAnnotationAccess().getNameAssignment_1(), "rule__TypedStringAnnotation__NameAssignment_1");
					put(grammarAccess.getTypedStringAnnotationAccess().getTypeAssignment_2(), "rule__TypedStringAnnotation__TypeAssignment_2");
					put(grammarAccess.getTypedStringAnnotationAccess().getValueAssignment_3(), "rule__TypedStringAnnotation__ValueAssignment_3");
					put(grammarAccess.getTypedStringAnnotationAccess().getAnnotationsAssignment_4_1(), "rule__TypedStringAnnotation__AnnotationsAssignment_4_1");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1(), "rule__KeyBooleanValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2(), "rule__KeyBooleanValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1(), "rule__KeyIntValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2(), "rule__KeyIntValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1(), "rule__KeyFloatValueAnnotation__NameAssignment_1");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2(), "rule__KeyFloatValueAnnotation__ValueAssignment_2");
					put(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1(), "rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1");
					put(grammarAccess.getImportAnnotationAccess().getImportURIAssignment_1(), "rule__ImportAnnotation__ImportURIAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.cau.cs.kieler.synccharts.text.kitsState.ui.contentassist.antlr.internal.InternalKitsStateParser typedParser = (de.cau.cs.kieler.synccharts.text.kitsState.ui.contentassist.antlr.internal.InternalKitsStateParser) parser;
			typedParser.entryRuleRootState();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public KitsStateGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(KitsStateGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
