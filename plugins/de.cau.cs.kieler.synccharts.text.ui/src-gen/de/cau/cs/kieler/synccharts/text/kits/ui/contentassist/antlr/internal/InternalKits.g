/*
* generated by Xtext
*/
grammar InternalKits;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.cau.cs.kieler.synccharts.text.kits.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.kieler.synccharts.text.kits.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.kieler.synccharts.text.kits.services.KitsGrammarAccess;

}

@parser::members {
 
 	private KitsGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(KitsGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleRootRegion
entryRuleRootRegion 
:
{ before(grammarAccess.getRootRegionRule()); }
	 ruleRootRegion
{ after(grammarAccess.getRootRegionRule()); } 
	 EOF 
;

// Rule RootRegion
ruleRootRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRootRegionAccess().getGroup()); }
(rule__RootRegion__Group__0)
{ after(grammarAccess.getRootRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleRegion
entryRuleSingleRegion 
:
{ before(grammarAccess.getSingleRegionRule()); }
	 ruleSingleRegion
{ after(grammarAccess.getSingleRegionRule()); } 
	 EOF 
;

// Rule SingleRegion
ruleSingleRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleRegionAccess().getGroup()); }
(rule__SingleRegion__Group__0)
{ after(grammarAccess.getSingleRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextualCode
entryRuleTextualCode 
:
{ before(grammarAccess.getTextualCodeRule()); }
	 ruleTextualCode
{ after(grammarAccess.getTextualCodeRule()); } 
	 EOF 
;

// Rule TextualCode
ruleTextualCode
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextualCodeAccess().getGroup()); }
(rule__TextualCode__Group__0)
{ after(grammarAccess.getTextualCodeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegion
entryRuleRegion 
:
{ before(grammarAccess.getRegionRule()); }
	 ruleRegion
{ after(grammarAccess.getRegionRule()); } 
	 EOF 
;

// Rule Region
ruleRegion
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegionAccess().getGroup()); }
(rule__Region__Group__0)
{ after(grammarAccess.getRegionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignal
entryRuleSignal 
:
{ before(grammarAccess.getSignalRule()); }
	 ruleSignal
{ after(grammarAccess.getSignalRule()); } 
	 EOF 
;

// Rule Signal
ruleSignal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalAccess().getAlternatives()); }
(rule__Signal__Alternatives)
{ after(grammarAccess.getSignalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleaSignal
entryRuleaSignal 
:
{ before(grammarAccess.getASignalRule()); }
	 ruleaSignal
{ after(grammarAccess.getASignalRule()); } 
	 EOF 
;

// Rule aSignal
ruleaSignal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getASignalAccess().getGroup()); }
(rule__ASignal__Group__0)
{ after(grammarAccess.getASignalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleISignal
entryRuleISignal 
:
{ before(grammarAccess.getISignalRule()); }
	 ruleISignal
{ after(grammarAccess.getISignalRule()); } 
	 EOF 
;

// Rule ISignal
ruleISignal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getISignalAccess().getGroup()); }
(rule__ISignal__Group__0)
{ after(grammarAccess.getISignalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleaVariable
entryRuleaVariable 
:
{ before(grammarAccess.getAVariableRule()); }
	 ruleaVariable
{ after(grammarAccess.getAVariableRule()); } 
	 EOF 
;

// Rule aVariable
ruleaVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAVariableAccess().getGroup()); }
(rule__AVariable__Group__0)
{ after(grammarAccess.getAVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIVariable
entryRuleIVariable 
:
{ before(grammarAccess.getIVariableRule()); }
	 ruleIVariable
{ after(grammarAccess.getIVariableRule()); } 
	 EOF 
;

// Rule IVariable
ruleIVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIVariableAccess().getGroup()); }
(rule__IVariable__Group__0)
{ after(grammarAccess.getIVariableAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubstitution
entryRuleSubstitution 
:
{ before(grammarAccess.getSubstitutionRule()); }
	 ruleSubstitution
{ after(grammarAccess.getSubstitutionRule()); } 
	 EOF 
;

// Rule Substitution
ruleSubstitution
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubstitutionAccess().getGroup()); }
(rule__Substitution__Group__0)
{ after(grammarAccess.getSubstitutionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAction
entryRuleAction 
:
{ before(grammarAccess.getActionRule()); }
	 ruleAction
{ after(grammarAccess.getActionRule()); } 
	 EOF 
;

// Rule Action
ruleAction
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getActionAccess().getGroup()); }
(rule__Action__Group__0)
{ after(grammarAccess.getActionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEffect
entryRuleEffect 
:
{ before(grammarAccess.getEffectRule()); }
	 ruleEffect
{ after(grammarAccess.getEffectRule()); } 
	 EOF 
;

// Rule Effect
ruleEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectAccess().getAlternatives()); }
(rule__Effect__Alternatives)
{ after(grammarAccess.getEffectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmission
entryRuleEmission 
:
{ before(grammarAccess.getEmissionRule()); }
	 ruleEmission
{ after(grammarAccess.getEmissionRule()); } 
	 EOF 
;

// Rule Emission
ruleEmission
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmissionAccess().getGroup()); }
(rule__Emission__Group__0)
{ after(grammarAccess.getEmissionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextEffect
entryRuleTextEffect 
:
{ before(grammarAccess.getTextEffectRule()); }
	 ruleTextEffect
{ after(grammarAccess.getTextEffectRule()); } 
	 EOF 
;

// Rule TextEffect
ruleTextEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextEffectAccess().getGroup()); }
(rule__TextEffect__Group__0)
{ after(grammarAccess.getTextEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression 
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanExpressionAccess().getOrExpressionParserRuleCall()); }
	ruleOrExpression
{ after(grammarAccess.getBooleanExpressionAccess().getOrExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrExpression
entryRuleOrExpression 
:
{ before(grammarAccess.getOrExpressionRule()); }
	 ruleOrExpression
{ after(grammarAccess.getOrExpressionRule()); } 
	 EOF 
;

// Rule OrExpression
ruleOrExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup()); }
(rule__OrExpression__Group__0)
{ after(grammarAccess.getOrExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndExpression
entryRuleAndExpression 
:
{ before(grammarAccess.getAndExpressionRule()); }
	 ruleAndExpression
{ after(grammarAccess.getAndExpressionRule()); } 
	 EOF 
;

// Rule AndExpression
ruleAndExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup()); }
(rule__AndExpression__Group__0)
{ after(grammarAccess.getAndExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareOperation
entryRuleCompareOperation 
:
{ before(grammarAccess.getCompareOperationRule()); }
	 ruleCompareOperation
{ after(grammarAccess.getCompareOperationRule()); } 
	 EOF 
;

// Rule CompareOperation
ruleCompareOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareOperationAccess().getAlternatives()); }
(rule__CompareOperation__Alternatives)
{ after(grammarAccess.getCompareOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotOrValuedExpression
entryRuleNotOrValuedExpression 
:
{ before(grammarAccess.getNotOrValuedExpressionRule()); }
	 ruleNotOrValuedExpression
{ after(grammarAccess.getNotOrValuedExpressionRule()); } 
	 EOF 
;

// Rule NotOrValuedExpression
ruleNotOrValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); }
(rule__NotOrValuedExpression__Alternatives)
{ after(grammarAccess.getNotOrValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNotExpression
entryRuleNotExpression 
:
{ before(grammarAccess.getNotExpressionRule()); }
	 ruleNotExpression
{ after(grammarAccess.getNotExpressionRule()); } 
	 EOF 
;

// Rule NotExpression
ruleNotExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNotExpressionAccess().getAlternatives()); }
(rule__NotExpression__Alternatives)
{ after(grammarAccess.getNotExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedExpression
entryRuleValuedExpression 
:
{ before(grammarAccess.getValuedExpressionRule()); }
	 ruleValuedExpression
{ after(grammarAccess.getValuedExpressionRule()); } 
	 EOF 
;

// Rule ValuedExpression
ruleValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); }
	ruleAddExpression
{ after(grammarAccess.getValuedExpressionAccess().getAddExpressionParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAddExpression
entryRuleAddExpression 
:
{ before(grammarAccess.getAddExpressionRule()); }
	 ruleAddExpression
{ after(grammarAccess.getAddExpressionRule()); } 
	 EOF 
;

// Rule AddExpression
ruleAddExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup()); }
(rule__AddExpression__Group__0)
{ after(grammarAccess.getAddExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSubExpression
entryRuleSubExpression 
:
{ before(grammarAccess.getSubExpressionRule()); }
	 ruleSubExpression
{ after(grammarAccess.getSubExpressionRule()); } 
	 EOF 
;

// Rule SubExpression
ruleSubExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup()); }
(rule__SubExpression__Group__0)
{ after(grammarAccess.getSubExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultExpression
entryRuleMultExpression 
:
{ before(grammarAccess.getMultExpressionRule()); }
	 ruleMultExpression
{ after(grammarAccess.getMultExpressionRule()); } 
	 EOF 
;

// Rule MultExpression
ruleMultExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup()); }
(rule__MultExpression__Group__0)
{ after(grammarAccess.getMultExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivExpression
entryRuleDivExpression 
:
{ before(grammarAccess.getDivExpressionRule()); }
	 ruleDivExpression
{ after(grammarAccess.getDivExpressionRule()); } 
	 EOF 
;

// Rule DivExpression
ruleDivExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup()); }
(rule__DivExpression__Group__0)
{ after(grammarAccess.getDivExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModExpression
entryRuleModExpression 
:
{ before(grammarAccess.getModExpressionRule()); }
	 ruleModExpression
{ after(grammarAccess.getModExpressionRule()); } 
	 EOF 
;

// Rule ModExpression
ruleModExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModExpressionAccess().getGroup()); }
(rule__ModExpression__Group__0)
{ after(grammarAccess.getModExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNegExpression
entryRuleNegExpression 
:
{ before(grammarAccess.getNegExpressionRule()); }
	 ruleNegExpression
{ after(grammarAccess.getNegExpressionRule()); } 
	 EOF 
;

// Rule NegExpression
ruleNegExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNegExpressionAccess().getAlternatives()); }
(rule__NegExpression__Alternatives)
{ after(grammarAccess.getNegExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicExpression
entryRuleAtomicExpression 
:
{ before(grammarAccess.getAtomicExpressionRule()); }
	 ruleAtomicExpression
{ after(grammarAccess.getAtomicExpressionRule()); } 
	 EOF 
;

// Rule AtomicExpression
ruleAtomicExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
(rule__AtomicExpression__Alternatives)
{ after(grammarAccess.getAtomicExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAtomicValuedExpression
entryRuleAtomicValuedExpression 
:
{ before(grammarAccess.getAtomicValuedExpressionRule()); }
	 ruleAtomicValuedExpression
{ after(grammarAccess.getAtomicValuedExpressionRule()); } 
	 EOF 
;

// Rule AtomicValuedExpression
ruleAtomicValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); }
(rule__AtomicValuedExpression__Alternatives)
{ after(grammarAccess.getAtomicValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObjectTestExpression
entryRuleValuedObjectTestExpression 
:
{ before(grammarAccess.getValuedObjectTestExpressionRule()); }
	 ruleValuedObjectTestExpression
{ after(grammarAccess.getValuedObjectTestExpressionRule()); } 
	 EOF 
;

// Rule ValuedObjectTestExpression
ruleValuedObjectTestExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); }
(rule__ValuedObjectTestExpression__Alternatives)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedObjectReference
entryRuleValuedObjectReference 
:
{ before(grammarAccess.getValuedObjectReferenceRule()); }
	 ruleValuedObjectReference
{ after(grammarAccess.getValuedObjectReferenceRule()); } 
	 EOF 
;

// Rule ValuedObjectReference
ruleValuedObjectReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment()); }
(rule__ValuedObjectReference__ValuedObjectAssignment)
{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextExpression
entryRuleTextExpression 
:
{ before(grammarAccess.getTextExpressionRule()); }
	 ruleTextExpression
{ after(grammarAccess.getTextExpressionRule()); } 
	 EOF 
;

// Rule TextExpression
ruleTextExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextExpressionAccess().getGroup()); }
(rule__TextExpression__Group__0)
{ after(grammarAccess.getTextExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getValueAssignment()); }
(rule__IntValue__ValueAssignment)
{ after(grammarAccess.getIntValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatValue
entryRuleFloatValue 
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatValueAccess().getValueAssignment()); }
(rule__FloatValue__ValueAssignment)
{ after(grammarAccess.getFloatValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanValue
entryRuleBooleanValue 
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
(rule__BooleanValue__ValueAssignment)
{ after(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnyType
entryRuleAnyType 
:
{ before(grammarAccess.getAnyTypeRule()); }
	 ruleAnyType
{ after(grammarAccess.getAnyTypeRule()); } 
	 EOF 
;

// Rule AnyType
ruleAnyType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnyTypeAccess().getAlternatives()); }
(rule__AnyType__Alternatives)
{ after(grammarAccess.getAnyTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceDeclaration
entryRuleInterfaceDeclaration 
:
{ before(grammarAccess.getInterfaceDeclarationRule()); }
	 ruleInterfaceDeclaration
{ after(grammarAccess.getInterfaceDeclarationRule()); } 
	 EOF 
;

// Rule InterfaceDeclaration
ruleInterfaceDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getAlternatives()); }
(rule__InterfaceDeclaration__Alternatives)
{ after(grammarAccess.getInterfaceDeclarationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInterfaceSignalDecl
entryRuleInterfaceSignalDecl 
:
{ before(grammarAccess.getInterfaceSignalDeclRule()); }
	 ruleInterfaceSignalDecl
{ after(grammarAccess.getInterfaceSignalDeclRule()); } 
	 EOF 
;

// Rule InterfaceSignalDecl
ruleInterfaceSignalDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getAlternatives()); }
(rule__InterfaceSignalDecl__Alternatives)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleInterfaceVariableDecl
entryRuleInterfaceVariableDecl 
:
{ before(grammarAccess.getInterfaceVariableDeclRule()); }
	 ruleInterfaceVariableDecl
{ after(grammarAccess.getInterfaceVariableDeclRule()); } 
	 EOF 
;

// Rule InterfaceVariableDecl
ruleInterfaceVariableDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getGroup()); }
(rule__InterfaceVariableDecl__Group__0)
{ after(grammarAccess.getInterfaceVariableDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDecl
entryRuleVariableDecl 
:
{ before(grammarAccess.getVariableDeclRule()); }
	 ruleVariableDecl
{ after(grammarAccess.getVariableDeclRule()); } 
	 EOF 
;

// Rule VariableDecl
ruleVariableDecl
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDeclAccess().getGroup()); }
(rule__VariableDecl__Group__0)
{ after(grammarAccess.getVariableDeclAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeIdentifier
entryRuleTypeIdentifier 
:
{ before(grammarAccess.getTypeIdentifierRule()); }
	 ruleTypeIdentifier
{ after(grammarAccess.getTypeIdentifierRule()); } 
	 EOF 
;

// Rule TypeIdentifier
ruleTypeIdentifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeIdentifierAccess().getAlternatives()); }
(rule__TypeIdentifier__Alternatives)
{ after(grammarAccess.getTypeIdentifierAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAnnotation
entryRuleAnnotation 
:
{ before(grammarAccess.getAnnotationRule()); }
	 ruleAnnotation
{ after(grammarAccess.getAnnotationRule()); } 
	 EOF 
;

// Rule Annotation
ruleAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAnnotationAccess().getAlternatives()); }
(rule__Annotation__Alternatives)
{ after(grammarAccess.getAnnotationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCommentAnnotation
entryRuleCommentAnnotation 
:
{ before(grammarAccess.getCommentAnnotationRule()); }
	 ruleCommentAnnotation
{ after(grammarAccess.getCommentAnnotationRule()); } 
	 EOF 
;

// Rule CommentAnnotation
ruleCommentAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValueAssignment()); }
(rule__CommentAnnotation__ValueAssignment)
{ after(grammarAccess.getCommentAnnotationAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTagAnnotation
entryRuleTagAnnotation 
:
{ before(grammarAccess.getTagAnnotationRule()); }
	 ruleTagAnnotation
{ after(grammarAccess.getTagAnnotationRule()); } 
	 EOF 
;

// Rule TagAnnotation
ruleTagAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTagAnnotationAccess().getGroup()); }
(rule__TagAnnotation__Group__0)
{ after(grammarAccess.getTagAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyStringValueAnnotation
entryRuleKeyStringValueAnnotation 
:
{ before(grammarAccess.getKeyStringValueAnnotationRule()); }
	 ruleKeyStringValueAnnotation
{ after(grammarAccess.getKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyStringValueAnnotation
ruleKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
(rule__KeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypedKeyStringValueAnnotation
entryRuleTypedKeyStringValueAnnotation 
:
{ before(grammarAccess.getTypedKeyStringValueAnnotationRule()); }
	 ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getTypedKeyStringValueAnnotationRule()); } 
	 EOF 
;

// Rule TypedKeyStringValueAnnotation
ruleTypedKeyStringValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
(rule__TypedKeyStringValueAnnotation__Group__0)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyBooleanValueAnnotation
entryRuleKeyBooleanValueAnnotation 
:
{ before(grammarAccess.getKeyBooleanValueAnnotationRule()); }
	 ruleKeyBooleanValueAnnotation
{ after(grammarAccess.getKeyBooleanValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyBooleanValueAnnotation
ruleKeyBooleanValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup()); }
(rule__KeyBooleanValueAnnotation__Group__0)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyIntValueAnnotation
entryRuleKeyIntValueAnnotation 
:
{ before(grammarAccess.getKeyIntValueAnnotationRule()); }
	 ruleKeyIntValueAnnotation
{ after(grammarAccess.getKeyIntValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyIntValueAnnotation
ruleKeyIntValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getGroup()); }
(rule__KeyIntValueAnnotation__Group__0)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyFloatValueAnnotation
entryRuleKeyFloatValueAnnotation 
:
{ before(grammarAccess.getKeyFloatValueAnnotationRule()); }
	 ruleKeyFloatValueAnnotation
{ after(grammarAccess.getKeyFloatValueAnnotationRule()); } 
	 EOF 
;

// Rule KeyFloatValueAnnotation
ruleKeyFloatValueAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup()); }
(rule__KeyFloatValueAnnotation__Group__0)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImportAnnotation
entryRuleImportAnnotation 
:
{ before(grammarAccess.getImportAnnotationRule()); }
	 ruleImportAnnotation
{ after(grammarAccess.getImportAnnotationRule()); } 
	 EOF 
;

// Rule ImportAnnotation
ruleImportAnnotation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAnnotationAccess().getGroup()); }
(rule__ImportAnnotation__Group__0)
{ after(grammarAccess.getImportAnnotationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEString
entryRuleEString 
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEStringAccess().getAlternatives()); }
(rule__EString__Alternatives)
{ after(grammarAccess.getEStringAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExtendedID
entryRuleExtendedID 
:
{ before(grammarAccess.getExtendedIDRule()); }
	 ruleExtendedID
{ after(grammarAccess.getExtendedIDRule()); } 
	 EOF 
;

// Rule ExtendedID
ruleExtendedID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup()); }
(rule__ExtendedID__Group__0)
{ after(grammarAccess.getExtendedIDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule StateType
ruleStateType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateTypeAccess().getAlternatives()); }
(rule__StateType__Alternatives)
{ after(grammarAccess.getStateTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule TransitionType
ruleTransitionType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionTypeAccess().getAlternatives()); }
(rule__TransitionType__Alternatives)
{ after(grammarAccess.getTransitionTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DivOperator
ruleDivOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); }
(	':' 
)
{ after(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompareOperator
ruleCompareOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
(rule__CompareOperator__Alternatives)
{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule PreOperator
rulePreOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); }
(	'pre' 
)
{ after(grammarAccess.getPreOperatorAccess().getPREEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OrOperator
ruleOrOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); }
(	'or' 
)
{ after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AndOperator
ruleAndOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration()); }
(	'and' 
)
{ after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule NotOperator
ruleNotOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); }
(	'not' 
)
{ after(grammarAccess.getNotOperatorAccess().getNOTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule AddOperator
ruleAddOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); }
(	'+' 
)
{ after(grammarAccess.getAddOperatorAccess().getADDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule SubOperator
ruleSubOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); }
(	'-' 
)
{ after(grammarAccess.getSubOperatorAccess().getSUBEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MultOperator
ruleMultOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); }
(	'*' 
)
{ after(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ModOperator
ruleModOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); }
(	'mod' 
)
{ after(grammarAccess.getModOperatorAccess().getMODEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ValueTestOperator
ruleValueTestOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTestOperatorAccess().getVALEnumLiteralDeclaration()); }
(	'?' 
)
{ after(grammarAccess.getValueTestOperatorAccess().getVALEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ValueType
ruleValueType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
(rule__ValueType__Alternatives)
{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CombineOperator
ruleCombineOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
(rule__CombineOperator__Alternatives)
{ after(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RootRegion__Alternatives_1_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getVariablesAssignment_1_5_0()); }
(rule__RootRegion__VariablesAssignment_1_5_0)
{ after(grammarAccess.getRootRegionAccess().getVariablesAssignment_1_5_0()); }
)

    |(
{ before(grammarAccess.getRootRegionAccess().getSignalsAssignment_1_5_1()); }
(rule__RootRegion__SignalsAssignment_1_5_1)
{ after(grammarAccess.getRootRegionAccess().getSignalsAssignment_1_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__Alternatives_0_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getVariablesAssignment_0_5_0()); }
(rule__SingleRegion__VariablesAssignment_0_5_0)
{ after(grammarAccess.getSingleRegionAccess().getVariablesAssignment_0_5_0()); }
)

    |(
{ before(grammarAccess.getSingleRegionAccess().getSignalsAssignment_0_5_1()); }
(rule__SingleRegion__SignalsAssignment_0_5_1)
{ after(grammarAccess.getSingleRegionAccess().getSignalsAssignment_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getVariablesAssignment_5_0()); }
(rule__Region__VariablesAssignment_5_0)
{ after(grammarAccess.getRegionAccess().getVariablesAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getRegionAccess().getSignalsAssignment_5_1()); }
(rule__Region__SignalsAssignment_5_1)
{ after(grammarAccess.getRegionAccess().getSignalsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_1_0()); }
(rule__State__Group_1_0__0)
{ after(grammarAccess.getStateAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_1_1()); }
(rule__State__Group_1_1__0)
{ after(grammarAccess.getStateAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_6_0()); }
(rule__State__Group_6_0__0)
{ after(grammarAccess.getStateAccess().getGroup_6_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_6_1()); }
(rule__State__Group_6_1__0)
{ after(grammarAccess.getStateAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__Alternatives_6_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSignalsAssignment_6_1_1_0_0()); }
(rule__State__SignalsAssignment_6_1_1_0_0)
{ after(grammarAccess.getStateAccess().getSignalsAssignment_6_1_1_0_0()); }
)

    |(
{ before(grammarAccess.getStateAccess().getVariablesAssignment_6_1_1_0_1()); }
(rule__State__VariablesAssignment_6_1_1_0_1)
{ after(grammarAccess.getStateAccess().getVariablesAssignment_6_1_1_0_1()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_6_1_1_0_2()); }
(rule__State__Group_6_1_1_0_2__0)
{ after(grammarAccess.getStateAccess().getGroup_6_1_1_0_2()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_6_1_1_0_3()); }
(rule__State__Group_6_1_1_0_3__0)
{ after(grammarAccess.getStateAccess().getGroup_6_1_1_0_3()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_6_1_1_0_4()); }
(rule__State__Group_6_1_1_0_4__0)
{ after(grammarAccess.getStateAccess().getGroup_6_1_1_0_4()); }
)

    |(
{ before(grammarAccess.getStateAccess().getGroup_6_1_1_0_5()); }
(rule__State__Group_6_1_1_0_5__0)
{ after(grammarAccess.getStateAccess().getGroup_6_1_1_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Alternatives_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_4_1_0()); }
(rule__Transition__Group_4_1_0__0)
{ after(grammarAccess.getTransitionAccess().getGroup_4_1_0()); }
)

    |(
{ before(grammarAccess.getTransitionAccess().getLabelAssignment_4_1_1()); }
(rule__Transition__LabelAssignment_4_1_1)
{ after(grammarAccess.getTransitionAccess().getLabelAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getASignalParserRuleCall_0()); }
	ruleaSignal
{ after(grammarAccess.getSignalAccess().getASignalParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSignalAccess().getISignalParserRuleCall_1()); }
	ruleISignal
{ after(grammarAccess.getSignalAccess().getISignalParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getGroup_6_0()); }
(rule__ASignal__Group_6_0__0)
{ after(grammarAccess.getASignalAccess().getGroup_6_0()); }
)

    |(
{ before(grammarAccess.getASignalAccess().getGroup_6_1()); }
(rule__ASignal__Group_6_1__0)
{ after(grammarAccess.getASignalAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Alternatives_6_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getTypeAssignment_6_0_1_0()); }
(rule__ASignal__TypeAssignment_6_0_1_0)
{ after(grammarAccess.getASignalAccess().getTypeAssignment_6_0_1_0()); }
)

    |(
{ before(grammarAccess.getASignalAccess().getHostTypeAssignment_6_0_1_1()); }
(rule__ASignal__HostTypeAssignment_6_0_1_1)
{ after(grammarAccess.getASignalAccess().getHostTypeAssignment_6_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Alternatives_6_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getTypeAssignment_6_1_2_0()); }
(rule__ASignal__TypeAssignment_6_1_2_0)
{ after(grammarAccess.getASignalAccess().getTypeAssignment_6_1_2_0()); }
)

    |(
{ before(grammarAccess.getASignalAccess().getHostTypeAssignment_6_1_2_1()); }
(rule__ASignal__HostTypeAssignment_6_1_2_1)
{ after(grammarAccess.getASignalAccess().getHostTypeAssignment_6_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Alternatives_6_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getCombineOperatorAssignment_6_1_4_0()); }
(rule__ASignal__CombineOperatorAssignment_6_1_4_0)
{ after(grammarAccess.getASignalAccess().getCombineOperatorAssignment_6_1_4_0()); }
)

    |(
{ before(grammarAccess.getASignalAccess().getHostCombineOperatorAssignment_6_1_4_1()); }
(rule__ASignal__HostCombineOperatorAssignment_6_1_4_1)
{ after(grammarAccess.getASignalAccess().getHostCombineOperatorAssignment_6_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getGroup_6_0()); }
(rule__ISignal__Group_6_0__0)
{ after(grammarAccess.getISignalAccess().getGroup_6_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getGroup_6_1()); }
(rule__ISignal__Group_6_1__0)
{ after(grammarAccess.getISignalAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_6_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeAssignment_6_0_1_0()); }
(rule__ISignal__TypeAssignment_6_0_1_0)
{ after(grammarAccess.getISignalAccess().getTypeAssignment_6_0_1_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getHostTypeAssignment_6_0_1_1()); }
(rule__ISignal__HostTypeAssignment_6_0_1_1)
{ after(grammarAccess.getISignalAccess().getHostTypeAssignment_6_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_6_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeAssignment_6_1_2_0()); }
(rule__ISignal__TypeAssignment_6_1_2_0)
{ after(grammarAccess.getISignalAccess().getTypeAssignment_6_1_2_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getHostTypeAssignment_6_1_2_1()); }
(rule__ISignal__HostTypeAssignment_6_1_2_1)
{ after(grammarAccess.getISignalAccess().getHostTypeAssignment_6_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Alternatives_6_1_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getCombineOperatorAssignment_6_1_4_0()); }
(rule__ISignal__CombineOperatorAssignment_6_1_4_0)
{ after(grammarAccess.getISignalAccess().getCombineOperatorAssignment_6_1_4_0()); }
)

    |(
{ before(grammarAccess.getISignalAccess().getHostCombineOperatorAssignment_6_1_4_1()); }
(rule__ISignal__HostCombineOperatorAssignment_6_1_4_1)
{ after(grammarAccess.getISignalAccess().getHostCombineOperatorAssignment_6_1_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getAVariableParserRuleCall_0()); }
	ruleaVariable
{ after(grammarAccess.getVariableAccess().getAVariableParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getIVariableParserRuleCall_1()); }
	ruleIVariable
{ after(grammarAccess.getVariableAccess().getIVariableParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getTypeAssignment_5_0()); }
(rule__AVariable__TypeAssignment_5_0)
{ after(grammarAccess.getAVariableAccess().getTypeAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getAVariableAccess().getHostTypeAssignment_5_1()); }
(rule__AVariable__HostTypeAssignment_5_1)
{ after(grammarAccess.getAVariableAccess().getHostTypeAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getTypeAssignment_5_0()); }
(rule__IVariable__TypeAssignment_5_0)
{ after(grammarAccess.getIVariableAccess().getTypeAssignment_5_0()); }
)

    |(
{ before(grammarAccess.getIVariableAccess().getHostTypeAssignment_5_1()); }
(rule__IVariable__HostTypeAssignment_5_1)
{ after(grammarAccess.getIVariableAccess().getHostTypeAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getEmissionParserRuleCall_0()); }
	ruleEmission
{ after(grammarAccess.getEffectAccess().getEmissionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_1()); }
	ruleAssignment
{ after(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getTextEffectParserRuleCall_2()); }
	ruleTextEffect
{ after(grammarAccess.getEffectAccess().getTextEffectParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_0()); }
	ruleBooleanExpression
{ after(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1()); }
	ruleValuedExpression
{ after(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup_0()); }
(rule__CompareOperation__Group_0__0)
{ after(grammarAccess.getCompareOperationAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getCompareOperationAccess().getNotExpressionParserRuleCall_1()); }
	ruleNotExpression
{ after(grammarAccess.getCompareOperationAccess().getNotExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotOrValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); }
	ruleValuedExpression
{ after(grammarAccess.getNotOrValuedExpressionAccess().getValuedExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); }
	ruleNotExpression
{ after(grammarAccess.getNotOrValuedExpressionAccess().getNotExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getGroup_0()); }
(rule__NotExpression__Group_0__0)
{ after(grammarAccess.getNotExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); }
	ruleAtomicExpression
{ after(grammarAccess.getNotExpressionAccess().getAtomicExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getGroup_0()); }
(rule__NegExpression__Group_0__0)
{ after(grammarAccess.getNegExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); }
	ruleAtomicValuedExpression
{ after(grammarAccess.getNegExpressionAccess().getAtomicValuedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getBooleanValueParserRuleCall_0()); }
	ruleBooleanValue
{ after(grammarAccess.getAtomicExpressionAccess().getBooleanValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_1()); }
	ruleValuedObjectTestExpression
{ after(grammarAccess.getAtomicExpressionAccess().getValuedObjectTestExpressionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getGroup_2()); }
(rule__AtomicExpression__Group_2__0)
{ after(grammarAccess.getAtomicExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_3()); }
	ruleTextExpression
{ after(grammarAccess.getAtomicExpressionAccess().getTextExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); }
	ruleIntValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getIntValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
	ruleFloatValue
{ after(grammarAccess.getAtomicValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getGroup_2()); }
(rule__AtomicValuedExpression__Group_2__0)
{ after(grammarAccess.getAtomicValuedExpressionAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_3()); }
	ruleAtomicExpression
{ after(grammarAccess.getAtomicValuedExpressionAccess().getAtomicExpressionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); }
(rule__ValuedObjectTestExpression__Group_0__0)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_1()); }
(rule__ValuedObjectTestExpression__Group_1__0)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_2()); }
	ruleValuedObjectReference
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getValuedObjectReferenceParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AnyType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnyTypeAccess().getBooleanTerminalRuleCall_0()); }
	RULE_BOOLEAN
{ after(grammarAccess.getAnyTypeAccess().getBooleanTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnyTypeAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
{ after(grammarAccess.getAnyTypeAccess().getINTTerminalRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnyTypeAccess().getFloatTerminalRuleCall_2()); }
	RULE_FLOAT
{ after(grammarAccess.getAnyTypeAccess().getFloatTerminalRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAnyTypeAccess().getIDTerminalRuleCall_3()); }
	RULE_ID
{ after(grammarAccess.getAnyTypeAccess().getIDTerminalRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAnyTypeAccess().getSTRINGTerminalRuleCall_4()); }
	RULE_STRING
{ after(grammarAccess.getAnyTypeAccess().getSTRINGTerminalRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceDeclaration__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceDeclarationAccess().getInterfaceSignalDeclParserRuleCall_0()); }
	ruleInterfaceSignalDecl
{ after(grammarAccess.getInterfaceDeclarationAccess().getInterfaceSignalDeclParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getInterfaceDeclarationAccess().getInterfaceVariableDeclParserRuleCall_1()); }
	ruleInterfaceVariableDecl
{ after(grammarAccess.getInterfaceDeclarationAccess().getInterfaceVariableDeclParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0()); }
(rule__InterfaceSignalDecl__Group_0__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1()); }
(rule__InterfaceSignalDecl__Group_1__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2()); }
(rule__InterfaceSignalDecl__Group_2__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3()); }
(rule__InterfaceSignalDecl__Group_3__0)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_0()); }
(rule__TypeIdentifier__TypeAssignment_0)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_1()); }
(rule__TypeIdentifier__TypeIDAssignment_1)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_1()); }
)

    |(
{ before(grammarAccess.getTypeIdentifierAccess().getGroup_2()); }
(rule__TypeIdentifier__Group_2__0)
{ after(grammarAccess.getTypeIdentifierAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Alternatives_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_2_1_0()); }
(rule__TypeIdentifier__TypeAssignment_2_1_0)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_2_1_0()); }
)

    |(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_2_1_1()); }
(rule__TypeIdentifier__TypeIDAssignment_2_1_1)
{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Annotation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
	ruleCommentAnnotation
{ after(grammarAccess.getAnnotationAccess().getCommentAnnotationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_1()); }
	ruleTagAnnotation
{ after(grammarAccess.getAnnotationAccess().getTagAnnotationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_2()); }
	ruleKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyStringValueAnnotationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_3()); }
	ruleTypedKeyStringValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getTypedKeyStringValueAnnotationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_4()); }
	ruleKeyBooleanValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyBooleanValueAnnotationParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_5()); }
	ruleKeyIntValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyIntValueAnnotationParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_6()); }
	ruleKeyFloatValueAnnotation
{ after(grammarAccess.getAnnotationAccess().getKeyFloatValueAnnotationParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	RULE_STRING
{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	RULE_ID
{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateTypeAccess().getNORMALEnumLiteralDeclaration_0()); }
(	'normal' 
)
{ after(grammarAccess.getStateTypeAccess().getNORMALEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getStateTypeAccess().getCONDITIONALEnumLiteralDeclaration_1()); }
(	'conditional' 
)
{ after(grammarAccess.getStateTypeAccess().getCONDITIONALEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getStateTypeAccess().getREFERENCEEnumLiteralDeclaration_2()); }
(	'reference' 
)
{ after(grammarAccess.getStateTypeAccess().getREFERENCEEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getStateTypeAccess().getTEXTUALEnumLiteralDeclaration_3()); }
(	'textual' 
)
{ after(grammarAccess.getStateTypeAccess().getTEXTUALEnumLiteralDeclaration_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0()); }
(	'-->' 
)
{ after(grammarAccess.getTransitionTypeAccess().getWEAKABORTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getTransitionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1()); }
(	'o->' 
)
{ after(grammarAccess.getTransitionTypeAccess().getSTRONGABORTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getTransitionTypeAccess().getNORMALTERMINATIONEnumLiteralDeclaration_2()); }
(	'>->' 
)
{ after(grammarAccess.getTransitionTypeAccess().getNORMALTERMINATIONEnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
(	'<' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
(	'>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
(	'>=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
(	'<>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
(	'pure' 
)
{ after(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
(	'boolean' 
)
{ after(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
(	'unsigned' 
)
{ after(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
(	'integer' 
)
{ after(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
(	'float' 
)
{ after(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getDOUBLEEnumLiteralDeclaration_5()); }
(	'double' 
)
{ after(grammarAccess.getValueTypeAccess().getDOUBLEEnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_6()); }
(	'string' 
)
{ after(grammarAccess.getValueTypeAccess().getSTRINGEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_7()); }
(	'host' 
)
{ after(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombineOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
(	'none' 
)
{ after(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
(	'*' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
(	'max' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
(	'min' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
(	'or' 
)
{ after(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
(	'and' 
)
{ after(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
(	'host' 
)
{ after(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__RootRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootRegion__Group__0__Impl
	rule__RootRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getAnnotationsAssignment_0()); }
(rule__RootRegion__AnnotationsAssignment_0)*
{ after(grammarAccess.getRootRegionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootRegion__Group__1__Impl
	rule__RootRegion__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getGroup_1()); }
(rule__RootRegion__Group_1__0)?
{ after(grammarAccess.getRootRegionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootRegion__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootRegion__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getStatesAssignment_2()); }
(rule__RootRegion__StatesAssignment_2)*
{ after(grammarAccess.getRootRegionAccess().getStatesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RootRegion__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootRegion__Group_1__0__Impl
	rule__RootRegion__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getAnnotationsAssignment_1_0()); }
(rule__RootRegion__AnnotationsAssignment_1_0)*
{ after(grammarAccess.getRootRegionAccess().getAnnotationsAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootRegion__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootRegion__Group_1__1__Impl
	rule__RootRegion__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getRegionKeyword_1_1()); }

	'region' 

{ after(grammarAccess.getRootRegionAccess().getRegionKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootRegion__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootRegion__Group_1__2__Impl
	rule__RootRegion__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getIdAssignment_1_2()); }
(rule__RootRegion__IdAssignment_1_2)?
{ after(grammarAccess.getRootRegionAccess().getIdAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootRegion__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootRegion__Group_1__3__Impl
	rule__RootRegion__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getLabelAssignment_1_3()); }
(rule__RootRegion__LabelAssignment_1_3)?
{ after(grammarAccess.getRootRegionAccess().getLabelAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootRegion__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootRegion__Group_1__4__Impl
	rule__RootRegion__Group_1__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getColonKeyword_1_4()); }

	':' 

{ after(grammarAccess.getRootRegionAccess().getColonKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootRegion__Group_1__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootRegion__Group_1__5__Impl
	rule__RootRegion__Group_1__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__Group_1__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getAlternatives_1_5()); }
(rule__RootRegion__Alternatives_1_5)*
{ after(grammarAccess.getRootRegionAccess().getAlternatives_1_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RootRegion__Group_1__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RootRegion__Group_1__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__Group_1__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getBodyTextAssignment_1_6()); }
(rule__RootRegion__BodyTextAssignment_1_6)*
{ after(grammarAccess.getRootRegionAccess().getBodyTextAssignment_1_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__SingleRegion__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleRegion__Group__0__Impl
	rule__SingleRegion__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getGroup_0()); }
(rule__SingleRegion__Group_0__0)?
{ after(grammarAccess.getSingleRegionAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleRegion__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleRegion__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getStatesAssignment_1()); }
(rule__SingleRegion__StatesAssignment_1)*
{ after(grammarAccess.getSingleRegionAccess().getStatesAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SingleRegion__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleRegion__Group_0__0__Impl
	rule__SingleRegion__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getAnnotationsAssignment_0_0()); }
(rule__SingleRegion__AnnotationsAssignment_0_0)*
{ after(grammarAccess.getSingleRegionAccess().getAnnotationsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleRegion__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleRegion__Group_0__1__Impl
	rule__SingleRegion__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getRegionKeyword_0_1()); }

	'region' 

{ after(grammarAccess.getSingleRegionAccess().getRegionKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleRegion__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleRegion__Group_0__2__Impl
	rule__SingleRegion__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getIdAssignment_0_2()); }
(rule__SingleRegion__IdAssignment_0_2)?
{ after(grammarAccess.getSingleRegionAccess().getIdAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleRegion__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleRegion__Group_0__3__Impl
	rule__SingleRegion__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getLabelAssignment_0_3()); }
(rule__SingleRegion__LabelAssignment_0_3)?
{ after(grammarAccess.getSingleRegionAccess().getLabelAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleRegion__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleRegion__Group_0__4__Impl
	rule__SingleRegion__Group_0__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getColonKeyword_0_4()); }

	':' 

{ after(grammarAccess.getSingleRegionAccess().getColonKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleRegion__Group_0__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleRegion__Group_0__5__Impl
	rule__SingleRegion__Group_0__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__Group_0__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getAlternatives_0_5()); }
(rule__SingleRegion__Alternatives_0_5)*
{ after(grammarAccess.getSingleRegionAccess().getAlternatives_0_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SingleRegion__Group_0__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SingleRegion__Group_0__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__Group_0__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getBodyTextAssignment_0_6()); }
(rule__SingleRegion__BodyTextAssignment_0_6)*
{ after(grammarAccess.getSingleRegionAccess().getBodyTextAssignment_0_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TextualCode__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextualCode__Group__0__Impl
	rule__TextualCode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualCode__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextualCodeAccess().getTextualKeyword_0()); }

	'textual' 

{ after(grammarAccess.getTextualCodeAccess().getTextualKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextualCode__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextualCode__Group__1__Impl
	rule__TextualCode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualCode__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextualCodeAccess().getCodeKeyword_1()); }

	'code' 

{ after(grammarAccess.getTextualCodeAccess().getCodeKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextualCode__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextualCode__Group__2__Impl
	rule__TextualCode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualCode__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextualCodeAccess().getGroup_2()); }
(rule__TextualCode__Group_2__0)?
{ after(grammarAccess.getTextualCodeAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextualCode__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextualCode__Group__3__Impl
	rule__TextualCode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualCode__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextualCodeAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getTextualCodeAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextualCode__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextualCode__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualCode__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextualCodeAccess().getCodeAssignment_4()); }
(rule__TextualCode__CodeAssignment_4)
{ after(grammarAccess.getTextualCodeAccess().getCodeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__TextualCode__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextualCode__Group_2__0__Impl
	rule__TextualCode__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualCode__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextualCodeAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getTextualCodeAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextualCode__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextualCode__Group_2__1__Impl
	rule__TextualCode__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualCode__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextualCodeAccess().getTypeAssignment_2_1()); }
(rule__TextualCode__TypeAssignment_2_1)
{ after(grammarAccess.getTextualCodeAccess().getTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextualCode__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextualCode__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextualCode__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextualCodeAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getTextualCodeAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Region__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__0__Impl
	rule__Region__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getAnnotationsAssignment_0()); }
(rule__Region__AnnotationsAssignment_0)*
{ after(grammarAccess.getRegionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__1__Impl
	rule__Region__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getRegionKeyword_1()); }

	'region' 

{ after(grammarAccess.getRegionAccess().getRegionKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__2__Impl
	rule__Region__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getIdAssignment_2()); }
(rule__Region__IdAssignment_2)?
{ after(grammarAccess.getRegionAccess().getIdAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__3__Impl
	rule__Region__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getLabelAssignment_3()); }
(rule__Region__LabelAssignment_3)?
{ after(grammarAccess.getRegionAccess().getLabelAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__4__Impl
	rule__Region__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getRegionAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__5__Impl
	rule__Region__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getAlternatives_5()); }
(rule__Region__Alternatives_5)*
{ after(grammarAccess.getRegionAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__6__Impl
	rule__Region__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getBodyTextAssignment_6()); }
(rule__Region__BodyTextAssignment_6)*
{ after(grammarAccess.getRegionAccess().getBodyTextAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Region__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Region__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Region__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getRegionAccess().getStatesAssignment_7()); }
(rule__Region__StatesAssignment_7)
{ after(grammarAccess.getRegionAccess().getStatesAssignment_7()); }
)
(
{ before(grammarAccess.getRegionAccess().getStatesAssignment_7()); }
(rule__Region__StatesAssignment_7)*
{ after(grammarAccess.getRegionAccess().getStatesAssignment_7()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAnnotationsAssignment_0()); }
(rule__State__AnnotationsAssignment_0)*
{ after(grammarAccess.getStateAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAlternatives_1()); }
(rule__State__Alternatives_1)?
{ after(grammarAccess.getStateAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
	rule__State__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTypeAssignment_2()); }
(rule__State__TypeAssignment_2)?
{ after(grammarAccess.getStateAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__3__Impl
	rule__State__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getStateKeyword_3()); }

	'state' 

{ after(grammarAccess.getStateAccess().getStateKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__4__Impl
	rule__State__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIdAssignment_4()); }
(rule__State__IdAssignment_4)
{ after(grammarAccess.getStateAccess().getIdAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__5__Impl
	rule__State__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLabelAssignment_5()); }
(rule__State__LabelAssignment_5)?
{ after(grammarAccess.getStateAccess().getLabelAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__6__Impl
	rule__State__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAlternatives_6()); }
(rule__State__Alternatives_6)?
{ after(grammarAccess.getStateAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOutgoingTransitionsAssignment_7()); }
(rule__State__OutgoingTransitionsAssignment_7)*
{ after(grammarAccess.getStateAccess().getOutgoingTransitionsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__State__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1_0__0__Impl
	rule__State__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIsInitialAssignment_1_0_0()); }
(rule__State__IsInitialAssignment_1_0_0)
{ after(grammarAccess.getStateAccess().getIsInitialAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIsFinalAssignment_1_0_1()); }
(rule__State__IsFinalAssignment_1_0_1)?
{ after(grammarAccess.getStateAccess().getIsFinalAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1_1__0__Impl
	rule__State__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIsFinalAssignment_1_1_0()); }
(rule__State__IsFinalAssignment_1_1_0)
{ after(grammarAccess.getStateAccess().getIsFinalAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIsInitialAssignment_1_1_1()); }
(rule__State__IsInitialAssignment_1_1_1)?
{ after(grammarAccess.getStateAccess().getIsInitialAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0__0__Impl
	rule__State__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getCommercialAtKeyword_6_0_0()); }

	'@' 

{ after(grammarAccess.getStateAccess().getCommercialAtKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0__1__Impl
	rule__State__Group_6_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBodyReferenceAssignment_6_0_1()); }
(rule__State__BodyReferenceAssignment_6_0_1)
{ after(grammarAccess.getStateAccess().getBodyReferenceAssignment_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_6_0_2()); }
(rule__State__Group_6_0_2__0)?
{ after(grammarAccess.getStateAccess().getGroup_6_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__State__Group_6_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0_2__0__Impl
	rule__State__Group_6_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftSquareBracketKeyword_6_0_2_0()); }

	'[' 

{ after(grammarAccess.getStateAccess().getLeftSquareBracketKeyword_6_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0_2__1__Impl
	rule__State__Group_6_0_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRenamingsAssignment_6_0_2_1()); }
(rule__State__RenamingsAssignment_6_0_2_1)
{ after(grammarAccess.getStateAccess().getRenamingsAssignment_6_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_0_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0_2__2__Impl
	rule__State__Group_6_0_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_6_0_2_2()); }
(rule__State__Group_6_0_2_2__0)*
{ after(grammarAccess.getStateAccess().getGroup_6_0_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_0_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightSquareBracketKeyword_6_0_2_3()); }

	']' 

{ after(grammarAccess.getStateAccess().getRightSquareBracketKeyword_6_0_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__State__Group_6_0_2_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0_2_2__0__Impl
	rule__State__Group_6_0_2_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0_2_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getCommaKeyword_6_0_2_2_0()); }

	',' 

{ after(grammarAccess.getStateAccess().getCommaKeyword_6_0_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_0_2_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_0_2_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_0_2_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRenamingsAssignment_6_0_2_2_1()); }
(rule__State__RenamingsAssignment_6_0_2_2_1)
{ after(grammarAccess.getStateAccess().getRenamingsAssignment_6_0_2_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1__0__Impl
	rule__State__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_6_1_0()); }

	'{' 

{ after(grammarAccess.getStateAccess().getLeftCurlyBracketKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1__1__Impl
	rule__State__Group_6_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_6_1_1()); }
(rule__State__Group_6_1_1__0)
{ after(grammarAccess.getStateAccess().getGroup_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_6_1_2()); }

	'}' 

{ after(grammarAccess.getStateAccess().getRightCurlyBracketKeyword_6_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__State__Group_6_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1__0__Impl
	rule__State__Group_6_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAlternatives_6_1_1_0()); }
(rule__State__Alternatives_6_1_1_0)*
{ after(grammarAccess.getStateAccess().getAlternatives_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1__1__Impl
	rule__State__Group_6_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBodyTextAssignment_6_1_1_1()); }
(rule__State__BodyTextAssignment_6_1_1_1)*
{ after(grammarAccess.getStateAccess().getBodyTextAssignment_6_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getGroup_6_1_1_2()); }
(rule__State__Group_6_1_1_2__0)?
{ after(grammarAccess.getStateAccess().getGroup_6_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__State__Group_6_1_1_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1_0_2__0__Impl
	rule__State__Group_6_1_1_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOnentryKeyword_6_1_1_0_2_0()); }

	'onentry' 

{ after(grammarAccess.getStateAccess().getOnentryKeyword_6_1_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1_1_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getEntryActionsAssignment_6_1_1_0_2_1()); }
(rule__State__EntryActionsAssignment_6_1_1_0_2_1)
{ after(grammarAccess.getStateAccess().getEntryActionsAssignment_6_1_1_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_6_1_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1_0_3__0__Impl
	rule__State__Group_6_1_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOninnerKeyword_6_1_1_0_3_0()); }

	'oninner' 

{ after(grammarAccess.getStateAccess().getOninnerKeyword_6_1_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getInnerActionsAssignment_6_1_1_0_3_1()); }
(rule__State__InnerActionsAssignment_6_1_1_0_3_1)
{ after(grammarAccess.getStateAccess().getInnerActionsAssignment_6_1_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_6_1_1_0_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1_0_4__0__Impl
	rule__State__Group_6_1_1_0_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1_0_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOnexitKeyword_6_1_1_0_4_0()); }

	'onexit' 

{ after(grammarAccess.getStateAccess().getOnexitKeyword_6_1_1_0_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1_1_0_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1_0_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1_0_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getExitActionsAssignment_6_1_1_0_4_1()); }
(rule__State__ExitActionsAssignment_6_1_1_0_4_1)
{ after(grammarAccess.getStateAccess().getExitActionsAssignment_6_1_1_0_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_6_1_1_0_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1_0_5__0__Impl
	rule__State__Group_6_1_1_0_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1_0_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSuspensionKeyword_6_1_1_0_5_0()); }

	'suspension' 

{ after(grammarAccess.getStateAccess().getSuspensionKeyword_6_1_1_0_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1_1_0_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1_0_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1_0_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSuspensionTriggerAssignment_6_1_1_0_5_1()); }
(rule__State__SuspensionTriggerAssignment_6_1_1_0_5_1)
{ after(grammarAccess.getStateAccess().getSuspensionTriggerAssignment_6_1_1_0_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__State__Group_6_1_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1_2__0__Impl
	rule__State__Group_6_1_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsAssignment_6_1_1_2_0()); }
(rule__State__RegionsAssignment_6_1_1_2_0)
{ after(grammarAccess.getStateAccess().getRegionsAssignment_6_1_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group_6_1_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group_6_1_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group_6_1_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsAssignment_6_1_1_2_1()); }
(rule__State__RegionsAssignment_6_1_1_2_1)*
{ after(grammarAccess.getStateAccess().getRegionsAssignment_6_1_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAnnotationsAssignment_0()); }
(rule__Transition__AnnotationsAssignment_0)*
{ after(grammarAccess.getTransitionAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTypeAssignment_1()); }
(rule__Transition__TypeAssignment_1)
{ after(grammarAccess.getTransitionAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getPriorityAssignment_2()); }
(rule__Transition__PriorityAssignment_2)?
{ after(grammarAccess.getTransitionAccess().getPriorityAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateAssignment_3()); }
(rule__Transition__TargetStateAssignment_3)
{ after(grammarAccess.getTransitionAccess().getTargetStateAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
	rule__Transition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_4()); }
(rule__Transition__Group_4__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getIsHistoryAssignment_5()); }
(rule__Transition__IsHistoryAssignment_5)?
{ after(grammarAccess.getTransitionAccess().getIsHistoryAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Transition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4__0__Impl
	rule__Transition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getWithKeyword_4_0()); }

	'with' 

{ after(grammarAccess.getTransitionAccess().getWithKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAlternatives_4_1()); }
(rule__Transition__Alternatives_4_1)
{ after(grammarAccess.getTransitionAccess().getAlternatives_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Transition__Group_4_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4_1_0__0__Impl
	rule__Transition__Group_4_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getIsImmediateAssignment_4_1_0_0()); }
(rule__Transition__IsImmediateAssignment_4_1_0_0)?
{ after(grammarAccess.getTransitionAccess().getIsImmediateAssignment_4_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4_1_0__1__Impl
	rule__Transition__Group_4_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDelayAssignment_4_1_0_1()); }
(rule__Transition__DelayAssignment_4_1_0_1)?
{ after(grammarAccess.getTransitionAccess().getDelayAssignment_4_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4_1_0__2__Impl
	rule__Transition__Group_4_1_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerAssignment_4_1_0_2()); }
(rule__Transition__TriggerAssignment_4_1_0_2)?
{ after(grammarAccess.getTransitionAccess().getTriggerAssignment_4_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4_1_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4_1_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_1_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_4_1_0_3()); }
(rule__Transition__Group_4_1_0_3__0)?
{ after(grammarAccess.getTransitionAccess().getGroup_4_1_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Transition__Group_4_1_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4_1_0_3__0__Impl
	rule__Transition__Group_4_1_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_1_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSolidusKeyword_4_1_0_3_0()); }

	'/' 

{ after(grammarAccess.getTransitionAccess().getSolidusKeyword_4_1_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4_1_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4_1_0_3__1__Impl
	rule__Transition__Group_4_1_0_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_1_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsAssignment_4_1_0_3_1()); }
(rule__Transition__EffectsAssignment_4_1_0_3_1)
{ after(grammarAccess.getTransitionAccess().getEffectsAssignment_4_1_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4_1_0_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4_1_0_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_1_0_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getGroup_4_1_0_3_2()); }
(rule__Transition__Group_4_1_0_3_2__0)*
{ after(grammarAccess.getTransitionAccess().getGroup_4_1_0_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transition__Group_4_1_0_3_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4_1_0_3_2__0__Impl
	rule__Transition__Group_4_1_0_3_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_1_0_3_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getCommaKeyword_4_1_0_3_2_0()); }

	',' 

{ after(grammarAccess.getTransitionAccess().getCommaKeyword_4_1_0_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group_4_1_0_3_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group_4_1_0_3_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group_4_1_0_3_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsAssignment_4_1_0_3_2_1()); }
(rule__Transition__EffectsAssignment_4_1_0_3_2_1)
{ after(grammarAccess.getTransitionAccess().getEffectsAssignment_4_1_0_3_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASignal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group__0__Impl
	rule__ASignal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getAnnotationsAssignment_0()); }
(rule__ASignal__AnnotationsAssignment_0)*
{ after(grammarAccess.getASignalAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group__1__Impl
	rule__ASignal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getIsInputAssignment_1()); }
(rule__ASignal__IsInputAssignment_1)?
{ after(grammarAccess.getASignalAccess().getIsInputAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group__2__Impl
	rule__ASignal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getIsOutputAssignment_2()); }
(rule__ASignal__IsOutputAssignment_2)?
{ after(grammarAccess.getASignalAccess().getIsOutputAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group__3__Impl
	rule__ASignal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getSignalKeyword_3()); }

	'signal' 

{ after(grammarAccess.getASignalAccess().getSignalKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group__4__Impl
	rule__ASignal__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getNameAssignment_4()); }
(rule__ASignal__NameAssignment_4)
{ after(grammarAccess.getASignalAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group__5__Impl
	rule__ASignal__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getGroup_5()); }
(rule__ASignal__Group_5__0)?
{ after(grammarAccess.getASignalAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getAlternatives_6()); }
(rule__ASignal__Alternatives_6)?
{ after(grammarAccess.getASignalAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ASignal__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group_5__0__Impl
	rule__ASignal__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getColonEqualsSignKeyword_5_0()); }

	':=' 

{ after(grammarAccess.getASignalAccess().getColonEqualsSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getInitialValueAssignment_5_1()); }
(rule__ASignal__InitialValueAssignment_5_1)
{ after(grammarAccess.getASignalAccess().getInitialValueAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASignal__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group_6_0__0__Impl
	rule__ASignal__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getColonKeyword_6_0_0()); }

	':' 

{ after(grammarAccess.getASignalAccess().getColonKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group_6_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getAlternatives_6_0_1()); }
(rule__ASignal__Alternatives_6_0_1)
{ after(grammarAccess.getASignalAccess().getAlternatives_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ASignal__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group_6_1__0__Impl
	rule__ASignal__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getColonKeyword_6_1_0()); }

	':' 

{ after(grammarAccess.getASignalAccess().getColonKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group_6_1__1__Impl
	rule__ASignal__Group_6_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getCombineKeyword_6_1_1()); }

	'combine' 

{ after(grammarAccess.getASignalAccess().getCombineKeyword_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group_6_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group_6_1__2__Impl
	rule__ASignal__Group_6_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group_6_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getAlternatives_6_1_2()); }
(rule__ASignal__Alternatives_6_1_2)
{ after(grammarAccess.getASignalAccess().getAlternatives_6_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group_6_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group_6_1__3__Impl
	rule__ASignal__Group_6_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group_6_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getWithKeyword_6_1_3()); }

	'with' 

{ after(grammarAccess.getASignalAccess().getWithKeyword_6_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ASignal__Group_6_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ASignal__Group_6_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__Group_6_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getAlternatives_6_1_4()); }
(rule__ASignal__Alternatives_6_1_4)
{ after(grammarAccess.getASignalAccess().getAlternatives_6_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ISignal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__0__Impl
	rule__ISignal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAnnotationsAssignment_0()); }
(rule__ISignal__AnnotationsAssignment_0)*
{ after(grammarAccess.getISignalAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__1__Impl
	rule__ISignal__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getIsInputAssignment_1()); }
(rule__ISignal__IsInputAssignment_1)?
{ after(grammarAccess.getISignalAccess().getIsInputAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__2__Impl
	rule__ISignal__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getIsOutputAssignment_2()); }
(rule__ISignal__IsOutputAssignment_2)?
{ after(grammarAccess.getISignalAccess().getIsOutputAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__3__Impl
	rule__ISignal__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getSignalKeyword_3()); }

	'signal' 

{ after(grammarAccess.getISignalAccess().getSignalKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__4__Impl
	rule__ISignal__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getNameAssignment_4()); }
(rule__ISignal__NameAssignment_4)
{ after(grammarAccess.getISignalAccess().getNameAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__5__Impl
	rule__ISignal__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getGroup_5()); }
(rule__ISignal__Group_5__0)?
{ after(grammarAccess.getISignalAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_6()); }
(rule__ISignal__Alternatives_6)?
{ after(grammarAccess.getISignalAccess().getAlternatives_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ISignal__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_5__0__Impl
	rule__ISignal__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getColonEqualsSignKeyword_5_0()); }

	':=' 

{ after(grammarAccess.getISignalAccess().getColonEqualsSignKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getInitialValueAssignment_5_1()); }
(rule__ISignal__InitialValueAssignment_5_1)
{ after(grammarAccess.getISignalAccess().getInitialValueAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ISignal__Group_6_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_6_0__0__Impl
	rule__ISignal__Group_6_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_6_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getColonKeyword_6_0_0()); }

	':' 

{ after(grammarAccess.getISignalAccess().getColonKeyword_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_6_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_6_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_6_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_6_0_1()); }
(rule__ISignal__Alternatives_6_0_1)
{ after(grammarAccess.getISignalAccess().getAlternatives_6_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ISignal__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_6_1__0__Impl
	rule__ISignal__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getColonKeyword_6_1_0()); }

	':' 

{ after(grammarAccess.getISignalAccess().getColonKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_6_1__1__Impl
	rule__ISignal__Group_6_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getCombineKeyword_6_1_1()); }

	'combine' 

{ after(grammarAccess.getISignalAccess().getCombineKeyword_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_6_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_6_1__2__Impl
	rule__ISignal__Group_6_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_6_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_6_1_2()); }
(rule__ISignal__Alternatives_6_1_2)
{ after(grammarAccess.getISignalAccess().getAlternatives_6_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_6_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_6_1__3__Impl
	rule__ISignal__Group_6_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_6_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getWithKeyword_6_1_3()); }

	'with' 

{ after(grammarAccess.getISignalAccess().getWithKeyword_6_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ISignal__Group_6_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ISignal__Group_6_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__Group_6_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAlternatives_6_1_4()); }
(rule__ISignal__Alternatives_6_1_4)
{ after(grammarAccess.getISignalAccess().getAlternatives_6_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__AVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AVariable__Group__0__Impl
	rule__AVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getAnnotationsAssignment_0()); }
(rule__AVariable__AnnotationsAssignment_0)*
{ after(grammarAccess.getAVariableAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AVariable__Group__1__Impl
	rule__AVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getVarKeyword_1()); }

	'var' 

{ after(grammarAccess.getAVariableAccess().getVarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AVariable__Group__2__Impl
	rule__AVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getNameAssignment_2()); }
(rule__AVariable__NameAssignment_2)
{ after(grammarAccess.getAVariableAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AVariable__Group__3__Impl
	rule__AVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getGroup_3()); }
(rule__AVariable__Group_3__0)?
{ after(grammarAccess.getAVariableAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AVariable__Group__4__Impl
	rule__AVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getAVariableAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AVariable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AVariable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getAlternatives_5()); }
(rule__AVariable__Alternatives_5)
{ after(grammarAccess.getAVariableAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__AVariable__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AVariable__Group_3__0__Impl
	rule__AVariable__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getColonEqualsSignKeyword_3_0()); }

	':=' 

{ after(grammarAccess.getAVariableAccess().getColonEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AVariable__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AVariable__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getInitialValueAssignment_3_1()); }
(rule__AVariable__InitialValueAssignment_3_1)
{ after(grammarAccess.getAVariableAccess().getInitialValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__IVariable__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group__0__Impl
	rule__IVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getAnnotationsAssignment_0()); }
(rule__IVariable__AnnotationsAssignment_0)*
{ after(grammarAccess.getIVariableAccess().getAnnotationsAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IVariable__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group__1__Impl
	rule__IVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getVarKeyword_1()); }

	'var' 

{ after(grammarAccess.getIVariableAccess().getVarKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IVariable__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group__2__Impl
	rule__IVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getNameAssignment_2()); }
(rule__IVariable__NameAssignment_2)
{ after(grammarAccess.getIVariableAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IVariable__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group__3__Impl
	rule__IVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getGroup_3()); }
(rule__IVariable__Group_3__0)?
{ after(grammarAccess.getIVariableAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IVariable__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group__4__Impl
	rule__IVariable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getColonKeyword_4()); }

	':' 

{ after(grammarAccess.getIVariableAccess().getColonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IVariable__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getAlternatives_5()); }
(rule__IVariable__Alternatives_5)
{ after(grammarAccess.getIVariableAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__IVariable__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group_3__0__Impl
	rule__IVariable__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getColonEqualsSignKeyword_3_0()); }

	':=' 

{ after(grammarAccess.getIVariableAccess().getColonEqualsSignKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IVariable__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IVariable__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getInitialValueAssignment_3_1()); }
(rule__IVariable__InitialValueAssignment_3_1)
{ after(grammarAccess.getIVariableAccess().getInitialValueAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Substitution__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Substitution__Group__0__Impl
	rule__Substitution__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubstitutionAccess().getActualAssignment_0()); }
(rule__Substitution__ActualAssignment_0)
{ after(grammarAccess.getSubstitutionAccess().getActualAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Substitution__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Substitution__Group__1__Impl
	rule__Substitution__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubstitutionAccess().getSolidusKeyword_1()); }

	'/' 

{ after(grammarAccess.getSubstitutionAccess().getSolidusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Substitution__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Substitution__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubstitutionAccess().getFormalAssignment_2()); }
(rule__Substitution__FormalAssignment_2)
{ after(grammarAccess.getSubstitutionAccess().getFormalAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Action__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__0__Impl
	rule__Action__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getActionAction_0()); }
(

)
{ after(grammarAccess.getActionAccess().getActionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__1__Impl
	rule__Action__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getIsImmediateAssignment_1()); }
(rule__Action__IsImmediateAssignment_1)?
{ after(grammarAccess.getActionAccess().getIsImmediateAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__2__Impl
	rule__Action__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getDelayAssignment_2()); }
(rule__Action__DelayAssignment_2)?
{ after(grammarAccess.getActionAccess().getDelayAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__3__Impl
	rule__Action__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getTriggerAssignment_3()); }
(rule__Action__TriggerAssignment_3)?
{ after(grammarAccess.getActionAccess().getTriggerAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_4()); }
(rule__Action__Group_4__0)?
{ after(grammarAccess.getActionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Action__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_4__0__Impl
	rule__Action__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getSolidusKeyword_4_0()); }

	'/' 

{ after(grammarAccess.getActionAccess().getSolidusKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_4__1__Impl
	rule__Action__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getEffectsAssignment_4_1()); }
(rule__Action__EffectsAssignment_4_1)
{ after(grammarAccess.getActionAccess().getEffectsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getGroup_4_2()); }
(rule__Action__Group_4_2__0)*
{ after(grammarAccess.getActionAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Action__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_4_2__0__Impl
	rule__Action__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getCommaKeyword_4_2_0()); }

	',' 

{ after(grammarAccess.getActionAccess().getCommaKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Action__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Action__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Action__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getEffectsAssignment_4_2_1()); }
(rule__Action__EffectsAssignment_4_2_1)
{ after(grammarAccess.getActionAccess().getEffectsAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Emission__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__0__Impl
	rule__Emission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getSignalAssignment_0()); }
(rule__Emission__SignalAssignment_0)
{ after(grammarAccess.getEmissionAccess().getSignalAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getGroup_1()); }
(rule__Emission__Group_1__0)?
{ after(grammarAccess.getEmissionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Emission__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1__0__Impl
	rule__Emission__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1__1__Impl
	rule__Emission__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueAssignment_1_1()); }
(rule__Emission__NewValueAssignment_1_1)
{ after(grammarAccess.getEmissionAccess().getNewValueAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableAssignment_0()); }
(rule__Assignment__VariableAssignment_0)
{ after(grammarAccess.getAssignmentAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_2()); }
(rule__Assignment__ExpressionAssignment_2)
{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TextEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextEffect__Group__0__Impl
	rule__TextEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getCodeAssignment_0()); }
(rule__TextEffect__CodeAssignment_0)
{ after(grammarAccess.getTextEffectAccess().getCodeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextEffect__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getGroup_1()); }
(rule__TextEffect__Group_1__0)?
{ after(grammarAccess.getTextEffectAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TextEffect__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextEffect__Group_1__0__Impl
	rule__TextEffect__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getTextEffectAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextEffect__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextEffect__Group_1__1__Impl
	rule__TextEffect__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getTypeAssignment_1_1()); }
(rule__TextEffect__TypeAssignment_1_1)
{ after(grammarAccess.getTextEffectAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextEffect__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextEffect__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getTextEffectAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__0__Impl
	rule__OrExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
	ruleAndExpression
{ after(grammarAccess.getOrExpressionAccess().getAndExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getGroup_1()); }
(rule__OrExpression__Group_1__0)*
{ after(grammarAccess.getOrExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__0__Impl
	rule__OrExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getOrExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__1__Impl
	rule__OrExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
(rule__OrExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getOrExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__OrExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getOrExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AndExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__0__Impl
	rule__AndExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
	ruleCompareOperation
{ after(grammarAccess.getAndExpressionAccess().getCompareOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getGroup_1()); }
(rule__AndExpression__Group_1__0)*
{ after(grammarAccess.getAndExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__0__Impl
	rule__AndExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getAndExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__1__Impl
	rule__AndExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AndExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAndExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__AndExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getAndExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__CompareOperation__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0__0__Impl
	rule__CompareOperation__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0_0()); }
	ruleNotOrValuedExpression
{ after(grammarAccess.getCompareOperationAccess().getNotOrValuedExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup_0_1()); }
(rule__CompareOperation__Group_0_1__0)
{ after(grammarAccess.getCompareOperationAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareOperation__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0_1__0__Impl
	rule__CompareOperation__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_0_1_0()); }
(

)
{ after(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0_1__1__Impl
	rule__CompareOperation__Group_0_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorAssignment_0_1_1()); }
(rule__CompareOperation__OperatorAssignment_0_1_1)
{ after(grammarAccess.getCompareOperationAccess().getOperatorAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_0_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_0_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_0_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_0_1_2()); }
(rule__CompareOperation__SubExpressionsAssignment_0_1_2)
{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_0_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NotExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__0__Impl
	rule__NotExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNotExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__1__Impl
	rule__NotExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); }
(rule__NotExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getNotExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NotExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NotExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__NotExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getNotExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AddExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__0__Impl
	rule__AddExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); }
	ruleSubExpression
{ after(grammarAccess.getAddExpressionAccess().getSubExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getGroup_1()); }
(rule__AddExpression__Group_1__0)*
{ after(grammarAccess.getAddExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AddExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__0__Impl
	rule__AddExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getAddExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__1__Impl
	rule__AddExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1()); }
(rule__AddExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getAddExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AddExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AddExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__AddExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SubExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group__0__Impl
	rule__SubExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); }
	ruleMultExpression
{ after(grammarAccess.getSubExpressionAccess().getMultExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getGroup_1()); }
(rule__SubExpression__Group_1__0)*
{ after(grammarAccess.getSubExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SubExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__0__Impl
	rule__SubExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getSubExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__1__Impl
	rule__SubExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1()); }
(rule__SubExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getSubExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SubExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SubExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__SubExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group__0__Impl
	rule__MultExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); }
	ruleDivExpression
{ after(grammarAccess.getMultExpressionAccess().getDivExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getGroup_1()); }
(rule__MultExpression__Group_1__0)*
{ after(grammarAccess.getMultExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__0__Impl
	rule__MultExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getMultExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__1__Impl
	rule__MultExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1()); }
(rule__MultExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getMultExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__MultExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DivExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group__0__Impl
	rule__DivExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); }
	ruleModExpression
{ after(grammarAccess.getDivExpressionAccess().getModExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getGroup_1()); }
(rule__DivExpression__Group_1__0)?
{ after(grammarAccess.getDivExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__0__Impl
	rule__DivExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getDivExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__1__Impl
	rule__DivExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1()); }
(rule__DivExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getDivExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__DivExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ModExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__0__Impl
	rule__ModExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); }
	ruleNegExpression
{ after(grammarAccess.getModExpressionAccess().getNegExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getGroup_1()); }
(rule__ModExpression__Group_1__0)?
{ after(grammarAccess.getModExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ModExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__0__Impl
	rule__ModExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getModExpressionAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__1__Impl
	rule__ModExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ModExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getModExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ModExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ModExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__ModExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NegExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__0__Impl
	rule__NegExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getNegExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__1__Impl
	rule__NegExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); }
(rule__NegExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getNegExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NegExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NegExpression__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); }
(rule__NegExpression__SubExpressionsAssignment_0_2)
{ after(grammarAccess.getNegExpressionAccess().getSubExpressionsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_2__0__Impl
	rule__AtomicExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAtomicExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_2__1__Impl
	rule__AtomicExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getBooleanExpressionParserRuleCall_2_1()); }
	ruleBooleanExpression
{ after(grammarAccess.getAtomicExpressionAccess().getBooleanExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getAtomicExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__AtomicValuedExpression__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_2__0__Impl
	rule__AtomicValuedExpression__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getAtomicValuedExpressionAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicValuedExpression__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_2__1__Impl
	rule__AtomicValuedExpression__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_2_1()); }
	ruleValuedExpression
{ after(grammarAccess.getAtomicValuedExpressionAccess().getValuedExpressionParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AtomicValuedExpression__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AtomicValuedExpression__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AtomicValuedExpression__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getAtomicValuedExpressionAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValuedObjectTestExpression__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__0__Impl
	rule__ValuedObjectTestExpression__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); }
(

)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__1__Impl
	rule__ValuedObjectTestExpression__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); }
(rule__ValuedObjectTestExpression__OperatorAssignment_0_1)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__2__Impl
	rule__ValuedObjectTestExpression__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); }

	'(' 

{ after(grammarAccess.getValuedObjectTestExpressionAccess().getLeftParenthesisKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__3__Impl
	rule__ValuedObjectTestExpression__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); }
(rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4()); }

	')' 

{ after(grammarAccess.getValuedObjectTestExpressionAccess().getRightParenthesisKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ValuedObjectTestExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_1__0__Impl
	rule__ValuedObjectTestExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_1_0()); }
(

)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorExpressionAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_1__1__Impl
	rule__ValuedObjectTestExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_1_1()); }
(rule__ValuedObjectTestExpression__OperatorAssignment_1_1)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValuedObjectTestExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValuedObjectTestExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_1_2()); }
(rule__ValuedObjectTestExpression__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TextExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group__0__Impl
	rule__TextExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getCodeAssignment_0()); }
(rule__TextExpression__CodeAssignment_0)
{ after(grammarAccess.getTextExpressionAccess().getCodeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getGroup_1()); }
(rule__TextExpression__Group_1__0)?
{ after(grammarAccess.getTextExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TextExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group_1__0__Impl
	rule__TextExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getTextExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group_1__1__Impl
	rule__TextExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getTypeAssignment_1_1()); }
(rule__TextExpression__TypeAssignment_1_1)
{ after(grammarAccess.getTextExpressionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getTextExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InterfaceSignalDecl__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__0__Impl
	rule__InterfaceSignalDecl__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputAction_0_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__1__Impl
	rule__InterfaceSignalDecl__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputKeyword_0_1()); }

	'input' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputKeyword_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__2__Impl
	rule__InterfaceSignalDecl__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_2()); }
(rule__InterfaceSignalDecl__SignalsAssignment_0_2)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__3__Impl
	rule__InterfaceSignalDecl__Group_0__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0_3()); }
(rule__InterfaceSignalDecl__Group_0_3__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_0_4()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_0_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfaceSignalDecl__Group_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0_3__0__Impl
	rule__InterfaceSignalDecl__Group_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_0_3_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_3_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_0_3_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceSignalDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__0__Impl
	rule__InterfaceSignalDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getOutputAction_1_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getOutputAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__1__Impl
	rule__InterfaceSignalDecl__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getOutputKeyword_1_1()); }

	'output' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getOutputKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__2__Impl
	rule__InterfaceSignalDecl__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_2()); }
(rule__InterfaceSignalDecl__SignalsAssignment_1_2)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__3__Impl
	rule__InterfaceSignalDecl__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1_3()); }
(rule__InterfaceSignalDecl__Group_1_3__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_1_4()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_1_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfaceSignalDecl__Group_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1_3__0__Impl
	rule__InterfaceSignalDecl__Group_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_1_3_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_3_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_1_3_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceSignalDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__0__Impl
	rule__InterfaceSignalDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputOutputAction_2_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputOutputAction_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__1__Impl
	rule__InterfaceSignalDecl__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getInputoutputKeyword_2_1()); }

	'inputoutput' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getInputoutputKeyword_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__2__Impl
	rule__InterfaceSignalDecl__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_2()); }
(rule__InterfaceSignalDecl__SignalsAssignment_2_2)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__3__Impl
	rule__InterfaceSignalDecl__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2_3()); }
(rule__InterfaceSignalDecl__Group_2_3__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_2_4()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_2_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfaceSignalDecl__Group_2_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2_3__0__Impl
	rule__InterfaceSignalDecl__Group_2_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_2_3_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_2_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_2_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_2_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_3_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_2_3_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_2_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InterfaceSignalDecl__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__0__Impl
	rule__InterfaceSignalDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getReturnAction_3_0()); }
(

)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getReturnAction_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__1__Impl
	rule__InterfaceSignalDecl__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getReturnKeyword_3_1()); }

	'return' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getReturnKeyword_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__2__Impl
	rule__InterfaceSignalDecl__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_2()); }
(rule__InterfaceSignalDecl__SignalsAssignment_3_2)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__3__Impl
	rule__InterfaceSignalDecl__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3_3()); }
(rule__InterfaceSignalDecl__Group_3_3__0)*
{ after(grammarAccess.getInterfaceSignalDeclAccess().getGroup_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_3_4()); }

	';' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getSemicolonKeyword_3_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__InterfaceSignalDecl__Group_3_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3_3__0__Impl
	rule__InterfaceSignalDecl__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_3_3_0()); }

	',' 

{ after(grammarAccess.getInterfaceSignalDeclAccess().getCommaKeyword_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceSignalDecl__Group_3_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceSignalDecl__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__Group_3_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_3_1()); }
(rule__InterfaceSignalDecl__SignalsAssignment_3_3_1)
{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsAssignment_3_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__InterfaceVariableDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceVariableDecl__Group__0__Impl
	rule__InterfaceVariableDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getVarKeyword_0()); }

	'var' 

{ after(grammarAccess.getInterfaceVariableDeclAccess().getVarKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceVariableDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceVariableDecl__Group__1__Impl
	rule__InterfaceVariableDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_1()); }
(rule__InterfaceVariableDecl__VarDeclsAssignment_1)
{ after(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceVariableDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceVariableDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getGroup_2()); }
(rule__InterfaceVariableDecl__Group_2__0)*
{ after(grammarAccess.getInterfaceVariableDeclAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__InterfaceVariableDecl__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceVariableDecl__Group_2__0__Impl
	rule__InterfaceVariableDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getCommaKeyword_2_0()); }

	',' 

{ after(grammarAccess.getInterfaceVariableDeclAccess().getCommaKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InterfaceVariableDecl__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InterfaceVariableDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_2_1()); }
(rule__InterfaceVariableDecl__VarDeclsAssignment_2_1)
{ after(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableDecl__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__0__Impl
	rule__VariableDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesAssignment_0()); }
(rule__VariableDecl__VariablesAssignment_0)
{ after(grammarAccess.getVariableDeclAccess().getVariablesAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__1__Impl
	rule__VariableDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getGroup_1()); }
(rule__VariableDecl__Group_1__0)*
{ after(grammarAccess.getVariableDeclAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__2__Impl
	rule__VariableDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getVariableDeclAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeAssignment_3()); }
(rule__VariableDecl__TypeAssignment_3)
{ after(grammarAccess.getVariableDeclAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__VariableDecl__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group_1__0__Impl
	rule__VariableDecl__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getCommaKeyword_1_0()); }

	',' 

{ after(grammarAccess.getVariableDeclAccess().getCommaKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDecl__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesAssignment_1_1()); }
(rule__VariableDecl__VariablesAssignment_1_1)
{ after(grammarAccess.getVariableDeclAccess().getVariablesAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeIdentifier__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__0__Impl
	rule__TypeIdentifier__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getCombineKeyword_2_0()); }

	'combine' 

{ after(grammarAccess.getTypeIdentifierAccess().getCombineKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__1__Impl
	rule__TypeIdentifier__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getAlternatives_2_1()); }
(rule__TypeIdentifier__Alternatives_2_1)
{ after(grammarAccess.getTypeIdentifierAccess().getAlternatives_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__2__Impl
	rule__TypeIdentifier__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getWithKeyword_2_2()); }

	'with' 

{ after(grammarAccess.getTypeIdentifierAccess().getWithKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeIdentifier__Group_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeIdentifier__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__Group_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getOperatorAssignment_2_3()); }
(rule__TypeIdentifier__OperatorAssignment_2_3)
{ after(grammarAccess.getTypeIdentifierAccess().getOperatorAssignment_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TagAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__0__Impl
	rule__TagAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTagAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__1__Impl
	rule__TagAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
(rule__TagAnnotation__NameAssignment_1)
{ after(grammarAccess.getTagAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getGroup_2()); }
(rule__TagAnnotation__Group_2__0)?
{ after(grammarAccess.getTagAnnotationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TagAnnotation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__0__Impl
	rule__TagAnnotation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getLeftParenthesisKeyword_2_0()); }

	'(' 

{ after(grammarAccess.getTagAnnotationAccess().getLeftParenthesisKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__1__Impl
	rule__TagAnnotation__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1()); }
(rule__TagAnnotation__AnnotationsAssignment_2_1)*
{ after(grammarAccess.getTagAnnotationAccess().getAnnotationsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TagAnnotation__Group_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TagAnnotation__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__Group_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getRightParenthesisKeyword_2_2()); }

	')' 

{ after(grammarAccess.getTagAnnotationAccess().getRightParenthesisKeyword_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__0__Impl
	rule__KeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__1__Impl
	rule__KeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__2__Impl
	rule__KeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyStringValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
(rule__KeyStringValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyStringValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__0__Impl
	rule__KeyStringValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__1__Impl
	rule__KeyStringValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyStringValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyStringValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyStringValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypedKeyStringValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__0__Impl
	rule__TypedKeyStringValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__1__Impl
	rule__TypedKeyStringValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
(rule__TypedKeyStringValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__2__Impl
	rule__TypedKeyStringValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }

	'[' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__3__Impl
	rule__TypedKeyStringValueAnnotation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
(rule__TypedKeyStringValueAnnotation__TypeAssignment_3)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__4__Impl
	rule__TypedKeyStringValueAnnotation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }

	']' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightSquareBracketKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__5__Impl
	rule__TypedKeyStringValueAnnotation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueAssignment_5()); }
(rule__TypedKeyStringValueAnnotation__ValueAssignment_5)
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
(rule__TypedKeyStringValueAnnotation__Group_6__0)?
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__TypedKeyStringValueAnnotation__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
	rule__TypedKeyStringValueAnnotation__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_6_0()); }

	'(' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getLeftParenthesisKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
	rule__TypedKeyStringValueAnnotation__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAssignment_6_1()); }
(rule__TypedKeyStringValueAnnotation__AnnotationsAssignment_6_1)*
{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAssignment_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypedKeyStringValueAnnotation__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypedKeyStringValueAnnotation__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightParenthesisKeyword_6_2()); }

	')' 

{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getRightParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyBooleanValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__0__Impl
	rule__KeyBooleanValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__1__Impl
	rule__KeyBooleanValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyBooleanValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__2__Impl
	rule__KeyBooleanValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyBooleanValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3()); }
(rule__KeyBooleanValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyBooleanValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__0__Impl
	rule__KeyBooleanValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__1__Impl
	rule__KeyBooleanValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyBooleanValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyBooleanValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyIntValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__0__Impl
	rule__KeyIntValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__1__Impl
	rule__KeyIntValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyIntValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__2__Impl
	rule__KeyIntValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyIntValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3()); }
(rule__KeyIntValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyIntValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__0__Impl
	rule__KeyIntValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__1__Impl
	rule__KeyIntValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyIntValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyIntValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyIntValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__KeyFloatValueAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__0__Impl
	rule__KeyFloatValueAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getCommercialAtKeyword_0()); }

	'@' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getCommercialAtKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__1__Impl
	rule__KeyFloatValueAnnotation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1()); }
(rule__KeyFloatValueAnnotation__NameAssignment_1)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__2__Impl
	rule__KeyFloatValueAnnotation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2()); }
(rule__KeyFloatValueAnnotation__ValueAssignment_2)
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3()); }
(rule__KeyFloatValueAnnotation__Group_3__0)?
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__KeyFloatValueAnnotation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__0__Impl
	rule__KeyFloatValueAnnotation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }

	'(' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getLeftParenthesisKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__1__Impl
	rule__KeyFloatValueAnnotation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
(rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1)*
{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyFloatValueAnnotation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyFloatValueAnnotation__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }

	')' 

{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getRightParenthesisKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ImportAnnotation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAnnotation__Group__0__Impl
	rule__ImportAnnotation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAnnotation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAnnotationAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAnnotationAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ImportAnnotation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ImportAnnotation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAnnotation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAnnotationAccess().getImportURIAssignment_1()); }
(rule__ImportAnnotation__ImportURIAssignment_1)
{ after(grammarAccess.getImportAnnotationAccess().getImportURIAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtendedID__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__0__Impl
	rule__ExtendedID__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getGroup_1()); }
(rule__ExtendedID__Group_1__0)*
{ after(grammarAccess.getExtendedIDAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ExtendedID__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__0__Impl
	rule__ExtendedID__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getExtendedIDAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExtendedID__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExtendedID__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtendedID__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getExtendedIDAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__RootRegion__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getAnnotationsImportAnnotationParserRuleCall_0_0()); }
	ruleImportAnnotation{ after(grammarAccess.getRootRegionAccess().getAnnotationsImportAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__AnnotationsAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0_0()); }
	ruleAnnotation{ after(grammarAccess.getRootRegionAccess().getAnnotationsAnnotationParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__IdAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getIdIDTerminalRuleCall_1_2_0()); }
	RULE_ID{ after(grammarAccess.getRootRegionAccess().getIdIDTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__LabelAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getLabelSTRINGTerminalRuleCall_1_3_0()); }
	RULE_STRING{ after(grammarAccess.getRootRegionAccess().getLabelSTRINGTerminalRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__VariablesAssignment_1_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getVariablesVariableParserRuleCall_1_5_0_0()); }
	ruleVariable{ after(grammarAccess.getRootRegionAccess().getVariablesVariableParserRuleCall_1_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__SignalsAssignment_1_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getSignalsSignalParserRuleCall_1_5_1_0()); }
	ruleSignal{ after(grammarAccess.getRootRegionAccess().getSignalsSignalParserRuleCall_1_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__BodyTextAssignment_1_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getBodyTextTextualCodeParserRuleCall_1_6_0()); }
	ruleTextualCode{ after(grammarAccess.getRootRegionAccess().getBodyTextTextualCodeParserRuleCall_1_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RootRegion__StatesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRootRegionAccess().getStatesStateParserRuleCall_2_0()); }
	ruleState{ after(grammarAccess.getRootRegionAccess().getStatesStateParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__AnnotationsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getAnnotationsAnnotationParserRuleCall_0_0_0()); }
	ruleAnnotation{ after(grammarAccess.getSingleRegionAccess().getAnnotationsAnnotationParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__IdAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getIdIDTerminalRuleCall_0_2_0()); }
	RULE_ID{ after(grammarAccess.getSingleRegionAccess().getIdIDTerminalRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__LabelAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getLabelSTRINGTerminalRuleCall_0_3_0()); }
	RULE_STRING{ after(grammarAccess.getSingleRegionAccess().getLabelSTRINGTerminalRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__VariablesAssignment_0_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getVariablesVariableParserRuleCall_0_5_0_0()); }
	ruleVariable{ after(grammarAccess.getSingleRegionAccess().getVariablesVariableParserRuleCall_0_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__SignalsAssignment_0_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getSignalsSignalParserRuleCall_0_5_1_0()); }
	ruleSignal{ after(grammarAccess.getSingleRegionAccess().getSignalsSignalParserRuleCall_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__BodyTextAssignment_0_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getBodyTextTextualCodeParserRuleCall_0_6_0()); }
	ruleTextualCode{ after(grammarAccess.getSingleRegionAccess().getBodyTextTextualCodeParserRuleCall_0_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleRegion__StatesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleRegionAccess().getStatesStateParserRuleCall_1_0()); }
	ruleState{ after(grammarAccess.getSingleRegionAccess().getStatesStateParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextualCode__TypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextualCodeAccess().getTypeIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getTextualCodeAccess().getTypeIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextualCode__CodeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextualCodeAccess().getCodeSTRINGTerminalRuleCall_4_0()); }
	RULE_STRING{ after(grammarAccess.getTextualCodeAccess().getCodeSTRINGTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getRegionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__IdAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getIdIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getRegionAccess().getIdIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__LabelAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getLabelSTRINGTerminalRuleCall_3_0()); }
	RULE_STRING{ after(grammarAccess.getRegionAccess().getLabelSTRINGTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__VariablesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getVariablesVariableParserRuleCall_5_0_0()); }
	ruleVariable{ after(grammarAccess.getRegionAccess().getVariablesVariableParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__SignalsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getSignalsSignalParserRuleCall_5_1_0()); }
	ruleSignal{ after(grammarAccess.getRegionAccess().getSignalsSignalParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__BodyTextAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getBodyTextTextualCodeParserRuleCall_6_0()); }
	ruleTextualCode{ after(grammarAccess.getRegionAccess().getBodyTextTextualCodeParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Region__StatesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionAccess().getStatesStateParserRuleCall_7_0()); }
	ruleState{ after(grammarAccess.getRegionAccess().getStatesStateParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getStateAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__IsInitialAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIsInitialInitKeyword_1_0_0_0()); }
(
{ before(grammarAccess.getStateAccess().getIsInitialInitKeyword_1_0_0_0()); }

	'init' 

{ after(grammarAccess.getStateAccess().getIsInitialInitKeyword_1_0_0_0()); }
)

{ after(grammarAccess.getStateAccess().getIsInitialInitKeyword_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__IsFinalAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIsFinalFinalKeyword_1_0_1_0()); }
(
{ before(grammarAccess.getStateAccess().getIsFinalFinalKeyword_1_0_1_0()); }

	'final' 

{ after(grammarAccess.getStateAccess().getIsFinalFinalKeyword_1_0_1_0()); }
)

{ after(grammarAccess.getStateAccess().getIsFinalFinalKeyword_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__IsFinalAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIsFinalFinalKeyword_1_1_0_0()); }
(
{ before(grammarAccess.getStateAccess().getIsFinalFinalKeyword_1_1_0_0()); }

	'final' 

{ after(grammarAccess.getStateAccess().getIsFinalFinalKeyword_1_1_0_0()); }
)

{ after(grammarAccess.getStateAccess().getIsFinalFinalKeyword_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__IsInitialAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIsInitialInitKeyword_1_1_1_0()); }
(
{ before(grammarAccess.getStateAccess().getIsInitialInitKeyword_1_1_1_0()); }

	'init' 

{ after(grammarAccess.getStateAccess().getIsInitialInitKeyword_1_1_1_0()); }
)

{ after(grammarAccess.getStateAccess().getIsInitialInitKeyword_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTypeStateTypeEnumRuleCall_2_0()); }
	ruleStateType{ after(grammarAccess.getStateAccess().getTypeStateTypeEnumRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__IdAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIdIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getIdIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__LabelAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_5_0()); }
	RULE_STRING{ after(grammarAccess.getStateAccess().getLabelSTRINGTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__BodyReferenceAssignment_6_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBodyReferenceStateCrossReference_6_0_1_0()); }
(
{ before(grammarAccess.getStateAccess().getBodyReferenceStateIDTerminalRuleCall_6_0_1_0_1()); }
	RULE_ID{ after(grammarAccess.getStateAccess().getBodyReferenceStateIDTerminalRuleCall_6_0_1_0_1()); }
)
{ after(grammarAccess.getStateAccess().getBodyReferenceStateCrossReference_6_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__RenamingsAssignment_6_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRenamingsSubstitutionParserRuleCall_6_0_2_1_0()); }
	ruleSubstitution{ after(grammarAccess.getStateAccess().getRenamingsSubstitutionParserRuleCall_6_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__RenamingsAssignment_6_0_2_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRenamingsSubstitutionParserRuleCall_6_0_2_2_1_0()); }
	ruleSubstitution{ after(grammarAccess.getStateAccess().getRenamingsSubstitutionParserRuleCall_6_0_2_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__SignalsAssignment_6_1_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSignalsSignalParserRuleCall_6_1_1_0_0_0()); }
	ruleSignal{ after(grammarAccess.getStateAccess().getSignalsSignalParserRuleCall_6_1_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__VariablesAssignment_6_1_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getVariablesVariableParserRuleCall_6_1_1_0_1_0()); }
	ruleVariable{ after(grammarAccess.getStateAccess().getVariablesVariableParserRuleCall_6_1_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__EntryActionsAssignment_6_1_1_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getEntryActionsActionParserRuleCall_6_1_1_0_2_1_0()); }
	ruleAction{ after(grammarAccess.getStateAccess().getEntryActionsActionParserRuleCall_6_1_1_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__InnerActionsAssignment_6_1_1_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getInnerActionsActionParserRuleCall_6_1_1_0_3_1_0()); }
	ruleAction{ after(grammarAccess.getStateAccess().getInnerActionsActionParserRuleCall_6_1_1_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__ExitActionsAssignment_6_1_1_0_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getExitActionsActionParserRuleCall_6_1_1_0_4_1_0()); }
	ruleAction{ after(grammarAccess.getStateAccess().getExitActionsActionParserRuleCall_6_1_1_0_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__SuspensionTriggerAssignment_6_1_1_0_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSuspensionTriggerActionParserRuleCall_6_1_1_0_5_1_0()); }
	ruleAction{ after(grammarAccess.getStateAccess().getSuspensionTriggerActionParserRuleCall_6_1_1_0_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__BodyTextAssignment_6_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getBodyTextTextualCodeParserRuleCall_6_1_1_1_0()); }
	ruleTextualCode{ after(grammarAccess.getStateAccess().getBodyTextTextualCodeParserRuleCall_6_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__RegionsAssignment_6_1_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsSingleRegionParserRuleCall_6_1_1_2_0_0()); }
	ruleSingleRegion{ after(grammarAccess.getStateAccess().getRegionsSingleRegionParserRuleCall_6_1_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__RegionsAssignment_6_1_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_6_1_1_2_1_0()); }
	ruleRegion{ after(grammarAccess.getStateAccess().getRegionsRegionParserRuleCall_6_1_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__OutgoingTransitionsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_7_0()); }
	ruleTransition{ after(grammarAccess.getStateAccess().getOutgoingTransitionsTransitionParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getTransitionAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTypeTransitionTypeEnumRuleCall_1_0()); }
	ruleTransitionType{ after(grammarAccess.getTransitionAccess().getTypeTransitionTypeEnumRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__PriorityAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getPriorityINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getTransitionAccess().getPriorityINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TargetStateAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_3_0()); }
(
{ before(grammarAccess.getTransitionAccess().getTargetStateStateIDTerminalRuleCall_3_0_1()); }
	RULE_ID{ after(grammarAccess.getTransitionAccess().getTargetStateStateIDTerminalRuleCall_3_0_1()); }
)
{ after(grammarAccess.getTransitionAccess().getTargetStateStateCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__IsImmediateAssignment_4_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getIsImmediateNumberSignKeyword_4_1_0_0_0()); }
(
{ before(grammarAccess.getTransitionAccess().getIsImmediateNumberSignKeyword_4_1_0_0_0()); }

	'#' 

{ after(grammarAccess.getTransitionAccess().getIsImmediateNumberSignKeyword_4_1_0_0_0()); }
)

{ after(grammarAccess.getTransitionAccess().getIsImmediateNumberSignKeyword_4_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__DelayAssignment_4_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDelayINTTerminalRuleCall_4_1_0_1_0()); }
	RULE_INT{ after(grammarAccess.getTransitionAccess().getDelayINTTerminalRuleCall_4_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TriggerAssignment_4_1_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTriggerBooleanExpressionParserRuleCall_4_1_0_2_0()); }
	ruleBooleanExpression{ after(grammarAccess.getTransitionAccess().getTriggerBooleanExpressionParserRuleCall_4_1_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EffectsAssignment_4_1_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_1_0_3_1_0()); }
	ruleEffect{ after(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_1_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__EffectsAssignment_4_1_0_3_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_1_0_3_2_1_0()); }
	ruleEffect{ after(grammarAccess.getTransitionAccess().getEffectsEffectParserRuleCall_4_1_0_3_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__LabelAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_4_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getTransitionAccess().getLabelSTRINGTerminalRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__IsHistoryAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getIsHistoryHistoryKeyword_5_0()); }
(
{ before(grammarAccess.getTransitionAccess().getIsHistoryHistoryKeyword_5_0()); }

	'history' 

{ after(grammarAccess.getTransitionAccess().getIsHistoryHistoryKeyword_5_0()); }
)

{ after(grammarAccess.getTransitionAccess().getIsHistoryHistoryKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getASignalAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__IsInputAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getIsInputInputKeyword_1_0()); }
(
{ before(grammarAccess.getASignalAccess().getIsInputInputKeyword_1_0()); }

	'input' 

{ after(grammarAccess.getASignalAccess().getIsInputInputKeyword_1_0()); }
)

{ after(grammarAccess.getASignalAccess().getIsInputInputKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__IsOutputAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getIsOutputOutputKeyword_2_0()); }
(
{ before(grammarAccess.getASignalAccess().getIsOutputOutputKeyword_2_0()); }

	'output' 

{ after(grammarAccess.getASignalAccess().getIsOutputOutputKeyword_2_0()); }
)

{ after(grammarAccess.getASignalAccess().getIsOutputOutputKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getASignalAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__InitialValueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getInitialValueAnyTypeParserRuleCall_5_1_0()); }
	ruleAnyType{ after(grammarAccess.getASignalAccess().getInitialValueAnyTypeParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__TypeAssignment_6_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getTypeValueTypeEnumRuleCall_6_0_1_0_0()); }
	ruleValueType{ after(grammarAccess.getASignalAccess().getTypeValueTypeEnumRuleCall_6_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__HostTypeAssignment_6_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getHostTypeSTRINGTerminalRuleCall_6_0_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getASignalAccess().getHostTypeSTRINGTerminalRuleCall_6_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__TypeAssignment_6_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getTypeValueTypeEnumRuleCall_6_1_2_0_0()); }
	ruleValueType{ after(grammarAccess.getASignalAccess().getTypeValueTypeEnumRuleCall_6_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__HostTypeAssignment_6_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getHostTypeSTRINGTerminalRuleCall_6_1_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getASignalAccess().getHostTypeSTRINGTerminalRuleCall_6_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__CombineOperatorAssignment_6_1_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getCombineOperatorCombineOperatorEnumRuleCall_6_1_4_0_0()); }
	ruleCombineOperator{ after(grammarAccess.getASignalAccess().getCombineOperatorCombineOperatorEnumRuleCall_6_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ASignal__HostCombineOperatorAssignment_6_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getASignalAccess().getHostCombineOperatorSTRINGTerminalRuleCall_6_1_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getASignalAccess().getHostCombineOperatorSTRINGTerminalRuleCall_6_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getISignalAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__IsInputAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getIsInputInputKeyword_1_0()); }
(
{ before(grammarAccess.getISignalAccess().getIsInputInputKeyword_1_0()); }

	'input' 

{ after(grammarAccess.getISignalAccess().getIsInputInputKeyword_1_0()); }
)

{ after(grammarAccess.getISignalAccess().getIsInputInputKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__IsOutputAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getIsOutputOutputKeyword_2_0()); }
(
{ before(grammarAccess.getISignalAccess().getIsOutputOutputKeyword_2_0()); }

	'output' 

{ after(grammarAccess.getISignalAccess().getIsOutputOutputKeyword_2_0()); }
)

{ after(grammarAccess.getISignalAccess().getIsOutputOutputKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__NameAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getNameIDTerminalRuleCall_4_0()); }
	RULE_ID{ after(grammarAccess.getISignalAccess().getNameIDTerminalRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__InitialValueAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getInitialValueAnyTypeParserRuleCall_5_1_0()); }
	ruleAnyType{ after(grammarAccess.getISignalAccess().getInitialValueAnyTypeParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeAssignment_6_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeValueTypeEnumRuleCall_6_0_1_0_0()); }
	ruleValueType{ after(grammarAccess.getISignalAccess().getTypeValueTypeEnumRuleCall_6_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__HostTypeAssignment_6_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getHostTypeSTRINGTerminalRuleCall_6_0_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getISignalAccess().getHostTypeSTRINGTerminalRuleCall_6_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__TypeAssignment_6_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getTypeValueTypeEnumRuleCall_6_1_2_0_0()); }
	ruleValueType{ after(grammarAccess.getISignalAccess().getTypeValueTypeEnumRuleCall_6_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__HostTypeAssignment_6_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getHostTypeSTRINGTerminalRuleCall_6_1_2_1_0()); }
	RULE_STRING{ after(grammarAccess.getISignalAccess().getHostTypeSTRINGTerminalRuleCall_6_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__CombineOperatorAssignment_6_1_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getCombineOperatorCombineOperatorEnumRuleCall_6_1_4_0_0()); }
	ruleCombineOperator{ after(grammarAccess.getISignalAccess().getCombineOperatorCombineOperatorEnumRuleCall_6_1_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ISignal__HostCombineOperatorAssignment_6_1_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getISignalAccess().getHostCombineOperatorSTRINGTerminalRuleCall_6_1_4_1_0()); }
	RULE_STRING{ after(grammarAccess.getISignalAccess().getHostCombineOperatorSTRINGTerminalRuleCall_6_1_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getAVariableAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getAVariableAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__InitialValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getInitialValueAnyTypeParserRuleCall_3_1_0()); }
	ruleAnyType{ after(grammarAccess.getAVariableAccess().getInitialValueAnyTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__TypeAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getTypeValueTypeEnumRuleCall_5_0_0()); }
	ruleValueType{ after(grammarAccess.getAVariableAccess().getTypeValueTypeEnumRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AVariable__HostTypeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAVariableAccess().getHostTypeSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getAVariableAccess().getHostTypeSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__AnnotationsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
	ruleAnnotation{ after(grammarAccess.getIVariableAccess().getAnnotationsAnnotationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getNameIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getIVariableAccess().getNameIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__InitialValueAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getInitialValueAnyTypeParserRuleCall_3_1_0()); }
	ruleAnyType{ after(grammarAccess.getIVariableAccess().getInitialValueAnyTypeParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__TypeAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getTypeValueTypeEnumRuleCall_5_0_0()); }
	ruleValueType{ after(grammarAccess.getIVariableAccess().getTypeValueTypeEnumRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IVariable__HostTypeAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIVariableAccess().getHostTypeSTRINGTerminalRuleCall_5_1_0()); }
	RULE_STRING{ after(grammarAccess.getIVariableAccess().getHostTypeSTRINGTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__ActualAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubstitutionAccess().getActualIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getSubstitutionAccess().getActualIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Substitution__FormalAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubstitutionAccess().getFormalIDTerminalRuleCall_2_0()); }
	RULE_ID{ after(grammarAccess.getSubstitutionAccess().getFormalIDTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__IsImmediateAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getIsImmediateNumberSignKeyword_1_0()); }
(
{ before(grammarAccess.getActionAccess().getIsImmediateNumberSignKeyword_1_0()); }

	'#' 

{ after(grammarAccess.getActionAccess().getIsImmediateNumberSignKeyword_1_0()); }
)

{ after(grammarAccess.getActionAccess().getIsImmediateNumberSignKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__DelayAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getDelayINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getActionAccess().getDelayINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__TriggerAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getTriggerBooleanExpressionParserRuleCall_3_0()); }
	ruleBooleanExpression{ after(grammarAccess.getActionAccess().getTriggerBooleanExpressionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__EffectsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getEffectsEffectParserRuleCall_4_1_0()); }
	ruleEffect{ after(grammarAccess.getActionAccess().getEffectsEffectParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Action__EffectsAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getActionAccess().getEffectsEffectParserRuleCall_4_2_1_0()); }
	ruleEffect{ after(grammarAccess.getActionAccess().getEffectsEffectParserRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__SignalAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getSignalSignalCrossReference_0_0()); }
(
{ before(grammarAccess.getEmissionAccess().getSignalSignalIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEmissionAccess().getSignalSignalIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getEmissionAccess().getSignalSignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__NewValueAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_1_1_0()); }
	ruleExpression{ after(grammarAccess.getEmissionAccess().getNewValueExpressionParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableVariableCrossReference_0_0()); }
(
{ before(grammarAccess.getAssignmentAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAssignmentAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssignmentAccess().getVariableVariableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); }
	ruleExpression{ after(grammarAccess.getAssignmentAccess().getExpressionExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__CodeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getCodeHOSTCODETerminalRuleCall_0_0()); }
	RULE_HOSTCODE{ after(grammarAccess.getTextEffectAccess().getCodeHOSTCODETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getTypeIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTextEffectAccess().getTypeIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorEnumRuleCall_1_1_0()); }
	ruleOrOperator{ after(grammarAccess.getOrExpressionAccess().getOperatorOrOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrExpressionAccess().getSubExpressionsAndExpressionParserRuleCall_1_2_0()); }
	ruleAndExpression{ after(grammarAccess.getOrExpressionAccess().getSubExpressionsAndExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorEnumRuleCall_1_1_0()); }
	ruleAndOperator{ after(grammarAccess.getAndExpressionAccess().getOperatorAndOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_0()); }
	ruleCompareOperation{ after(grammarAccess.getAndExpressionAccess().getSubExpressionsCompareOperationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__OperatorAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_0_1_1_0()); }
	ruleCompareOperator{ after(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__SubExpressionsAssignment_0_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_0_1_2_0()); }
	ruleNotOrValuedExpression{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsNotOrValuedExpressionParserRuleCall_0_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); }
	ruleNotOperator{ after(grammarAccess.getNotExpressionAccess().getOperatorNotOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); }
	ruleNotExpression{ after(grammarAccess.getNotExpressionAccess().getSubExpressionsNotExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0()); }
	ruleAddOperator{ after(grammarAccess.getAddExpressionAccess().getOperatorAddOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AddExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_0()); }
	ruleSubExpression{ after(grammarAccess.getAddExpressionAccess().getSubExpressionsSubExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0()); }
	ruleSubOperator{ after(grammarAccess.getSubExpressionAccess().getOperatorSubOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SubExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_0()); }
	ruleMultExpression{ after(grammarAccess.getSubExpressionAccess().getSubExpressionsMultExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0()); }
	ruleMultOperator{ after(grammarAccess.getMultExpressionAccess().getOperatorMultOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_0()); }
	ruleDivExpression{ after(grammarAccess.getMultExpressionAccess().getSubExpressionsDivExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0()); }
	ruleDivOperator{ after(grammarAccess.getDivExpressionAccess().getOperatorDivOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_0()); }
	ruleModExpression{ after(grammarAccess.getDivExpressionAccess().getSubExpressionsModExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0()); }
	ruleModOperator{ after(grammarAccess.getModExpressionAccess().getOperatorModOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_0()); }
	ruleAtomicValuedExpression{ after(grammarAccess.getModExpressionAccess().getSubExpressionsAtomicValuedExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); }
	ruleSubOperator{ after(grammarAccess.getNegExpressionAccess().getOperatorSubOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NegExpression__SubExpressionsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); }
	ruleNegExpression{ after(grammarAccess.getNegExpressionAccess().getSubExpressionsNegExpressionParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__OperatorAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0()); }
	rulePreOperator{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorPreOperatorEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__SubExpressionsAssignment_0_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); }
	ruleValuedObjectTestExpression{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectTestExpressionParserRuleCall_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValueTestOperatorEnumRuleCall_1_1_0()); }
	ruleValueTestOperator{ after(grammarAccess.getValuedObjectTestExpressionAccess().getOperatorValueTestOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectTestExpression__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_1_2_0()); }
	ruleValuedObjectReference{ after(grammarAccess.getValuedObjectTestExpressionAccess().getSubExpressionsValuedObjectReferenceParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValuedObjectReference__ValuedObjectAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0()); }
(
{ before(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getValuedObjectReferenceAccess().getValuedObjectValuedObjectCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__CodeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getCodeHOSTCODETerminalRuleCall_0_0()); }
	RULE_HOSTCODE{ after(grammarAccess.getTextExpressionAccess().getCodeHOSTCODETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getTypeIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTextExpressionAccess().getTypeIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getValueFloatTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getFloatValueAccess().getValueFloatTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getValueBooleanTerminalRuleCall_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getBooleanValueAccess().getValueBooleanTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_2_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_3_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_2_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_3_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_2_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_2_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_3_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_2_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_2_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceSignalDecl__SignalsAssignment_3_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_3_1_0()); }
	ruleISignal{ after(grammarAccess.getInterfaceSignalDeclAccess().getSignalsISignalParserRuleCall_3_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__InterfaceVariableDecl__VarDeclsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsVariableDeclParserRuleCall_1_0()); }
	ruleVariableDecl{ after(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsVariableDeclParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InterfaceVariableDecl__VarDeclsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsVariableDeclParserRuleCall_2_1_0()); }
	ruleVariableDecl{ after(grammarAccess.getInterfaceVariableDeclAccess().getVarDeclsVariableDeclParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__VariablesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_0_0()); }
	ruleIVariable{ after(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__VariablesAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_1_1_0()); }
	ruleIVariable{ after(grammarAccess.getVariableDeclAccess().getVariablesIVariableParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDeclAccess().getTypeTypeIdentifierParserRuleCall_3_0()); }
	ruleTypeIdentifier{ after(grammarAccess.getVariableDeclAccess().getTypeTypeIdentifierParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_0_0()); }
	ruleValueType{ after(grammarAccess.getTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeIDAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeAssignment_2_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_2_1_0_0()); }
	ruleValueType{ after(grammarAccess.getTypeIdentifierAccess().getTypeValueTypeEnumRuleCall_2_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__TypeIDAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_2_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTypeIdentifierAccess().getTypeIDIDTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeIdentifier__OperatorAssignment_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeIdentifierAccess().getOperatorCombineOperatorEnumRuleCall_2_3_0()); }
	ruleCombineOperator{ after(grammarAccess.getTypeIdentifierAccess().getOperatorCombineOperatorEnumRuleCall_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CommentAnnotation__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCommentAnnotationAccess().getValueCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
	RULE_COMMENT_ANNOTATION{ after(grammarAccess.getCommentAnnotationAccess().getValueCOMMENT_ANNOTATIONTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTagAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TagAnnotation__AnnotationsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTagAnnotationAccess().getAnnotationsAnnotationParserRuleCall_2_1_0()); }
	ruleAnnotation{ after(grammarAccess.getTagAnnotationAccess().getAnnotationsAnnotationParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_2_0()); }
	ruleEString{ after(grammarAccess.getKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyStringValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
	ruleExtendedID{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getTypeExtendedIDParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_5_0()); }
	ruleEString{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getValueEStringParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypedKeyStringValueAnnotation__AnnotationsAssignment_6_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_6_1_0()); }
	ruleAnnotation{ after(grammarAccess.getTypedKeyStringValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueBooleanTerminalRuleCall_2_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getValueBooleanTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyBooleanValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyBooleanValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyIntValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getValueINTTerminalRuleCall_2_0()); }
	RULE_INT{ after(grammarAccess.getKeyIntValueAnnotationAccess().getValueINTTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyIntValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyIntValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
	ruleExtendedID{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getNameExtendedIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getValueFloatTerminalRuleCall_2_0()); }
	RULE_FLOAT{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getValueFloatTerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyFloatValueAnnotation__AnnotationsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
	ruleAnnotation{ after(grammarAccess.getKeyFloatValueAnnotationAccess().getAnnotationsAnnotationParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ImportAnnotation__ImportURIAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAnnotationAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAnnotationAccess().getImportURISTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_HOSTCODE : '\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'';

RULE_COMMENT_ANNOTATION : '/**' ( options {greedy=false;} : . )*'*/';

RULE_ML_COMMENT : '/*' ~('*') ( options {greedy=false;} : . )*'*/';

RULE_INT : '-'? ('0'..'9')+;

RULE_FLOAT : ('-'? ('0'..'9')+ '.' ('0'..'9')* (('e'|'E') ('+'|'-')? ('0'..'9')+)? 'f'?|'-'? ('0'..'9')+ 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


