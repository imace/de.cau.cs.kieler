/*
* generated by Xtext
*/
grammar InternalInterfaces;

options {
	superClass=AbstractInternalContentAssistParser;
	backtrack=true;
	
}

@lexer::header {
package de.cau.cs.kieler.synccharts.text.interfaces.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.cau.cs.kieler.synccharts.text.interfaces.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.cau.cs.kieler.synccharts.text.interfaces.services.InterfacesGrammarAccess;

}

@parser::members {
 
 	private InterfacesGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(InterfacesGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleStateExtend
entryRuleStateExtend 
:
{ before(grammarAccess.getStateExtendRule()); }
	 ruleStateExtend
{ after(grammarAccess.getStateExtendRule()); } 
	 EOF 
;

// Rule StateExtend
ruleStateExtend
    @init {
		int stackSize = keepStackSize();
    }
	:
(
(
{ before(grammarAccess.getStateExtendAccess().getAlternatives()); }
(rule__StateExtend__Alternatives)
{ after(grammarAccess.getStateExtendAccess().getAlternatives()); }
)
(
{ before(grammarAccess.getStateExtendAccess().getAlternatives()); }
(rule__StateExtend__Alternatives)*
{ after(grammarAccess.getStateExtendAccess().getAlternatives()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRegionSignalDec
entryRuleRegionSignalDec 
:
{ before(grammarAccess.getRegionSignalDecRule()); }
	 ruleRegionSignalDec
{ after(grammarAccess.getRegionSignalDecRule()); } 
	 EOF 
;

// Rule RegionSignalDec
ruleRegionSignalDec
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRegionSignalDecAccess().getGroup()); }
(rule__RegionSignalDec__Group__0)
{ after(grammarAccess.getRegionSignalDecAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariables
entryRuleVariables 
:
{ before(grammarAccess.getVariablesRule()); }
	 ruleVariables
{ after(grammarAccess.getVariablesRule()); } 
	 EOF 
;

// Rule Variables
ruleVariables
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariablesAccess().getGroup()); }
(rule__Variables__Group__0)
{ after(grammarAccess.getVariablesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignals
entryRuleSignals 
:
{ before(grammarAccess.getSignalsRule()); }
	 ruleSignals
{ after(grammarAccess.getSignalsRule()); } 
	 EOF 
;

// Rule Signals
ruleSignals
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalsAccess().getGroup()); }
(rule__Signals__Group__0)
{ after(grammarAccess.getSignalsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInputSignals
entryRuleInputSignals 
:
{ before(grammarAccess.getInputSignalsRule()); }
	 ruleInputSignals
{ after(grammarAccess.getInputSignalsRule()); } 
	 EOF 
;

// Rule InputSignals
ruleInputSignals
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInputSignalsAccess().getGroup()); }
(rule__InputSignals__Group__0)
{ after(grammarAccess.getInputSignalsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOutputSignals
entryRuleOutputSignals 
:
{ before(grammarAccess.getOutputSignalsRule()); }
	 ruleOutputSignals
{ after(grammarAccess.getOutputSignalsRule()); } 
	 EOF 
;

// Rule OutputSignals
ruleOutputSignals
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOutputSignalsAccess().getGroup()); }
(rule__OutputSignals__Group__0)
{ after(grammarAccess.getOutputSignalsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInOutputSignals
entryRuleInOutputSignals 
:
{ before(grammarAccess.getInOutputSignalsRule()); }
	 ruleInOutputSignals
{ after(grammarAccess.getInOutputSignalsRule()); } 
	 EOF 
;

// Rule InOutputSignals
ruleInOutputSignals
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInOutputSignalsAccess().getGroup()); }
(rule__InOutputSignals__Group__0)
{ after(grammarAccess.getInOutputSignalsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignal
entryRuleSignal 
:
{ before(grammarAccess.getSignalRule()); }
	 ruleSignal
{ after(grammarAccess.getSignalRule()); } 
	 EOF 
;

// Rule Signal
ruleSignal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalAccess().getAlternatives()); }
(rule__Signal__Alternatives)
{ after(grammarAccess.getSignalAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getAlternatives()); }
(rule__Variable__Alternatives)
{ after(grammarAccess.getVariableAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleEffect
entryRuleEffect 
:
{ before(grammarAccess.getEffectRule()); }
	 ruleEffect
{ after(grammarAccess.getEffectRule()); } 
	 EOF 
;

// Rule Effect
ruleEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEffectAccess().getAlternatives()); }
(rule__Effect__Alternatives)
{ after(grammarAccess.getEffectAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEmission
entryRuleEmission 
:
{ before(grammarAccess.getEmissionRule()); }
	 ruleEmission
{ after(grammarAccess.getEmissionRule()); } 
	 EOF 
;

// Rule Emission
ruleEmission
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEmissionAccess().getGroup()); }
(rule__Emission__Group__0)
{ after(grammarAccess.getEmissionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAssignment
entryRuleAssignment 
:
{ before(grammarAccess.getAssignmentRule()); }
	 ruleAssignment
{ after(grammarAccess.getAssignmentRule()); } 
	 EOF 
;

// Rule Assignment
ruleAssignment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAssignmentAccess().getGroup()); }
(rule__Assignment__Group__0)
{ after(grammarAccess.getAssignmentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextEffect
entryRuleTextEffect 
:
{ before(grammarAccess.getTextEffectRule()); }
	 ruleTextEffect
{ after(grammarAccess.getTextEffectRule()); } 
	 EOF 
;

// Rule TextEffect
ruleTextEffect
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextEffectAccess().getGroup()); }
(rule__TextEffect__Group__0)
{ after(grammarAccess.getTextEffectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSignalReference
entryRuleSignalReference 
:
{ before(grammarAccess.getSignalReferenceRule()); }
	 ruleSignalReference
{ after(grammarAccess.getSignalReferenceRule()); } 
	 EOF 
;

// Rule SignalReference
ruleSignalReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSignalReferenceAccess().getGroup()); }
(rule__SignalReference__Group__0)
{ after(grammarAccess.getSignalReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableReference
entryRuleVariableReference 
:
{ before(grammarAccess.getVariableReferenceRule()); }
	 ruleVariableReference
{ after(grammarAccess.getVariableReferenceRule()); } 
	 EOF 
;

// Rule VariableReference
ruleVariableReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableReferenceAccess().getGroup()); }
(rule__VariableReference__Group__0)
{ after(grammarAccess.getVariableReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntValue
entryRuleIntValue 
:
{ before(grammarAccess.getIntValueRule()); }
	 ruleIntValue
{ after(grammarAccess.getIntValueRule()); } 
	 EOF 
;

// Rule IntValue
ruleIntValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntValueAccess().getValueAssignment()); }
(rule__IntValue__ValueAssignment)
{ after(grammarAccess.getIntValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFloatValue
entryRuleFloatValue 
:
{ before(grammarAccess.getFloatValueRule()); }
	 ruleFloatValue
{ after(grammarAccess.getFloatValueRule()); } 
	 EOF 
;

// Rule FloatValue
ruleFloatValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFloatValueAccess().getValueAssignment()); }
(rule__FloatValue__ValueAssignment)
{ after(grammarAccess.getFloatValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanValue
entryRuleBooleanValue 
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
(rule__BooleanValue__ValueAssignment)
{ after(grammarAccess.getBooleanValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Entry rule entryRuleValOperation
entryRuleValOperation 
:
{ before(grammarAccess.getValOperationRule()); }
	 ruleValOperation
{ after(grammarAccess.getValOperationRule()); } 
	 EOF 
;

// Rule ValOperation
ruleValOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValOperationAccess().getGroup()); }
(rule__ValOperation__Group__0)
{ after(grammarAccess.getValOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValuedExpression
entryRuleValuedExpression 
:
{ before(grammarAccess.getValuedExpressionRule()); }
	 ruleValuedExpression
{ after(grammarAccess.getValuedExpressionRule()); } 
	 EOF 
;

// Rule ValuedExpression
ruleValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValuedExpressionAccess().getPlusOperationParserRuleCall()); }
	rulePlusOperation
{ after(grammarAccess.getValuedExpressionAccess().getPlusOperationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParanthesedValuedExpression
entryRuleParanthesedValuedExpression 
:
{ before(grammarAccess.getParanthesedValuedExpressionRule()); }
	 ruleParanthesedValuedExpression
{ after(grammarAccess.getParanthesedValuedExpressionRule()); } 
	 EOF 
;

// Rule ParanthesedValuedExpression
ruleParanthesedValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getAlternatives()); }
(rule__ParanthesedValuedExpression__Alternatives)
{ after(grammarAccess.getParanthesedValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePlusOperation
entryRulePlusOperation 
:
{ before(grammarAccess.getPlusOperationRule()); }
	 rulePlusOperation
{ after(grammarAccess.getPlusOperationRule()); } 
	 EOF 
;

// Rule PlusOperation
rulePlusOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPlusOperationAccess().getGroup()); }
(rule__PlusOperation__Group__0)
{ after(grammarAccess.getPlusOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultOrDivOperation
entryRuleMultOrDivOperation 
:
{ before(grammarAccess.getMultOrDivOperationRule()); }
	 ruleMultOrDivOperation
{ after(grammarAccess.getMultOrDivOperationRule()); } 
	 EOF 
;

// Rule MultOrDivOperation
ruleMultOrDivOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultOrDivOperationAccess().getAlternatives()); }
(rule__MultOrDivOperation__Alternatives)
{ after(grammarAccess.getMultOrDivOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultOperation
entryRuleMultOperation 
:
{ before(grammarAccess.getMultOperationRule()); }
	 ruleMultOperation
{ after(grammarAccess.getMultOperationRule()); } 
	 EOF 
;

// Rule MultOperation
ruleMultOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultOperationAccess().getGroup()); }
(rule__MultOperation__Group__0)
{ after(grammarAccess.getMultOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDivOperation
entryRuleDivOperation 
:
{ before(grammarAccess.getDivOperationRule()); }
	 ruleDivOperation
{ after(grammarAccess.getDivOperationRule()); } 
	 EOF 
;

// Rule DivOperation
ruleDivOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDivOperationAccess().getGroup()); }
(rule__DivOperation__Group__0)
{ after(grammarAccess.getDivOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePreArithmOperation
entryRulePreArithmOperation 
:
{ before(grammarAccess.getPreArithmOperationRule()); }
	 rulePreArithmOperation
{ after(grammarAccess.getPreArithmOperationRule()); } 
	 EOF 
;

// Rule PreArithmOperation
rulePreArithmOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreArithmOperationAccess().getGroup()); }
(rule__PreArithmOperation__Group__0)
{ after(grammarAccess.getPreArithmOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePreOrNormalValuedExpression
entryRulePreOrNormalValuedExpression 
:
{ before(grammarAccess.getPreOrNormalValuedExpressionRule()); }
	 rulePreOrNormalValuedExpression
{ after(grammarAccess.getPreOrNormalValuedExpressionRule()); } 
	 EOF 
;

// Rule PreOrNormalValuedExpression
rulePreOrNormalValuedExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPreOrNormalValuedExpressionAccess().getAlternatives()); }
(rule__PreOrNormalValuedExpression__Alternatives)
{ after(grammarAccess.getPreOrNormalValuedExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCompareOperation
entryRuleCompareOperation 
:
{ before(grammarAccess.getCompareOperationRule()); }
	 ruleCompareOperation
{ after(grammarAccess.getCompareOperationRule()); } 
	 EOF 
;

// Rule CompareOperation
ruleCompareOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup()); }
(rule__CompareOperation__Group__0)
{ after(grammarAccess.getCompareOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOperation
entryRuleUnaryOperation 
:
{ before(grammarAccess.getUnaryOperationRule()); }
	 ruleUnaryOperation
{ after(grammarAccess.getUnaryOperationRule()); } 
	 EOF 
;

// Rule UnaryOperation
ruleUnaryOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOperationAccess().getGroup()); }
(rule__UnaryOperation__Group__0)
{ after(grammarAccess.getUnaryOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryParanthesedOperation
entryRuleUnaryParanthesedOperation 
:
{ before(grammarAccess.getUnaryParanthesedOperationRule()); }
	 ruleUnaryParanthesedOperation
{ after(grammarAccess.getUnaryParanthesedOperationRule()); } 
	 EOF 
;

// Rule UnaryParanthesedOperation
ruleUnaryParanthesedOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryParanthesedOperationAccess().getGroup()); }
(rule__UnaryParanthesedOperation__Group__0)
{ after(grammarAccess.getUnaryParanthesedOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUnaryOrNormalExpression
entryRuleUnaryOrNormalExpression 
:
{ before(grammarAccess.getUnaryOrNormalExpressionRule()); }
	 ruleUnaryOrNormalExpression
{ after(grammarAccess.getUnaryOrNormalExpressionRule()); } 
	 EOF 
;

// Rule UnaryOrNormalExpression
ruleUnaryOrNormalExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnaryOrNormalExpressionAccess().getAlternatives()); }
(rule__UnaryOrNormalExpression__Alternatives)
{ after(grammarAccess.getUnaryOrNormalExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleAndOperation
entryRuleAndOperation 
:
{ before(grammarAccess.getAndOperationRule()); }
	 ruleAndOperation
{ after(grammarAccess.getAndOperationRule()); } 
	 EOF 
;

// Rule AndOperation
ruleAndOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getAndOperationAccess().getGroup()); }
(rule__AndOperation__Group__0)
{ after(grammarAccess.getAndOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOrOperation
entryRuleOrOperation 
:
{ before(grammarAccess.getOrOperationRule()); }
	 ruleOrOperation
{ after(grammarAccess.getOrOperationRule()); } 
	 EOF 
;

// Rule OrOperation
ruleOrOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOrOperationAccess().getGroup()); }
(rule__OrOperation__Group__0)
{ after(grammarAccess.getOrOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParanthesedBooleanExpression
entryRuleParanthesedBooleanExpression 
:
{ before(grammarAccess.getParanthesedBooleanExpressionRule()); }
	 ruleParanthesedBooleanExpression
{ after(grammarAccess.getParanthesedBooleanExpressionRule()); } 
	 EOF 
;

// Rule ParanthesedBooleanExpression
ruleParanthesedBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParanthesedBooleanExpressionAccess().getAlternatives()); }
(rule__ParanthesedBooleanExpression__Alternatives)
{ after(grammarAccess.getParanthesedBooleanExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanExpression
entryRuleBooleanExpression 
:
{ before(grammarAccess.getBooleanExpressionRule()); }
	 ruleBooleanExpression
{ after(grammarAccess.getBooleanExpressionRule()); } 
	 EOF 
;

// Rule BooleanExpression
ruleBooleanExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanExpressionAccess().getOrOperationParserRuleCall()); }
	ruleOrOperation
{ after(grammarAccess.getBooleanExpressionAccess().getOrOperationParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTextExpression
entryRuleTextExpression 
:
{ before(grammarAccess.getTextExpressionRule()); }
	 ruleTextExpression
{ after(grammarAccess.getTextExpressionRule()); } 
	 EOF 
;

// Rule TextExpression
ruleTextExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTextExpressionAccess().getGroup()); }
(rule__TextExpression__Group__0)
{ after(grammarAccess.getTextExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExpression
entryRuleExpression 
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
(rule__Expression__Alternatives)
{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}






// Rule ValOperator
ruleValOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration()); }
(	'?' 
)
{ after(grammarAccess.getValOperatorAccess().getVALEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CompareOperator
ruleCompareOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
(rule__CompareOperator__Alternatives)
{ after(grammarAccess.getCompareOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryOperator
ruleUnaryOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration()); }
(	'not' 
)
{ after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule UnaryParanthesedOperator
ruleUnaryParanthesedOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryParanthesedOperatorAccess().getPREEnumLiteralDeclaration()); }
(	'pre' 
)
{ after(grammarAccess.getUnaryParanthesedOperatorAccess().getPREEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OperatorOr
ruleOperatorOr
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorOrAccess().getOREnumLiteralDeclaration()); }
(	'or' 
)
{ after(grammarAccess.getOperatorOrAccess().getOREnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule OperatorAnd
ruleOperatorAnd
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperatorAndAccess().getANDEnumLiteralDeclaration()); }
(	'and' 
)
{ after(grammarAccess.getOperatorAndAccess().getANDEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}





// Rule PlusOperator
rulePlusOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusOperatorAccess().getAlternatives()); }
(rule__PlusOperator__Alternatives)
{ after(grammarAccess.getPlusOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MultOperator
ruleMultOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperatorAccess().getAlternatives()); }
(rule__MultOperator__Alternatives)
{ after(grammarAccess.getMultOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule DivOperator
ruleDivOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); }
(	'/' 
)
{ after(grammarAccess.getDivOperatorAccess().getDIVEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule ValueType
ruleValueType
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getAlternatives()); }
(rule__ValueType__Alternatives)
{ after(grammarAccess.getValueTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule CombineOperator
ruleCombineOperator
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
(rule__CombineOperator__Alternatives)
{ after(grammarAccess.getCombineOperatorAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StateExtend__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getRegionsAssignment_0()); }
(rule__StateExtend__RegionsAssignment_0)
{ after(grammarAccess.getStateExtendAccess().getRegionsAssignment_0()); }
)

    |(
{ before(grammarAccess.getStateExtendAccess().getGroup_1()); }
(rule__StateExtend__Group_1__0)
{ after(grammarAccess.getStateExtendAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getStateExtendAccess().getGroup_2()); }
(rule__StateExtend__Group_2__0)
{ after(grammarAccess.getStateExtendAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getStateExtendAccess().getGroup_3()); }
(rule__StateExtend__Group_3__0)
{ after(grammarAccess.getStateExtendAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getStateExtendAccess().getGroup_4()); }
(rule__StateExtend__Group_4__0)
{ after(grammarAccess.getStateExtendAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getStateExtendAccess().getGroup_5()); }
(rule__StateExtend__Group_5__0)
{ after(grammarAccess.getStateExtendAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getGroup_2_0()); }
(rule__RegionSignalDec__Group_2_0__0)
{ after(grammarAccess.getRegionSignalDecAccess().getGroup_2_0()); }
)

    |(
{ before(grammarAccess.getRegionSignalDecAccess().getGroup_2_1()); }
(rule__RegionSignalDec__Group_2_1__0)
{ after(grammarAccess.getRegionSignalDecAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Alternatives_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getGroup_3_0()); }
(rule__RegionSignalDec__Group_3_0__0)
{ after(grammarAccess.getRegionSignalDecAccess().getGroup_3_0()); }
)

    |(
{ before(grammarAccess.getRegionSignalDecAccess().getGroup_3_1()); }
(rule__RegionSignalDec__Group_3_1__0)
{ after(grammarAccess.getRegionSignalDecAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_0()); }
(rule__Signal__NameAssignment_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getSignalAccess().getGroup_1()); }
(rule__Signal__Group_1__0)
{ after(grammarAccess.getSignalAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getSignalAccess().getGroup_2()); }
(rule__Signal__Group_2__0)
{ after(grammarAccess.getSignalAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getSignalAccess().getGroup_3()); }
(rule__Signal__Group_3__0)
{ after(grammarAccess.getSignalAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getSignalAccess().getGroup_4()); }
(rule__Signal__Group_4__0)
{ after(grammarAccess.getSignalAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getSignalAccess().getGroup_5()); }
(rule__Signal__Group_5__0)
{ after(grammarAccess.getSignalAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getSignalAccess().getGroup_6()); }
(rule__Signal__Group_6__0)
{ after(grammarAccess.getSignalAccess().getGroup_6()); }
)

    |(
{ before(grammarAccess.getSignalAccess().getGroup_7()); }
(rule__Signal__Group_7__0)
{ after(grammarAccess.getSignalAccess().getGroup_7()); }
)

    |(
{ before(grammarAccess.getSignalAccess().getGroup_8()); }
(rule__Signal__Group_8__0)
{ after(grammarAccess.getSignalAccess().getGroup_8()); }
)

    |(
{ before(grammarAccess.getSignalAccess().getGroup_9()); }
(rule__Signal__Group_9__0)
{ after(grammarAccess.getSignalAccess().getGroup_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_0()); }
(rule__Variable__NameAssignment_0)
{ after(grammarAccess.getVariableAccess().getNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getGroup_1()); }
(rule__Variable__Group_1__0)
{ after(grammarAccess.getVariableAccess().getGroup_1()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getGroup_2()); }
(rule__Variable__Group_2__0)
{ after(grammarAccess.getVariableAccess().getGroup_2()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getGroup_3()); }
(rule__Variable__Group_3__0)
{ after(grammarAccess.getVariableAccess().getGroup_3()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getGroup_4()); }
(rule__Variable__Group_4__0)
{ after(grammarAccess.getVariableAccess().getGroup_4()); }
)

    |(
{ before(grammarAccess.getVariableAccess().getGroup_5()); }
(rule__Variable__Group_5__0)
{ after(grammarAccess.getVariableAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Effect__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEffectAccess().getEmissionParserRuleCall_0()); }
	ruleEmission
{ after(grammarAccess.getEffectAccess().getEmissionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_1()); }
	ruleAssignment
{ after(grammarAccess.getEffectAccess().getAssignmentParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getEffectAccess().getTextEffectParserRuleCall_2()); }
	ruleTextEffect
{ after(grammarAccess.getEffectAccess().getTextEffectParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getGroup_1_0()); }
(rule__Emission__Group_1_0__0)
{ after(grammarAccess.getEmissionAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getEmissionAccess().getGroup_1_1()); }
(rule__Emission__Group_1_1__0)
{ after(grammarAccess.getEmissionAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Alternatives_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_2_0()); }
(rule__Assignment__ExpressionAssignment_2_0)
{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_2_0()); }
)

    |(
{ before(grammarAccess.getAssignmentAccess().getExpressionAssignment_2_1()); }
(rule__Assignment__ExpressionAssignment_2_1)
{ after(grammarAccess.getAssignmentAccess().getExpressionAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesedValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getIntValueParserRuleCall_0()); }
	ruleIntValue
{ after(grammarAccess.getParanthesedValuedExpressionAccess().getIntValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
	ruleFloatValue
{ after(grammarAccess.getParanthesedValuedExpressionAccess().getFloatValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getValOperationParserRuleCall_2()); }
	ruleValOperation
{ after(grammarAccess.getParanthesedValuedExpressionAccess().getValOperationParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getVariableReferenceParserRuleCall_3()); }
	ruleVariableReference
{ after(grammarAccess.getParanthesedValuedExpressionAccess().getVariableReferenceParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getTextExpressionParserRuleCall_4()); }
	ruleTextExpression
{ after(grammarAccess.getParanthesedValuedExpressionAccess().getTextExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getGroup_5()); }
(rule__ParanthesedValuedExpression__Group_5__0)
{ after(grammarAccess.getParanthesedValuedExpressionAccess().getGroup_5()); }
)

    |(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getGroup_6()); }
(rule__ParanthesedValuedExpression__Group_6__0)
{ after(grammarAccess.getParanthesedValuedExpressionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDivOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOrDivOperationAccess().getMultOperationParserRuleCall_0()); }
	ruleMultOperation
{ after(grammarAccess.getMultOrDivOperationAccess().getMultOperationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getMultOrDivOperationAccess().getGroup_1()); }
(rule__MultOrDivOperation__Group_1__0)
{ after(grammarAccess.getMultOrDivOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreOrNormalValuedExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreOrNormalValuedExpressionAccess().getPreArithmOperationParserRuleCall_0()); }
	rulePreArithmOperation
{ after(grammarAccess.getPreOrNormalValuedExpressionAccess().getPreArithmOperationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPreOrNormalValuedExpressionAccess().getParanthesedValuedExpressionParserRuleCall_1()); }
	ruleParanthesedValuedExpression
{ after(grammarAccess.getPreOrNormalValuedExpressionAccess().getParanthesedValuedExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__SubExpressionsAlternatives_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getSubExpressionsParanthesedBooleanExpressionParserRuleCall_1_0_0()); }
	ruleParanthesedBooleanExpression
{ after(grammarAccess.getUnaryOperationAccess().getSubExpressionsParanthesedBooleanExpressionParserRuleCall_1_0_0()); }
)

    |(
{ before(grammarAccess.getUnaryOperationAccess().getSubExpressionsUnaryParanthesedOperationParserRuleCall_1_0_1()); }
	ruleUnaryParanthesedOperation
{ after(grammarAccess.getUnaryOperationAccess().getSubExpressionsUnaryParanthesedOperationParserRuleCall_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOrNormalExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOrNormalExpressionAccess().getUnaryOperationParserRuleCall_0()); }
	ruleUnaryOperation
{ after(grammarAccess.getUnaryOrNormalExpressionAccess().getUnaryOperationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getUnaryOrNormalExpressionAccess().getUnaryParanthesedOperationParserRuleCall_1()); }
	ruleUnaryParanthesedOperation
{ after(grammarAccess.getUnaryOrNormalExpressionAccess().getUnaryParanthesedOperationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getUnaryOrNormalExpressionAccess().getParanthesedBooleanExpressionParserRuleCall_2()); }
	ruleParanthesedBooleanExpression
{ after(grammarAccess.getUnaryOrNormalExpressionAccess().getParanthesedBooleanExpressionParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesedBooleanExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesedBooleanExpressionAccess().getBooleanValueParserRuleCall_0()); }
	ruleBooleanValue
{ after(grammarAccess.getParanthesedBooleanExpressionAccess().getBooleanValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParanthesedBooleanExpressionAccess().getCompareOperationParserRuleCall_1()); }
	ruleCompareOperation
{ after(grammarAccess.getParanthesedBooleanExpressionAccess().getCompareOperationParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getParanthesedBooleanExpressionAccess().getSignalReferenceParserRuleCall_2()); }
	ruleSignalReference
{ after(grammarAccess.getParanthesedBooleanExpressionAccess().getSignalReferenceParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getParanthesedBooleanExpressionAccess().getValOperationParserRuleCall_3()); }
	ruleValOperation
{ after(grammarAccess.getParanthesedBooleanExpressionAccess().getValOperationParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getParanthesedBooleanExpressionAccess().getTextExpressionParserRuleCall_4()); }
	ruleTextExpression
{ after(grammarAccess.getParanthesedBooleanExpressionAccess().getTextExpressionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getParanthesedBooleanExpressionAccess().getGroup_5()); }
(rule__ParanthesedBooleanExpression__Group_5__0)
{ after(grammarAccess.getParanthesedBooleanExpressionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_0()); }
	ruleValuedExpression
{ after(grammarAccess.getExpressionAccess().getValuedExpressionParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_1()); }
	ruleBooleanExpression
{ after(grammarAccess.getExpressionAccess().getBooleanExpressionParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
(	'=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getEQEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
(	'<' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
(	'<=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getLEQEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
(	'>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
(	'>=' 
)
{ after(grammarAccess.getCompareOperatorAccess().getGEQEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
(	'<>' 
)
{ after(grammarAccess.getCompareOperatorAccess().getNEEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusOperatorAccess().getADDEnumLiteralDeclaration_0()); }
(	'+' 
)
{ after(grammarAccess.getPlusOperatorAccess().getADDEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getPlusOperatorAccess().getSUBEnumLiteralDeclaration_1()); }
(	'-' 
)
{ after(grammarAccess.getPlusOperatorAccess().getSUBEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration_0()); }
(	'*' 
)
{ after(grammarAccess.getMultOperatorAccess().getMULTEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getMultOperatorAccess().getMODEnumLiteralDeclaration_1()); }
(	'mod' 
)
{ after(grammarAccess.getMultOperatorAccess().getMODEnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
(	'PURE' 
)
{ after(grammarAccess.getValueTypeAccess().getPUREEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
(	'BOOL' 
)
{ after(grammarAccess.getValueTypeAccess().getBOOLEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
(	'UNSIGNED' 
)
{ after(grammarAccess.getValueTypeAccess().getUNSIGNEDEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
(	'INT' 
)
{ after(grammarAccess.getValueTypeAccess().getINTEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
(	'FLOAT' 
)
{ after(grammarAccess.getValueTypeAccess().getFLOATEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_5()); }
(	'HOST' 
)
{ after(grammarAccess.getValueTypeAccess().getHOSTEnumLiteralDeclaration_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CombineOperator__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
(	'NONE' 
)
{ after(grammarAccess.getCombineOperatorAccess().getNONEEnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
(	'+' 
)
{ after(grammarAccess.getCombineOperatorAccess().getADDEnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
(	'*' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMULTEnumLiteralDeclaration_2()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
(	'max' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMAXEnumLiteralDeclaration_3()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
(	'min' 
)
{ after(grammarAccess.getCombineOperatorAccess().getMINEnumLiteralDeclaration_4()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
(	'or' 
)
{ after(grammarAccess.getCombineOperatorAccess().getOREnumLiteralDeclaration_5()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
(	'and' 
)
{ after(grammarAccess.getCombineOperatorAccess().getANDEnumLiteralDeclaration_6()); }
)

    |(
{ before(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
(	'host' 
)
{ after(grammarAccess.getCombineOperatorAccess().getHOSTEnumLiteralDeclaration_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__StateExtend__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateExtend__Group_1__0__Impl
	rule__StateExtend__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getInputKeyword_1_0()); }

	'input' 

{ after(grammarAccess.getStateExtendAccess().getInputKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateExtend__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateExtend__Group_1__1__Impl
	rule__StateExtend__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getOutputKeyword_1_1()); }

	'output' 

{ after(grammarAccess.getStateExtendAccess().getOutputKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateExtend__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateExtend__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getInOutputSignalsAssignment_1_2()); }
(rule__StateExtend__InOutputSignalsAssignment_1_2)
{ after(grammarAccess.getStateExtendAccess().getInOutputSignalsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StateExtend__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateExtend__Group_2__0__Impl
	rule__StateExtend__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getOutputKeyword_2_0()); }

	'output' 

{ after(grammarAccess.getStateExtendAccess().getOutputKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateExtend__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateExtend__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getOutputSignalsAssignment_2_1()); }
(rule__StateExtend__OutputSignalsAssignment_2_1)
{ after(grammarAccess.getStateExtendAccess().getOutputSignalsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateExtend__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateExtend__Group_3__0__Impl
	rule__StateExtend__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getInputKeyword_3_0()); }

	'input' 

{ after(grammarAccess.getStateExtendAccess().getInputKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateExtend__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateExtend__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getInputSignalsAssignment_3_1()); }
(rule__StateExtend__InputSignalsAssignment_3_1)
{ after(grammarAccess.getStateExtendAccess().getInputSignalsAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateExtend__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateExtend__Group_4__0__Impl
	rule__StateExtend__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getSignalKeyword_4_0()); }

	'signal' 

{ after(grammarAccess.getStateExtendAccess().getSignalKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateExtend__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateExtend__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getSignalsAssignment_4_1()); }
(rule__StateExtend__SignalsAssignment_4_1)
{ after(grammarAccess.getStateExtendAccess().getSignalsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StateExtend__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateExtend__Group_5__0__Impl
	rule__StateExtend__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getVariableKeyword_5_0()); }

	'variable' 

{ after(grammarAccess.getStateExtendAccess().getVariableKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateExtend__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateExtend__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getVariableAssignment_5_1()); }
(rule__StateExtend__VariableAssignment_5_1)
{ after(grammarAccess.getStateExtendAccess().getVariableAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegionSignalDec__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group__0__Impl
	rule__RegionSignalDec__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getRegionAssignment_0()); }
(rule__RegionSignalDec__RegionAssignment_0)
{ after(grammarAccess.getRegionSignalDecAccess().getRegionAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group__1__Impl
	rule__RegionSignalDec__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getRegionSignalDecAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group__2__Impl
	rule__RegionSignalDec__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getAlternatives_2()); }
(rule__RegionSignalDec__Alternatives_2)
{ after(grammarAccess.getRegionSignalDecAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group__3__Impl
	rule__RegionSignalDec__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getAlternatives_3()); }
(rule__RegionSignalDec__Alternatives_3)*
{ after(grammarAccess.getRegionSignalDecAccess().getAlternatives_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getSemicolonKeyword_4()); }

	';' 

{ after(grammarAccess.getRegionSignalDecAccess().getSemicolonKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__RegionSignalDec__Group_2_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_2_0__0__Impl
	rule__RegionSignalDec__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_2_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getVarKeyword_2_0_0()); }

	'var' 

{ after(grammarAccess.getRegionSignalDecAccess().getVarKeyword_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_2_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_2_0__1__Impl
	rule__RegionSignalDec__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_2_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_2_0_1()); }
(rule__RegionSignalDec__VarsAssignment_2_0_1)
{ after(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_2_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_2_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_2_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_2_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getGroup_2_0_2()); }
(rule__RegionSignalDec__Group_2_0_2__0)*
{ after(grammarAccess.getRegionSignalDecAccess().getGroup_2_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RegionSignalDec__Group_2_0_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_2_0_2__0__Impl
	rule__RegionSignalDec__Group_2_0_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_2_0_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_2_0_2_0()); }

	',' 

{ after(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_2_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_2_0_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_2_0_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_2_0_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_2_0_2_1()); }
(rule__RegionSignalDec__VarsAssignment_2_0_2_1)
{ after(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_2_0_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegionSignalDec__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_2_1__0__Impl
	rule__RegionSignalDec__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getSignalKeyword_2_1_0()); }

	'signal' 

{ after(grammarAccess.getRegionSignalDecAccess().getSignalKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_2_1__1__Impl
	rule__RegionSignalDec__Group_2_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_2_1_1()); }
(rule__RegionSignalDec__SignalsAssignment_2_1_1)
{ after(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_2_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_2_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_2_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getGroup_2_1_2()); }
(rule__RegionSignalDec__Group_2_1_2__0)*
{ after(grammarAccess.getRegionSignalDecAccess().getGroup_2_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__RegionSignalDec__Group_2_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_2_1_2__0__Impl
	rule__RegionSignalDec__Group_2_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_2_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_2_1_2_0()); }

	',' 

{ after(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_2_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_2_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_2_1_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_2_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_2_1_2_1()); }
(rule__RegionSignalDec__SignalsAssignment_2_1_2_1)
{ after(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_2_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegionSignalDec__Group_3_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_0__0__Impl
	rule__RegionSignalDec__Group_3_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_3_0_0()); }

	',' 

{ after(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_3_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_0__1__Impl
	rule__RegionSignalDec__Group_3_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getVarKeyword_3_0_1()); }

	'var' 

{ after(grammarAccess.getRegionSignalDecAccess().getVarKeyword_3_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_3_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_0__2__Impl
	rule__RegionSignalDec__Group_3_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_3_0_2()); }
(rule__RegionSignalDec__VarsAssignment_3_0_2)
{ after(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_3_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_3_0__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_0__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getGroup_3_0_3()); }
(rule__RegionSignalDec__Group_3_0_3__0)*
{ after(grammarAccess.getRegionSignalDecAccess().getGroup_3_0_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RegionSignalDec__Group_3_0_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_0_3__0__Impl
	rule__RegionSignalDec__Group_3_0_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_0_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_3_0_3_0()); }

	',' 

{ after(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_3_0_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_3_0_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_0_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_0_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_3_0_3_1()); }
(rule__RegionSignalDec__VarsAssignment_3_0_3_1)
{ after(grammarAccess.getRegionSignalDecAccess().getVarsAssignment_3_0_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__RegionSignalDec__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_1__0__Impl
	rule__RegionSignalDec__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_3_1_0()); }

	',' 

{ after(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_1__1__Impl
	rule__RegionSignalDec__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getSignalKeyword_3_1_1()); }

	'signal' 

{ after(grammarAccess.getRegionSignalDecAccess().getSignalKeyword_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_3_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_1__2__Impl
	rule__RegionSignalDec__Group_3_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_3_1_2()); }
(rule__RegionSignalDec__SignalsAssignment_3_1_2)
{ after(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_3_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_3_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getGroup_3_1_3()); }
(rule__RegionSignalDec__Group_3_1_3__0)*
{ after(grammarAccess.getRegionSignalDecAccess().getGroup_3_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__RegionSignalDec__Group_3_1_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_1_3__0__Impl
	rule__RegionSignalDec__Group_3_1_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_1_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_3_1_3_0()); }

	',' 

{ after(grammarAccess.getRegionSignalDecAccess().getCommaKeyword_3_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__RegionSignalDec__Group_3_1_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__RegionSignalDec__Group_3_1_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__Group_3_1_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_3_1_3_1()); }
(rule__RegionSignalDec__SignalsAssignment_3_1_3_1)
{ after(grammarAccess.getRegionSignalDecAccess().getSignalsAssignment_3_1_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variables__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group__0__Impl
	rule__Variables__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getGroup_0()); }
(rule__Variables__Group_0__0)
{ after(grammarAccess.getVariablesAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variables__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getVariablesAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variables__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_0__0__Impl
	rule__Variables__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarsAssignment_0_0()); }
(rule__Variables__VarsAssignment_0_0)
{ after(grammarAccess.getVariablesAccess().getVarsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variables__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getGroup_0_1()); }
(rule__Variables__Group_0_1__0)*
{ after(grammarAccess.getVariablesAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variables__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_0_1__0__Impl
	rule__Variables__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getCommaKeyword_0_1_0()); }

	',' 

{ after(grammarAccess.getVariablesAccess().getCommaKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variables__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variables__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarsAssignment_0_1_1()); }
(rule__Variables__VarsAssignment_0_1_1)
{ after(grammarAccess.getVariablesAccess().getVarsAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signals__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signals__Group__0__Impl
	rule__Signals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signals__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalsAccess().getGroup_0()); }
(rule__Signals__Group_0__0)
{ after(grammarAccess.getSignalsAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signals__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signals__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalsAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getSignalsAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signals__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signals__Group_0__0__Impl
	rule__Signals__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signals__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalsAccess().getSignalsAssignment_0_0()); }
(rule__Signals__SignalsAssignment_0_0)
{ after(grammarAccess.getSignalsAccess().getSignalsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signals__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signals__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signals__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalsAccess().getGroup_0_1()); }
(rule__Signals__Group_0_1__0)*
{ after(grammarAccess.getSignalsAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signals__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signals__Group_0_1__0__Impl
	rule__Signals__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signals__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalsAccess().getCommaKeyword_0_1_0()); }

	',' 

{ after(grammarAccess.getSignalsAccess().getCommaKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signals__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signals__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signals__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalsAccess().getSignalsAssignment_0_1_1()); }
(rule__Signals__SignalsAssignment_0_1_1)
{ after(grammarAccess.getSignalsAccess().getSignalsAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InputSignals__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputSignals__Group__0__Impl
	rule__InputSignals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSignalsAccess().getGroup_0()); }
(rule__InputSignals__Group_0__0)
{ after(grammarAccess.getInputSignalsAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputSignals__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputSignals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSignalsAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getInputSignalsAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InputSignals__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputSignals__Group_0__0__Impl
	rule__InputSignals__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSignalsAccess().getSignalsAssignment_0_0()); }
(rule__InputSignals__SignalsAssignment_0_0)
{ after(grammarAccess.getInputSignalsAccess().getSignalsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputSignals__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputSignals__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSignalsAccess().getGroup_0_1()); }
(rule__InputSignals__Group_0_1__0)*
{ after(grammarAccess.getInputSignalsAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InputSignals__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputSignals__Group_0_1__0__Impl
	rule__InputSignals__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSignalsAccess().getCommaKeyword_0_1_0()); }

	',' 

{ after(grammarAccess.getInputSignalsAccess().getCommaKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InputSignals__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InputSignals__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSignalsAccess().getSignalsAssignment_0_1_1()); }
(rule__InputSignals__SignalsAssignment_0_1_1)
{ after(grammarAccess.getInputSignalsAccess().getSignalsAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputSignals__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputSignals__Group__0__Impl
	rule__OutputSignals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputSignals__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputSignalsAccess().getGroup_0()); }
(rule__OutputSignals__Group_0__0)
{ after(grammarAccess.getOutputSignalsAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputSignals__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputSignals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputSignals__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputSignalsAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getOutputSignalsAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputSignals__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputSignals__Group_0__0__Impl
	rule__OutputSignals__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputSignals__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputSignalsAccess().getSignalsAssignment_0_0()); }
(rule__OutputSignals__SignalsAssignment_0_0)
{ after(grammarAccess.getOutputSignalsAccess().getSignalsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputSignals__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputSignals__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputSignals__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputSignalsAccess().getGroup_0_1()); }
(rule__OutputSignals__Group_0_1__0)*
{ after(grammarAccess.getOutputSignalsAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OutputSignals__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputSignals__Group_0_1__0__Impl
	rule__OutputSignals__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputSignals__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputSignalsAccess().getCommaKeyword_0_1_0()); }

	',' 

{ after(grammarAccess.getOutputSignalsAccess().getCommaKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OutputSignals__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OutputSignals__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OutputSignals__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputSignalsAccess().getSignalsAssignment_0_1_1()); }
(rule__OutputSignals__SignalsAssignment_0_1_1)
{ after(grammarAccess.getOutputSignalsAccess().getSignalsAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InOutputSignals__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InOutputSignals__Group__0__Impl
	rule__InOutputSignals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InOutputSignals__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInOutputSignalsAccess().getGroup_0()); }
(rule__InOutputSignals__Group_0__0)
{ after(grammarAccess.getInOutputSignalsAccess().getGroup_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InOutputSignals__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InOutputSignals__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InOutputSignals__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInOutputSignalsAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getInOutputSignalsAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InOutputSignals__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InOutputSignals__Group_0__0__Impl
	rule__InOutputSignals__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InOutputSignals__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInOutputSignalsAccess().getSignalsAssignment_0_0()); }
(rule__InOutputSignals__SignalsAssignment_0_0)
{ after(grammarAccess.getInOutputSignalsAccess().getSignalsAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InOutputSignals__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InOutputSignals__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InOutputSignals__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInOutputSignalsAccess().getGroup_0_1()); }
(rule__InOutputSignals__Group_0_1__0)*
{ after(grammarAccess.getInOutputSignalsAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__InOutputSignals__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InOutputSignals__Group_0_1__0__Impl
	rule__InOutputSignals__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__InOutputSignals__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInOutputSignalsAccess().getCommaKeyword_0_1_0()); }

	',' 

{ after(grammarAccess.getInOutputSignalsAccess().getCommaKeyword_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__InOutputSignals__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__InOutputSignals__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__InOutputSignals__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInOutputSignalsAccess().getSignalsAssignment_0_1_1()); }
(rule__InOutputSignals__SignalsAssignment_0_1_1)
{ after(grammarAccess.getInOutputSignalsAccess().getSignalsAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signal__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_1__0__Impl
	rule__Signal__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_1_0()); }
(rule__Signal__NameAssignment_1_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_1__1__Impl
	rule__Signal__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getSignalAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getTypeAssignment_1_2()); }
(rule__Signal__TypeAssignment_1_2)
{ after(grammarAccess.getSignalAccess().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Signal__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_2__0__Impl
	rule__Signal__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_2_0()); }
(rule__Signal__NameAssignment_2_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getGroup_2_1()); }
(rule__Signal__Group_2_1__0)
{ after(grammarAccess.getSignalAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signal__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_2_1__0__Impl
	rule__Signal__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getColonEqualsSignKeyword_2_1_0()); }

	':=' 

{ after(grammarAccess.getSignalAccess().getColonEqualsSignKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getInitialValueAssignment_2_1_1()); }
(rule__Signal__InitialValueAssignment_2_1_1)
{ after(grammarAccess.getSignalAccess().getInitialValueAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signal__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_3__0__Impl
	rule__Signal__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_3_0()); }
(rule__Signal__NameAssignment_3_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_3__1__Impl
	rule__Signal__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getGroup_3_1()); }
(rule__Signal__Group_3_1__0)
{ after(grammarAccess.getSignalAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_3__2__Impl
	rule__Signal__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getColonKeyword_3_2()); }

	':' 

{ after(grammarAccess.getSignalAccess().getColonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getTypeAssignment_3_3()); }
(rule__Signal__TypeAssignment_3_3)
{ after(grammarAccess.getSignalAccess().getTypeAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Signal__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_3_1__0__Impl
	rule__Signal__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getColonEqualsSignKeyword_3_1_0()); }

	':=' 

{ after(grammarAccess.getSignalAccess().getColonEqualsSignKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getInitialValueAssignment_3_1_1()); }
(rule__Signal__InitialValueAssignment_3_1_1)
{ after(grammarAccess.getSignalAccess().getInitialValueAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signal__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_4__0__Impl
	rule__Signal__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_4_0()); }
(rule__Signal__NameAssignment_4_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_4__1__Impl
	rule__Signal__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getGroup_4_1()); }
(rule__Signal__Group_4_1__0)
{ after(grammarAccess.getSignalAccess().getGroup_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getGroup_4_2()); }
(rule__Signal__Group_4_2__0)
{ after(grammarAccess.getSignalAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Signal__Group_4_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_4_1__0__Impl
	rule__Signal__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_4_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getColonEqualsSignKeyword_4_1_0()); }

	':=' 

{ after(grammarAccess.getSignalAccess().getColonEqualsSignKeyword_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_4_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_4_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_4_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getInitialValueAssignment_4_1_1()); }
(rule__Signal__InitialValueAssignment_4_1_1)
{ after(grammarAccess.getSignalAccess().getInitialValueAssignment_4_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signal__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_4_2__0__Impl
	rule__Signal__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getCombineKeyword_4_2_0()); }

	'combine' 

{ after(grammarAccess.getSignalAccess().getCombineKeyword_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_4_2__1__Impl
	rule__Signal__Group_4_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getTypeAssignment_4_2_1()); }
(rule__Signal__TypeAssignment_4_2_1)
{ after(grammarAccess.getSignalAccess().getTypeAssignment_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_4_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_4_2__2__Impl
	rule__Signal__Group_4_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_4_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getWithKeyword_4_2_2()); }

	'with' 

{ after(grammarAccess.getSignalAccess().getWithKeyword_4_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_4_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_4_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_4_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getCombineOperatorAssignment_4_2_3()); }
(rule__Signal__CombineOperatorAssignment_4_2_3)
{ after(grammarAccess.getSignalAccess().getCombineOperatorAssignment_4_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Signal__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_5__0__Impl
	rule__Signal__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_5_0()); }
(rule__Signal__NameAssignment_5_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_5__1__Impl
	rule__Signal__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getColonKeyword_5_1()); }

	':' 

{ after(grammarAccess.getSignalAccess().getColonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostTypeAssignment_5_2()); }
(rule__Signal__HostTypeAssignment_5_2)
{ after(grammarAccess.getSignalAccess().getHostTypeAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Signal__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_6__0__Impl
	rule__Signal__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_6_0()); }
(rule__Signal__NameAssignment_6_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_6__1__Impl
	rule__Signal__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getGroup_6_1()); }
(rule__Signal__Group_6_1__0)
{ after(grammarAccess.getSignalAccess().getGroup_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_6__2__Impl
	rule__Signal__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getColonKeyword_6_2()); }

	':' 

{ after(grammarAccess.getSignalAccess().getColonKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostTypeAssignment_6_3()); }
(rule__Signal__HostTypeAssignment_6_3)
{ after(grammarAccess.getSignalAccess().getHostTypeAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Signal__Group_6_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_6_1__0__Impl
	rule__Signal__Group_6_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_6_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getColonEqualsSignKeyword_6_1_0()); }

	':=' 

{ after(grammarAccess.getSignalAccess().getColonEqualsSignKeyword_6_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_6_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_6_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_6_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getInitialValueAssignment_6_1_1()); }
(rule__Signal__InitialValueAssignment_6_1_1)
{ after(grammarAccess.getSignalAccess().getInitialValueAssignment_6_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signal__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_7__0__Impl
	rule__Signal__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_7_0()); }
(rule__Signal__NameAssignment_7_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_7__1__Impl
	rule__Signal__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getGroup_7_1()); }
(rule__Signal__Group_7_1__0)
{ after(grammarAccess.getSignalAccess().getGroup_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getGroup_7_2()); }
(rule__Signal__Group_7_2__0)
{ after(grammarAccess.getSignalAccess().getGroup_7_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Signal__Group_7_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_7_1__0__Impl
	rule__Signal__Group_7_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_7_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getColonEqualsSignKeyword_7_1_0()); }

	':=' 

{ after(grammarAccess.getSignalAccess().getColonEqualsSignKeyword_7_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_7_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_7_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_7_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getInitialValueAssignment_7_1_1()); }
(rule__Signal__InitialValueAssignment_7_1_1)
{ after(grammarAccess.getSignalAccess().getInitialValueAssignment_7_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signal__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_7_2__0__Impl
	rule__Signal__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_7_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getCombineKeyword_7_2_0()); }

	'combine' 

{ after(grammarAccess.getSignalAccess().getCombineKeyword_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_7_2__1__Impl
	rule__Signal__Group_7_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_7_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostTypeAssignment_7_2_1()); }
(rule__Signal__HostTypeAssignment_7_2_1)
{ after(grammarAccess.getSignalAccess().getHostTypeAssignment_7_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_7_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_7_2__2__Impl
	rule__Signal__Group_7_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_7_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getWithKeyword_7_2_2()); }

	'with' 

{ after(grammarAccess.getSignalAccess().getWithKeyword_7_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_7_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_7_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_7_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostCombineOperatorAssignment_7_2_3()); }
(rule__Signal__HostCombineOperatorAssignment_7_2_3)
{ after(grammarAccess.getSignalAccess().getHostCombineOperatorAssignment_7_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Signal__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_8__0__Impl
	rule__Signal__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_8_0()); }
(rule__Signal__NameAssignment_8_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getGroup_8_1()); }
(rule__Signal__Group_8_1__0)
{ after(grammarAccess.getSignalAccess().getGroup_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signal__Group_8_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_8_1__0__Impl
	rule__Signal__Group_8_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_8_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getCombineKeyword_8_1_0()); }

	'combine' 

{ after(grammarAccess.getSignalAccess().getCombineKeyword_8_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_8_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_8_1__1__Impl
	rule__Signal__Group_8_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_8_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getTypeAssignment_8_1_1()); }
(rule__Signal__TypeAssignment_8_1_1)
{ after(grammarAccess.getSignalAccess().getTypeAssignment_8_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_8_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_8_1__2__Impl
	rule__Signal__Group_8_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_8_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getWithKeyword_8_1_2()); }

	'with' 

{ after(grammarAccess.getSignalAccess().getWithKeyword_8_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_8_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_8_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_8_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getCombineOperatorAssignment_8_1_3()); }
(rule__Signal__CombineOperatorAssignment_8_1_3)
{ after(grammarAccess.getSignalAccess().getCombineOperatorAssignment_8_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Signal__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_9__0__Impl
	rule__Signal__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameAssignment_9_0()); }
(rule__Signal__NameAssignment_9_0)
{ after(grammarAccess.getSignalAccess().getNameAssignment_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getGroup_9_1()); }
(rule__Signal__Group_9_1__0)
{ after(grammarAccess.getSignalAccess().getGroup_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Signal__Group_9_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_9_1__0__Impl
	rule__Signal__Group_9_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_9_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getCombineKeyword_9_1_0()); }

	'combine' 

{ after(grammarAccess.getSignalAccess().getCombineKeyword_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_9_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_9_1__1__Impl
	rule__Signal__Group_9_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_9_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostTypeAssignment_9_1_1()); }
(rule__Signal__HostTypeAssignment_9_1_1)
{ after(grammarAccess.getSignalAccess().getHostTypeAssignment_9_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_9_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_9_1__2__Impl
	rule__Signal__Group_9_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_9_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getWithKeyword_9_1_2()); }

	'with' 

{ after(grammarAccess.getSignalAccess().getWithKeyword_9_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Signal__Group_9_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Signal__Group_9_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__Group_9_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostCombineOperatorAssignment_9_1_3()); }
(rule__Signal__HostCombineOperatorAssignment_9_1_3)
{ after(grammarAccess.getSignalAccess().getHostCombineOperatorAssignment_9_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Variable__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__0__Impl
	rule__Variable__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_1_0()); }
(rule__Variable__NameAssignment_1_0)
{ after(grammarAccess.getVariableAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__1__Impl
	rule__Variable__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getVariableAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeAssignment_1_2()); }
(rule__Variable__TypeAssignment_1_2)
{ after(grammarAccess.getVariableAccess().getTypeAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_2__0__Impl
	rule__Variable__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_2_0()); }
(rule__Variable__NameAssignment_2_0)
{ after(grammarAccess.getVariableAccess().getNameAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_2_1()); }
(rule__Variable__Group_2_1__0)
{ after(grammarAccess.getVariableAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_2_1__0__Impl
	rule__Variable__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getColonEqualsSignKeyword_2_1_0()); }

	':=' 

{ after(grammarAccess.getVariableAccess().getColonEqualsSignKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInitialValueAssignment_2_1_1()); }
(rule__Variable__InitialValueAssignment_2_1_1)
{ after(grammarAccess.getVariableAccess().getInitialValueAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_3__0__Impl
	rule__Variable__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_3_0()); }
(rule__Variable__NameAssignment_3_0)
{ after(grammarAccess.getVariableAccess().getNameAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_3__1__Impl
	rule__Variable__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_3_1()); }
(rule__Variable__Group_3_1__0)
{ after(grammarAccess.getVariableAccess().getGroup_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_3__2__Impl
	rule__Variable__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getColonKeyword_3_2()); }

	':' 

{ after(grammarAccess.getVariableAccess().getColonKeyword_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeAssignment_3_3()); }
(rule__Variable__TypeAssignment_3_3)
{ after(grammarAccess.getVariableAccess().getTypeAssignment_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Variable__Group_3_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_3_1__0__Impl
	rule__Variable__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getColonEqualsSignKeyword_3_1_0()); }

	':=' 

{ after(grammarAccess.getVariableAccess().getColonEqualsSignKeyword_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_3_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInitialValueAssignment_3_1_1()); }
(rule__Variable__InitialValueAssignment_3_1_1)
{ after(grammarAccess.getVariableAccess().getInitialValueAssignment_3_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Variable__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_4__0__Impl
	rule__Variable__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_4_0()); }
(rule__Variable__NameAssignment_4_0)
{ after(grammarAccess.getVariableAccess().getNameAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_4__1__Impl
	rule__Variable__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getColonKeyword_4_1()); }

	':' 

{ after(grammarAccess.getVariableAccess().getColonKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getHostTypeAssignment_4_2()); }
(rule__Variable__HostTypeAssignment_4_2)
{ after(grammarAccess.getVariableAccess().getHostTypeAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Variable__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_5__0__Impl
	rule__Variable__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment_5_0()); }
(rule__Variable__NameAssignment_5_0)
{ after(grammarAccess.getVariableAccess().getNameAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_5__1__Impl
	rule__Variable__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getGroup_5_1()); }
(rule__Variable__Group_5_1__0)
{ after(grammarAccess.getVariableAccess().getGroup_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_5__2__Impl
	rule__Variable__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getColonKeyword_5_2()); }

	':' 

{ after(grammarAccess.getVariableAccess().getColonKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getHostTypeAssignment_5_3()); }
(rule__Variable__HostTypeAssignment_5_3)
{ after(grammarAccess.getVariableAccess().getHostTypeAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Variable__Group_5_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_5_1__0__Impl
	rule__Variable__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_5_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getColonEqualsSignKeyword_5_1_0()); }

	':=' 

{ after(grammarAccess.getVariableAccess().getColonEqualsSignKeyword_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_5_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Variable__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_5_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInitialValueAssignment_5_1_1()); }
(rule__Variable__InitialValueAssignment_5_1_1)
{ after(grammarAccess.getVariableAccess().getInitialValueAssignment_5_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Emission__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__0__Impl
	rule__Emission__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getSignalAssignment_0()); }
(rule__Emission__SignalAssignment_0)
{ after(grammarAccess.getEmissionAccess().getSignalAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getAlternatives_1()); }
(rule__Emission__Alternatives_1)?
{ after(grammarAccess.getEmissionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Emission__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1_0__0__Impl
	rule__Emission__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_1_0_0()); }

	'(' 

{ after(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1_0__1__Impl
	rule__Emission__Group_1_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueAssignment_1_0_1()); }
(rule__Emission__NewValueAssignment_1_0_1)
{ after(grammarAccess.getEmissionAccess().getNewValueAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_1_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_1_0_2()); }

	')' 

{ after(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_1_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Emission__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1_1__0__Impl
	rule__Emission__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_1_1_0()); }

	'(' 

{ after(grammarAccess.getEmissionAccess().getLeftParenthesisKeyword_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1_1__1__Impl
	rule__Emission__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueAssignment_1_1_1()); }
(rule__Emission__NewValueAssignment_1_1_1)
{ after(grammarAccess.getEmissionAccess().getNewValueAssignment_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Emission__Group_1_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Emission__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__Group_1_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_1_1_2()); }

	')' 

{ after(grammarAccess.getEmissionAccess().getRightParenthesisKeyword_1_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Assignment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__0__Impl
	rule__Assignment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableAssignment_0()); }
(rule__Assignment__VariableAssignment_0)
{ after(grammarAccess.getAssignmentAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__1__Impl
	rule__Assignment__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1()); }

	':=' 

{ after(grammarAccess.getAssignmentAccess().getColonEqualsSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Assignment__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Assignment__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getAlternatives_2()); }
(rule__Assignment__Alternatives_2)
{ after(grammarAccess.getAssignmentAccess().getAlternatives_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TextEffect__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextEffect__Group__0__Impl
	rule__TextEffect__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getCodeAssignment_0()); }
(rule__TextEffect__CodeAssignment_0)
{ after(grammarAccess.getTextEffectAccess().getCodeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextEffect__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextEffect__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getGroup_1()); }
(rule__TextEffect__Group_1__0)?
{ after(grammarAccess.getTextEffectAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TextEffect__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextEffect__Group_1__0__Impl
	rule__TextEffect__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getTextEffectAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextEffect__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextEffect__Group_1__1__Impl
	rule__TextEffect__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getTypeAssignment_1_1()); }
(rule__TextEffect__TypeAssignment_1_1)
{ after(grammarAccess.getTextEffectAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextEffect__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextEffect__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getTextEffectAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReference__Group__0__Impl
	rule__SignalReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceAccess().getSignalAssignment_0()); }
(rule__SignalReference__SignalAssignment_0)
{ after(grammarAccess.getSignalReferenceAccess().getSignalAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceAccess().getGroup_1()); }
(rule__SignalReference__Group_1__0)?
{ after(grammarAccess.getSignalReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SignalReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReference__Group_1__0__Impl
	rule__SignalReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getSignalReferenceAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReference__Group_1__1__Impl
	rule__SignalReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceAccess().getGroup_1_1()); }
(rule__SignalReference__Group_1_1__0)*
{ after(grammarAccess.getSignalReferenceAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReference__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getSignalReferenceAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SignalReference__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReference__Group_1_1__0__Impl
	rule__SignalReference__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReference__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceAccess().getSubExpressionsAssignment_1_1_0()); }
(rule__SignalReference__SubExpressionsAssignment_1_1_0)
{ after(grammarAccess.getSignalReferenceAccess().getSubExpressionsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SignalReference__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SignalReference__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReference__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceAccess().getCommaKeyword_1_1_1()); }
(
	',' 
)?
{ after(grammarAccess.getSignalReferenceAccess().getCommaKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__0__Impl
	rule__VariableReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableAssignment_0()); }
(rule__VariableReference__VariableAssignment_0)
{ after(grammarAccess.getVariableReferenceAccess().getVariableAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getGroup_1()); }
(rule__VariableReference__Group_1__0)?
{ after(grammarAccess.getVariableReferenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariableReference__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group_1__0__Impl
	rule__VariableReference__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getVariableReferenceAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group_1__1__Impl
	rule__VariableReference__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getGroup_1_1()); }
(rule__VariableReference__Group_1_1__0)*
{ after(grammarAccess.getVariableReferenceAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getVariableReferenceAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VariableReference__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group_1_1__0__Impl
	rule__VariableReference__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getSubExpressionsAssignment_1_1_0()); }
(rule__VariableReference__SubExpressionsAssignment_1_1_0)
{ after(grammarAccess.getVariableReferenceAccess().getSubExpressionsAssignment_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableReference__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableReference__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getCommaKeyword_1_1_1()); }
(
	',' 
)?
{ after(grammarAccess.getVariableReferenceAccess().getCommaKeyword_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValOperation__Group__0__Impl
	rule__ValOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValOperationAccess().getOperatorAssignment_0()); }
(rule__ValOperation__OperatorAssignment_0)
{ after(grammarAccess.getValOperationAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValOperationAccess().getSubExpressionsAssignment_1()); }
(rule__ValOperation__SubExpressionsAssignment_1)
{ after(grammarAccess.getValOperationAccess().getSubExpressionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParanthesedValuedExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParanthesedValuedExpression__Group_5__0__Impl
	rule__ParanthesedValuedExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesedValuedExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getParanthesedValuedExpressionAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesedValuedExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParanthesedValuedExpression__Group_5__1__Impl
	rule__ParanthesedValuedExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesedValuedExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getPlusOperationParserRuleCall_5_1()); }
	rulePlusOperation
{ after(grammarAccess.getParanthesedValuedExpressionAccess().getPlusOperationParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesedValuedExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParanthesedValuedExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesedValuedExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getRightParenthesisKeyword_5_2()); }

	')' 

{ after(grammarAccess.getParanthesedValuedExpressionAccess().getRightParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParanthesedValuedExpression__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParanthesedValuedExpression__Group_6__0__Impl
	rule__ParanthesedValuedExpression__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesedValuedExpression__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getLeftParenthesisKeyword_6_0()); }

	'(' 

{ after(grammarAccess.getParanthesedValuedExpressionAccess().getLeftParenthesisKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesedValuedExpression__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParanthesedValuedExpression__Group_6__1__Impl
	rule__ParanthesedValuedExpression__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesedValuedExpression__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getDivOperationParserRuleCall_6_1()); }
	ruleDivOperation
{ after(grammarAccess.getParanthesedValuedExpressionAccess().getDivOperationParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesedValuedExpression__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParanthesedValuedExpression__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesedValuedExpression__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesedValuedExpressionAccess().getRightParenthesisKeyword_6_2()); }

	')' 

{ after(grammarAccess.getParanthesedValuedExpressionAccess().getRightParenthesisKeyword_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PlusOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusOperation__Group__0__Impl
	rule__PlusOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusOperationAccess().getMultOrDivOperationParserRuleCall_0()); }
	ruleMultOrDivOperation
{ after(grammarAccess.getPlusOperationAccess().getMultOrDivOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusOperationAccess().getGroup_1()); }
(rule__PlusOperation__Group_1__0)*
{ after(grammarAccess.getPlusOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PlusOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusOperation__Group_1__0__Impl
	rule__PlusOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getPlusOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusOperation__Group_1__1__Impl
	rule__PlusOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusOperationAccess().getOperatorAssignment_1_1()); }
(rule__PlusOperation__OperatorAssignment_1_1)
{ after(grammarAccess.getPlusOperationAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PlusOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PlusOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusOperationAccess().getSubExpressionsAssignment_1_2()); }
(rule__PlusOperation__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getPlusOperationAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultOrDivOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultOrDivOperation__Group_1__0__Impl
	rule__MultOrDivOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDivOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOrDivOperationAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getMultOrDivOperationAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultOrDivOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultOrDivOperation__Group_1__1__Impl
	rule__MultOrDivOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDivOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOrDivOperationAccess().getDivOperationParserRuleCall_1_1()); }
	ruleDivOperation
{ after(grammarAccess.getMultOrDivOperationAccess().getDivOperationParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultOrDivOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultOrDivOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOrDivOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOrDivOperationAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getMultOrDivOperationAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__MultOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultOperation__Group__0__Impl
	rule__MultOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperationAccess().getPreOrNormalValuedExpressionParserRuleCall_0()); }
	rulePreOrNormalValuedExpression
{ after(grammarAccess.getMultOperationAccess().getPreOrNormalValuedExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperationAccess().getGroup_1()); }
(rule__MultOperation__Group_1__0)*
{ after(grammarAccess.getMultOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultOperation__Group_1__0__Impl
	rule__MultOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getMultOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultOperation__Group_1__1__Impl
	rule__MultOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperationAccess().getOperatorAssignment_1_1()); }
(rule__MultOperation__OperatorAssignment_1_1)
{ after(grammarAccess.getMultOperationAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperationAccess().getSubExpressionsAssignment_1_2()); }
(rule__MultOperation__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getMultOperationAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__DivOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivOperation__Group__0__Impl
	rule__DivOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperationAccess().getPreOrNormalValuedExpressionParserRuleCall_0()); }
	rulePreOrNormalValuedExpression
{ after(grammarAccess.getDivOperationAccess().getPreOrNormalValuedExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperationAccess().getGroup_1()); }
(rule__DivOperation__Group_1__0)*
{ after(grammarAccess.getDivOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DivOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivOperation__Group_1__0__Impl
	rule__DivOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DivOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getDivOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivOperation__Group_1__1__Impl
	rule__DivOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DivOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperationAccess().getOperatorAssignment_1_1()); }
(rule__DivOperation__OperatorAssignment_1_1)
{ after(grammarAccess.getDivOperationAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DivOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DivOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DivOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperationAccess().getSubExpressionsAssignment_1_2()); }
(rule__DivOperation__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getDivOperationAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__PreArithmOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreArithmOperation__Group__0__Impl
	rule__PreArithmOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PreArithmOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreArithmOperationAccess().getOperatorAssignment_0()); }
(rule__PreArithmOperation__OperatorAssignment_0)
{ after(grammarAccess.getPreArithmOperationAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PreArithmOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreArithmOperation__Group__1__Impl
	rule__PreArithmOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PreArithmOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreArithmOperationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getPreArithmOperationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PreArithmOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreArithmOperation__Group__2__Impl
	rule__PreArithmOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PreArithmOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreArithmOperationAccess().getSubExpressionsAssignment_2()); }
(rule__PreArithmOperation__SubExpressionsAssignment_2)
{ after(grammarAccess.getPreArithmOperationAccess().getSubExpressionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PreArithmOperation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PreArithmOperation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PreArithmOperation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreArithmOperationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getPreArithmOperationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CompareOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group__0__Impl
	rule__CompareOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getValuedExpressionParserRuleCall_0()); }
	ruleValuedExpression
{ after(grammarAccess.getCompareOperationAccess().getValuedExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getGroup_1()); }
(rule__CompareOperation__Group_1__0)
{ after(grammarAccess.getCompareOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CompareOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_1__0__Impl
	rule__CompareOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getCompareOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_1__1__Impl
	rule__CompareOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorAssignment_1_1()); }
(rule__CompareOperation__OperatorAssignment_1_1)
{ after(grammarAccess.getCompareOperationAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CompareOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CompareOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_1_2()); }
(rule__CompareOperation__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__UnaryOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group__0__Impl
	rule__UnaryOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getOperatorAssignment_0()); }
(rule__UnaryOperation__OperatorAssignment_0)
{ after(grammarAccess.getUnaryOperationAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getSubExpressionsAssignment_1()); }
(rule__UnaryOperation__SubExpressionsAssignment_1)
{ after(grammarAccess.getUnaryOperationAccess().getSubExpressionsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__UnaryParanthesedOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryParanthesedOperation__Group__0__Impl
	rule__UnaryParanthesedOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryParanthesedOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryParanthesedOperationAccess().getOperatorAssignment_0()); }
(rule__UnaryParanthesedOperation__OperatorAssignment_0)
{ after(grammarAccess.getUnaryParanthesedOperationAccess().getOperatorAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryParanthesedOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryParanthesedOperation__Group__1__Impl
	rule__UnaryParanthesedOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryParanthesedOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryParanthesedOperationAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getUnaryParanthesedOperationAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryParanthesedOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryParanthesedOperation__Group__2__Impl
	rule__UnaryParanthesedOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryParanthesedOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryParanthesedOperationAccess().getSubExpressionsAssignment_2()); }
(rule__UnaryParanthesedOperation__SubExpressionsAssignment_2)
{ after(grammarAccess.getUnaryParanthesedOperationAccess().getSubExpressionsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__UnaryParanthesedOperation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__UnaryParanthesedOperation__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryParanthesedOperation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryParanthesedOperationAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getUnaryParanthesedOperationAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__AndOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndOperation__Group__0__Impl
	rule__AndOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOperationAccess().getUnaryOrNormalExpressionParserRuleCall_0()); }
	ruleUnaryOrNormalExpression
{ after(grammarAccess.getAndOperationAccess().getUnaryOrNormalExpressionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOperationAccess().getGroup_1()); }
(rule__AndOperation__Group_1__0)*
{ after(grammarAccess.getAndOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__AndOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndOperation__Group_1__0__Impl
	rule__AndOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getAndOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndOperation__Group_1__1__Impl
	rule__AndOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOperationAccess().getOperatorAssignment_1_1()); }
(rule__AndOperation__OperatorAssignment_1_1)
{ after(grammarAccess.getAndOperationAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__AndOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__AndOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__AndOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOperationAccess().getSubExpressionsAssignment_1_2()); }
(rule__AndOperation__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getAndOperationAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__OrOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrOperation__Group__0__Impl
	rule__OrOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrOperationAccess().getAndOperationParserRuleCall_0()); }
	ruleAndOperation
{ after(grammarAccess.getOrOperationAccess().getAndOperationParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrOperation__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrOperationAccess().getGroup_1()); }
(rule__OrOperation__Group_1__0)*
{ after(grammarAccess.getOrOperationAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OrOperation__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrOperation__Group_1__0__Impl
	rule__OrOperation__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OrOperation__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
(

)
{ after(grammarAccess.getOrOperationAccess().getOperatorExpressionSubExpressionsAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrOperation__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrOperation__Group_1__1__Impl
	rule__OrOperation__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OrOperation__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrOperationAccess().getOperatorAssignment_1_1()); }
(rule__OrOperation__OperatorAssignment_1_1)
{ after(grammarAccess.getOrOperationAccess().getOperatorAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OrOperation__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OrOperation__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OrOperation__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrOperationAccess().getSubExpressionsAssignment_1_2()); }
(rule__OrOperation__SubExpressionsAssignment_1_2)
{ after(grammarAccess.getOrOperationAccess().getSubExpressionsAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParanthesedBooleanExpression__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParanthesedBooleanExpression__Group_5__0__Impl
	rule__ParanthesedBooleanExpression__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesedBooleanExpression__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesedBooleanExpressionAccess().getLeftParenthesisKeyword_5_0()); }

	'(' 

{ after(grammarAccess.getParanthesedBooleanExpressionAccess().getLeftParenthesisKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesedBooleanExpression__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParanthesedBooleanExpression__Group_5__1__Impl
	rule__ParanthesedBooleanExpression__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesedBooleanExpression__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesedBooleanExpressionAccess().getOrOperationParserRuleCall_5_1()); }
	ruleOrOperation
{ after(grammarAccess.getParanthesedBooleanExpressionAccess().getOrOperationParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParanthesedBooleanExpression__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParanthesedBooleanExpression__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParanthesedBooleanExpression__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParanthesedBooleanExpressionAccess().getRightParenthesisKeyword_5_2()); }

	')' 

{ after(grammarAccess.getParanthesedBooleanExpressionAccess().getRightParenthesisKeyword_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TextExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group__0__Impl
	rule__TextExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getCodeAssignment_0()); }
(rule__TextExpression__CodeAssignment_0)
{ after(grammarAccess.getTextExpressionAccess().getCodeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getGroup_1()); }
(rule__TextExpression__Group_1__0)?
{ after(grammarAccess.getTextExpressionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TextExpression__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group_1__0__Impl
	rule__TextExpression__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getTextExpressionAccess().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextExpression__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group_1__1__Impl
	rule__TextExpression__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getTypeAssignment_1_1()); }
(rule__TextExpression__TypeAssignment_1_1)
{ after(grammarAccess.getTextExpressionAccess().getTypeAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TextExpression__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TextExpression__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getTextExpressionAccess().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__StateExtend__RegionsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getRegionsRegionSignalDecParserRuleCall_0_0()); }
	ruleRegionSignalDec{ after(grammarAccess.getStateExtendAccess().getRegionsRegionSignalDecParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__InOutputSignalsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getInOutputSignalsInOutputSignalsParserRuleCall_1_2_0()); }
	ruleInOutputSignals{ after(grammarAccess.getStateExtendAccess().getInOutputSignalsInOutputSignalsParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__OutputSignalsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getOutputSignalsOutputSignalsParserRuleCall_2_1_0()); }
	ruleOutputSignals{ after(grammarAccess.getStateExtendAccess().getOutputSignalsOutputSignalsParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__InputSignalsAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getInputSignalsInputSignalsParserRuleCall_3_1_0()); }
	ruleInputSignals{ after(grammarAccess.getStateExtendAccess().getInputSignalsInputSignalsParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__SignalsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getSignalsSignalsParserRuleCall_4_1_0()); }
	ruleSignals{ after(grammarAccess.getStateExtendAccess().getSignalsSignalsParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateExtend__VariableAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateExtendAccess().getVariableVariablesParserRuleCall_5_1_0()); }
	ruleVariables{ after(grammarAccess.getStateExtendAccess().getVariableVariablesParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__RegionAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getRegionRegionCrossReference_0_0()); }
(
{ before(grammarAccess.getRegionSignalDecAccess().getRegionRegionIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getRegionSignalDecAccess().getRegionRegionIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getRegionSignalDecAccess().getRegionRegionCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__VarsAssignment_2_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getVarsVariableParserRuleCall_2_0_1_0()); }
	ruleVariable{ after(grammarAccess.getRegionSignalDecAccess().getVarsVariableParserRuleCall_2_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__VarsAssignment_2_0_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getVarsVariableParserRuleCall_2_0_2_1_0()); }
	ruleVariable{ after(grammarAccess.getRegionSignalDecAccess().getVarsVariableParserRuleCall_2_0_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__SignalsAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getSignalsSignalParserRuleCall_2_1_1_0()); }
	ruleSignal{ after(grammarAccess.getRegionSignalDecAccess().getSignalsSignalParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__SignalsAssignment_2_1_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getSignalsSignalParserRuleCall_2_1_2_1_0()); }
	ruleSignal{ after(grammarAccess.getRegionSignalDecAccess().getSignalsSignalParserRuleCall_2_1_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__VarsAssignment_3_0_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getVarsVariableParserRuleCall_3_0_2_0()); }
	ruleVariable{ after(grammarAccess.getRegionSignalDecAccess().getVarsVariableParserRuleCall_3_0_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__VarsAssignment_3_0_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getVarsVariableParserRuleCall_3_0_3_1_0()); }
	ruleVariable{ after(grammarAccess.getRegionSignalDecAccess().getVarsVariableParserRuleCall_3_0_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__SignalsAssignment_3_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getSignalsSignalParserRuleCall_3_1_2_0()); }
	ruleSignal{ after(grammarAccess.getRegionSignalDecAccess().getSignalsSignalParserRuleCall_3_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__RegionSignalDec__SignalsAssignment_3_1_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRegionSignalDecAccess().getSignalsSignalParserRuleCall_3_1_3_1_0()); }
	ruleSignal{ after(grammarAccess.getRegionSignalDecAccess().getSignalsSignalParserRuleCall_3_1_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__VarsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarsVariableParserRuleCall_0_0_0()); }
	ruleVariable{ after(grammarAccess.getVariablesAccess().getVarsVariableParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variables__VarsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariablesAccess().getVarsVariableParserRuleCall_0_1_1_0()); }
	ruleVariable{ after(grammarAccess.getVariablesAccess().getVarsVariableParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signals__SignalsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalsAccess().getSignalsSignalParserRuleCall_0_0_0()); }
	ruleSignal{ after(grammarAccess.getSignalsAccess().getSignalsSignalParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signals__SignalsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalsAccess().getSignalsSignalParserRuleCall_0_1_1_0()); }
	ruleSignal{ after(grammarAccess.getSignalsAccess().getSignalsSignalParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__SignalsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSignalsAccess().getSignalsSignalParserRuleCall_0_0_0()); }
	ruleSignal{ after(grammarAccess.getInputSignalsAccess().getSignalsSignalParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InputSignals__SignalsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInputSignalsAccess().getSignalsSignalParserRuleCall_0_1_1_0()); }
	ruleSignal{ after(grammarAccess.getInputSignalsAccess().getSignalsSignalParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputSignals__SignalsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputSignalsAccess().getSignalsSignalParserRuleCall_0_0_0()); }
	ruleSignal{ after(grammarAccess.getOutputSignalsAccess().getSignalsSignalParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OutputSignals__SignalsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOutputSignalsAccess().getSignalsSignalParserRuleCall_0_1_1_0()); }
	ruleSignal{ after(grammarAccess.getOutputSignalsAccess().getSignalsSignalParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InOutputSignals__SignalsAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInOutputSignalsAccess().getSignalsSignalParserRuleCall_0_0_0()); }
	ruleSignal{ after(grammarAccess.getInOutputSignalsAccess().getSignalsSignalParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InOutputSignals__SignalsAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInOutputSignalsAccess().getSignalsSignalParserRuleCall_0_1_1_0()); }
	ruleSignal{ after(grammarAccess.getInOutputSignalsAccess().getSignalsSignalParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getTypeValueTypeEnumRuleCall_1_2_0()); }
	ruleValueType{ after(grammarAccess.getSignalAccess().getTypeValueTypeEnumRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_2_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__InitialValueAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getInitialValueSTRING_DTerminalRuleCall_2_1_1_0()); }
	RULE_STRING_D{ after(grammarAccess.getSignalAccess().getInitialValueSTRING_DTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_3_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__InitialValueAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getInitialValueSTRING_DTerminalRuleCall_3_1_1_0()); }
	RULE_STRING_D{ after(grammarAccess.getSignalAccess().getInitialValueSTRING_DTerminalRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__TypeAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getTypeValueTypeEnumRuleCall_3_3_0()); }
	ruleValueType{ after(grammarAccess.getSignalAccess().getTypeValueTypeEnumRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_4_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__InitialValueAssignment_4_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getInitialValueSTRING_DTerminalRuleCall_4_1_1_0()); }
	RULE_STRING_D{ after(grammarAccess.getSignalAccess().getInitialValueSTRING_DTerminalRuleCall_4_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__TypeAssignment_4_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getTypeValueTypeEnumRuleCall_4_2_1_0()); }
	ruleValueType{ after(grammarAccess.getSignalAccess().getTypeValueTypeEnumRuleCall_4_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__CombineOperatorAssignment_4_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_2_3_0()); }
	ruleCombineOperator{ after(grammarAccess.getSignalAccess().getCombineOperatorCombineOperatorEnumRuleCall_4_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_5_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__HostTypeAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostTypeSTRING_STerminalRuleCall_5_2_0()); }
	RULE_STRING_S{ after(grammarAccess.getSignalAccess().getHostTypeSTRING_STerminalRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_6_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__InitialValueAssignment_6_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getInitialValueSTRING_DTerminalRuleCall_6_1_1_0()); }
	RULE_STRING_D{ after(grammarAccess.getSignalAccess().getInitialValueSTRING_DTerminalRuleCall_6_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__HostTypeAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostTypeSTRING_STerminalRuleCall_6_3_0()); }
	RULE_STRING_S{ after(grammarAccess.getSignalAccess().getHostTypeSTRING_STerminalRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_7_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_7_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_7_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__InitialValueAssignment_7_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getInitialValueSTRING_DTerminalRuleCall_7_1_1_0()); }
	RULE_STRING_D{ after(grammarAccess.getSignalAccess().getInitialValueSTRING_DTerminalRuleCall_7_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__HostTypeAssignment_7_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostTypeSTRING_STerminalRuleCall_7_2_1_0()); }
	RULE_STRING_S{ after(grammarAccess.getSignalAccess().getHostTypeSTRING_STerminalRuleCall_7_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__HostCombineOperatorAssignment_7_2_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostCombineOperatorSTRING_STerminalRuleCall_7_2_3_0()); }
	RULE_STRING_S{ after(grammarAccess.getSignalAccess().getHostCombineOperatorSTRING_STerminalRuleCall_7_2_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_8_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__TypeAssignment_8_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getTypeValueTypeEnumRuleCall_8_1_1_0()); }
	ruleValueType{ after(grammarAccess.getSignalAccess().getTypeValueTypeEnumRuleCall_8_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__CombineOperatorAssignment_8_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getCombineOperatorCombineOperatorEnumRuleCall_8_1_3_0()); }
	ruleCombineOperator{ after(grammarAccess.getSignalAccess().getCombineOperatorCombineOperatorEnumRuleCall_8_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__NameAssignment_9_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_9_0_0()); }
	RULE_ID{ after(grammarAccess.getSignalAccess().getNameIDTerminalRuleCall_9_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__HostTypeAssignment_9_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostTypeSTRING_STerminalRuleCall_9_1_1_0()); }
	RULE_STRING_S{ after(grammarAccess.getSignalAccess().getHostTypeSTRING_STerminalRuleCall_9_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Signal__HostCombineOperatorAssignment_9_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalAccess().getHostCombineOperatorSTRING_STerminalRuleCall_9_1_3_0()); }
	RULE_STRING_S{ after(grammarAccess.getSignalAccess().getHostCombineOperatorSTRING_STerminalRuleCall_9_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeValueTypeEnumRuleCall_1_2_0()); }
	ruleValueType{ after(grammarAccess.getVariableAccess().getTypeValueTypeEnumRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_2_0_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InitialValueAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInitialValueSTRING_DTerminalRuleCall_2_1_1_0()); }
	RULE_STRING_D{ after(grammarAccess.getVariableAccess().getInitialValueSTRING_DTerminalRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_3_0_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InitialValueAssignment_3_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInitialValueSTRING_DTerminalRuleCall_3_1_1_0()); }
	RULE_STRING_D{ after(grammarAccess.getVariableAccess().getInitialValueSTRING_DTerminalRuleCall_3_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__TypeAssignment_3_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getTypeValueTypeEnumRuleCall_3_3_0()); }
	ruleValueType{ after(grammarAccess.getVariableAccess().getTypeValueTypeEnumRuleCall_3_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_4_0_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__HostTypeAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getHostTypeSTRING_STerminalRuleCall_4_2_0()); }
	RULE_STRING_S{ after(grammarAccess.getVariableAccess().getHostTypeSTRING_STerminalRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_5_0_0()); }
	RULE_ID{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__InitialValueAssignment_5_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getInitialValueSTRING_DTerminalRuleCall_5_1_1_0()); }
	RULE_STRING_D{ after(grammarAccess.getVariableAccess().getInitialValueSTRING_DTerminalRuleCall_5_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__HostTypeAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getHostTypeSTRING_STerminalRuleCall_5_3_0()); }
	RULE_STRING_S{ after(grammarAccess.getVariableAccess().getHostTypeSTRING_STerminalRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}





rule__Emission__SignalAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getSignalSignalCrossReference_0_0()); }
(
{ before(grammarAccess.getEmissionAccess().getSignalSignalIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getEmissionAccess().getSignalSignalIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getEmissionAccess().getSignalSignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__NewValueAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueValuedExpressionParserRuleCall_1_0_1_0()); }
	ruleValuedExpression{ after(grammarAccess.getEmissionAccess().getNewValueValuedExpressionParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Emission__NewValueAssignment_1_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEmissionAccess().getNewValueBooleanExpressionParserRuleCall_1_1_1_0()); }
	ruleBooleanExpression{ after(grammarAccess.getEmissionAccess().getNewValueBooleanExpressionParserRuleCall_1_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getVariableVariableCrossReference_0_0()); }
(
{ before(grammarAccess.getAssignmentAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getAssignmentAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getAssignmentAccess().getVariableVariableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionValuedExpressionParserRuleCall_2_0_0()); }
	ruleValuedExpression{ after(grammarAccess.getAssignmentAccess().getExpressionValuedExpressionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Assignment__ExpressionAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAssignmentAccess().getExpressionBooleanExpressionParserRuleCall_2_1_0()); }
	ruleBooleanExpression{ after(grammarAccess.getAssignmentAccess().getExpressionBooleanExpressionParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__CodeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getCodeSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getTextEffectAccess().getCodeSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextEffect__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextEffectAccess().getTypeIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTextEffectAccess().getTypeIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReference__SignalAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceAccess().getSignalSignalCrossReference_0_0()); }
(
{ before(grammarAccess.getSignalReferenceAccess().getSignalSignalIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getSignalReferenceAccess().getSignalSignalIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSignalReferenceAccess().getSignalSignalCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SignalReference__SubExpressionsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSignalReferenceAccess().getSubExpressionsExpressionParserRuleCall_1_1_0_0()); }
	ruleExpression{ after(grammarAccess.getSignalReferenceAccess().getSubExpressionsExpressionParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__VariableAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0_0()); }
(
{ before(grammarAccess.getVariableReferenceAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
	RULE_ID{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableIDTerminalRuleCall_0_0_1()); }
)
{ after(grammarAccess.getVariableReferenceAccess().getVariableVariableCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableReference__SubExpressionsAssignment_1_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableReferenceAccess().getSubExpressionsExpressionParserRuleCall_1_1_0_0()); }
	ruleExpression{ after(grammarAccess.getVariableReferenceAccess().getSubExpressionsExpressionParserRuleCall_1_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
	RULE_INT{ after(grammarAccess.getIntValueAccess().getValueINTTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FloatValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFloatValueAccess().getValueFloatTerminalRuleCall_0()); }
	RULE_FLOAT{ after(grammarAccess.getFloatValueAccess().getValueFloatTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getValueBooleanTerminalRuleCall_0()); }
	RULE_BOOLEAN{ after(grammarAccess.getBooleanValueAccess().getValueBooleanTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValOperation__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValOperationAccess().getOperatorValOperatorEnumRuleCall_0_0()); }
	ruleValOperator{ after(grammarAccess.getValOperationAccess().getOperatorValOperatorEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValOperation__SubExpressionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValOperationAccess().getSubExpressionsSignalReferenceParserRuleCall_1_0()); }
	ruleSignalReference{ after(grammarAccess.getValOperationAccess().getSubExpressionsSignalReferenceParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOperation__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusOperationAccess().getOperatorPlusOperatorEnumRuleCall_1_1_0()); }
	rulePlusOperator{ after(grammarAccess.getPlusOperationAccess().getOperatorPlusOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PlusOperation__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPlusOperationAccess().getSubExpressionsMultOrDivOperationParserRuleCall_1_2_0()); }
	ruleMultOrDivOperation{ after(grammarAccess.getPlusOperationAccess().getSubExpressionsMultOrDivOperationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperationAccess().getOperatorMultOperatorEnumRuleCall_1_1_0()); }
	ruleMultOperator{ after(grammarAccess.getMultOperationAccess().getOperatorMultOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultOperation__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultOperationAccess().getSubExpressionsPreOrNormalValuedExpressionParserRuleCall_1_2_0()); }
	rulePreOrNormalValuedExpression{ after(grammarAccess.getMultOperationAccess().getSubExpressionsPreOrNormalValuedExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivOperation__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperationAccess().getOperatorDivOperatorEnumRuleCall_1_1_0()); }
	ruleDivOperator{ after(grammarAccess.getDivOperationAccess().getOperatorDivOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DivOperation__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDivOperationAccess().getSubExpressionsPreOrNormalValuedExpressionParserRuleCall_1_2_0()); }
	rulePreOrNormalValuedExpression{ after(grammarAccess.getDivOperationAccess().getSubExpressionsPreOrNormalValuedExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreArithmOperation__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreArithmOperationAccess().getOperatorUnaryParanthesedOperatorEnumRuleCall_0_0()); }
	ruleUnaryParanthesedOperator{ after(grammarAccess.getPreArithmOperationAccess().getOperatorUnaryParanthesedOperatorEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PreArithmOperation__SubExpressionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPreArithmOperationAccess().getSubExpressionsValOperationParserRuleCall_2_0()); }
	ruleValOperation{ after(grammarAccess.getPreArithmOperationAccess().getSubExpressionsValOperationParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); }
	ruleCompareOperator{ after(grammarAccess.getCompareOperationAccess().getOperatorCompareOperatorEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CompareOperation__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCompareOperationAccess().getSubExpressionsValuedExpressionParserRuleCall_1_2_0()); }
	ruleValuedExpression{ after(grammarAccess.getCompareOperationAccess().getSubExpressionsValuedExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getOperatorUnaryOperatorEnumRuleCall_0_0()); }
	ruleUnaryOperator{ after(grammarAccess.getUnaryOperationAccess().getOperatorUnaryOperatorEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryOperation__SubExpressionsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryOperationAccess().getSubExpressionsAlternatives_1_0()); }
(rule__UnaryOperation__SubExpressionsAlternatives_1_0)
{ after(grammarAccess.getUnaryOperationAccess().getSubExpressionsAlternatives_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryParanthesedOperation__OperatorAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryParanthesedOperationAccess().getOperatorUnaryParanthesedOperatorEnumRuleCall_0_0()); }
	ruleUnaryParanthesedOperator{ after(grammarAccess.getUnaryParanthesedOperationAccess().getOperatorUnaryParanthesedOperatorEnumRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__UnaryParanthesedOperation__SubExpressionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnaryParanthesedOperationAccess().getSubExpressionsBooleanExpressionParserRuleCall_2_0()); }
	ruleBooleanExpression{ after(grammarAccess.getUnaryParanthesedOperationAccess().getSubExpressionsBooleanExpressionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndOperation__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOperationAccess().getOperatorOperatorAndEnumRuleCall_1_1_0()); }
	ruleOperatorAnd{ after(grammarAccess.getAndOperationAccess().getOperatorOperatorAndEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__AndOperation__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getAndOperationAccess().getSubExpressionsUnaryOrNormalExpressionParserRuleCall_1_2_0()); }
	ruleUnaryOrNormalExpression{ after(grammarAccess.getAndOperationAccess().getSubExpressionsUnaryOrNormalExpressionParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrOperation__OperatorAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrOperationAccess().getOperatorOperatorOrEnumRuleCall_1_1_0()); }
	ruleOperatorOr{ after(grammarAccess.getOrOperationAccess().getOperatorOperatorOrEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OrOperation__SubExpressionsAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOrOperationAccess().getSubExpressionsAndOperationParserRuleCall_1_2_0()); }
	ruleAndOperation{ after(grammarAccess.getOrOperationAccess().getSubExpressionsAndOperationParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__CodeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getCodeSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getTextExpressionAccess().getCodeSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TextExpression__TypeAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTextExpressionAccess().getTypeIDTerminalRuleCall_1_1_0()); }
	RULE_ID{ after(grammarAccess.getTextExpressionAccess().getTypeIDTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_STRING_D : ('"' '"'|'"' ('\\' '"'|~('"'))* ('\\' '"'|~(('\\'|'"'))) '"');

RULE_STRING_S : ('\'' '\''|'\'' ('\\' '\''|~('\''))* ('\\' '\''|~(('\\'|'\''))) '\'');

RULE_INT : '-'? ('0'..'9')+;

RULE_FLOAT : ((RULE_INT '.' RULE_INT|RULE_INT ('.' RULE_INT)? ('e'|'E') '+'? RULE_INT) 'f'?|RULE_INT 'f');

RULE_BOOLEAN : ('true'|'false');

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


