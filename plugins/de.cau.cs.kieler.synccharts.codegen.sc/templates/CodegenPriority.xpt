«REM»
	The template file to provide the priorities.
«ENDREM»

«IMPORT synccharts»

«EXTENSION template::Helper»

«DEFINE getRealThreadPriority FOR State-»
	«REM»
	«getRealOptimizedThreadPriority(this)-»
	«ENDREM»
	«getRealThreadPriority(this)-»
«ENDDEFINE»

«DEFINE getWeakThreadPriority FOR State-»
	«REM»
	«getOptimizedWeakThreadPriority(this)-» 
	«ENDREM»
	«getWeakThreadPriority(this)-»
«ENDDEFINE»

«REM»
	Returns a reduced priority after a transition if necessary.
«ENDREM»
«DEFINE priorityReduction FOR Action-»
	«IF this.eRootContainer.metaType == Transition-»
		«IF hasDependentState((Transition)this.eRootContainer)-»
			«IF (boolean)(GLOBALVAR sim)-»
				/* priority reduction */
			«ENDIF-»
			PRIO(«EXPAND getRealThreadPriority FOR ((Transition)this.eRootContainer).targetState»);
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«REM»
	Returns a priority depending on the character of a state
	(strong or weak transitions).
«ENDREM»
«DEFINE realPrio FOR State-»
	«IF this.outgoingTransitions.exists(t|t.type != TransitionType::STRONGABORT) && this.outgoingTransitions.exists(t|t.type == TransitionType::STRONGABORT) || this.outgoingTransitions.exists(t|t.type != TransitionType::NORMALTERMINATION)-»
		«IF (boolean)(GLOBALVAR sim)-»
			/* priority real */
		«ENDIF-»
		PRIO(«EXPAND getRealThreadPriority FOR this»);
	«ENDIF-»
«ENDDEFINE»

«REM»
	Returns a priority of a state represented as weak.
«ENDREM»
«DEFINE weakPrio FOR State-»
	«IF !this.regions.isEmpty && this.outgoingTransitions.exists(t|t.type != TransitionType::STRONGABORT) && this.outgoingTransitions.exists(t|t.type == TransitionType::STRONGABORT)-»
		«IF (boolean)(GLOBALVAR sim)-»
			/* priority weak */
		«ENDIF-»
		PRIO(« EXPAND getWeakThreadPriority FOR this»);
	«ENDIF-»
«ENDDEFINE»

«REM»
	Returns the priority after a transition if needed.
«ENDREM»
«DEFINE transitionPrio FOR Transition-»
	«IF getRealOptimizedThreadPriority(this.targetState) != getRealOptimizedThreadPriority(this.sourceState)-»
		«IF isSignalDependent() || hasDependentState()»
		«ENDIF»
		«IF (boolean)(GLOBALVAR sim)-»
			/* priority after transition */
		«ENDIF-»
		PRIO(«EXPAND getRealThreadPriority FOR this.targetState»);
	«ENDIF-»
«ENDDEFINE»

«REM»
	Returns the priority of the source state.
«ENDREM»
«DEFINE sourcePrio FOR Transition-»
	«REM» && hasDependentState(this)
	«ENDREM»
	«IF this.sourceState.outgoingTransitions.size > 1-»
	«ENDIF-»
		«IF (boolean)(GLOBALVAR sim)-»
			/* priority to source */
		«ENDIF-»
		PRIO(«getSmallestThreadPriority(this.sourceState)»);
«ENDDEFINE»

«REM»
	Returns the priority of the main thread.
«ENDREM»
«DEFINE mainThreadPrio FOR State-»
	«REM»if root state has transitions or actions or more then one region«ENDREM»
	«IF !isSimpleHierarchical(this)-»
		«EXPAND getRealThreadPriority FOR this-»
	«ELSE-»
		«EXPAND getRealThreadPriority FOR this.getInitialState()»
	«ENDIF-»
«ENDDEFINE»