«IMPORT synccharts»

«EXTENSION template::Helper»

«DEFINE main FOR Region-»
	«IF this.innerStates.isEmpty-»
		«error("There is no SyncChart to generate code for!")»
	«ELSE-»
		«computeThreadPriorities(this.innerStates.first())»
		«FILE ((String)(GLOBALVAR name)) + ".c"-»
		/* generated SC-code */
		«EXPAND init-»
		«EXPAND start-»
		«EXPAND finish-»
		«EXPAND step-»
		«ENDFILE-»
		«EXPAND CodegenData::main»
	«ENDIF-»
«ENDDEFINE»

«DEFINE init FOR Region-»
	#include "sc.h"
	«EXPAND CodegenMisc::generateSigType FOR allSignals(this.innerStates.first())-»
	«EXPAND CodegenMisc::generateSigArray FOR allSignals(this.innerStates.first())-»
	#define _SC_valSigInt_SIZE «allSignals(this.innerStates.first()).size»
	
	int valSigInt[_SC_valSigInt_SIZE];
	int valSigIntPre[_SC_valSigInt_SIZE];
	«EXPAND CodegenMisc::generateInitialize FOR this-»

	«FOREACH allSignals(this.innerStates.first()) AS signal-»
		«IF ((Signal)signal).isInput || !(((Signal)signal).isInput || ((Signal)signal).isOutput)-»
			«EXPAND CodegenMisc::generateInputSignal FOR ((Signal)signal)»
		«ENDIF-»
	«ENDFOREACH-»
	«EXPAND CodegenMisc::generateCallOutputs FOR allSignals(this.innerStates.first())»
	«EXPAND CodegenMisc::generateReset-»
#ifndef EXTERNTICK
	
	int tick(){
	TICKSTART(«EXPAND CodegenPriority::mainThreadPrio FOR this.innerStates.first()-»);
	/* should move to sc.h ?? */
	reset();
«ENDDEFINE»

«DEFINE start FOR Region-»
	«EXPAND CodegenRegion::region FOR this-»
«ENDDEFINE»

«DEFINE finish FOR Region-»
	TICKEND;}
#endif
«ENDDEFINE»

«DEFINE step FOR Region»
int «innerStates.first().id»(){
  return tick();
}
«ENDDEFINE»