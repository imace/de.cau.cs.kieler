«IMPORT synccharts»

«EXTENSION template::Helper»

«DEFINE main FOR Region-»
	«IF this.innerStates.isEmpty-»
		«error("There is no SyncChart to generate code for!")»
	«ELSE-»
		«computeThreadPriorities(this.innerStates.first())»
		«FILE "sim.c"-»
		/* generated SC-code */
		«EXPAND init-»
		«EXPAND start-»
		«EXPAND finish-»
		«ENDFILE-»
		«EXPAND SimCodegenData::main»
		«EXPAND CodegenHeader::main»
	«ENDIF-»
«ENDDEFINE»

«DEFINE init FOR Region-»
	#include "sc.h"
	#include "misc.h"
	extern void JSONstate(char*);
	«EXPAND CodegenMisc::generateSigArray FOR allSignals(this.innerStates.first())-»
	int valSigInt[valSigIntCnt];
	«EXPAND CodegenMisc::generateInitialize FOR this-»

	«FOREACH allSignals(this.innerStates.first()) AS signal-»
		«IF ((Signal)signal).isInput || !(((Signal)signal).isInput || ((Signal)signal).isOutput)-»
			«EXPAND CodegenMisc::generateInputSignal FOR ((Signal)signal)»
		«ENDIF-»
	«ENDFOREACH-»
	«EXPAND CodegenMisc::generateCallOutputs FOR allSignals(this.innerStates.first())»
	int tick(int isInit){
	TICKSTART(isInit, «getMainTreadPriority(this.innerStates.first())-»);
«ENDDEFINE»

«DEFINE start FOR Region-»
	«EXPAND CodegenRegion::region FOR this-»
«ENDDEFINE»

«DEFINE finish FOR Region-»
	TICKEND;}
«ENDDEFINE»