«IMPORT synccharts»

«EXTENSION template::Helper»

«DEFINE main FOR Region-»
	«computeThreadPriorities(this.innerStates.first())»
	«FILE "sim.c"-»
	
// generated SC-code //
	«EXPAND init-»
	«EXPAND start-»
	«EXPAND finish-»
	«ENDFILE-»
	«EXPAND CodegenData::main»
	«EXPAND CodegenHeader::main»
«ENDDEFINE»

«DEFINE init FOR Region-»
#include "sc.h"
#include "misc.h"

extern void JSONstate(char*);

	«EXPAND CodegenMisc::generateSigArray FOR allSignals(this.innerStates.first())-»

// Define valued int signals
int valSigInt[valSigIntCnt];

	«EXPAND CodegenMisc::generateInitialize FOR this-»

	«FOREACH allSignals(this.innerStates.first()) AS signal-»
		«IF ((Signal)signal).isInput || !(((Signal)signal).isInput || ((Signal)signal).isOutput)-»
			«EXPAND CodegenMisc::generateInputSignal FOR ((Signal)signal)»
		«ENDIF-»
	«ENDFOREACH-»
	«EXPAND CodegenMisc::generateCallOutputs FOR allSignals(this.innerStates.first())»
	«EXPAND CodegenMisc::generateReset-»
int tick(int isInit){

			TICKSTART(isInit, «computeMainTreadPriority(this.innerStates.first())-»);
«ENDDEFINE»

«DEFINE start FOR Region-»
	«EXPAND CodegenRegion::region FOR this.innerStates.first().regions.first()-»
«ENDDEFINE»

«DEFINE finish FOR Region-»

			TICKEND;
}
«ENDDEFINE»