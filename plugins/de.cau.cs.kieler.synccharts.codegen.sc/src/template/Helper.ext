import synccharts;

String builtString(List stateList): 
	// is the list empty?
	stateList.isEmpty ? "":
	"id2b("
	+ ((synccharts::State)stateList.first()).label
	+ ") | "
	+ builtString(stateList.withoutFirst())
	+ builtString(((synccharts::State)stateList.first()).regions.innerStates.select(e|!(e.isFinal) && !(e.isInitial)))
;

String getChildrenSet(List stateList):
	builtString(stateList).subString(0, builtString(stateList).length - 3)
;
	
List sortTransitionPrios(State state):
	state.outgoingTransitions.sortBy(e|e.priority)
;

String getURI(State state):
	JAVA de.cau.cs.kieler.synccharts.codegen.sc.Activator.getUri(de.cau.cs.kieler.synccharts.State)
;
	
State getRootState(State s):
	s.parentRegion.parentState == null ? s :
	getRootState(s.parentRegion.parentState)
;

State getInitialState(Region region):
	region.innerStates.select(s|s.isInitial).first()
;

cached List computeThreadPriorities(State rootState):
	JAVA template.Helper.computeThreadPriorities(de.cau.cs.kieler.synccharts.State)
;

cached int computeMainTreadPriority(State rootState):
	computeThreadPriorities(rootState).size + 1
;

int computeChangePriority(State state):
	JAVA template.Helper.computeChangePriority(de.cau.cs.kieler.synccharts.State)
;

int computeThreadPriority(State state):
	(computeMainTreadPriority(getRootState(state)) - 1) - (computeThreadPriorities(getRootState(state)).indexOf(state.id))
;