«IMPORT synccharts»

«EXTENSION template::Helper»

«DEFINE staticHeader FOR Region-»
«FILE innerStates.first().label+".h"»
#ifndef _«innerStates.first().label.toUpperCase()»_H
#define _«innerStates.first().label.toUpperCase()»_H
  
  «FOREACH allSignals(this.innerStates.first()) AS signal-»
  	«IF ((Signal)signal).isInput-»
  void «((Signal)signal).parentState.id»_I_«((Signal)signal).name»(«IF ((Signal)signal).type!=ValueType::PURE»int«ENDIF»);
  	«ENDIF-»
  	«IF ((Signal)signal).isOutput-»
  void «((Signal)signal).parentState.id»_O_«((Signal)signal).name»(«IF ((Signal)signal).type!=ValueType::PURE»int«ENDIF»);
  	«ENDIF-»
  «ENDFOREACH-»
  
  int «innerStates.first().label»_reset();
  int «innerStates.first().label»();
  
#endif
«ENDFILE»
«ENDDEFINE»

«DEFINE main FOR Region-»
	«FILE "misc.h"-»
«EXPAND header FOR this-»
	«ENDFILE-»
	«FILE "misc.c"-»
«EXPAND file FOR this-»
	«ENDFILE-»
«ENDDEFINE»

«DEFINE header FOR Region-»
#ifndef MISC_H_
#define MISC_H_

	«EXPAND CodegenMisc::generateSigType FOR allSignals(this.innerStates.first())-»
extern const char *s2signame[];
	
/* Define valued int signals */
#define _SC_valSigInt_SIZE «allSignals(this.innerStates.first()).size»
extern int valSigInt[_SC_valSigInt_SIZE];
extern int valSigIntPre[_SC_valSigInt_SIZE];

void printDebugInfo(char* str);

#endif
«ENDDEFINE»

«DEFINE file FOR Region-»
#include <stdio.h>
#include "misc.h"

void printDebugInfo(char* str){
	printf("%s INFO", str);
}
«ENDDEFINE»