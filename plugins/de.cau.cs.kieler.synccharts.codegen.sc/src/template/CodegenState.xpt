«IMPORT synccharts»

«EXTENSION template::Helper»

«DEFINE state FOR State-»

«IF (this.regions.size >= 1)-»
	«IF this.regions.size == 1-»
«EXPAND generateForkOneRegion FOR this-»
	«ELSE-»
«EXPAND generateForkMoreRegions FOR this-»
	«ENDIF-»
«EXPAND CodegenRegion::region FOREACH this.regions-»

«getStateNameByFlag(this, 3)»_main:
«ELSE-»
«getStateNameByFlag(this, 3)-»:
«ENDIF-»
«IF this.outgoingTransitions.isEmpty-»
			«EXPAND CodegenMisc::callJSONState-»
	«IF this.isFinal-»
			TERM;
	«ELSE-»
		«EXPAND onEntry FOR this-»
			// this should be HALT; but for simulation:
			PAUSE;
		«EXPAND onInside FOR this-»
		«IF !(this.regions.isEmpty)-»
			GOTO(«getStateNameByFlag(this, 3)»_main);
		«ELSE-»
			GOTO(«getStateNameByFlag(this, 3)»);
		«ENDIF-»
	«ENDIF-»
«ELSE-»
	«EXPAND immediateStrong FOR this-»
	«EXPAND CodegenMisc::callJSONState-»
	«EXPAND onEntry FOR this-»
	«EXPAND immediateWeak FOR this-»
	«IF !(this.regions.isEmpty)-»
«getStateNameByFlag(this, 3)»_main_intern:
	«ELSE-»
«getStateNameByFlag(this, 3)»_intern:
	«ENDIF-»
	«EXPAND CodegenMisc::callJSONState-»
	«IF !(this.outgoingTransitions.exists(t|t.type == TransitionType::NORMALTERMINATION))-»
			PAUSE;
	«ENDIF-»
	«EXPAND allStrong FOR this-»
	«IF !this.regions.isEmpty && this.outgoingTransitions.exists(t|t.type != TransitionType::STRONGABORT) && this.outgoingTransitions.exists(t|t.type == TransitionType::STRONGABORT)-»
          «EXPAND onInside FOR this-»
		  // PRIO für WEAK setzen
		  PRIO(«computeWeakThreadPriority(this)»);
	«ENDIF-»
	«EXPAND allWeak FOR this-»
		  PRIO(«computeRealThreadPriority(this)»);
	«IF !(this.outgoingTransitions.forAll(t|t.trigger == null))-»
		«IF !(this.regions.isEmpty)-»
			GOTO(«getStateNameByFlag(this, 3)»_main_intern);
		«ELSE-»
			GOTO(«getStateNameByFlag(this, 3)»_intern);
		«ENDIF-»
	«ENDIF-»
«ENDIF-»
«ENDDEFINE»

«DEFINE generateForkOneRegion FOR State-»
«getStateNameByFlag(this, 3)»:
			FORK(«getStateNameByFlag(getInitialState(this.regions.first()), 3)-», «computeRealThreadPriority(getInitialState(this.regions.first()))»);
			FORKE(«getStateNameByFlag(this, 3)»_main);
«ENDDEFINE»

«DEFINE generateForkMoreRegions FOR State-»
«getStateNameByFlag(this, 3)»:
	«FOREACH this.regions AS region-»
			FORK(«getStateNameByFlag(getInitialState(region), 3)-», «computeRealThreadPriority(getInitialState(region))»);
	«ENDFOREACH»
			FORKE(«getStateNameByFlag(this, 3)»_main);
«ENDDEFINE»

«DEFINE immediateStrong FOR State-»
	«FOREACH sortTransitionPrios(this) AS outTrans-»
		«IF (((Transition)outTrans).isImmediate && ((Transition)outTrans).type == TransitionType::STRONGABORT)-»
				«EXPAND CodegenTransition::transition FOR (Transition)outTrans-»
		«ENDIF-»
	«ENDFOREACH-»
«ENDDEFINE»

«DEFINE immediateWeak FOR State-»
	«FOREACH sortTransitionPrios(this) AS outTrans-»
		«IF (((Transition)outTrans).isImmediate && ((Transition)outTrans).type != TransitionType::STRONGABORT)-»
				«EXPAND CodegenTransition::transition FOR (Transition)outTrans-»
		«ENDIF-»
	«ENDFOREACH-»
«ENDDEFINE»

«DEFINE allStrong FOR State-»
	«FOREACH sortTransitionPrios(this) AS outTrans-»
		«IF (((Transition)outTrans).type == TransitionType::STRONGABORT)-»
				«EXPAND CodegenTransition::transition FOR (Transition)outTrans-»
		«ENDIF-»
	«ENDFOREACH-»
«ENDDEFINE»

«DEFINE allWeak FOR State-»
	«FOREACH sortTransitionPrios(this) AS outTrans-»
		«IF (((Transition)outTrans).type != TransitionType::STRONGABORT)-»
				«EXPAND CodegenTransition::transition FOR (Transition)outTrans-»
		«ENDIF-»
	«ENDFOREACH-»
«ENDDEFINE»

«DEFINE onEntry FOR State-»
	«IF !this.entryActions.isEmpty-»
		«FOREACH this.entryActions AS onEntryAction-»
			«EXPAND CodegenTriggerAndEffect::trigger FOR onEntryAction-»
		«ENDFOREACH-»
	«ENDIF»
«ENDDEFINE»

«DEFINE onInside FOR State-»
	«IF !this.innerActions.isEmpty-»
		«FOREACH this.innerActions AS onInsideAction-»
			«EXPAND CodegenTriggerAndEffect::trigger FOR onInsideAction-»
		«ENDFOREACH-»
	«ENDIF»
«ENDDEFINE»