«IMPORT synccharts»

«EXTENSION template::Helper»

«DEFINE state FOR State-»
	«IF (this.regions.size >= 1)-»
		«EXPAND stateWithRegions FOR this-»
	«ELSE-»
		L_«getStateNameByFlag(this, 3)-»:
	«ENDIF-»
	«IF this.outgoingTransitions.isEmpty-»
		«EXPAND stateWithoutTransitions FOR this»
	«ELSE-»
		«EXPAND immediateStrong FOR this-»
		«EXPAND CodegenMisc::callJSONState-»
		«EXPAND onEntry FOR this-»
		«EXPAND weakPrio FOR this-»
		«EXPAND immediateWeak FOR this-»
		«IF !(this.regions.isEmpty)-»
			L_«getStateNameByFlag(this, 3)»_main_intern:
		«ELSE-»
			L_«getStateNameByFlag(this, 3)»_intern:
		«ENDIF-»
		PRIO(«getRealThreadPriority(this)»);
		«EXPAND CodegenMisc::callJSONState-»
		«EXPAND normal FOR this-»
		«IF this.type != StateType::CONDITIONAL && !this.outgoingTransitions.exists(t|t.type == TransitionType::NORMALTERMINATION)-»
			PAUSE;
		«ENDIF-»
		«EXPAND allStrong FOR this-»
		«EXPAND onInside FOR this-»
		«EXPAND weakPrio FOR this-»
		«EXPAND allWeak FOR this-»
		«IF !(this.outgoingTransitions.forAll(t|t.trigger == null))-»
			«EXPAND returnForHierarchical FOR this-»
		«ENDIF-»
	«ENDIF-»
«ENDDEFINE»

«DEFINE stateWithRegions FOR State-»
	«IF this.regions.size == 1-»
		«EXPAND generateForkOneRegion FOR this-»
	«ELSE-»
		«EXPAND generateForkMoreRegions FOR this-»
	«ENDIF-»
	«EXPAND CodegenRegion::region FOREACH this.regions-»
	L_«getStateNameByFlag(this, 3)»_main:
«ENDDEFINE»

«DEFINE generateForkOneRegion FOR State-»
	L_«getStateNameByFlag(this, 3)»:
	FORK(L_«getStateNameByFlag(getInitialState(this.regions.first()), 3)-», «getRealThreadPriority(getInitialState(this.regions.first()))»);
	FORKE(L_«getStateNameByFlag(this, 3)»_main);
«ENDDEFINE»

«DEFINE generateForkMoreRegions FOR State-»
	L_«getStateNameByFlag(this, 3)»:
	«FOREACH this.regions AS region-»
		FORK(L_«getStateNameByFlag(getInitialState(region), 3)-», «getRealThreadPriority(getInitialState(region))»);
	«ENDFOREACH»
	FORKE(L_«getStateNameByFlag(this, 3)»_main);
«ENDDEFINE»

«DEFINE returnForHierarchical FOR State-»
	«IF !(this.regions.isEmpty)-»
		GOTO(L_«getStateNameByFlag(this, 3)»_main_intern);
	«ELSE-»
		GOTO(L_«getStateNameByFlag(this, 3)»_intern);
	«ENDIF-»
«ENDDEFINE»

«DEFINE stateWithoutTransitions FOR State-»
	«EXPAND CodegenMisc::callJSONState-»
	«IF this.isFinal-»
		TERM;
	«ELSE-»
		«EXPAND onEntry FOR this-»
		«IF !(this.regions.isEmpty)-»
			L_«getStateNameByFlag(this, 3)»_main_intern:
		«ELSE-»
			L_«getStateNameByFlag(this, 3)»_intern:
		«ENDIF-»
		«EXPAND CodegenMisc::callJSONState-»
		/* this should be HALT; but for simulation PAUSE and GOTO */
		PAUSE;
		«EXPAND onInside FOR this-»
		«EXPAND returnForHierarchical FOR this-»
	«ENDIF-»
«ENDDEFINE»

«DEFINE immediateStrong FOR State-»
	«FOREACH sortTransitionPrios(this) AS outTrans-»
		«IF (((Transition)outTrans).isImmediate && ((Transition)outTrans).type == TransitionType::STRONGABORT)-»
			«EXPAND CodegenTransition::transition FOR (Transition)outTrans-»
		«ENDIF-»
	«ENDFOREACH-»
«ENDDEFINE»

«DEFINE weakPrio FOR State-»
	«IF !this.regions.isEmpty && this.outgoingTransitions.exists(t|t.type != TransitionType::STRONGABORT) && this.outgoingTransitions.exists(t|t.type == TransitionType::STRONGABORT)-»
		PRIO(«getWeakThreadPriority(this)»);
	«ENDIF-»
«ENDDEFINE»

«DEFINE immediateWeak FOR State-»
	«FOREACH sortTransitionPrios(this) AS outTrans-»
		«IF (((Transition)outTrans).isImmediate && ((Transition)outTrans).type != TransitionType::STRONGABORT)-»
			«EXPAND CodegenTransition::transition FOR (Transition)outTrans-»
		«ENDIF-»
	«ENDFOREACH-»
«ENDDEFINE»

«DEFINE allStrong FOR State-»
	«FOREACH sortTransitionPrios(this) AS outTrans-»
		«IF (((Transition)outTrans).type == TransitionType::STRONGABORT)-»
			«EXPAND CodegenTransition::transition FOR (Transition)outTrans-»
		«ENDIF-»
	«ENDFOREACH-»
«ENDDEFINE»

«DEFINE allWeak FOR State-»
	«FOREACH sortTransitionPrios(this) AS outTrans-»
		«IF (((Transition)outTrans).type == TransitionType::WEAKABORT)-»
			«EXPAND CodegenTransition::transition FOR (Transition)outTrans-»
		«ENDIF-»
	«ENDFOREACH-»
«ENDDEFINE»

«DEFINE normal FOR State-»
	«FOREACH sortTransitionPrios(this) AS outTrans-»
		«IF (((Transition)outTrans).type == TransitionType::NORMALTERMINATION)-»
			«EXPAND CodegenTransition::transition FOR (Transition)outTrans-»
		«ENDIF-»
	«ENDFOREACH-»
	«IF this.outgoingTransitions.exists(t|t.type == TransitionType::NORMALTERMINATION)-»
		L_«getStateNameByFlag(this, 3)»_afterJoin:
	«ENDIF-»
«ENDDEFINE»

«DEFINE onEntry FOR State-»
	«IF !this.entryActions.isEmpty-»
		«FOREACH this.entryActions AS onEntryAction-»
			«EXPAND CodegenTriggerAndEffect::trigger FOR onEntryAction-»
		«ENDFOREACH-»
	«ENDIF-»
«ENDDEFINE»

«DEFINE onInside FOR State-»
	«IF !this.innerActions.isEmpty-»
		«FOREACH this.innerActions AS onInsideAction-»
			«EXPAND CodegenTriggerAndEffect::trigger FOR onInsideAction-»
		«ENDFOREACH-»
	«ENDIF-»
«ENDDEFINE»