module de.cau.cs.kieler.kiml.graphviz.dot.GraphvizDot

import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.generator.*
import org.eclipse.xtext.ui.generator.*

var grammarURI = "classpath:/de/cau/cs/kieler/kiml/graphviz/dot/GraphvizDot.xtext"
var file.extensions = "graphviz_dot"
var projectName = "de.cau.cs.kieler.kiml.graphviz.dot"
var runtimeProject = "../${projectName}"

Workflow {
    bean = StandaloneSetup {
		platformUri = "${runtimeProject}/.."
	}
	
	component = DirectoryCleaner {
		directory = "${runtimeProject}/src-gen"
	}
	
	component = Generator {
		pathRtProject = runtimeProject
		projectNameRt = projectName
		
		language = {
			uri = grammarURI
			fileExtensions = file.extensions
			
			// Java API to access grammar elements (required by several other fragments)
			fragment = grammarAccess.GrammarAccessFragment {}
			
			// generates Java API for the generated EPackages 
			fragment = ecore.EcoreGeneratorFragment {}
			
			// the serialization component
			fragment = parseTreeConstructor.ParseTreeConstructorFragment {}
			
			// a custom ResourceFactory for use with EMF 
			fragment = resourceFactory.ResourceFactoryFragment {
				fileExtensions = file.extensions
			}
				
			// the following fragment tries to use the Antlr Generator fragment
			fragment = parser.antlr.XtextAntlrGeneratorFragment {}
			
			// formatter API 
			fragment = ecore2xtext.FormatterFragment {}

		}
	}
}
