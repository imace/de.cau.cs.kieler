
/*
 * generated by Xtext
 */
package de.cau.cs.kieler.kiml.graphviz.dot;

import org.eclipse.xtext.Constants;
import org.eclipse.xtext.service.DefaultRuntimeModule;

import com.google.inject.Binder;
import com.google.inject.name.Names;

/**
 * Manual modifications go to {de.cau.cs.kieler.kiml.graphviz.dot.GraphvizDotRuntimeModule}
 */
public abstract class AbstractGraphvizDotRuntimeModule extends DefaultRuntimeModule {
	
	@Override
	public void configure(Binder binder) {
		super.configure(binder);
		binder.bind(String.class).annotatedWith(Names.named(Constants.LANGUAGE_NAME)).toInstance(
			"de.cau.cs.kieler.kiml.graphviz.dot.GraphvizDot");
		bindProperties(binder);
	}
	
	protected void bindProperties(Binder binder) {
		bindProperties(binder, "de/cau/cs/kieler/kiml/graphviz/dot/GraphvizDot.properties");
	}
	
	
	// contributed by org.eclipse.xtext.generator.grammarAccess.GrammarAccessFragment
	public Class<? extends org.eclipse.xtext.IGrammarAccess> bindIGrammarAccess() {
		return de.cau.cs.kieler.kiml.graphviz.dot.services.GraphvizDotGrammarAccess.class;
	}

	// contributed by org.eclipse.xtext.generator.parseTreeConstructor.ParseTreeConstructorFragment
	public Class<? extends org.eclipse.xtext.parsetree.reconstr.IParseTreeConstructor> bindIParseTreeConstructor() {
		return de.cau.cs.kieler.kiml.graphviz.dot.parseTreeConstruction.GraphvizDotParsetreeConstructor.class;
	}

	// contributed by de.itemis.xtext.antlr.XtextAntlrGeneratorFragment
	public Class<? extends org.eclipse.xtext.parser.antlr.IAntlrParser> bindIAntlrParser() {
		return de.cau.cs.kieler.kiml.graphviz.dot.parser.antlr.GraphvizDotParser.class;
	}

	// contributed by de.itemis.xtext.antlr.XtextAntlrGeneratorFragment
	public Class<? extends org.eclipse.xtext.parser.ITokenToStringConverter> bindITokenToStringConverter() {
		return org.eclipse.xtext.parser.antlr.AntlrTokenToStringConverter.class;
	}

	// contributed by de.itemis.xtext.antlr.XtextAntlrGeneratorFragment
	public Class<? extends org.eclipse.xtext.parser.antlr.IAntlrTokenFileProvider> bindIAntlrTokenFileProvider() {
		return de.cau.cs.kieler.kiml.graphviz.dot.parser.antlr.GraphvizDotAntlrTokenFileProvider.class;
	}

	// contributed by de.itemis.xtext.antlr.XtextAntlrGeneratorFragment
	public Class<? extends org.eclipse.xtext.parser.antlr.Lexer> bindLexer() {
		return de.cau.cs.kieler.kiml.graphviz.dot.parser.antlr.internal.InternalGraphvizDotLexer.class;
	}

	// contributed by de.itemis.xtext.antlr.XtextAntlrGeneratorFragment
	public com.google.inject.Provider<de.cau.cs.kieler.kiml.graphviz.dot.parser.antlr.internal.InternalGraphvizDotLexer> provideInternalGraphvizDotLexer() {
		return org.eclipse.xtext.parser.antlr.LexerProvider.create(de.cau.cs.kieler.kiml.graphviz.dot.parser.antlr.internal.InternalGraphvizDotLexer.class);
	}

	// contributed by de.itemis.xtext.antlr.XtextAntlrGeneratorFragment
	public void configureRuntimeLexer(com.google.inject.Binder binder) {
		binder.bind(org.eclipse.xtext.parser.antlr.Lexer.class).annotatedWith(com.google.inject.name.Names.named(org.eclipse.xtext.parser.antlr.LexerBindings.RUNTIME)).to(de.cau.cs.kieler.kiml.graphviz.dot.parser.antlr.internal.InternalGraphvizDotLexer.class);
	}

	// contributed by de.itemis.xtext.antlr.XtextAntlrGeneratorFragment
	public Class<? extends org.eclipse.xtext.parser.antlr.ITokenDefProvider> bindITokenDefProvider() {
		return org.eclipse.xtext.parser.antlr.AntlrTokenDefProvider.class;
	}

}
