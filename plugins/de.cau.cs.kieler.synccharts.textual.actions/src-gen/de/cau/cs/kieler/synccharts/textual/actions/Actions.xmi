<?xml version="1.0" encoding="ASCII"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:xtext="http://www.eclipse.org/2008/Xtext">
  <xtext:Grammar name="de.cau.cs.kieler.synccharts.textual.actions.Actions" usedGrammars="/1">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="synccharts">
      <ePackage href="http://kieler.cs.cau.de/synccharts/0.2.1#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="expressions">
      <ePackage href="http://kieler.cs.cau.de/expressions#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:ParserRule" name="Action">
      <type metamodel="/0/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.1#//Action"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Action">
          <type metamodel="/0/@metamodelDeclarations.1">
            <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.1#//Action"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="isImmediate" operator="?=">
          <terminal xsi:type="xtext:Keyword" value="#"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="delay" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
        </elements>
        <elements xsi:type="xtext:Assignment" cardinality="?" feature="trigger" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="/"/>
          <elements xsi:type="xtext:Group" cardinality="*">
            <elements xsi:type="xtext:Assignment" feature="effects" operator="+=">
              <terminal xsi:type="xtext:RuleCall" rule="/0/@rules.1"/>
            </elements>
            <elements xsi:type="xtext:Keyword" cardinality="?" value=","/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Effect">
      <type metamodel="/0/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.1#//Effect"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.2"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.3"/>
        <elements xsi:type="xtext:RuleCall" rule="/0/@rules.4"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Emission">
      <type metamodel="/0/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.1#//Emission"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="signal" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.2">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Signal"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="?">
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Keyword" value="("/>
            <elements xsi:type="xtext:Assignment" feature="newValue" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.8"/>
            </elements>
            <elements xsi:type="xtext:Keyword" value=")"/>
          </elements>
          <elements xsi:type="xtext:Group">
            <elements xsi:type="xtext:Keyword" value="("/>
            <elements xsi:type="xtext:Assignment" feature="newValue" operator="=">
              <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
            </elements>
            <elements xsi:type="xtext:Keyword" value=")"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="Assignment">
      <type metamodel="/0/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.1#//Assignment"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="variable" operator="=">
          <terminal xsi:type="xtext:CrossReference">
            <type metamodel="/0/@metamodelDeclarations.2">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Variable"/>
            </type>
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Keyword" value=":="/>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:Assignment" feature="expression" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.8"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="expression" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TextEffect">
      <type metamodel="/0/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/synccharts/0.2.1#//TextEffect"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="code" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" feature="type" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </alternatives>
    </rules>
  </xtext:Grammar>
  <xtext:Grammar name="de.cau.cs.kieler.core.expressions.Expressions" usedGrammars="/2">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel">
      <ePackage href="http://kieler.cs.cau.de/expressions#/"/>
    </metamodelDeclarations>
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:ParserRule" name="Expression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="BooleanExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:RuleCall" rule="/1/@rules.2"/>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="OrExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.3"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/1/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.28"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.3"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AndExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.4"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/1/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.29"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.4"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="NotExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.5"/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Action">
            <type metamodel="/1/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.30"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.5"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AtomicExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.21"/>
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.6"/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Action">
            <type metamodel="/1/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.27"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.6"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:RuleCall" rule="/1/@rules.7"/>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:RuleCall" rule="/1/@rules.1"/>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="SignalReference">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//SignalReference"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="signal" operator="=">
        <terminal xsi:type="xtext:CrossReference">
          <type metamodel="/1/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Signal"/>
          </type>
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.25"/>
        </terminal>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="CompareOperation">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.8"/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/1/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.26"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.8"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ValuedExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:RuleCall" rule="/1/@rules.9"/>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AddExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.10"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/1/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.31"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.10"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="SubExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.11"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/1/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.32"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.11"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="MultExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.12"/>
        <elements xsi:type="xtext:Group" cardinality="*">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/1/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.33"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.12"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ModExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.13"/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
            <type metamodel="/1/@metamodelDeclarations.0">
              <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
            </type>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.34"/>
          </elements>
          <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
            <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.13"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="AtomicValuedExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.19"/>
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.20"/>
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.15"/>
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.16"/>
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.17"/>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:RuleCall" rule="/1/@rules.14"/>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:RuleCall" rule="/1/@rules.8"/>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.18"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="DivExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Expression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:RuleCall" rule="/1/@rules.13"/>
        <elements xsi:type="xtext:Action" feature="subExpressions" operator="+=">
          <type metamodel="/1/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
          </type>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.35"/>
        </elements>
        <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.13"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="VariableReference">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//VariableReference"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="variable" operator="=">
        <terminal xsi:type="xtext:CrossReference">
          <type metamodel="/1/@metamodelDeclarations.0">
            <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//Variable"/>
          </type>
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.25"/>
        </terminal>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="ValueTestExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.36"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.6"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="PreValueTestExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//OperatorExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="operator" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.27"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value="("/>
        <elements xsi:type="xtext:Assignment" feature="subExpressions" operator="+=">
          <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.16"/>
        </elements>
        <elements xsi:type="xtext:Keyword" value=")"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="TextExpression">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//TextExpression"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Assignment" feature="code" operator="=">
          <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.2"/>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" value="("/>
          <elements xsi:type="xtext:Assignment" feature="type" operator="=">
            <terminal xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value=")"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="IntValue">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//IntValue"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.22"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="FloatValue">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//FloatValue"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.23"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="BooleanValue">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EClass" href="http://kieler.cs.cau.de/expressions#//BooleanValue"/>
      </type>
      <alternatives xsi:type="xtext:Assignment" feature="value" operator="=">
        <terminal xsi:type="xtext:RuleCall" rule="/1/@rules.24"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EIntegerObject">
      <type metamodel="/1/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EIntegerObject"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="-"/>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EFloatObject">
      <type metamodel="/1/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EFloatObject"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="-"/>
        <elements xsi:type="xtext:RuleCall" cardinality="?" rule="/2/@rules.1"/>
        <elements xsi:type="xtext:Keyword" value="."/>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Keyword" value="E"/>
            <elements xsi:type="xtext:Keyword" value="e"/>
          </elements>
          <elements xsi:type="xtext:Keyword" cardinality="?" value="-"/>
          <elements xsi:type="xtext:RuleCall" rule="/2/@rules.1"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EBooleanObject">
      <type metamodel="/1/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EBooleanObject"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Keyword" value="true"/>
        <elements xsi:type="xtext:Keyword" value="false"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:ParserRule" name="EString">
      <type metamodel="/1/@metamodelDeclarations.1">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.2"/>
        <elements xsi:type="xtext:RuleCall" rule="/2/@rules.0"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="CompareOperator">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/EQ"/>
          <literal value="="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/LT"/>
          <literal value="&lt;"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/LEQ"/>
          <literal value="&lt;="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/GT"/>
          <literal value=">"/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/GEQ"/>
          <literal value=">="/>
        </elements>
        <elements xsi:type="xtext:EnumLiteralDeclaration">
          <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/NE"/>
          <literal value="&lt;>"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="PreOperator">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/PRE"/>
        <literal value="pre"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="OrOperator">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/OR"/>
        <literal value="or"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="AndOperator">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/AND"/>
        <literal value="and"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="NotOperator">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/NOT"/>
        <literal value="not"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="AddOperator">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/ADD"/>
        <literal value="+"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="SubOperator">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/SUB"/>
        <literal value="-"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="MultOperator">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/MULT"/>
        <literal value="*"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="ModOperator">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/MOD"/>
        <literal value="mod"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="DivOperator">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/DIV"/>
        <literal value="/"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:EnumRule" name="ValueTestOperator">
      <type metamodel="/1/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EEnum" href="http://kieler.cs.cau.de/expressions#//OperatorType"/>
      </type>
      <alternatives xsi:type="xtext:EnumLiteralDeclaration">
        <enumLiteral href="http://kieler.cs.cau.de/expressions#//OperatorType/VAL"/>
        <literal value="?"/>
      </alternatives>
    </rules>
  </xtext:Grammar>
  <xtext:Grammar name="org.eclipse.xtext.common.Terminals" definesHiddenTokens="true" hiddenTokens="/2/@rules.5 /2/@rules.3 /2/@rules.4">
    <metamodelDeclarations xsi:type="xtext:ReferencedMetamodel" alias="ecore">
      <ePackage href="http://www.eclipse.org/emf/2002/Ecore#/"/>
    </metamodelDeclarations>
    <rules xsi:type="xtext:TerminalRule" name="ID">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" cardinality="?" value="^"/>
        <elements xsi:type="xtext:Alternatives">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
        </elements>
        <elements xsi:type="xtext:Alternatives" cardinality="*">
          <elements xsi:type="xtext:CharacterRange">
            <left value="a"/>
            <right value="z"/>
          </elements>
          <elements xsi:type="xtext:CharacterRange">
            <left value="A"/>
            <right value="Z"/>
          </elements>
          <elements xsi:type="xtext:Keyword" value="_"/>
          <elements xsi:type="xtext:CharacterRange">
            <left value="0"/>
            <right value="9"/>
          </elements>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="INT">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EInt"/>
      </type>
      <alternatives xsi:type="xtext:CharacterRange" cardinality="+">
        <left value="0"/>
        <right value="9"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="STRING">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives">
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="&quot;"/>
        </elements>
        <elements xsi:type="xtext:Group">
          <elements xsi:type="xtext:Keyword" value="'"/>
          <elements xsi:type="xtext:Alternatives" cardinality="*">
            <elements xsi:type="xtext:Group">
              <elements xsi:type="xtext:Keyword" value="\"/>
              <elements xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="b"/>
                <elements xsi:type="xtext:Keyword" value="t"/>
                <elements xsi:type="xtext:Keyword" value="n"/>
                <elements xsi:type="xtext:Keyword" value="f"/>
                <elements xsi:type="xtext:Keyword" value="r"/>
                <elements xsi:type="xtext:Keyword" value="&quot;"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
                <elements xsi:type="xtext:Keyword" value="\"/>
              </elements>
            </elements>
            <elements xsi:type="xtext:NegatedToken">
              <terminal xsi:type="xtext:Alternatives">
                <elements xsi:type="xtext:Keyword" value="\"/>
                <elements xsi:type="xtext:Keyword" value="'"/>
              </terminal>
            </elements>
          </elements>
          <elements xsi:type="xtext:Keyword" value="'"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ML_COMMENT">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="/*"/>
        <elements xsi:type="xtext:UntilToken">
          <terminal xsi:type="xtext:Keyword" value="*/"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="SL_COMMENT">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Group">
        <elements xsi:type="xtext:Keyword" value="//"/>
        <elements xsi:type="xtext:NegatedToken" cardinality="*">
          <terminal xsi:type="xtext:Alternatives">
            <elements xsi:type="xtext:Keyword" value="&#xA;"/>
            <elements xsi:type="xtext:Keyword" value="&#xD;"/>
          </terminal>
        </elements>
        <elements xsi:type="xtext:Group" cardinality="?">
          <elements xsi:type="xtext:Keyword" cardinality="?" value="&#xD;"/>
          <elements xsi:type="xtext:Keyword" value="&#xA;"/>
        </elements>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="WS">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Alternatives" cardinality="+">
        <elements xsi:type="xtext:Keyword" value=" "/>
        <elements xsi:type="xtext:Keyword" value="&#x9;"/>
        <elements xsi:type="xtext:Keyword" value="&#xD;"/>
        <elements xsi:type="xtext:Keyword" value="&#xA;"/>
      </alternatives>
    </rules>
    <rules xsi:type="xtext:TerminalRule" name="ANY_OTHER">
      <type metamodel="/2/@metamodelDeclarations.0">
        <classifier xsi:type="ecore:EDataType" href="http://www.eclipse.org/emf/2002/Ecore#//EString"/>
      </type>
      <alternatives xsi:type="xtext:Wildcard"/>
    </rules>
  </xtext:Grammar>
</xmi:XMI>
