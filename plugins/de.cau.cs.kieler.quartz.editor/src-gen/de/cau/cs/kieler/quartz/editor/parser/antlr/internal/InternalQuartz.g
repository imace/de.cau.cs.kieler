/*
* generated by Xtext
*/
grammar InternalQuartz;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package de.cau.cs.kieler.quartz.editor.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package de.cau.cs.kieler.quartz.editor.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import de.cau.cs.kieler.quartz.editor.services.QuartzGrammarAccess;

}

@parser::members {

 	private QuartzGrammarAccess grammarAccess;
 	
    public InternalQuartzParser(TokenStream input, IAstFactory factory, QuartzGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("de/cau/cs/kieler/quartz/editor/parser/antlr/internal/InternalQuartz.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "QrzFile";	
   	}
   	
   	@Override
   	protected QuartzGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleQrzFile
entryRuleQrzFile returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getQrzFileRule(), currentNode); }
	 iv_ruleQrzFile=ruleQrzFile 
	 { $current=$iv_ruleQrzFile.current; } 
	 EOF 
;

// Rule QrzFile
ruleQrzFile returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        currentNode=createCompositeNode(grammarAccess.getQrzFileAccess().getPackagePathParserRuleCall_0(), currentNode); 
    }
    this_PackagePath_0=rulePackagePath
    { 
        $current = $this_PackagePath_0.current; 
        currentNode = currentNode.getParent();
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQrzFileAccess().getImportsImportListParserRuleCall_1_0(), currentNode); 
	    }
		lv_imports_1_0=ruleImportList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQrzFileRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"imports",
	        		lv_imports_1_0, 
	        		"ImportList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQrzFileAccess().getMacrosMacroDefParserRuleCall_2_0(), currentNode); 
	    }
		lv_macros_2_0=ruleMacroDef		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQrzFileRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"macros",
	        		lv_macros_2_0, 
	        		"MacroDef", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQrzFileAccess().getModuleQModuleParserRuleCall_3_0(), currentNode); 
	    }
		lv_module_3_0=ruleQModule		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQrzFileRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"module",
	        		lv_module_3_0, 
	        		"QModule", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRulePackagePath
entryRulePackagePath returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPackagePathRule(), currentNode); }
	 iv_rulePackagePath=rulePackagePath 
	 { $current=$iv_rulePackagePath.current; } 
	 EOF 
;

// Rule PackagePath
rulePackagePath returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'package' 
    {
        createLeafNode(grammarAccess.getPackagePathAccess().getPackageKeyword_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getPackagePathAccess().getPointedNameParserRuleCall_1(), currentNode); 
    }
    this_PointedName_1=rulePointedName
    { 
        $current = $this_PointedName_1.current; 
        currentNode = currentNode.getParent();
    }
	';' 
    {
        createLeafNode(grammarAccess.getPackagePathAccess().getSemicolonKeyword_2(), null); 
    }
)
;





// Entry rule entryRuleImportList
entryRuleImportList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getImportListRule(), currentNode); }
	 iv_ruleImportList=ruleImportList 
	 { $current=$iv_ruleImportList.current; } 
	 EOF 
;

// Rule ImportList
ruleImportList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'import' 
    {
        createLeafNode(grammarAccess.getImportListAccess().getImportKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getImportListAccess().getImpPointedNameParserRuleCall_1_0(), currentNode); 
	    }
		lv_imp_1_0=rulePointedName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getImportListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"imp",
	        		lv_imp_1_0, 
	        		"PointedName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getImportListAccess().getSemicolonKeyword_2(), null); 
    }
)+
;





// Entry rule entryRulePointedName
entryRulePointedName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getPointedNameRule(), currentNode); }
	 iv_rulePointedName=rulePointedName 
	 { $current=$iv_rulePointedName.current; } 
	 EOF 
;

// Rule PointedName
rulePointedName returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_id_0_0=RULE_ID
		{
			createLeafNode(grammarAccess.getPointedNameAccess().getIdIDTerminalRuleCall_0_0(), "id"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPointedNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"id",
	        		lv_id_0_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(	'.' 
    {
        createLeafNode(grammarAccess.getPointedNameAccess().getFullStopKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getPointedNameAccess().getNamePointedNameParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_name_2_0=rulePointedName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPointedNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"PointedName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(
(
		lv_all_3_0=	'.*' 
    {
        createLeafNode(grammarAccess.getPointedNameAccess().getAllFullStopAsteriskKeyword_2_0(), "all"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getPointedNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "all", true, ".*", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleMacroDef
entryRuleMacroDef returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getMacroDefRule(), currentNode); }
	 iv_ruleMacroDef=ruleMacroDef 
	 { $current=$iv_ruleMacroDef.current; } 
	 EOF 
;

// Rule MacroDef
ruleMacroDef returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'macro' 
    {
        createLeafNode(grammarAccess.getMacroDefAccess().getMacroKeyword_0_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMacroDefAccess().getNameQNameParserRuleCall_0_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleQName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMacroDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"QName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getMacroDefAccess().getLeftParenthesisKeyword_0_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMacroDefAccess().getArgsQNameListParserRuleCall_0_3_0(), currentNode); 
	    }
		lv_args_3_0=ruleQNameList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMacroDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"args",
	        		lv_args_3_0, 
	        		"QNameList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getMacroDefAccess().getRightParenthesisKeyword_0_4(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getMacroDefAccess().getEqualsSignKeyword_0_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMacroDefAccess().getExprUtyExprParserRuleCall_0_6_0(), currentNode); 
	    }
		lv_expr_6_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMacroDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_6_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getMacroDefAccess().getSemicolonKeyword_0_7(), null); 
    }
)
    |(	'macro' 
    {
        createLeafNode(grammarAccess.getMacroDefAccess().getMacroKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMacroDefAccess().getNameQNameParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_name_9_0=ruleQName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMacroDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_9_0, 
	        		"QName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getMacroDefAccess().getLeftParenthesisKeyword_1_2(), null); 
    }
	')' 
    {
        createLeafNode(grammarAccess.getMacroDefAccess().getRightParenthesisKeyword_1_3(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getMacroDefAccess().getEqualsSignKeyword_1_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getMacroDefAccess().getExprUtyExprParserRuleCall_1_5_0(), currentNode); 
	    }
		lv_expr_13_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getMacroDefRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_13_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getMacroDefAccess().getSemicolonKeyword_1_6(), null); 
    }
))
;





// Entry rule entryRuleQModule
entryRuleQModule returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getQModuleRule(), currentNode); }
	 iv_ruleQModule=ruleQModule 
	 { $current=$iv_ruleQModule.current; } 
	 EOF 
;

// Rule QModule
ruleQModule returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'module' 
    {
        createLeafNode(grammarAccess.getQModuleAccess().getModuleKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQModuleAccess().getNameNameParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_1_0=ruleName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQModuleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_1_0, 
	        		"Name", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getQModuleAccess().getLeftParenthesisKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQModuleAccess().getIntfInterfaceListParserRuleCall_3_0(), currentNode); 
	    }
		lv_intf_3_0=ruleInterfaceList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQModuleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"intf",
	        		lv_intf_3_0, 
	        		"InterfaceList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getQModuleAccess().getRightParenthesisKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQModuleAccess().getStmtLocStmtParserRuleCall_5_0(), currentNode); 
	    }
		lv_stmt_5_0=ruleLocStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQModuleRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"stmt",
	        		lv_stmt_5_0, 
	        		"LocStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)
;





// Entry rule entryRuleName
entryRuleName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNameRule(), currentNode); }
	 iv_ruleName=ruleName 
	 { $current=$iv_ruleName.current; } 
	 EOF 
;

// Rule Name
ruleName returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_id_0_0=RULE_ID
		{
			createLeafNode(grammarAccess.getNameAccess().getIdIDTerminalRuleCall_0(), "id"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNameRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"id",
	        		lv_id_0_0, 
	        		"ID", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleQName
entryRuleQName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getQNameRule(), currentNode); }
	 iv_ruleQName=ruleQName 
	 { $current=$iv_ruleQName.current; } 
	 EOF 
;

// Rule QName
ruleQName returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getQNameAccess().getNameParserRuleCall(), currentNode); 
    }
    this_Name_0=ruleName
    { 
        $current = $this_Name_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleQNameList
entryRuleQNameList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getQNameListRule(), currentNode); }
	 iv_ruleQNameList=ruleQNameList 
	 { $current=$iv_ruleQNameList.current; } 
	 EOF 
;

// Rule QNameList
ruleQNameList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQNameListAccess().getNameQNameParserRuleCall_0_0(), currentNode); 
	    }
		lv_name_0_0=ruleQName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQNameListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_0_0, 
	        		"QName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getQNameListAccess().getCommaKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQNameListAccess().getNamesQNameParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_names_2_0=ruleQName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQNameListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"names",
	        		lv_names_2_0, 
	        		"QName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleStorage
entryRuleStorage returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStorageRule(), currentNode); } 
	 iv_ruleStorage=ruleStorage 
	 { $current=$iv_ruleStorage.current.getText(); }  
	 EOF 
;

// Rule Storage
ruleStorage returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='event' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getStorageAccess().getEventKeyword_0(), null); 
    }

    |
	kw='mem' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getStorageAccess().getMemKeyword_1(), null); 
    }
)
    ;





// Entry rule entryRuleQType
entryRuleQType returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getQTypeRule(), currentNode); }
	 iv_ruleQType=ruleQType 
	 { $current=$iv_ruleQType.current; } 
	 EOF 
;

// Rule QType
ruleQType returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'bool' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getBoolKeyword_0_0(), null); 
    }

    |	'real' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getRealKeyword_0_1(), null); 
    }

    |	'bv' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getBvKeyword_0_2(), null); 
    }

    |(	'bv' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getBvKeyword_0_3_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getLeftCurlyBracketKeyword_0_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQTypeAccess().getTaUtyExprParserRuleCall_0_3_2_0(), currentNode); 
	    }
		lv_ta_5_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"ta",
	        		lv_ta_5_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getRightCurlyBracketKeyword_0_3_3(), null); 
    }
)
    |	'nat' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getNatKeyword_0_4(), null); 
    }

    |(	'nat' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getNatKeyword_0_5_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getLeftCurlyBracketKeyword_0_5_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQTypeAccess().getTbUtyExprParserRuleCall_0_5_2_0(), currentNode); 
	    }
		lv_tb_10_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"tb",
	        		lv_tb_10_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getRightCurlyBracketKeyword_0_5_3(), null); 
    }
)
    |	'int' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getIntKeyword_0_6(), null); 
    }

    |(	'int' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getIntKeyword_0_7_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getLeftCurlyBracketKeyword_0_7_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQTypeAccess().getTcUtyExprParserRuleCall_0_7_2_0(), currentNode); 
	    }
		lv_tc_15_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"tc",
	        		lv_tc_15_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getQTypeAccess().getRightCurlyBracketKeyword_0_7_3(), null); 
    }
))(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getQTypeAccess().getDimsDimListParserRuleCall_1_0(), currentNode); 
	    }
		lv_dims_17_0=ruleDimList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getQTypeRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"dims",
	        		lv_dims_17_0, 
	        		"DimList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?)
;







// Entry rule entryRuleDimList
entryRuleDimList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDimListRule(), currentNode); }
	 iv_ruleDimList=ruleDimList 
	 { $current=$iv_ruleDimList.current; } 
	 EOF 
;

// Rule DimList
ruleDimList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'[' 
    {
        createLeafNode(grammarAccess.getDimListAccess().getLeftSquareBracketKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getDimListAccess().getExprUtyExprParserRuleCall_1_0(), currentNode); 
	    }
		lv_expr_1_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getDimListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"expr",
	        		lv_expr_1_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getDimListAccess().getRightSquareBracketKeyword_2(), null); 
    }
)+
;





// Entry rule entryRuleInOutName
entryRuleInOutName returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInOutNameRule(), currentNode); }
	 iv_ruleInOutName=ruleInOutName 
	 { $current=$iv_ruleInOutName.current; } 
	 EOF 
;

// Rule InOutName
ruleInOutName returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'?' 
    {
        createLeafNode(grammarAccess.getInOutNameAccess().getQuestionMarkKeyword_0_0(), null); 
    }

    |	'!' 
    {
        createLeafNode(grammarAccess.getInOutNameAccess().getExclamationMarkKeyword_0_1(), null); 
    }
)?
    { 
        currentNode=createCompositeNode(grammarAccess.getInOutNameAccess().getQNameParserRuleCall_1(), currentNode); 
    }
    this_QName_2=ruleQName
    { 
        $current = $this_QName_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleInOutNameList
entryRuleInOutNameList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInOutNameListRule(), currentNode); }
	 iv_ruleInOutNameList=ruleInOutNameList 
	 { $current=$iv_ruleInOutNameList.current; } 
	 EOF 
;

// Rule InOutNameList
ruleInOutNameList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getInOutNameListAccess().getInOutNameParserRuleCall_0(), currentNode); 
    }
    this_InOutName_0=ruleInOutName
    { 
        $current = $this_InOutName_0.current; 
        currentNode = currentNode.getParent();
    }
(	',' 
    {
        createLeafNode(grammarAccess.getInOutNameListAccess().getCommaKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInOutNameListAccess().getNamesInOutNameParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_names_2_0=ruleInOutName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInOutNameListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"names",
	        		lv_names_2_0, 
	        		"InOutName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleInOutNameListComma
entryRuleInOutNameListComma returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInOutNameListCommaRule(), currentNode); }
	 iv_ruleInOutNameListComma=ruleInOutNameListComma 
	 { $current=$iv_ruleInOutNameListComma.current; } 
	 EOF 
;

// Rule InOutNameListComma
ruleInOutNameListComma returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInOutNameListCommaAccess().getNamesInOutNameParserRuleCall_0_0(), currentNode); 
	    }
		lv_names_0_0=ruleInOutName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInOutNameListCommaRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"names",
	        		lv_names_0_0, 
	        		"InOutName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	',' 
    {
        createLeafNode(grammarAccess.getInOutNameListCommaAccess().getCommaKeyword_1(), null); 
    }
)+
;





// Entry rule entryRuleInterface
entryRuleInterface returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInterfaceRule(), currentNode); }
	 iv_ruleInterface=ruleInterface 
	 { $current=$iv_ruleInterface.current; } 
	 EOF 
;

// Rule Interface
ruleInterface returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((((ruleStorage)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInterfaceAccess().getTypeQTypeParserRuleCall_0_0_1_0(), currentNode); 
	    }
		lv_type_1_0=ruleQType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_1_0, 
	        		"QType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |	'event' 
    {
        createLeafNode(grammarAccess.getInterfaceAccess().getEventKeyword_0_1(), null); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInterfaceAccess().getNamesInOutNameListParserRuleCall_1_0(), currentNode); 
	    }
		lv_names_3_0=ruleInOutNameList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"names",
	        		lv_names_3_0, 
	        		"InOutNameList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;







// Entry rule entryRuleInterfaceList
entryRuleInterfaceList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInterfaceListRule(), currentNode); }
	 iv_ruleInterfaceList=ruleInterfaceList 
	 { $current=$iv_ruleInterfaceList.current; } 
	 EOF 
;

// Rule InterfaceList
ruleInterfaceList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInterfaceListAccess().getIntfInterfaceParserRuleCall_0_0(), currentNode); 
	    }
		lv_intf_0_0=ruleInterface		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"intf",
	        		lv_intf_0_0, 
	        		"Interface", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getInterfaceListAccess().getCommaKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInterfaceListAccess().getInterfacesInterfaceParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_interfaces_2_0=ruleInterface		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInterfaceListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"interfaces",
	        		lv_interfaces_2_0, 
	        		"Interface", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;











// Entry rule entryRuleFixpointEqList
entryRuleFixpointEqList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getFixpointEqListRule(), currentNode); }
	 iv_ruleFixpointEqList=ruleFixpointEqList 
	 { $current=$iv_ruleFixpointEqList.current; } 
	 EOF 
;

// Rule FixpointEqList
ruleFixpointEqList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'mu' 
    {
        createLeafNode(grammarAccess.getFixpointEqListAccess().getMuKeyword_0_0(), null); 
    }

    |	'nu' 
    {
        createLeafNode(grammarAccess.getFixpointEqListAccess().getNuKeyword_0_1(), null); 
    }
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFixpointEqListAccess().getNameQNameParserRuleCall_1_0(), currentNode); 
	    }
		lv_name_2_0=ruleQName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixpointEqListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"QName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getFixpointEqListAccess().getEqualsSignKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getFixpointEqListAccess().getExprUtyExprParserRuleCall_3_0(), currentNode); 
	    }
		lv_expr_4_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getFixpointEqListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"expr",
	        		lv_expr_4_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getFixpointEqListAccess().getSemicolonKeyword_4(), null); 
    }
)*
;





// Entry rule entryRuleOptUtyExpr
entryRuleOptUtyExpr returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOptUtyExprRule(), currentNode); }
	 iv_ruleOptUtyExpr=ruleOptUtyExpr 
	 { $current=$iv_ruleOptUtyExpr.current; } 
	 EOF 
;

// Rule OptUtyExpr
ruleOptUtyExpr returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'_' 
    {
        createLeafNode(grammarAccess.getOptUtyExprAccess().get_Keyword_0(), null); 
    }

    |(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOptUtyExprAccess().getTkUtyExprParserRuleCall_1_0(), currentNode); 
	    }
		lv_tk_1_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOptUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"tk",
	        		lv_tk_1_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleOptUtyExprList
entryRuleOptUtyExprList returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getOptUtyExprListRule(), currentNode); }
	 iv_ruleOptUtyExprList=ruleOptUtyExprList 
	 { $current=$iv_ruleOptUtyExprList.current; } 
	 EOF 
;

// Rule OptUtyExprList
ruleOptUtyExprList returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getOptUtyExprListAccess().getOptUtyExprParserRuleCall_0(), currentNode); 
    }
    this_OptUtyExpr_0=ruleOptUtyExpr
    { 
        $current = $this_OptUtyExpr_0.current; 
        currentNode = currentNode.getParent();
    }
(	',' 
    {
        createLeafNode(grammarAccess.getOptUtyExprListAccess().getCommaKeyword_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getOptUtyExprListAccess().getExprsOptUtyExprParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_exprs_2_0=ruleOptUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getOptUtyExprListRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"exprs",
	        		lv_exprs_2_0, 
	        		"OptUtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)?
;







// Entry rule entryRuleUtyExpr
entryRuleUtyExpr returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUtyExprRule(), currentNode); }
	 iv_ruleUtyExpr=ruleUtyExpr 
	 { $current=$iv_ruleUtyExpr.current; } 
	 EOF 
;

// Rule UtyExpr
ruleUtyExpr returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'instant' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getInstantKeyword_0(), null); 
    }

    |	'inside' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getInsideKeyword_1(), null); 
    }

    |	'terminate' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getTerminateKeyword_2(), null); 
    }

    |	'true' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getTrueKeyword_3(), null); 
    }

    |	'false' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getFalseKeyword_4(), null); 
    }

    |RULE_BVCONST
    { 
    createLeafNode(grammarAccess.getUtyExprAccess().getBVCONSTTerminalRuleCall_5(), null); 
    }

    |RULE_OCTCONST
    { 
    createLeafNode(grammarAccess.getUtyExprAccess().getOCTCONSTTerminalRuleCall_6(), null); 
    }

    |RULE_HEXCONST
    { 
    createLeafNode(grammarAccess.getUtyExprAccess().getHEXCONSTTerminalRuleCall_7(), null); 
    }

    |RULE_NATCONST
    { 
    createLeafNode(grammarAccess.getUtyExprAccess().getNATCONSTTerminalRuleCall_8(), null); 
    }

    |RULE_REALCONST
    { 
    createLeafNode(grammarAccess.getUtyExprAccess().getREALCONSTTerminalRuleCall_9(), null); 
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getQNameParserRuleCall_10(), currentNode); 
    }
    this_QName_10=ruleQName
    { 
        $current = $this_QName_10.current; 
        currentNode = currentNode.getParent();
    }

    |((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getOpNOTParserRuleCall_11_0_0(), currentNode); 
	    }
		lv_op_11_0=ruleNOT		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"op",
	        		lv_op_11_0, 
	        		"NOT", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExprUtyExprParserRuleCall_11_1_0(), currentNode); 
	    }
		lv_expr_12_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_12_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'+' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getPlusSignKeyword_12_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_12_1(), currentNode); 
    }
    this_UtyExpr_14=ruleUtyExpr
    { 
        $current = $this_UtyExpr_14.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'-' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getHyphenMinusKeyword_13_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_13_1(), currentNode); 
    }
    this_UtyExpr_16=ruleUtyExpr
    { 
        $current = $this_UtyExpr_16.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'abs' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getAbsKeyword_14_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_14_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_14_2(), currentNode); 
    }
    this_UtyExpr_19=ruleUtyExpr
    { 
        $current = $this_UtyExpr_19.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_14_3(), null); 
    }
)
    |(	'sat' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getSatKeyword_15_0(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftCurlyBracketKeyword_15_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_15_2(), currentNode); 
    }
    this_UtyExpr_23=ruleUtyExpr
    { 
        $current = $this_UtyExpr_23.current; 
        currentNode = currentNode.getParent();
    }
	'}' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightCurlyBracketKeyword_15_3(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_15_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getT7UtyExprParserRuleCall_15_5_0(), currentNode); 
	    }
		lv_t7_26_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t7",
	        		lv_t7_26_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_15_6(), null); 
    }
)
    |(	'der' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getDerKeyword_16_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_16_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_16_2(), currentNode); 
    }
    this_UtyExpr_30=ruleUtyExpr
    { 
        $current = $this_UtyExpr_30.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_16_3(), null); 
    }
)
    |(	'reverse' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getReverseKeyword_17_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_17_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_17_2(), currentNode); 
    }
    this_UtyExpr_34=ruleUtyExpr
    { 
        $current = $this_UtyExpr_34.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_17_3(), null); 
    }
)
    |(	'{' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftCurlyBracketKeyword_18_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_18_1(), currentNode); 
    }
    this_UtyExpr_37=ruleUtyExpr
    { 
        $current = $this_UtyExpr_37.current; 
        currentNode = currentNode.getParent();
    }
	'::' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getColonColonKeyword_18_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExprUtyExprParserRuleCall_18_3_0(), currentNode); 
	    }
		lv_expr_39_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_39_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightCurlyBracketKeyword_18_4(), null); 
    }
)
    |(	'next' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getNextKeyword_19_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_19_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_19_2(), currentNode); 
    }
    this_UtyExpr_43=ruleUtyExpr
    { 
        $current = $this_UtyExpr_43.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_19_3(), null); 
    }
)
    |(	'nat2bv' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getNat2bvKeyword_20_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_20_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_20_2(), currentNode); 
    }
    this_UtyExpr_47=ruleUtyExpr
    { 
        $current = $this_UtyExpr_47.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_20_3(), null); 
    }
)
    |(	'int2bv' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getInt2bvKeyword_21_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_21_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_21_2(), currentNode); 
    }
    this_UtyExpr_51=ruleUtyExpr
    { 
        $current = $this_UtyExpr_51.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_21_3(), null); 
    }
)
    |(	'arr2bv' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getArr2bvKeyword_22_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_22_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getQNameParserRuleCall_22_2(), currentNode); 
    }
    this_QName_55=ruleQName
    { 
        $current = $this_QName_55.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_22_3(), null); 
    }
)
    |(	'tup2bv' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getTup2bvKeyword_23_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_23_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_23_2(), currentNode); 
    }
    this_UtyExpr_59=ruleUtyExpr
    { 
        $current = $this_UtyExpr_59.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_23_3(), null); 
    }
)
    |(	'bv2nat' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getBv2natKeyword_24_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_24_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_24_2(), currentNode); 
    }
    this_UtyExpr_63=ruleUtyExpr
    { 
        $current = $this_UtyExpr_63.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_24_3(), null); 
    }
)
    |(	'bv2int' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getBv2intKeyword_25_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_25_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_25_2(), currentNode); 
    }
    this_UtyExpr_67=ruleUtyExpr
    { 
        $current = $this_UtyExpr_67.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_25_3(), null); 
    }
)
    |(	'nat2real' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getNat2realKeyword_26_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_26_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_26_2(), currentNode); 
    }
    this_UtyExpr_71=ruleUtyExpr
    { 
        $current = $this_UtyExpr_71.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_26_3(), null); 
    }
)
    |(	'int2real' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getInt2realKeyword_27_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_27_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_27_2(), currentNode); 
    }
    this_UtyExpr_75=ruleUtyExpr
    { 
        $current = $this_UtyExpr_75.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_27_3(), null); 
    }
)
    |(	'sin' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getSinKeyword_28_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_28_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_28_2(), currentNode); 
    }
    this_UtyExpr_79=ruleUtyExpr
    { 
        $current = $this_UtyExpr_79.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_28_3(), null); 
    }
)
    |(	'cos' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getCosKeyword_29_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_29_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_29_2(), currentNode); 
    }
    this_UtyExpr_83=ruleUtyExpr
    { 
        $current = $this_UtyExpr_83.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_29_3(), null); 
    }
)
    |(	'exp' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getExpKeyword_30_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_30_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_30_2(), currentNode); 
    }
    this_UtyExpr_87=ruleUtyExpr
    { 
        $current = $this_UtyExpr_87.current; 
        currentNode = currentNode.getParent();
    }
	',' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getCommaKeyword_30_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExprUtyExprParserRuleCall_30_4_0(), currentNode); 
	    }
		lv_expr_89_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_89_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_30_5(), null); 
    }
)
    |(	'log' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLogKeyword_31_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_31_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_31_2(), currentNode); 
    }
    this_UtyExpr_93=ruleUtyExpr
    { 
        $current = $this_UtyExpr_93.current; 
        currentNode = currentNode.getParent();
    }
	',' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getCommaKeyword_31_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExprUtyExprParserRuleCall_31_4_0(), currentNode); 
	    }
		lv_expr_95_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_95_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_31_5(), null); 
    }
)
    |(	'sizeOf' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getSizeOfKeyword_32_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_32_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_32_2(), currentNode); 
    }
    this_UtyExpr_99=ruleUtyExpr
    { 
        $current = $this_UtyExpr_99.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_32_3(), null); 
    }
)
    |(	'forall' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getForallKeyword_33_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getGenericParserRuleCall_33_1(), currentNode); 
    }
    this_Generic_102=ruleGeneric
    { 
        $current = $this_Generic_102.current; 
        currentNode = currentNode.getParent();
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExprUtyExprParserRuleCall_33_2_0(), currentNode); 
	    }
		lv_expr_103_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_103_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'exists' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getExistsKeyword_34_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getGenericParserRuleCall_34_1(), currentNode); 
    }
    this_Generic_105=ruleGeneric
    { 
        $current = $this_Generic_105.current; 
        currentNode = currentNode.getParent();
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExprUtyExprParserRuleCall_34_2_0(), currentNode); 
	    }
		lv_expr_106_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_106_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'sum' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getSumKeyword_35_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getGenericParserRuleCall_35_1(), currentNode); 
    }
    this_Generic_108=ruleGeneric
    { 
        $current = $this_Generic_108.current; 
        currentNode = currentNode.getParent();
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExprUtyExprParserRuleCall_35_2_0(), currentNode); 
	    }
		lv_expr_109_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_109_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'X' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getXKeyword_36_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_36_1(), currentNode); 
    }
    this_UtyExpr_111=ruleUtyExpr
    { 
        $current = $this_UtyExpr_111.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'G' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getGKeyword_37_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_37_1(), currentNode); 
    }
    this_UtyExpr_113=ruleUtyExpr
    { 
        $current = $this_UtyExpr_113.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'F' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getFKeyword_38_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_38_1(), currentNode); 
    }
    this_UtyExpr_115=ruleUtyExpr
    { 
        $current = $this_UtyExpr_115.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'PA' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getPAKeyword_39_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_39_1(), currentNode); 
    }
    this_UtyExpr_117=ruleUtyExpr
    { 
        $current = $this_UtyExpr_117.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'PF' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getPFKeyword_40_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_40_1(), currentNode); 
    }
    this_UtyExpr_119=ruleUtyExpr
    { 
        $current = $this_UtyExpr_119.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'PSX' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getPSXKeyword_41_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_41_1(), currentNode); 
    }
    this_UtyExpr_121=ruleUtyExpr
    { 
        $current = $this_UtyExpr_121.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'PMX' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getPMXKeyword_42_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_42_1(), currentNode); 
    }
    this_UtyExpr_123=ruleUtyExpr
    { 
        $current = $this_UtyExpr_123.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'E' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getEKeyword_43_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_43_1(), currentNode); 
    }
    this_UtyExpr_125=ruleUtyExpr
    { 
        $current = $this_UtyExpr_125.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'A' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getAKeyword_44_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_44_1(), currentNode); 
    }
    this_UtyExpr_127=ruleUtyExpr
    { 
        $current = $this_UtyExpr_127.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'[]' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftSquareBracketRightSquareBracketKeyword_45_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_45_1(), currentNode); 
    }
    this_UtyExpr_129=ruleUtyExpr
    { 
        $current = $this_UtyExpr_129.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'<>' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLessThanSignGreaterThanSignKeyword_46_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_46_1(), currentNode); 
    }
    this_UtyExpr_131=ruleUtyExpr
    { 
        $current = $this_UtyExpr_131.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'[:]' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftSquareBracketColonRightSquareBracketKeyword_47_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_47_1(), currentNode); 
    }
    this_UtyExpr_133=ruleUtyExpr
    { 
        $current = $this_UtyExpr_133.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'<:>' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLessThanSignColonGreaterThanSignKeyword_48_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_48_1(), currentNode); 
    }
    this_UtyExpr_135=ruleUtyExpr
    { 
        $current = $this_UtyExpr_135.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'mu' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getMuKeyword_49_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getNameQNameParserRuleCall_49_1_0(), currentNode); 
	    }
		lv_name_137_0=ruleQName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_137_0, 
	        		"QName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'.' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getFullStopKeyword_49_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExprUtyExprParserRuleCall_49_3_0(), currentNode); 
	    }
		lv_expr_139_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_139_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'nu' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getNuKeyword_50_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getNameQNameParserRuleCall_50_1_0(), currentNode); 
	    }
		lv_name_141_0=ruleQName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_141_0, 
	        		"QName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'.' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getFullStopKeyword_50_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExprUtyExprParserRuleCall_50_3_0(), currentNode); 
	    }
		lv_expr_143_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_143_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'fixpoints' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getFixpointsKeyword_51_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getFixpointEqListParserRuleCall_51_1(), currentNode); 
    }
    this_FixpointEqList_145=ruleFixpointEqList
    { 
        $current = $this_FixpointEqList_145.current; 
        currentNode = currentNode.getParent();
    }
	'in' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getInKeyword_51_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExpr2UtyExprParserRuleCall_51_3_0(), currentNode); 
	    }
		lv_expr2_147_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr2",
	        		lv_expr2_147_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'forall' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getForallKeyword_52_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getNameQNameParserRuleCall_52_1_0(), currentNode); 
	    }
		lv_name_149_0=ruleQName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_149_0, 
	        		"QName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getColonKeyword_52_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getTypeQTypeParserRuleCall_52_3_0(), currentNode); 
	    }
		lv_type_151_0=ruleQType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_151_0, 
	        		"QType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'.' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getFullStopKeyword_52_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExprUtyExprParserRuleCall_52_5_0(), currentNode); 
	    }
		lv_expr_153_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_153_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'exists' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getExistsKeyword_53_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getNameQNameParserRuleCall_53_1_0(), currentNode); 
	    }
		lv_name_155_0=ruleQName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_155_0, 
	        		"QName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getColonKeyword_53_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getTypeQTypeParserRuleCall_53_3_0(), currentNode); 
	    }
		lv_type_157_0=ruleQType		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_157_0, 
	        		"QType", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'.' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getFullStopKeyword_53_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getExprUtyExprParserRuleCall_53_5_0(), currentNode); 
	    }
		lv_expr_159_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyExprRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_159_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'(' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getLeftParenthesisKeyword_54_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyExprAccess().getUtyExprParserRuleCall_54_1(), currentNode); 
    }
    this_UtyExpr_161=ruleUtyExpr
    { 
        $current = $this_UtyExpr_161.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyExprAccess().getRightParenthesisKeyword_54_2(), null); 
    }
))
;





// Entry rule entryRuleUtyAction
entryRuleUtyAction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getUtyActionRule(), currentNode); }
	 iv_ruleUtyAction=ruleUtyAction 
	 { $current=$iv_ruleUtyAction.current; } 
	 EOF 
;

// Rule UtyAction
ruleUtyAction returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'emit' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getEmitKeyword_0_0(), null); 
    }
(	'next' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getNextKeyword_0_1(), null); 
    }
)?	'(' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getLeftParenthesisKeyword_0_2(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyActionAccess().getUtyExprParserRuleCall_0_3(), currentNode); 
    }
    this_UtyExpr_3=ruleUtyExpr
    { 
        $current = $this_UtyExpr_3.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getRightParenthesisKeyword_0_4(), null); 
    }
)
    |(	'next' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getNextKeyword_1_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getLeftParenthesisKeyword_1_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyActionAccess().getUtyExprParserRuleCall_1_2(), currentNode); 
    }
    this_UtyExpr_7=ruleUtyExpr
    { 
        $current = $this_UtyExpr_7.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getRightParenthesisKeyword_1_3(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getEqualsSignKeyword_1_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyActionAccess().getT2UtyExprParserRuleCall_1_5_0(), currentNode); 
	    }
		lv_t2_10_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t2",
	        		lv_t2_10_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'der' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getDerKeyword_2_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getLeftParenthesisKeyword_2_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyActionAccess().getUtyExprParserRuleCall_2_2(), currentNode); 
    }
    this_UtyExpr_13=ruleUtyExpr
    { 
        $current = $this_UtyExpr_13.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getRightParenthesisKeyword_2_3(), null); 
    }
	'<-' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getLessThanSignHyphenMinusKeyword_2_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getUtyActionAccess().getT4UtyExprParserRuleCall_2_5_0(), currentNode); 
	    }
		lv_t4_16_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getUtyActionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t4",
	        		lv_t4_16_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'assume' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getAssumeKeyword_3_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getLeftParenthesisKeyword_3_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyActionAccess().getUtyExprParserRuleCall_3_2(), currentNode); 
    }
    this_UtyExpr_19=ruleUtyExpr
    { 
        $current = $this_UtyExpr_19.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getRightParenthesisKeyword_3_3(), null); 
    }
)
    |(	'assert' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getAssertKeyword_4_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getLeftParenthesisKeyword_4_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getUtyActionAccess().getUtyExprParserRuleCall_4_2(), currentNode); 
    }
    this_UtyExpr_23=ruleUtyExpr
    { 
        $current = $this_UtyExpr_23.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getUtyActionAccess().getRightParenthesisKeyword_4_3(), null); 
    }
))
;





// Entry rule entryRulecase_list
entryRulecase_list returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getCase_listRule(), currentNode); }
	 iv_rulecase_list=rulecase_list 
	 { $current=$iv_rulecase_list.current; } 
	 EOF 
;

// Rule case_list
rulecase_list returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCase_listAccess().getExpDUtyExprParserRuleCall_0_0(), currentNode); 
	    }
		lv_exp_0_0=ruledUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCase_listRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"exp",
	        		lv_exp_0_0, 
	        		"dUtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'do' 
    {
        createLeafNode(grammarAccess.getCase_listAccess().getDoKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getCase_listAccess().getStmtStmtParserRuleCall_2_0(), currentNode); 
	    }
		lv_stmt_2_0=ruleStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getCase_listRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"stmt",
	        		lv_stmt_2_0, 
	        		"Stmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*
;





// Entry rule entryRuledUtyExpr
entryRuledUtyExpr returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDUtyExprRule(), currentNode); }
	 iv_ruledUtyExpr=ruledUtyExpr 
	 { $current=$iv_ruledUtyExpr.current; } 
	 EOF 
;

// Rule dUtyExpr
ruledUtyExpr returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'(' 
    {
        createLeafNode(grammarAccess.getDUtyExprAccess().getLeftParenthesisKeyword_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getDUtyExprAccess().getUtyExprParserRuleCall_1(), currentNode); 
    }
    this_UtyExpr_1=ruleUtyExpr
    { 
        $current = $this_UtyExpr_1.current; 
        currentNode = currentNode.getParent();
    }
	')' 
    {
        createLeafNode(grammarAccess.getDUtyExprAccess().getRightParenthesisKeyword_2(), null); 
    }
)
;





// Entry rule entryRuledUtyExprs
entryRuledUtyExprs returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getDUtyExprsRule(), currentNode); }
	 iv_ruledUtyExprs=ruledUtyExprs 
	 { $current=$iv_ruledUtyExprs.current; } 
	 EOF 
;

// Rule dUtyExprs
ruledUtyExprs returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getDUtyExprsAccess().getDUtyExprParserRuleCall_0(), currentNode); 
    }
    this_dUtyExpr_0=ruledUtyExpr
    { 
        $current = $this_dUtyExpr_0.current; 
        currentNode = currentNode.getParent();
    }
	';' 
    {
        createLeafNode(grammarAccess.getDUtyExprsAccess().getSemicolonKeyword_1(), null); 
    }
)
;





// Entry rule entryRuleGeneric
entryRuleGeneric returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getGenericRule(), currentNode); }
	 iv_ruleGeneric=ruleGeneric 
	 { $current=$iv_ruleGeneric.current; } 
	 EOF 
;

// Rule Generic
ruleGeneric returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'(' 
    {
        createLeafNode(grammarAccess.getGenericAccess().getLeftParenthesisKeyword_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getGenericAccess().getQNameParserRuleCall_1(), currentNode); 
    }
    this_QName_1=ruleQName
    { 
        $current = $this_QName_1.current; 
        currentNode = currentNode.getParent();
    }
	'=' 
    {
        createLeafNode(grammarAccess.getGenericAccess().getEqualsSignKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGenericAccess().getT6UtyExprParserRuleCall_3_0(), currentNode); 
	    }
		lv_t6_3_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGenericRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t6",
	        		lv_t6_3_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'..' 
    {
        createLeafNode(grammarAccess.getGenericAccess().getFullStopFullStopKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getGenericAccess().getT5UtyExprParserRuleCall_5_0(), currentNode); 
	    }
		lv_t5_5_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getGenericRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t5",
	        		lv_t5_5_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getGenericAccess().getRightParenthesisKeyword_6(), null); 
    }
)
;





// Entry rule entryRuleLocStmt
entryRuleLocStmt returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLocStmtRule(), currentNode); }
	 iv_ruleLocStmt=ruleLocStmt 
	 { $current=$iv_ruleLocStmt.current; } 
	 EOF 
;

// Rule LocStmt
ruleLocStmt returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'{' 
    {
        createLeafNode(grammarAccess.getLocStmtAccess().getLeftCurlyBracketKeyword_0(), null); 
    }
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLocStmtAccess().getLocalsInterfaceListParserRuleCall_1_0_0(), currentNode); 
	    }
		lv_locals_1_0=ruleInterfaceList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLocStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"locals",
	        		lv_locals_1_0, 
	        		"InterfaceList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getLocStmtAccess().getSemicolonKeyword_1_1(), null); 
    }
)*(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLocStmtAccess().getStmtStmtParserRuleCall_2_0(), currentNode); 
	    }
		lv_stmt_3_0=ruleStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLocStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"stmt",
	        		lv_stmt_3_0, 
	        		"Stmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getLocStmtAccess().getRightCurlyBracketKeyword_3(), null); 
    }
)
;





// Entry rule entryRuleSeqStmt
entryRuleSeqStmt returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSeqStmtRule(), currentNode); }
	 iv_ruleSeqStmt=ruleSeqStmt 
	 { $current=$iv_ruleSeqStmt.current; } 
	 EOF 
;

// Rule SeqStmt
ruleSeqStmt returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSeqStmtAccess().getSAtomicStmtParserRuleCall_0(), currentNode); 
	    }
		lv_s_0_0=ruleAtomicStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSeqStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"s",
	        		lv_s_0_0, 
	        		"AtomicStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)+
;





// Entry rule entryRuleStmt
entryRuleStmt returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStmtRule(), currentNode); }
	 iv_ruleStmt=ruleStmt 
	 { $current=$iv_ruleStmt.current; } 
	 EOF 
;

// Rule Stmt
ruleStmt returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStmtAccess().getLeftSeqStmtParserRuleCall_0_0(), currentNode); 
	    }
		lv_left_0_0=ruleSeqStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"left",
	        		lv_left_0_0, 
	        		"SeqStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((	'||' 
    {
        createLeafNode(grammarAccess.getStmtAccess().getVerticalLineVerticalLineKeyword_1_0_0(), null); 
    }

    |	'|||' 
    {
        createLeafNode(grammarAccess.getStmtAccess().getVerticalLineVerticalLineVerticalLineKeyword_1_0_1(), null); 
    }

    |ruleOR
    |	'&&' 
    {
        createLeafNode(grammarAccess.getStmtAccess().getAmpersandAmpersandKeyword_1_0_3(), null); 
    }

    |	'&&&' 
    {
        createLeafNode(grammarAccess.getStmtAccess().getAmpersandAmpersandAmpersandKeyword_1_0_4(), null); 
    }

    |ruleAND)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStmtAccess().getRightSeqStmtParserRuleCall_1_1_0(), currentNode); 
	    }
		lv_right_7_0=ruleSeqStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"right",
	        		lv_right_7_0, 
	        		"SeqStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*)
;





// Entry rule entryRuleAtomicStmt
entryRuleAtomicStmt returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAtomicStmtRule(), currentNode); }
	 iv_ruleAtomicStmt=ruleAtomicStmt 
	 { $current=$iv_ruleAtomicStmt.current; } 
	 EOF 
;

// Rule AtomicStmt
ruleAtomicStmt returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'nothing' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getNothingKeyword_0_0(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getSemicolonKeyword_0_1(), null); 
    }
)
    |(
    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getUtyActionParserRuleCall_1_0(), currentNode); 
    }
    this_UtyAction_2=ruleUtyAction
    { 
        $current = $this_UtyAction_2.current; 
        currentNode = currentNode.getParent();
    }
	';' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getSemicolonKeyword_1_1(), null); 
    }
)
    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getNamedStmtParserRuleCall_2(), currentNode); 
    }
    this_NamedStmt_4=ruleNamedStmt
    { 
        $current = $this_NamedStmt_4.current; 
        currentNode = currentNode.getParent();
    }

    |((	'weak' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getWeakKeyword_3_0(), null); 
    }
)?(	'immediate' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getImmediateKeyword_3_1(), null); 
    }
)?	'abort' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getAbortKeyword_3_2(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getAtomicStmtParserRuleCall_3_3(), currentNode); 
    }
    this_AtomicStmt_8=ruleAtomicStmt
    { 
        $current = $this_AtomicStmt_8.current; 
        currentNode = currentNode.getParent();
    }
	'when' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getWhenKeyword_3_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getExprDUtyExprsParserRuleCall_3_5_0(), currentNode); 
	    }
		lv_expr_10_0=ruledUtyExprs		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAtomicStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_10_0, 
	        		"dUtyExprs", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |((	'immediate' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getImmediateKeyword_4_0(), null); 
    }
)?(	'during' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getDuringKeyword_4_1_0(), null); 
    }

    |	'final' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getFinalKeyword_4_1_1(), null); 
    }
)
    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getAtomicStmtParserRuleCall_4_2(), currentNode); 
    }
    this_AtomicStmt_14=ruleAtomicStmt
    { 
        $current = $this_AtomicStmt_14.current; 
        currentNode = currentNode.getParent();
    }
	'do' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getDoKeyword_4_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getT03AtomicStmtParserRuleCall_4_4_0(), currentNode); 
	    }
		lv_t03_16_0=ruleAtomicStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAtomicStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t03",
	        		lv_t03_16_0, 
	        		"AtomicStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'abstract' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getAbstractKeyword_5_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getAtomicStmtParserRuleCall_5_1(), currentNode); 
    }
    this_AtomicStmt_18=ruleAtomicStmt
    { 
        $current = $this_AtomicStmt_18.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'case' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getCaseKeyword_6_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getCase_listParserRuleCall_6_1(), currentNode); 
    }
    this_case_list_20=rulecase_list
    { 
        $current = $this_case_list_20.current; 
        currentNode = currentNode.getParent();
    }
	'default' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getDefaultKeyword_6_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getT15AtomicStmtParserRuleCall_6_3_0(), currentNode); 
	    }
		lv_t15_22_0=ruleAtomicStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAtomicStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t15",
	        		lv_t15_22_0, 
	        		"AtomicStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'choose' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getChooseKeyword_7_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getGenericParserRuleCall_7_1(), currentNode); 
    }
    this_Generic_24=ruleGeneric
    { 
        $current = $this_Generic_24.current; 
        currentNode = currentNode.getParent();
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getT23AtomicStmtParserRuleCall_7_2_0(), currentNode); 
	    }
		lv_t23_25_0=ruleAtomicStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAtomicStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t23",
	        		lv_t23_25_0, 
	        		"AtomicStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'do' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getDoKeyword_8_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getAtomicStmtParserRuleCall_8_1(), currentNode); 
    }
    this_AtomicStmt_27=ruleAtomicStmt
    { 
        $current = $this_AtomicStmt_27.current; 
        currentNode = currentNode.getParent();
    }
	'while' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getWhileKeyword_8_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getT06DUtyExprsParserRuleCall_8_3_0(), currentNode); 
	    }
		lv_t06_29_0=ruledUtyExprs		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAtomicStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t06",
	        		lv_t06_29_0, 
	        		"dUtyExprs", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'for' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getForKeyword_9_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getGenericParserRuleCall_9_1(), currentNode); 
    }
    this_Generic_31=ruleGeneric
    { 
        $current = $this_Generic_31.current; 
        currentNode = currentNode.getParent();
    }
(	'do' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getDoKeyword_9_2_0(), null); 
    }
(	'||' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getVerticalLineVerticalLineKeyword_9_2_1_0(), null); 
    }

    |	'&&' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getAmpersandAmpersandKeyword_9_2_1_1(), null); 
    }

    |	'|||' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getVerticalLineVerticalLineVerticalLineKeyword_9_2_1_2(), null); 
    }

    |	'&&&' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getAmpersandAmpersandAmpersandKeyword_9_2_1_3(), null); 
    }

    |ruleOR
    |ruleAND))?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getTAtomicStmtParserRuleCall_9_3_0(), currentNode); 
	    }
		lv_t_39_0=ruleAtomicStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAtomicStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t",
	        		lv_t_39_0, 
	        		"AtomicStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'if' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getIfKeyword_10_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getDUtyExprParserRuleCall_10_1(), currentNode); 
    }
    this_dUtyExpr_41=ruledUtyExpr
    { 
        $current = $this_dUtyExpr_41.current; 
        currentNode = currentNode.getParent();
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getT13AtomicStmtParserRuleCall_10_2_0(), currentNode); 
	    }
		lv_t13_42_0=ruleAtomicStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAtomicStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t13",
	        		lv_t13_42_0, 
	        		"AtomicStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'else' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getElseKeyword_10_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getT14AtomicStmtParserRuleCall_10_4_0(), currentNode); 
	    }
		lv_t14_44_0=ruleAtomicStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAtomicStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t14",
	        		lv_t14_44_0, 
	        		"AtomicStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'let' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getLetKeyword_11_0(), null); 
    }
	'(' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getLeftParenthesisKeyword_11_1(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getQNameParserRuleCall_11_2(), currentNode); 
    }
    this_QName_47=ruleQName
    { 
        $current = $this_QName_47.current; 
        currentNode = currentNode.getParent();
    }
	'=' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getEqualsSignKeyword_11_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getExprUtyExprParserRuleCall_11_4_0(), currentNode); 
	    }
		lv_expr_49_0=ruleUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAtomicStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_49_0, 
	        		"UtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getRightParenthesisKeyword_11_5(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getT24AtomicStmtParserRuleCall_11_6_0(), currentNode); 
	    }
		lv_t24_51_0=ruleAtomicStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAtomicStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t24",
	        		lv_t24_51_0, 
	        		"AtomicStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |(	'loop' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getLoopKeyword_12_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getAtomicStmtParserRuleCall_12_1(), currentNode); 
    }
    this_AtomicStmt_53=ruleAtomicStmt
    { 
        $current = $this_AtomicStmt_53.current; 
        currentNode = currentNode.getParent();
    }
)
    |(	'while' 
    {
        createLeafNode(grammarAccess.getAtomicStmtAccess().getWhileKeyword_13_0(), null); 
    }

    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getDUtyExprParserRuleCall_13_1(), currentNode); 
    }
    this_dUtyExpr_55=ruledUtyExpr
    { 
        $current = $this_dUtyExpr_55.current; 
        currentNode = currentNode.getParent();
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getT07AtomicStmtParserRuleCall_13_2_0(), currentNode); 
	    }
		lv_t07_56_0=ruleAtomicStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAtomicStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t07",
	        		lv_t07_56_0, 
	        		"AtomicStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
    |
    { 
        currentNode=createCompositeNode(grammarAccess.getAtomicStmtAccess().getLocStmtParserRuleCall_14(), currentNode); 
    }
    this_LocStmt_57=ruleLocStmt
    { 
        $current = $this_LocStmt_57.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleNamedStmt
entryRuleNamedStmt returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNamedStmtRule(), currentNode); }
	 iv_ruleNamedStmt=ruleNamedStmt 
	 { $current=$iv_ruleNamedStmt.current; } 
	 EOF 
;

// Rule NamedStmt
ruleNamedStmt returns [EObject current=null] 
    @init { @SuppressWarnings("unused") EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(((
    { 
        currentNode=createCompositeNode(grammarAccess.getNamedStmtAccess().getQNameParserRuleCall_0_0_0(), currentNode); 
    }
    this_QName_0=ruleQName
    { 
        $current = $this_QName_0.current; 
        currentNode = currentNode.getParent();
    }
	':' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getColonKeyword_0_0_1(), null); 
    }
)?	'pause' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getPauseKeyword_0_1(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getSemicolonKeyword_0_2(), null); 
    }
)
    |((
    { 
        currentNode=createCompositeNode(grammarAccess.getNamedStmtAccess().getQNameParserRuleCall_1_0_0(), currentNode); 
    }
    this_QName_4=ruleQName
    { 
        $current = $this_QName_4.current; 
        currentNode = currentNode.getParent();
    }
	':' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getColonKeyword_1_0_1(), null); 
    }
)?	'halt' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getHaltKeyword_1_1(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getSemicolonKeyword_1_2(), null); 
    }
)
    |(
    { 
        currentNode=createCompositeNode(grammarAccess.getNamedStmtAccess().getQNameParserRuleCall_2_0(), currentNode); 
    }
    this_QName_8=ruleQName
    { 
        $current = $this_QName_8.current; 
        currentNode = currentNode.getParent();
    }
	':' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getColonKeyword_2_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNamedStmtAccess().getNameQNameParserRuleCall_2_2_0(), currentNode); 
	    }
		lv_name_10_0=ruleQName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamedStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_10_0, 
	        		"QName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'(' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getLeftParenthesisKeyword_2_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNamedStmtAccess().getExprsOptUtyExprListParserRuleCall_2_4_0(), currentNode); 
	    }
		lv_exprs_12_0=ruleOptUtyExprList		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamedStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"exprs",
	        		lv_exprs_12_0, 
	        		"OptUtyExprList", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	')' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getRightParenthesisKeyword_2_5(), null); 
    }
	';' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getSemicolonKeyword_2_6(), null); 
    }
)
    |((
    { 
        currentNode=createCompositeNode(grammarAccess.getNamedStmtAccess().getQNameParserRuleCall_3_0_0(), currentNode); 
    }
    this_QName_15=ruleQName
    { 
        $current = $this_QName_15.current; 
        currentNode = currentNode.getParent();
    }
	',' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getCommaKeyword_3_0_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNamedStmtAccess().getNameQNameParserRuleCall_3_0_2_0(), currentNode); 
	    }
		lv_name_17_0=ruleQName		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamedStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_17_0, 
	        		"QName", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	':' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getColonKeyword_3_0_3(), null); 
    }
)?	'every' 
    {
        createLeafNode(grammarAccess.getNamedStmtAccess().getEveryKeyword_3_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNamedStmtAccess().getExprDUtyExprParserRuleCall_3_2_0(), currentNode); 
	    }
		lv_expr_20_0=ruledUtyExpr		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamedStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"expr",
	        		lv_expr_20_0, 
	        		"dUtyExpr", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNamedStmtAccess().getT10AtomicStmtParserRuleCall_3_3_0(), currentNode); 
	    }
		lv_t10_21_0=ruleAtomicStmt		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNamedStmtRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"t10",
	        		lv_t10_21_0, 
	        		"AtomicStmt", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)))
;





// Entry rule entryRuleNOT
entryRuleNOT returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNOTRule(), currentNode); } 
	 iv_ruleNOT=ruleNOT 
	 { $current=$iv_ruleNOT.current.getText(); }  
	 EOF 
;

// Rule NOT
ruleNOT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='!' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getNOTAccess().getExclamationMarkKeyword_0(), null); 
    }

    |
	kw='not' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getNOTAccess().getNotKeyword_1(), null); 
    }
)
    ;





// Entry rule entryRuleAND
entryRuleAND returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getANDRule(), currentNode); } 
	 iv_ruleAND=ruleAND 
	 { $current=$iv_ruleAND.current.getText(); }  
	 EOF 
;

// Rule AND
ruleAND returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='&' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getANDAccess().getAmpersandKeyword_0(), null); 
    }

    |
	kw='and' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getANDAccess().getAndKeyword_1(), null); 
    }
)
    ;







// Entry rule entryRuleOR
entryRuleOR returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getORRule(), currentNode); } 
	 iv_ruleOR=ruleOR 
	 { $current=$iv_ruleOR.current.getText(); }  
	 EOF 
;

// Rule OR
ruleOR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
	kw='|' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getORAccess().getVerticalLineKeyword_0(), null); 
    }

    |
	kw='or' 
    {
        $current.merge(kw);
        createLeafNode(grammarAccess.getORAccess().getOrKeyword_1(), null); 
    }
)
    ;









RULE_BVCONST : '0b';

RULE_OCTCONST : '0o' ('0'..'7')+;

RULE_HEXCONST : '0x' ('0'..'9'|'A'..'F')+;

RULE_NATCONST : ('0'..'9')*;

RULE_REALCONST : ('+'|'-')? ('0'..'9')+ '.' ('0'..'9')+ ('e' ('+'|'-')? ('0'..'9')+)?;

RULE_ID : ('a'..'z'|'A'..'Z') ('_'? ('a'..'z'|'A'..'Z'|'0'..'9'))*;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;


