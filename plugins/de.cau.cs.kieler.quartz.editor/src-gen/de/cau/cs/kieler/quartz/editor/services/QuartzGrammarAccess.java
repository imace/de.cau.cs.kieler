/*
* generated by Xtext
*/

package de.cau.cs.kieler.quartz.editor.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;


@Singleton
public class QuartzGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class QrzFileElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QrzFile");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPackagePathParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Assignment cImportsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImportsImportListParserRuleCall_1_0 = (RuleCall)cImportsAssignment_1.eContents().get(0);
		private final Assignment cMacrosAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMacrosMacroDefParserRuleCall_2_0 = (RuleCall)cMacrosAssignment_2.eContents().get(0);
		private final Assignment cModuleAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cModuleQModuleParserRuleCall_3_0 = (RuleCall)cModuleAssignment_3.eContents().get(0);
		
		//QrzFile:
		//  PackagePath? imports=ImportList? macros+=MacroDef* module=QModule;
		public ParserRule getRule() { return rule; }

		//PackagePath? imports=ImportList? macros+=MacroDef* module=QModule
		public Group getGroup() { return cGroup; }

		//PackagePath?
		public RuleCall getPackagePathParserRuleCall_0() { return cPackagePathParserRuleCall_0; }

		//imports=ImportList?
		public Assignment getImportsAssignment_1() { return cImportsAssignment_1; }

		//ImportList
		public RuleCall getImportsImportListParserRuleCall_1_0() { return cImportsImportListParserRuleCall_1_0; }

		//macros+=MacroDef*
		public Assignment getMacrosAssignment_2() { return cMacrosAssignment_2; }

		//MacroDef
		public RuleCall getMacrosMacroDefParserRuleCall_2_0() { return cMacrosMacroDefParserRuleCall_2_0; }

		//module=QModule
		public Assignment getModuleAssignment_3() { return cModuleAssignment_3; }

		//QModule
		public RuleCall getModuleQModuleParserRuleCall_3_0() { return cModuleQModuleParserRuleCall_3_0; }
	}

	public class PackagePathElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PackagePath");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cPackageKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cPointedNameParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//PackagePath:
		//  "package" PointedName ";";
		public ParserRule getRule() { return rule; }

		//"package" PointedName ";"
		public Group getGroup() { return cGroup; }

		//"package"
		public Keyword getPackageKeyword_0() { return cPackageKeyword_0; }

		//PointedName
		public RuleCall getPointedNameParserRuleCall_1() { return cPointedNameParserRuleCall_1; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class ImportListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ImportList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cImportKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cImpAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cImpPointedNameParserRuleCall_1_0 = (RuleCall)cImpAssignment_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ImportList:
		//  ("import" imp+=PointedName ";")+;
		public ParserRule getRule() { return rule; }

		//("import" imp+=PointedName ";")+
		public Group getGroup() { return cGroup; }

		//"import"
		public Keyword getImportKeyword_0() { return cImportKeyword_0; }

		//imp+=PointedName
		public Assignment getImpAssignment_1() { return cImpAssignment_1; }

		//PointedName
		public RuleCall getImpPointedNameParserRuleCall_1_0() { return cImpPointedNameParserRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }
	}

	public class PointedNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "PointedName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdIDTerminalRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cFullStopKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNamePointedNameParserRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Assignment cAllAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final Keyword cAllFullStopAsteriskKeyword_2_0 = (Keyword)cAllAssignment_2.eContents().get(0);
		
		//PointedName:
		//  id=ID ("." name+=PointedName)* all?=".*";
		public ParserRule getRule() { return rule; }

		//id=ID ("." name+=PointedName)* all?=".*"
		public Group getGroup() { return cGroup; }

		//id=ID
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_0_0() { return cIdIDTerminalRuleCall_0_0; }

		//("." name+=PointedName)*
		public Group getGroup_1() { return cGroup_1; }

		//"."
		public Keyword getFullStopKeyword_1_0() { return cFullStopKeyword_1_0; }

		//name+=PointedName
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//PointedName
		public RuleCall getNamePointedNameParserRuleCall_1_1_0() { return cNamePointedNameParserRuleCall_1_1_0; }

		//all?=".*"
		public Assignment getAllAssignment_2() { return cAllAssignment_2; }

		//".*"
		public Keyword getAllFullStopAsteriskKeyword_2_0() { return cAllFullStopAsteriskKeyword_2_0; }
	}

	public class MacroDefElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MacroDef");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cMacroKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Assignment cNameAssignment_0_1 = (Assignment)cGroup_0.eContents().get(1);
		private final RuleCall cNameQNameParserRuleCall_0_1_0 = (RuleCall)cNameAssignment_0_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Assignment cArgsAssignment_0_3 = (Assignment)cGroup_0.eContents().get(3);
		private final RuleCall cArgsQNameListParserRuleCall_0_3_0 = (RuleCall)cArgsAssignment_0_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Keyword cEqualsSignKeyword_0_5 = (Keyword)cGroup_0.eContents().get(5);
		private final Assignment cExprAssignment_0_6 = (Assignment)cGroup_0.eContents().get(6);
		private final RuleCall cExprUtyExprParserRuleCall_0_6_0 = (RuleCall)cExprAssignment_0_6.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_7 = (Keyword)cGroup_0.eContents().get(7);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cMacroKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNameAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNameQNameParserRuleCall_1_1_0 = (RuleCall)cNameAssignment_1_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Keyword cEqualsSignKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cExprAssignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cExprUtyExprParserRuleCall_1_5_0 = (RuleCall)cExprAssignment_1_5.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_6 = (Keyword)cGroup_1.eContents().get(6);
		
		//MacroDef:
		//  "macro" name=QName "(" args=QNameList ")" "=" expr=UtyExpr ";"|"macro" name=QName "(" ")"
		//  "=" expr=UtyExpr ";";
		public ParserRule getRule() { return rule; }

		//"macro" name=QName "(" args=QNameList ")" "=" expr=UtyExpr ";"|"macro" name=QName "(" ")"
		//"=" expr=UtyExpr ";"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"macro" name=QName "(" args=QNameList ")" "=" expr=UtyExpr ";"
		public Group getGroup_0() { return cGroup_0; }

		//"macro"
		public Keyword getMacroKeyword_0_0() { return cMacroKeyword_0_0; }

		//name=QName
		public Assignment getNameAssignment_0_1() { return cNameAssignment_0_1; }

		//QName
		public RuleCall getNameQNameParserRuleCall_0_1_0() { return cNameQNameParserRuleCall_0_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }

		//args=QNameList
		public Assignment getArgsAssignment_0_3() { return cArgsAssignment_0_3; }

		//QNameList
		public RuleCall getArgsQNameListParserRuleCall_0_3_0() { return cArgsQNameListParserRuleCall_0_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }

		//"="
		public Keyword getEqualsSignKeyword_0_5() { return cEqualsSignKeyword_0_5; }

		//expr=UtyExpr
		public Assignment getExprAssignment_0_6() { return cExprAssignment_0_6; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_0_6_0() { return cExprUtyExprParserRuleCall_0_6_0; }

		//";"
		public Keyword getSemicolonKeyword_0_7() { return cSemicolonKeyword_0_7; }

		//"macro" name=QName "(" ")" "=" expr=UtyExpr ";"
		public Group getGroup_1() { return cGroup_1; }

		//"macro"
		public Keyword getMacroKeyword_1_0() { return cMacroKeyword_1_0; }

		//name=QName
		public Assignment getNameAssignment_1_1() { return cNameAssignment_1_1; }

		//QName
		public RuleCall getNameQNameParserRuleCall_1_1_0() { return cNameQNameParserRuleCall_1_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_2() { return cLeftParenthesisKeyword_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }

		//"="
		public Keyword getEqualsSignKeyword_1_4() { return cEqualsSignKeyword_1_4; }

		//expr=UtyExpr
		public Assignment getExprAssignment_1_5() { return cExprAssignment_1_5; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_1_5_0() { return cExprUtyExprParserRuleCall_1_5_0; }

		//";"
		public Keyword getSemicolonKeyword_1_6() { return cSemicolonKeyword_1_6; }
	}

	public class QModuleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QModule");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cModuleKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIntfAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIntfInterfaceListParserRuleCall_3_0 = (RuleCall)cIntfAssignment_3.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cStmtAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cStmtLocStmtParserRuleCall_5_0 = (RuleCall)cStmtAssignment_5.eContents().get(0);
		
		//QModule:
		//  "module" name=Name "(" intf=InterfaceList ")" stmt=LocStmt?; 
		//
		//              // obs+=ObservedSpecList*;
		//
		////ObservedSpecList : //"satisfies" "{" "observer" "(" InterfaceList ")" "{" stmts=LocStmt "}" proofs=ProofGoalList "}" 
		//                  //| "satisfies" "{" "observer" "(" InterfaceList ")" "{" stmts=LocStmt "}" "}" 
		//                 // | 
		//                 //"satisfies" "{" ProofGoalList "}" ;
		public ParserRule getRule() { return rule; }

		//"module" name=Name "(" intf=InterfaceList ")" stmt=LocStmt?
		public Group getGroup() { return cGroup; }

		//"module"
		public Keyword getModuleKeyword_0() { return cModuleKeyword_0; }

		//name=Name
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//Name
		public RuleCall getNameNameParserRuleCall_1_0() { return cNameNameParserRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2() { return cLeftParenthesisKeyword_2; }

		//intf=InterfaceList
		public Assignment getIntfAssignment_3() { return cIntfAssignment_3; }

		//InterfaceList
		public RuleCall getIntfInterfaceListParserRuleCall_3_0() { return cIntfInterfaceListParserRuleCall_3_0; }

		//")"
		public Keyword getRightParenthesisKeyword_4() { return cRightParenthesisKeyword_4; }

		//stmt=LocStmt?
		public Assignment getStmtAssignment_5() { return cStmtAssignment_5; }

		//LocStmt
		public RuleCall getStmtLocStmtParserRuleCall_5_0() { return cStmtLocStmtParserRuleCall_5_0; }
	}

	public class NameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Name");
		private final Assignment cIdAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIdIDTerminalRuleCall_0 = (RuleCall)cIdAssignment.eContents().get(0);
		
		//Name:
		//  id=ID; // obs+=ObservedSpecList*;
		//
		////ObservedSpecList : //"satisfies" "{" "observer" "(" InterfaceList ")" "{" stmts=LocStmt "}" proofs=ProofGoalList "}" 
		//                  //| "satisfies" "{" "observer" "(" InterfaceList ")" "{" stmts=LocStmt "}" "}" 
		//                 // | 
		//                 //"satisfies" "{" ProofGoalList "}" ;
		public ParserRule getRule() { return rule; }

		//id=ID
		public Assignment getIdAssignment() { return cIdAssignment; }

		//ID
		public RuleCall getIdIDTerminalRuleCall_0() { return cIdIDTerminalRuleCall_0; }
	}

	public class QNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QName");
		private final RuleCall cNameParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//QName:
		//  Name;
		public ParserRule getRule() { return rule; }

		//Name
		public RuleCall getNameParserRuleCall() { return cNameParserRuleCall; }
	}

	public class QNameListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QNameList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameQNameParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNamesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNamesQNameParserRuleCall_1_1_0 = (RuleCall)cNamesAssignment_1_1.eContents().get(0);
		
		//QNameList:
		//  name=QName ("," names+=QName)*;
		public ParserRule getRule() { return rule; }

		//name=QName ("," names+=QName)*
		public Group getGroup() { return cGroup; }

		//name=QName
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//QName
		public RuleCall getNameQNameParserRuleCall_0_0() { return cNameQNameParserRuleCall_0_0; }

		//("," names+=QName)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//names+=QName
		public Assignment getNamesAssignment_1_1() { return cNamesAssignment_1_1; }

		//QName
		public RuleCall getNamesQNameParserRuleCall_1_1_0() { return cNamesQNameParserRuleCall_1_1_0; }
	}

	public class StorageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Storage");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cEventKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cMemKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//Storage returns ecore::EString:
		//  "event"|"mem";
		public ParserRule getRule() { return rule; }

		//"event"|"mem"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"event"
		public Keyword getEventKeyword_0() { return cEventKeyword_0; }

		//"mem"
		public Keyword getMemKeyword_1() { return cMemKeyword_1; }
	}

	public class QTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cBoolKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cRealKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Keyword cBvKeyword_0_2 = (Keyword)cAlternatives_0.eContents().get(2);
		private final Group cGroup_0_3 = (Group)cAlternatives_0.eContents().get(3);
		private final Keyword cBvKeyword_0_3_0 = (Keyword)cGroup_0_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_3_1 = (Keyword)cGroup_0_3.eContents().get(1);
		private final Assignment cTaAssignment_0_3_2 = (Assignment)cGroup_0_3.eContents().get(2);
		private final RuleCall cTaUtyExprParserRuleCall_0_3_2_0 = (RuleCall)cTaAssignment_0_3_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_0_3_3 = (Keyword)cGroup_0_3.eContents().get(3);
		private final Keyword cNatKeyword_0_4 = (Keyword)cAlternatives_0.eContents().get(4);
		private final Group cGroup_0_5 = (Group)cAlternatives_0.eContents().get(5);
		private final Keyword cNatKeyword_0_5_0 = (Keyword)cGroup_0_5.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_5_1 = (Keyword)cGroup_0_5.eContents().get(1);
		private final Assignment cTbAssignment_0_5_2 = (Assignment)cGroup_0_5.eContents().get(2);
		private final RuleCall cTbUtyExprParserRuleCall_0_5_2_0 = (RuleCall)cTbAssignment_0_5_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_0_5_3 = (Keyword)cGroup_0_5.eContents().get(3);
		private final Keyword cIntKeyword_0_6 = (Keyword)cAlternatives_0.eContents().get(6);
		private final Group cGroup_0_7 = (Group)cAlternatives_0.eContents().get(7);
		private final Keyword cIntKeyword_0_7_0 = (Keyword)cGroup_0_7.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_0_7_1 = (Keyword)cGroup_0_7.eContents().get(1);
		private final Assignment cTcAssignment_0_7_2 = (Assignment)cGroup_0_7.eContents().get(2);
		private final RuleCall cTcUtyExprParserRuleCall_0_7_2_0 = (RuleCall)cTcAssignment_0_7_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_0_7_3 = (Keyword)cGroup_0_7.eContents().get(3);
		private final Assignment cDimsAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cDimsDimListParserRuleCall_1_0 = (RuleCall)cDimsAssignment_1.eContents().get(0);
		
		//QType:
		//  ("bool"|"real"|"bv"|"bv" "{" ta=UtyExpr "}"|"nat"|"nat" "{" tb=UtyExpr "}"|"int"|"int"
		//  "{" tc=UtyExpr "}") dims=DimList?; 
		//        
		//    
		//            
		//            
		//                  
		//            
		//                  
		//            
		//                  
		//          //| "(" QTypeList ")"
		public ParserRule getRule() { return rule; }

		//("bool"|"real"|"bv"|"bv" "{" ta=UtyExpr "}"|"nat"|"nat" "{" tb=UtyExpr "}"|"int"|"int"
		//"{" tc=UtyExpr "}") dims=DimList?   
		//            
		//            
		//                  
		//            
		//                  
		//            
		//                  
		//          //| "(" QTypeList ")"
		public Group getGroup() { return cGroup; }

		//"bool"|"real"|"bv"|"bv" "{" ta=UtyExpr "}"|"nat"|"nat" "{" tb=UtyExpr "}"|"int"|"int"
		//"{" tc=UtyExpr "}"   
		//            
		//            
		//                  
		//            
		//                  
		//            
		//                  
		//          //| "(" QTypeList ")"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"bool"
		public Keyword getBoolKeyword_0_0() { return cBoolKeyword_0_0; }

		//"real"
		public Keyword getRealKeyword_0_1() { return cRealKeyword_0_1; }

		//"bv"
		public Keyword getBvKeyword_0_2() { return cBvKeyword_0_2; }

		//"bv" "{" ta=UtyExpr "}"
		public Group getGroup_0_3() { return cGroup_0_3; }

		//"bv"
		public Keyword getBvKeyword_0_3_0() { return cBvKeyword_0_3_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_3_1() { return cLeftCurlyBracketKeyword_0_3_1; }

		//ta=UtyExpr
		public Assignment getTaAssignment_0_3_2() { return cTaAssignment_0_3_2; }

		//UtyExpr
		public RuleCall getTaUtyExprParserRuleCall_0_3_2_0() { return cTaUtyExprParserRuleCall_0_3_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_0_3_3() { return cRightCurlyBracketKeyword_0_3_3; }

		//"nat"
		public Keyword getNatKeyword_0_4() { return cNatKeyword_0_4; }

		//"nat" "{" tb=UtyExpr "}"
		public Group getGroup_0_5() { return cGroup_0_5; }

		//"nat"
		public Keyword getNatKeyword_0_5_0() { return cNatKeyword_0_5_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_5_1() { return cLeftCurlyBracketKeyword_0_5_1; }

		//tb=UtyExpr
		public Assignment getTbAssignment_0_5_2() { return cTbAssignment_0_5_2; }

		//UtyExpr
		public RuleCall getTbUtyExprParserRuleCall_0_5_2_0() { return cTbUtyExprParserRuleCall_0_5_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_0_5_3() { return cRightCurlyBracketKeyword_0_5_3; }

		//"int"
		public Keyword getIntKeyword_0_6() { return cIntKeyword_0_6; }

		//"int" "{" tc=UtyExpr "}"         
		//          //| "(" QTypeList ")"
		public Group getGroup_0_7() { return cGroup_0_7; }

		//"int"
		public Keyword getIntKeyword_0_7_0() { return cIntKeyword_0_7_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0_7_1() { return cLeftCurlyBracketKeyword_0_7_1; }

		//tc=UtyExpr
		public Assignment getTcAssignment_0_7_2() { return cTcAssignment_0_7_2; }

		//UtyExpr
		public RuleCall getTcUtyExprParserRuleCall_0_7_2_0() { return cTcUtyExprParserRuleCall_0_7_2_0; }

		//"}"   
		//          //| "(" QTypeList ")"
		public Keyword getRightCurlyBracketKeyword_0_7_3() { return cRightCurlyBracketKeyword_0_7_3; }

		//dims=DimList?
		public Assignment getDimsAssignment_1() { return cDimsAssignment_1; }

		//DimList
		public RuleCall getDimsDimListParserRuleCall_1_0() { return cDimsDimListParserRuleCall_1_0; }
	}

	public class QTypeListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "QTypeList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeQTypeParserRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cAsteriskKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cTAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cTQTypeParserRuleCall_1_1_0 = (RuleCall)cTAssignment_1_1.eContents().get(0);
		
		//QTypeList:
		//  type=QType ("*" t+=QType)+;
		public ParserRule getRule() { return rule; }

		//type=QType ("*" t+=QType)+
		public Group getGroup() { return cGroup; }

		//type=QType
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//QType
		public RuleCall getTypeQTypeParserRuleCall_0_0() { return cTypeQTypeParserRuleCall_0_0; }

		//("*" t+=QType)+
		public Group getGroup_1() { return cGroup_1; }

		//"*"
		public Keyword getAsteriskKeyword_1_0() { return cAsteriskKeyword_1_0; }

		//t+=QType
		public Assignment getTAssignment_1_1() { return cTAssignment_1_1; }

		//QType
		public RuleCall getTQTypeParserRuleCall_1_1_0() { return cTQTypeParserRuleCall_1_1_0; }
	}

	public class DimListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DimList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExprAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExprUtyExprParserRuleCall_1_0 = (RuleCall)cExprAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//DimList:
		//  ("[" expr+=UtyExpr "]")+;
		public ParserRule getRule() { return rule; }

		//("[" expr+=UtyExpr "]")+
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//expr+=UtyExpr
		public Assignment getExprAssignment_1() { return cExprAssignment_1; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_1_0() { return cExprUtyExprParserRuleCall_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class InOutNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InOutName");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cQuestionMarkKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cExclamationMarkKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final RuleCall cQNameParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		
		//InOutName:
		//  ("?"|"!")? QName;
		public ParserRule getRule() { return rule; }

		//("?"|"!")? QName
		public Group getGroup() { return cGroup; }

		//("?"|"!")?
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"?"
		public Keyword getQuestionMarkKeyword_0_0() { return cQuestionMarkKeyword_0_0; }

		//"!"
		public Keyword getExclamationMarkKeyword_0_1() { return cExclamationMarkKeyword_0_1; }

		//QName
		public RuleCall getQNameParserRuleCall_1() { return cQNameParserRuleCall_1; }
	}

	public class InOutNameListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InOutNameList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cInOutNameParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cNamesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cNamesInOutNameParserRuleCall_1_1_0 = (RuleCall)cNamesAssignment_1_1.eContents().get(0);
		
		//InOutNameList:
		//  InOutName ("," names+=InOutName)*;
		public ParserRule getRule() { return rule; }

		//InOutName ("," names+=InOutName)*
		public Group getGroup() { return cGroup; }

		//InOutName
		public RuleCall getInOutNameParserRuleCall_0() { return cInOutNameParserRuleCall_0; }

		//("," names+=InOutName)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//names+=InOutName
		public Assignment getNamesAssignment_1_1() { return cNamesAssignment_1_1; }

		//InOutName
		public RuleCall getNamesInOutNameParserRuleCall_1_1_0() { return cNamesInOutNameParserRuleCall_1_1_0; }
	}

	public class InOutNameListCommaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InOutNameListComma");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNamesAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNamesInOutNameParserRuleCall_0_0 = (RuleCall)cNamesAssignment_0.eContents().get(0);
		private final Keyword cCommaKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//InOutNameListComma:
		//  (names+=InOutName ",")+;
		public ParserRule getRule() { return rule; }

		//(names+=InOutName ",")+
		public Group getGroup() { return cGroup; }

		//names+=InOutName
		public Assignment getNamesAssignment_0() { return cNamesAssignment_0; }

		//InOutName
		public RuleCall getNamesInOutNameParserRuleCall_0_0() { return cNamesInOutNameParserRuleCall_0_0; }

		//","
		public Keyword getCommaKeyword_1() { return cCommaKeyword_1; }
	}

	public class InterfaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Interface");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final RuleCall cStorageParserRuleCall_0_0_0 = (RuleCall)cGroup_0_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cTypeQTypeParserRuleCall_0_0_1_0 = (RuleCall)cTypeAssignment_0_0_1.eContents().get(0);
		private final Keyword cEventKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cNamesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNamesInOutNameListParserRuleCall_1_0 = (RuleCall)cNamesAssignment_1.eContents().get(0);
		
		//Interface:
		//  (Storage? type=QType|"event") names=InOutNameList;
		public ParserRule getRule() { return rule; }

		//(Storage? type=QType|"event") names=InOutNameList
		public Group getGroup() { return cGroup; }

		//Storage? type=QType|"event"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//Storage? type=QType
		public Group getGroup_0_0() { return cGroup_0_0; }

		//Storage?
		public RuleCall getStorageParserRuleCall_0_0_0() { return cStorageParserRuleCall_0_0_0; }

		//type=QType
		public Assignment getTypeAssignment_0_0_1() { return cTypeAssignment_0_0_1; }

		//QType
		public RuleCall getTypeQTypeParserRuleCall_0_0_1_0() { return cTypeQTypeParserRuleCall_0_0_1_0; }

		//"event"
		public Keyword getEventKeyword_0_1() { return cEventKeyword_0_1; }

		//names=InOutNameList
		public Assignment getNamesAssignment_1() { return cNamesAssignment_1; }

		//InOutNameList
		public RuleCall getNamesInOutNameListParserRuleCall_1_0() { return cNamesInOutNameListParserRuleCall_1_0; }
	}

	public class InterfaceCommaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InterfaceComma");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cAlternatives_0.eContents().get(0);
		private final RuleCall cStorageParserRuleCall_0_0_0 = (RuleCall)cGroup_0_0.eContents().get(0);
		private final Assignment cTypeAssignment_0_0_1 = (Assignment)cGroup_0_0.eContents().get(1);
		private final RuleCall cTypeQTypeParserRuleCall_0_0_1_0 = (RuleCall)cTypeAssignment_0_0_1.eContents().get(0);
		private final Keyword cEventKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cNamesAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNamesInOutNameListCommaParserRuleCall_1_0 = (RuleCall)cNamesAssignment_1.eContents().get(0);
		
		//InterfaceComma:
		//  (Storage? type=QType|"event") names=InOutNameListComma;
		public ParserRule getRule() { return rule; }

		//(Storage? type=QType|"event") names=InOutNameListComma
		public Group getGroup() { return cGroup; }

		//Storage? type=QType|"event"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//Storage? type=QType
		public Group getGroup_0_0() { return cGroup_0_0; }

		//Storage?
		public RuleCall getStorageParserRuleCall_0_0_0() { return cStorageParserRuleCall_0_0_0; }

		//type=QType
		public Assignment getTypeAssignment_0_0_1() { return cTypeAssignment_0_0_1; }

		//QType
		public RuleCall getTypeQTypeParserRuleCall_0_0_1_0() { return cTypeQTypeParserRuleCall_0_0_1_0; }

		//"event"
		public Keyword getEventKeyword_0_1() { return cEventKeyword_0_1; }

		//names=InOutNameListComma
		public Assignment getNamesAssignment_1() { return cNamesAssignment_1; }

		//InOutNameListComma
		public RuleCall getNamesInOutNameListCommaParserRuleCall_1_0() { return cNamesInOutNameListCommaParserRuleCall_1_0; }
	}

	public class InterfaceListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InterfaceList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIntfAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIntfInterfaceParserRuleCall_0_0 = (RuleCall)cIntfAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cInterfacesAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cInterfacesInterfaceParserRuleCall_1_1_0 = (RuleCall)cInterfacesAssignment_1_1.eContents().get(0);
		
		//InterfaceList:
		//  intf=Interface ("," interfaces+=Interface)*;
		public ParserRule getRule() { return rule; }

		//intf=Interface ("," interfaces+=Interface)*
		public Group getGroup() { return cGroup; }

		//intf=Interface
		public Assignment getIntfAssignment_0() { return cIntfAssignment_0; }

		//Interface
		public RuleCall getIntfInterfaceParserRuleCall_0_0() { return cIntfInterfaceParserRuleCall_0_0; }

		//("," interfaces+=Interface)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//interfaces+=Interface
		public Assignment getInterfacesAssignment_1_1() { return cInterfacesAssignment_1_1; }

		//Interface
		public RuleCall getInterfacesInterfaceParserRuleCall_1_1_0() { return cInterfacesInterfaceParserRuleCall_1_1_0; }
	}

	public class VerifTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "VerifTask");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cLeftSquareBracketKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cProveEKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cProveAKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cLeftSquareBracketKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cDisProveEKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_2_2 = (Keyword)cGroup_2.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cLeftSquareBracketKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cDisProveAKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cRightSquareBracketKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		
		//VerifTask returns ecore::EString:
		//  "[" "ProveE" "]"|"[" "ProveA" "]"|"[" "DisProveE" "]"|"[" "DisProveA" "]";
		public ParserRule getRule() { return rule; }

		//"[" "ProveE" "]"|"[" "ProveA" "]"|"[" "DisProveE" "]"|"[" "DisProveA" "]"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"[" "ProveE" "]"
		public Group getGroup_0() { return cGroup_0; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0_0() { return cLeftSquareBracketKeyword_0_0; }

		//"ProveE"
		public Keyword getProveEKeyword_0_1() { return cProveEKeyword_0_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_0_2() { return cRightSquareBracketKeyword_0_2; }

		//"[" "ProveA" "]"
		public Group getGroup_1() { return cGroup_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_0() { return cLeftSquareBracketKeyword_1_0; }

		//"ProveA"
		public Keyword getProveAKeyword_1_1() { return cProveAKeyword_1_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_2() { return cRightSquareBracketKeyword_1_2; }

		//"[" "DisProveE" "]"
		public Group getGroup_2() { return cGroup_2; }

		//"["
		public Keyword getLeftSquareBracketKeyword_2_0() { return cLeftSquareBracketKeyword_2_0; }

		//"DisProveE"
		public Keyword getDisProveEKeyword_2_1() { return cDisProveEKeyword_2_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2_2() { return cRightSquareBracketKeyword_2_2; }

		//"[" "DisProveA" "]"
		public Group getGroup_3() { return cGroup_3; }

		//"["
		public Keyword getLeftSquareBracketKeyword_3_0() { return cLeftSquareBracketKeyword_3_0; }

		//"DisProveA"
		public Keyword getDisProveAKeyword_3_1() { return cDisProveAKeyword_3_1; }

		//"]"
		public Keyword getRightSquareBracketKeyword_3_2() { return cRightSquareBracketKeyword_3_2; }
	}

	public class ControlListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ControlList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cQNameListParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRightCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//ControlList:
		//  "{" QNameList "}";
		public ParserRule getRule() { return rule; }

		//"{" QNameList "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//QNameList
		public RuleCall getQNameListParserRuleCall_1() { return cQNameListParserRuleCall_1; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_2() { return cRightCurlyBracketKeyword_2; }
	}

	public class AssumeListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AssumeList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cWithKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cQNameListParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//AssumeList:
		//  "with" "{" QNameList "}"; 
		//
		//          
		//
		////ProofGoalList : (name+=QName (":" "assume" expr+=UtyExpr ";" (goals+=ProofGoalList)?   ))+;          
		//               //| (ver+=VerifTask)? (ctrl+=ControlList)? ":" "assert" expr+=UtyExpr ass+=AssumeList? ";"))+;
		public ParserRule getRule() { return rule; }

		//"with" "{" QNameList "}"
		public Group getGroup() { return cGroup; }

		//"with"
		public Keyword getWithKeyword_0() { return cWithKeyword_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//QNameList
		public RuleCall getQNameListParserRuleCall_2() { return cQNameListParserRuleCall_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class FixpointEqListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FixpointEqList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Alternatives cAlternatives_0 = (Alternatives)cGroup.eContents().get(0);
		private final Keyword cMuKeyword_0_0 = (Keyword)cAlternatives_0.eContents().get(0);
		private final Keyword cNuKeyword_0_1 = (Keyword)cAlternatives_0.eContents().get(1);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameQNameParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExprAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExprUtyExprParserRuleCall_3_0 = (RuleCall)cExprAssignment_3.eContents().get(0);
		private final Keyword cSemicolonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//FixpointEqList:
		//  (("mu"|"nu") name+=QName "=" expr+=UtyExpr ";")*; 
		//
		////ProofGoalList : (name+=QName (":" "assume" expr+=UtyExpr ";" (goals+=ProofGoalList)?   ))+;          
		//               //| (ver+=VerifTask)? (ctrl+=ControlList)? ":" "assert" expr+=UtyExpr ass+=AssumeList? ";"))+;
		public ParserRule getRule() { return rule; }

		//(("mu"|"nu") name+=QName "=" expr+=UtyExpr ";")*
		public Group getGroup() { return cGroup; }

		//"mu"|"nu"
		public Alternatives getAlternatives_0() { return cAlternatives_0; }

		//"mu"
		public Keyword getMuKeyword_0_0() { return cMuKeyword_0_0; }

		//"nu"
		public Keyword getNuKeyword_0_1() { return cNuKeyword_0_1; }

		//name+=QName
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }

		//QName
		public RuleCall getNameQNameParserRuleCall_1_0() { return cNameQNameParserRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//expr+=UtyExpr
		public Assignment getExprAssignment_3() { return cExprAssignment_3; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_3_0() { return cExprUtyExprParserRuleCall_3_0; }

		//";"
		public Keyword getSemicolonKeyword_4() { return cSemicolonKeyword_4; }
	}

	public class OptUtyExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OptUtyExpr");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword c_Keyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Assignment cTkAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final RuleCall cTkUtyExprParserRuleCall_1_0 = (RuleCall)cTkAssignment_1.eContents().get(0);
		
		//OptUtyExpr:
		//  "_"|tk=UtyExpr;
		public ParserRule getRule() { return rule; }

		//"_"|tk=UtyExpr
		public Alternatives getAlternatives() { return cAlternatives; }

		//"_"
		public Keyword get_Keyword_0() { return c_Keyword_0; }

		//tk=UtyExpr
		public Assignment getTkAssignment_1() { return cTkAssignment_1; }

		//UtyExpr
		public RuleCall getTkUtyExprParserRuleCall_1_0() { return cTkUtyExprParserRuleCall_1_0; }
	}

	public class OptUtyExprListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OptUtyExprList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cOptUtyExprParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cCommaKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cExprsAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cExprsOptUtyExprParserRuleCall_1_1_0 = (RuleCall)cExprsAssignment_1_1.eContents().get(0);
		
		//OptUtyExprList:
		//  (OptUtyExpr ("," exprs+=OptUtyExpr)*)?;
		public ParserRule getRule() { return rule; }

		//(OptUtyExpr ("," exprs+=OptUtyExpr)*)?
		public Group getGroup() { return cGroup; }

		//OptUtyExpr
		public RuleCall getOptUtyExprParserRuleCall_0() { return cOptUtyExprParserRuleCall_0; }

		//("," exprs+=OptUtyExpr)*
		public Group getGroup_1() { return cGroup_1; }

		//","
		public Keyword getCommaKeyword_1_0() { return cCommaKeyword_1_0; }

		//exprs+=OptUtyExpr
		public Assignment getExprsAssignment_1_1() { return cExprsAssignment_1_1; }

		//OptUtyExpr
		public RuleCall getExprsOptUtyExprParserRuleCall_1_1_0() { return cExprsOptUtyExprParserRuleCall_1_1_0; }
	}

	public class UtyExprSelectListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UtyExprSelectList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTkAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTkUtyExprParserRuleCall_1_0 = (RuleCall)cTkAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//UtyExprSelectList:
		//  ("[" tk=UtyExpr "]")+;
		public ParserRule getRule() { return rule; }

		//("[" tk=UtyExpr "]")+
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//tk=UtyExpr
		public Assignment getTkAssignment_1() { return cTkAssignment_1; }

		//UtyExpr
		public RuleCall getTkUtyExprParserRuleCall_1_0() { return cTkUtyExprParserRuleCall_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }
	}

	public class UtyExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UtyExpr");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cInstantKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cInsideKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cTerminateKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cTrueKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cFalseKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final RuleCall cBVCONSTTerminalRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cOCTCONSTTerminalRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cHEXCONSTTerminalRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		private final RuleCall cNATCONSTTerminalRuleCall_8 = (RuleCall)cAlternatives.eContents().get(8);
		private final RuleCall cREALCONSTTerminalRuleCall_9 = (RuleCall)cAlternatives.eContents().get(9);
		private final RuleCall cQNameParserRuleCall_10 = (RuleCall)cAlternatives.eContents().get(10);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Assignment cOpAssignment_11_0 = (Assignment)cGroup_11.eContents().get(0);
		private final RuleCall cOpNOTParserRuleCall_11_0_0 = (RuleCall)cOpAssignment_11_0.eContents().get(0);
		private final Assignment cExprAssignment_11_1 = (Assignment)cGroup_11.eContents().get(1);
		private final RuleCall cExprUtyExprParserRuleCall_11_1_0 = (RuleCall)cExprAssignment_11_1.eContents().get(0);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Keyword cPlusSignKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_12_1 = (RuleCall)cGroup_12.eContents().get(1);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Keyword cHyphenMinusKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_13_1 = (RuleCall)cGroup_13.eContents().get(1);
		private final Group cGroup_14 = (Group)cAlternatives.eContents().get(14);
		private final Keyword cAbsKeyword_14_0 = (Keyword)cGroup_14.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_14_1 = (Keyword)cGroup_14.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_14_2 = (RuleCall)cGroup_14.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_14_3 = (Keyword)cGroup_14.eContents().get(3);
		private final Group cGroup_15 = (Group)cAlternatives.eContents().get(15);
		private final Keyword cSatKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_15_2 = (RuleCall)cGroup_15.eContents().get(2);
		private final Keyword cRightCurlyBracketKeyword_15_3 = (Keyword)cGroup_15.eContents().get(3);
		private final Keyword cLeftParenthesisKeyword_15_4 = (Keyword)cGroup_15.eContents().get(4);
		private final Assignment cT7Assignment_15_5 = (Assignment)cGroup_15.eContents().get(5);
		private final RuleCall cT7UtyExprParserRuleCall_15_5_0 = (RuleCall)cT7Assignment_15_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_15_6 = (Keyword)cGroup_15.eContents().get(6);
		private final Group cGroup_16 = (Group)cAlternatives.eContents().get(16);
		private final Keyword cDerKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_16_2 = (RuleCall)cGroup_16.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_16_3 = (Keyword)cGroup_16.eContents().get(3);
		private final Group cGroup_17 = (Group)cAlternatives.eContents().get(17);
		private final Keyword cReverseKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_17_2 = (RuleCall)cGroup_17.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_17_3 = (Keyword)cGroup_17.eContents().get(3);
		private final Group cGroup_18 = (Group)cAlternatives.eContents().get(18);
		private final Keyword cLeftCurlyBracketKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_18_1 = (RuleCall)cGroup_18.eContents().get(1);
		private final Keyword cColonColonKeyword_18_2 = (Keyword)cGroup_18.eContents().get(2);
		private final Assignment cExprAssignment_18_3 = (Assignment)cGroup_18.eContents().get(3);
		private final RuleCall cExprUtyExprParserRuleCall_18_3_0 = (RuleCall)cExprAssignment_18_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_18_4 = (Keyword)cGroup_18.eContents().get(4);
		private final Group cGroup_19 = (Group)cAlternatives.eContents().get(19);
		private final Keyword cNextKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_19_1 = (Keyword)cGroup_19.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_19_2 = (RuleCall)cGroup_19.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_19_3 = (Keyword)cGroup_19.eContents().get(3);
		private final Group cGroup_20 = (Group)cAlternatives.eContents().get(20);
		private final Keyword cNat2bvKeyword_20_0 = (Keyword)cGroup_20.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_20_1 = (Keyword)cGroup_20.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_20_2 = (RuleCall)cGroup_20.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_20_3 = (Keyword)cGroup_20.eContents().get(3);
		private final Group cGroup_21 = (Group)cAlternatives.eContents().get(21);
		private final Keyword cInt2bvKeyword_21_0 = (Keyword)cGroup_21.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_21_1 = (Keyword)cGroup_21.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_21_2 = (RuleCall)cGroup_21.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_21_3 = (Keyword)cGroup_21.eContents().get(3);
		private final Group cGroup_22 = (Group)cAlternatives.eContents().get(22);
		private final Keyword cArr2bvKeyword_22_0 = (Keyword)cGroup_22.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_22_1 = (Keyword)cGroup_22.eContents().get(1);
		private final RuleCall cQNameParserRuleCall_22_2 = (RuleCall)cGroup_22.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_22_3 = (Keyword)cGroup_22.eContents().get(3);
		private final Group cGroup_23 = (Group)cAlternatives.eContents().get(23);
		private final Keyword cTup2bvKeyword_23_0 = (Keyword)cGroup_23.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_23_1 = (Keyword)cGroup_23.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_23_2 = (RuleCall)cGroup_23.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_23_3 = (Keyword)cGroup_23.eContents().get(3);
		private final Group cGroup_24 = (Group)cAlternatives.eContents().get(24);
		private final Keyword cBv2natKeyword_24_0 = (Keyword)cGroup_24.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_24_1 = (Keyword)cGroup_24.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_24_2 = (RuleCall)cGroup_24.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_24_3 = (Keyword)cGroup_24.eContents().get(3);
		private final Group cGroup_25 = (Group)cAlternatives.eContents().get(25);
		private final Keyword cBv2intKeyword_25_0 = (Keyword)cGroup_25.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_25_1 = (Keyword)cGroup_25.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_25_2 = (RuleCall)cGroup_25.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_25_3 = (Keyword)cGroup_25.eContents().get(3);
		private final Group cGroup_26 = (Group)cAlternatives.eContents().get(26);
		private final Keyword cNat2realKeyword_26_0 = (Keyword)cGroup_26.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_26_1 = (Keyword)cGroup_26.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_26_2 = (RuleCall)cGroup_26.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_26_3 = (Keyword)cGroup_26.eContents().get(3);
		private final Group cGroup_27 = (Group)cAlternatives.eContents().get(27);
		private final Keyword cInt2realKeyword_27_0 = (Keyword)cGroup_27.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_27_1 = (Keyword)cGroup_27.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_27_2 = (RuleCall)cGroup_27.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_27_3 = (Keyword)cGroup_27.eContents().get(3);
		private final Group cGroup_28 = (Group)cAlternatives.eContents().get(28);
		private final Keyword cSinKeyword_28_0 = (Keyword)cGroup_28.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_28_1 = (Keyword)cGroup_28.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_28_2 = (RuleCall)cGroup_28.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_28_3 = (Keyword)cGroup_28.eContents().get(3);
		private final Group cGroup_29 = (Group)cAlternatives.eContents().get(29);
		private final Keyword cCosKeyword_29_0 = (Keyword)cGroup_29.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_29_1 = (Keyword)cGroup_29.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_29_2 = (RuleCall)cGroup_29.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_29_3 = (Keyword)cGroup_29.eContents().get(3);
		private final Group cGroup_30 = (Group)cAlternatives.eContents().get(30);
		private final Keyword cExpKeyword_30_0 = (Keyword)cGroup_30.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_30_1 = (Keyword)cGroup_30.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_30_2 = (RuleCall)cGroup_30.eContents().get(2);
		private final Keyword cCommaKeyword_30_3 = (Keyword)cGroup_30.eContents().get(3);
		private final Assignment cExprAssignment_30_4 = (Assignment)cGroup_30.eContents().get(4);
		private final RuleCall cExprUtyExprParserRuleCall_30_4_0 = (RuleCall)cExprAssignment_30_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_30_5 = (Keyword)cGroup_30.eContents().get(5);
		private final Group cGroup_31 = (Group)cAlternatives.eContents().get(31);
		private final Keyword cLogKeyword_31_0 = (Keyword)cGroup_31.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_31_1 = (Keyword)cGroup_31.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_31_2 = (RuleCall)cGroup_31.eContents().get(2);
		private final Keyword cCommaKeyword_31_3 = (Keyword)cGroup_31.eContents().get(3);
		private final Assignment cExprAssignment_31_4 = (Assignment)cGroup_31.eContents().get(4);
		private final RuleCall cExprUtyExprParserRuleCall_31_4_0 = (RuleCall)cExprAssignment_31_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_31_5 = (Keyword)cGroup_31.eContents().get(5);
		private final Group cGroup_32 = (Group)cAlternatives.eContents().get(32);
		private final Keyword cSizeOfKeyword_32_0 = (Keyword)cGroup_32.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_32_1 = (Keyword)cGroup_32.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_32_2 = (RuleCall)cGroup_32.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_32_3 = (Keyword)cGroup_32.eContents().get(3);
		private final Group cGroup_33 = (Group)cAlternatives.eContents().get(33);
		private final Keyword cForallKeyword_33_0 = (Keyword)cGroup_33.eContents().get(0);
		private final RuleCall cGenericParserRuleCall_33_1 = (RuleCall)cGroup_33.eContents().get(1);
		private final Assignment cExprAssignment_33_2 = (Assignment)cGroup_33.eContents().get(2);
		private final RuleCall cExprUtyExprParserRuleCall_33_2_0 = (RuleCall)cExprAssignment_33_2.eContents().get(0);
		private final Group cGroup_34 = (Group)cAlternatives.eContents().get(34);
		private final Keyword cExistsKeyword_34_0 = (Keyword)cGroup_34.eContents().get(0);
		private final RuleCall cGenericParserRuleCall_34_1 = (RuleCall)cGroup_34.eContents().get(1);
		private final Assignment cExprAssignment_34_2 = (Assignment)cGroup_34.eContents().get(2);
		private final RuleCall cExprUtyExprParserRuleCall_34_2_0 = (RuleCall)cExprAssignment_34_2.eContents().get(0);
		private final Group cGroup_35 = (Group)cAlternatives.eContents().get(35);
		private final Keyword cSumKeyword_35_0 = (Keyword)cGroup_35.eContents().get(0);
		private final RuleCall cGenericParserRuleCall_35_1 = (RuleCall)cGroup_35.eContents().get(1);
		private final Assignment cExprAssignment_35_2 = (Assignment)cGroup_35.eContents().get(2);
		private final RuleCall cExprUtyExprParserRuleCall_35_2_0 = (RuleCall)cExprAssignment_35_2.eContents().get(0);
		private final Group cGroup_36 = (Group)cAlternatives.eContents().get(36);
		private final Keyword cXKeyword_36_0 = (Keyword)cGroup_36.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_36_1 = (RuleCall)cGroup_36.eContents().get(1);
		private final Group cGroup_37 = (Group)cAlternatives.eContents().get(37);
		private final Keyword cGKeyword_37_0 = (Keyword)cGroup_37.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_37_1 = (RuleCall)cGroup_37.eContents().get(1);
		private final Group cGroup_38 = (Group)cAlternatives.eContents().get(38);
		private final Keyword cFKeyword_38_0 = (Keyword)cGroup_38.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_38_1 = (RuleCall)cGroup_38.eContents().get(1);
		private final Group cGroup_39 = (Group)cAlternatives.eContents().get(39);
		private final Keyword cPAKeyword_39_0 = (Keyword)cGroup_39.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_39_1 = (RuleCall)cGroup_39.eContents().get(1);
		private final Group cGroup_40 = (Group)cAlternatives.eContents().get(40);
		private final Keyword cPFKeyword_40_0 = (Keyword)cGroup_40.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_40_1 = (RuleCall)cGroup_40.eContents().get(1);
		private final Group cGroup_41 = (Group)cAlternatives.eContents().get(41);
		private final Keyword cPSXKeyword_41_0 = (Keyword)cGroup_41.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_41_1 = (RuleCall)cGroup_41.eContents().get(1);
		private final Group cGroup_42 = (Group)cAlternatives.eContents().get(42);
		private final Keyword cPMXKeyword_42_0 = (Keyword)cGroup_42.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_42_1 = (RuleCall)cGroup_42.eContents().get(1);
		private final Group cGroup_43 = (Group)cAlternatives.eContents().get(43);
		private final Keyword cEKeyword_43_0 = (Keyword)cGroup_43.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_43_1 = (RuleCall)cGroup_43.eContents().get(1);
		private final Group cGroup_44 = (Group)cAlternatives.eContents().get(44);
		private final Keyword cAKeyword_44_0 = (Keyword)cGroup_44.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_44_1 = (RuleCall)cGroup_44.eContents().get(1);
		private final Group cGroup_45 = (Group)cAlternatives.eContents().get(45);
		private final Keyword cLeftSquareBracketRightSquareBracketKeyword_45_0 = (Keyword)cGroup_45.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_45_1 = (RuleCall)cGroup_45.eContents().get(1);
		private final Group cGroup_46 = (Group)cAlternatives.eContents().get(46);
		private final Keyword cLessThanSignGreaterThanSignKeyword_46_0 = (Keyword)cGroup_46.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_46_1 = (RuleCall)cGroup_46.eContents().get(1);
		private final Group cGroup_47 = (Group)cAlternatives.eContents().get(47);
		private final Keyword cLeftSquareBracketColonRightSquareBracketKeyword_47_0 = (Keyword)cGroup_47.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_47_1 = (RuleCall)cGroup_47.eContents().get(1);
		private final Group cGroup_48 = (Group)cAlternatives.eContents().get(48);
		private final Keyword cLessThanSignColonGreaterThanSignKeyword_48_0 = (Keyword)cGroup_48.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_48_1 = (RuleCall)cGroup_48.eContents().get(1);
		private final Group cGroup_49 = (Group)cAlternatives.eContents().get(49);
		private final Keyword cMuKeyword_49_0 = (Keyword)cGroup_49.eContents().get(0);
		private final Assignment cNameAssignment_49_1 = (Assignment)cGroup_49.eContents().get(1);
		private final RuleCall cNameQNameParserRuleCall_49_1_0 = (RuleCall)cNameAssignment_49_1.eContents().get(0);
		private final Keyword cFullStopKeyword_49_2 = (Keyword)cGroup_49.eContents().get(2);
		private final Assignment cExprAssignment_49_3 = (Assignment)cGroup_49.eContents().get(3);
		private final RuleCall cExprUtyExprParserRuleCall_49_3_0 = (RuleCall)cExprAssignment_49_3.eContents().get(0);
		private final Group cGroup_50 = (Group)cAlternatives.eContents().get(50);
		private final Keyword cNuKeyword_50_0 = (Keyword)cGroup_50.eContents().get(0);
		private final Assignment cNameAssignment_50_1 = (Assignment)cGroup_50.eContents().get(1);
		private final RuleCall cNameQNameParserRuleCall_50_1_0 = (RuleCall)cNameAssignment_50_1.eContents().get(0);
		private final Keyword cFullStopKeyword_50_2 = (Keyword)cGroup_50.eContents().get(2);
		private final Assignment cExprAssignment_50_3 = (Assignment)cGroup_50.eContents().get(3);
		private final RuleCall cExprUtyExprParserRuleCall_50_3_0 = (RuleCall)cExprAssignment_50_3.eContents().get(0);
		private final Group cGroup_51 = (Group)cAlternatives.eContents().get(51);
		private final Keyword cFixpointsKeyword_51_0 = (Keyword)cGroup_51.eContents().get(0);
		private final RuleCall cFixpointEqListParserRuleCall_51_1 = (RuleCall)cGroup_51.eContents().get(1);
		private final Keyword cInKeyword_51_2 = (Keyword)cGroup_51.eContents().get(2);
		private final Assignment cExpr2Assignment_51_3 = (Assignment)cGroup_51.eContents().get(3);
		private final RuleCall cExpr2UtyExprParserRuleCall_51_3_0 = (RuleCall)cExpr2Assignment_51_3.eContents().get(0);
		private final Group cGroup_52 = (Group)cAlternatives.eContents().get(52);
		private final Keyword cForallKeyword_52_0 = (Keyword)cGroup_52.eContents().get(0);
		private final Assignment cNameAssignment_52_1 = (Assignment)cGroup_52.eContents().get(1);
		private final RuleCall cNameQNameParserRuleCall_52_1_0 = (RuleCall)cNameAssignment_52_1.eContents().get(0);
		private final Keyword cColonKeyword_52_2 = (Keyword)cGroup_52.eContents().get(2);
		private final Assignment cTypeAssignment_52_3 = (Assignment)cGroup_52.eContents().get(3);
		private final RuleCall cTypeQTypeParserRuleCall_52_3_0 = (RuleCall)cTypeAssignment_52_3.eContents().get(0);
		private final Keyword cFullStopKeyword_52_4 = (Keyword)cGroup_52.eContents().get(4);
		private final Assignment cExprAssignment_52_5 = (Assignment)cGroup_52.eContents().get(5);
		private final RuleCall cExprUtyExprParserRuleCall_52_5_0 = (RuleCall)cExprAssignment_52_5.eContents().get(0);
		private final Group cGroup_53 = (Group)cAlternatives.eContents().get(53);
		private final Keyword cExistsKeyword_53_0 = (Keyword)cGroup_53.eContents().get(0);
		private final Assignment cNameAssignment_53_1 = (Assignment)cGroup_53.eContents().get(1);
		private final RuleCall cNameQNameParserRuleCall_53_1_0 = (RuleCall)cNameAssignment_53_1.eContents().get(0);
		private final Keyword cColonKeyword_53_2 = (Keyword)cGroup_53.eContents().get(2);
		private final Assignment cTypeAssignment_53_3 = (Assignment)cGroup_53.eContents().get(3);
		private final RuleCall cTypeQTypeParserRuleCall_53_3_0 = (RuleCall)cTypeAssignment_53_3.eContents().get(0);
		private final Keyword cFullStopKeyword_53_4 = (Keyword)cGroup_53.eContents().get(4);
		private final Assignment cExprAssignment_53_5 = (Assignment)cGroup_53.eContents().get(5);
		private final RuleCall cExprUtyExprParserRuleCall_53_5_0 = (RuleCall)cExprAssignment_53_5.eContents().get(0);
		private final Group cGroup_54 = (Group)cAlternatives.eContents().get(54);
		private final Keyword cLeftParenthesisKeyword_54_0 = (Keyword)cGroup_54.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_54_1 = (RuleCall)cGroup_54.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_54_2 = (Keyword)cGroup_54.eContents().get(2);
		
		//UtyExpr:
		//  "instant"|"inside"|"terminate"|"true"|"false"|BVCONST|OCTCONST|HEXCONST|NATCONST
		//  |REALCONST|QName|op=NOT expr=UtyExpr|"+" UtyExpr|"-" UtyExpr|"abs" "(" UtyExpr ")"|
		//  "sat" "{" UtyExpr "}" "(" t7=UtyExpr ")"|"der" "(" UtyExpr ")"|"reverse" "(" UtyExpr ")"|"{"
		//  UtyExpr "::" expr=UtyExpr "}"|"next" "(" UtyExpr ")"|"nat2bv" "(" UtyExpr ")"|"int2bv" "("
		//  UtyExpr ")"|"arr2bv" "(" QName ")"|"tup2bv" "(" UtyExpr ")"|"bv2nat" "(" UtyExpr ")"|
		//  "bv2int" "(" UtyExpr ")"|"nat2real" "(" UtyExpr ")"|"int2real" "(" UtyExpr ")"|"sin" "("
		//  UtyExpr ")"|"cos" "(" UtyExpr ")"|"exp" "(" UtyExpr "," expr=UtyExpr ")"|"log" "(" UtyExpr
		//  "," expr=UtyExpr ")"|"sizeOf" "(" UtyExpr ")"|"forall" Generic expr=UtyExpr|"exists"
		//  Generic expr=UtyExpr|"sum" Generic expr=UtyExpr|"X" UtyExpr|"G" UtyExpr|"F" UtyExpr|
		//  "PA" UtyExpr|"PF" UtyExpr|"PSX" UtyExpr|"PMX" UtyExpr|"E" UtyExpr|"A" UtyExpr|"[]"
		//  UtyExpr|"<>" UtyExpr|"[:]" UtyExpr|"<:>" UtyExpr|"mu" name=QName "." expr=UtyExpr|"nu"
		//  name=QName "." expr=UtyExpr|"fixpoints" FixpointEqList "in" expr2=UtyExpr|"forall"
		//  name=QName ":" type=QType "." expr=UtyExpr|"exists" name=QName ":" type=QType "." expr=
		//  UtyExpr|"(" UtyExpr ")"; 
		//
		//    
		//            
		//            
		//            
		//            
		//            
		//            
		//            
		//            
		//            
		//            
		//        //  | UtyExpr EQU UtyExpr
		//          // | UtyExpr XOR UtyExpr
		//          // | UtyExpr IMP UtyExpr
		//         //  | UtyExpr OR UtyExpr
		//         //  | UtyExpr AND UtyExpr
		//               
		//        //  | UtyExpr "<" UtyExpr
		//         //  | UtyExpr "<=" UtyExpr
		//         //  | UtyExpr ">" UtyExpr
		//         //  | UtyExpr ">=" UtyExpr
		//        //  | UtyExpr "==" UtyExpr
		//         //  | UtyExpr "!=" UtyExpr
		//         //  | UtyExpr "-" UtyExpr
		//         //  | UtyExpr "+" UtyExpr
		//        //   | UtyExpr "%" UtyExpr
		//        //   | UtyExpr "/" UtyExpr
		//        //   | UtyExpr "*" UtyExpr
		//               
		//              
		//                  
		//                        
		//                  
		//         // | UtyExpr "{" UtyExpr "}"
		//         // | UtyExpr "@" UtyExpr
		//         //  | UtyExpr "{" UtyExpr ":" UtyExpr "}"
		//         //  | UtyExpr "{" UtyExpr ":" "}"
		//         //  | UtyExpr "{" ":" UtyExpr "}"
		//                   
		//                    
		//        //  | UtyExpr UtyExprSelectList
		//         //  | UtyExpr "." UtyExpr
		//          // | "(" OptUtyExpr "," tl=OptUtyExprList ")"
		//          // | "(" UtyExpr "?" tm=UtyExpr ":" s=UtyExpr ")"
		//           //| QName "(" OptUtyExprList ")"
		//                   
		//                  
		//                  
		//                  
		//                  
		//                  
		//                  
		//                  
		//                  
		//                  
		//                  
		//                      
		//                      
		//                  
		//                
		//                
		//                
		// / *         | "[" UtyExpr "SU" expr=UtyExpr "]"
		//          | "[" UtyExpr "SB" expr=UtyExpr "]"
		//          | "[" UtyExpr "SW" expr=UtyExpr "]"
		//          | "[" UtyExpr "WU" expr=UtyExpr "]"
		//          | "[" UtyExpr "WB" expr=UtyExpr "]"
		//          | "[" UtyExpr "WW" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSU" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSB" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSW" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMU" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMB" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMW" expr=UtyExpr "]"* /
		public ParserRule getRule() { return rule; }

		//"instant"|"inside"|"terminate"|"true"|"false"|BVCONST|OCTCONST|HEXCONST|NATCONST
		//|REALCONST|QName|op=NOT expr=UtyExpr|"+" UtyExpr|"-" UtyExpr|"abs" "(" UtyExpr ")"|
		//"sat" "{" UtyExpr "}" "(" t7=UtyExpr ")"|"der" "(" UtyExpr ")"|"reverse" "(" UtyExpr ")"|"{"
		//UtyExpr "::" expr=UtyExpr "}"|"next" "(" UtyExpr ")"|"nat2bv" "(" UtyExpr ")"|"int2bv" "("
		//UtyExpr ")"|"arr2bv" "(" QName ")"|"tup2bv" "(" UtyExpr ")"|"bv2nat" "(" UtyExpr ")"|
		//"bv2int" "(" UtyExpr ")"|"nat2real" "(" UtyExpr ")"|"int2real" "(" UtyExpr ")"|"sin" "("
		//UtyExpr ")"|"cos" "(" UtyExpr ")"|"exp" "(" UtyExpr "," expr=UtyExpr ")"|"log" "(" UtyExpr
		//"," expr=UtyExpr ")"|"sizeOf" "(" UtyExpr ")"|"forall" Generic expr=UtyExpr|"exists"
		//Generic expr=UtyExpr|"sum" Generic expr=UtyExpr|"X" UtyExpr|"G" UtyExpr|"F" UtyExpr|
		//"PA" UtyExpr|"PF" UtyExpr|"PSX" UtyExpr|"PMX" UtyExpr|"E" UtyExpr|"A" UtyExpr|"[]"
		//UtyExpr|"<>" UtyExpr|"[:]" UtyExpr|"<:>" UtyExpr|"mu" name=QName "." expr=UtyExpr|"nu"
		//name=QName "." expr=UtyExpr|"fixpoints" FixpointEqList "in" expr2=UtyExpr|"forall"
		//name=QName ":" type=QType "." expr=UtyExpr|"exists" name=QName ":" type=QType "." expr=
		//UtyExpr|"(" UtyExpr ")" 
		//
		//    
		//            
		//            
		//            
		//            
		//            
		//            
		//            
		//            
		//            
		//            
		//        //  | UtyExpr EQU UtyExpr
		//          // | UtyExpr XOR UtyExpr
		//          // | UtyExpr IMP UtyExpr
		//         //  | UtyExpr OR UtyExpr
		//         //  | UtyExpr AND UtyExpr
		//               
		//        //  | UtyExpr "<" UtyExpr
		//         //  | UtyExpr "<=" UtyExpr
		//         //  | UtyExpr ">" UtyExpr
		//         //  | UtyExpr ">=" UtyExpr
		//        //  | UtyExpr "==" UtyExpr
		//         //  | UtyExpr "!=" UtyExpr
		//         //  | UtyExpr "-" UtyExpr
		//         //  | UtyExpr "+" UtyExpr
		//        //   | UtyExpr "%" UtyExpr
		//        //   | UtyExpr "/" UtyExpr
		//        //   | UtyExpr "*" UtyExpr
		//               
		//              
		//                  
		//                        
		//                  
		//         // | UtyExpr "{" UtyExpr "}"
		//         // | UtyExpr "@" UtyExpr
		//         //  | UtyExpr "{" UtyExpr ":" UtyExpr "}"
		//         //  | UtyExpr "{" UtyExpr ":" "}"
		//         //  | UtyExpr "{" ":" UtyExpr "}"
		//                   
		//                    
		//        //  | UtyExpr UtyExprSelectList
		//         //  | UtyExpr "." UtyExpr
		//          // | "(" OptUtyExpr "," tl=OptUtyExprList ")"
		//          // | "(" UtyExpr "?" tm=UtyExpr ":" s=UtyExpr ")"
		//           //| QName "(" OptUtyExprList ")"
		//                   
		//                  
		//                  
		//                  
		//                  
		//                  
		//                  
		//                  
		//                  
		//                  
		//                  
		//                      
		//                      
		//                  
		//                
		//                
		//                
		// / *         | "[" UtyExpr "SU" expr=UtyExpr "]"
		//          | "[" UtyExpr "SB" expr=UtyExpr "]"
		//          | "[" UtyExpr "SW" expr=UtyExpr "]"
		//          | "[" UtyExpr "WU" expr=UtyExpr "]"
		//          | "[" UtyExpr "WB" expr=UtyExpr "]"
		//          | "[" UtyExpr "WW" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSU" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSB" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSW" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMU" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMB" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMW" expr=UtyExpr "]"* /
		public Alternatives getAlternatives() { return cAlternatives; }

		//"instant"
		public Keyword getInstantKeyword_0() { return cInstantKeyword_0; }

		//"inside"
		public Keyword getInsideKeyword_1() { return cInsideKeyword_1; }

		//"terminate"
		public Keyword getTerminateKeyword_2() { return cTerminateKeyword_2; }

		//"true"
		public Keyword getTrueKeyword_3() { return cTrueKeyword_3; }

		//"false"
		public Keyword getFalseKeyword_4() { return cFalseKeyword_4; }

		//BVCONST
		public RuleCall getBVCONSTTerminalRuleCall_5() { return cBVCONSTTerminalRuleCall_5; }

		//OCTCONST
		public RuleCall getOCTCONSTTerminalRuleCall_6() { return cOCTCONSTTerminalRuleCall_6; }

		//HEXCONST
		public RuleCall getHEXCONSTTerminalRuleCall_7() { return cHEXCONSTTerminalRuleCall_7; }

		//NATCONST
		public RuleCall getNATCONSTTerminalRuleCall_8() { return cNATCONSTTerminalRuleCall_8; }

		//REALCONST
		public RuleCall getREALCONSTTerminalRuleCall_9() { return cREALCONSTTerminalRuleCall_9; }

		//QName   
		//        //  | UtyExpr EQU UtyExpr
		//          // | UtyExpr XOR UtyExpr
		//          // | UtyExpr IMP UtyExpr
		//         //  | UtyExpr OR UtyExpr
		//         //  | UtyExpr AND UtyExpr
		public RuleCall getQNameParserRuleCall_10() { return cQNameParserRuleCall_10; }

		//op=NOT expr=UtyExpr     
		//        //  | UtyExpr "<" UtyExpr
		//         //  | UtyExpr "<=" UtyExpr
		//         //  | UtyExpr ">" UtyExpr
		//         //  | UtyExpr ">=" UtyExpr
		//        //  | UtyExpr "==" UtyExpr
		//         //  | UtyExpr "!=" UtyExpr
		//         //  | UtyExpr "-" UtyExpr
		//         //  | UtyExpr "+" UtyExpr
		//        //   | UtyExpr "%" UtyExpr
		//        //   | UtyExpr "/" UtyExpr
		//        //   | UtyExpr "*" UtyExpr
		public Group getGroup_11() { return cGroup_11; }

		//op=NOT
		public Assignment getOpAssignment_11_0() { return cOpAssignment_11_0; }

		//NOT
		public RuleCall getOpNOTParserRuleCall_11_0_0() { return cOpNOTParserRuleCall_11_0_0; }

		//expr=UtyExpr   
		//        //  | UtyExpr "<" UtyExpr
		//         //  | UtyExpr "<=" UtyExpr
		//         //  | UtyExpr ">" UtyExpr
		//         //  | UtyExpr ">=" UtyExpr
		//        //  | UtyExpr "==" UtyExpr
		//         //  | UtyExpr "!=" UtyExpr
		//         //  | UtyExpr "-" UtyExpr
		//         //  | UtyExpr "+" UtyExpr
		//        //   | UtyExpr "%" UtyExpr
		//        //   | UtyExpr "/" UtyExpr
		//        //   | UtyExpr "*" UtyExpr
		public Assignment getExprAssignment_11_1() { return cExprAssignment_11_1; }

		//UtyExpr 
		//        //  | UtyExpr "<" UtyExpr
		//         //  | UtyExpr "<=" UtyExpr
		//         //  | UtyExpr ">" UtyExpr
		//         //  | UtyExpr ">=" UtyExpr
		//        //  | UtyExpr "==" UtyExpr
		//         //  | UtyExpr "!=" UtyExpr
		//         //  | UtyExpr "-" UtyExpr
		//         //  | UtyExpr "+" UtyExpr
		//        //   | UtyExpr "%" UtyExpr
		//        //   | UtyExpr "/" UtyExpr
		//        //   | UtyExpr "*" UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_11_1_0() { return cExprUtyExprParserRuleCall_11_1_0; }

		//"+" UtyExpr
		public Group getGroup_12() { return cGroup_12; }

		//"+"
		public Keyword getPlusSignKeyword_12_0() { return cPlusSignKeyword_12_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_12_1() { return cUtyExprParserRuleCall_12_1; }

		//"-" UtyExpr
		public Group getGroup_13() { return cGroup_13; }

		//"-"
		public Keyword getHyphenMinusKeyword_13_0() { return cHyphenMinusKeyword_13_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_13_1() { return cUtyExprParserRuleCall_13_1; }

		//"abs" "(" UtyExpr ")"
		public Group getGroup_14() { return cGroup_14; }

		//"abs"
		public Keyword getAbsKeyword_14_0() { return cAbsKeyword_14_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_14_1() { return cLeftParenthesisKeyword_14_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_14_2() { return cUtyExprParserRuleCall_14_2; }

		//")"
		public Keyword getRightParenthesisKeyword_14_3() { return cRightParenthesisKeyword_14_3; }

		//"sat" "{" UtyExpr "}" "(" t7=UtyExpr ")"
		public Group getGroup_15() { return cGroup_15; }

		//"sat"
		public Keyword getSatKeyword_15_0() { return cSatKeyword_15_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_15_1() { return cLeftCurlyBracketKeyword_15_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_15_2() { return cUtyExprParserRuleCall_15_2; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_15_3() { return cRightCurlyBracketKeyword_15_3; }

		//"("
		public Keyword getLeftParenthesisKeyword_15_4() { return cLeftParenthesisKeyword_15_4; }

		//t7=UtyExpr
		public Assignment getT7Assignment_15_5() { return cT7Assignment_15_5; }

		//UtyExpr
		public RuleCall getT7UtyExprParserRuleCall_15_5_0() { return cT7UtyExprParserRuleCall_15_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_15_6() { return cRightParenthesisKeyword_15_6; }

		//"der" "(" UtyExpr ")"         
		//         // | UtyExpr "{" UtyExpr "}"
		//         // | UtyExpr "@" UtyExpr
		//         //  | UtyExpr "{" UtyExpr ":" UtyExpr "}"
		//         //  | UtyExpr "{" UtyExpr ":" "}"
		//         //  | UtyExpr "{" ":" UtyExpr "}"
		public Group getGroup_16() { return cGroup_16; }

		//"der"
		public Keyword getDerKeyword_16_0() { return cDerKeyword_16_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_16_1() { return cLeftParenthesisKeyword_16_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_16_2() { return cUtyExprParserRuleCall_16_2; }

		//")"   
		//         // | UtyExpr "{" UtyExpr "}"
		//         // | UtyExpr "@" UtyExpr
		//         //  | UtyExpr "{" UtyExpr ":" UtyExpr "}"
		//         //  | UtyExpr "{" UtyExpr ":" "}"
		//         //  | UtyExpr "{" ":" UtyExpr "}"
		public Keyword getRightParenthesisKeyword_16_3() { return cRightParenthesisKeyword_16_3; }

		//"reverse" "(" UtyExpr ")"
		public Group getGroup_17() { return cGroup_17; }

		//"reverse"
		public Keyword getReverseKeyword_17_0() { return cReverseKeyword_17_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_17_1() { return cLeftParenthesisKeyword_17_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_17_2() { return cUtyExprParserRuleCall_17_2; }

		//")"
		public Keyword getRightParenthesisKeyword_17_3() { return cRightParenthesisKeyword_17_3; }

		//"{" UtyExpr "::" expr=UtyExpr "}"           
		//        //  | UtyExpr UtyExprSelectList
		//         //  | UtyExpr "." UtyExpr
		//          // | "(" OptUtyExpr "," tl=OptUtyExprList ")"
		//          // | "(" UtyExpr "?" tm=UtyExpr ":" s=UtyExpr ")"
		//           //| QName "(" OptUtyExprList ")"
		public Group getGroup_18() { return cGroup_18; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_18_0() { return cLeftCurlyBracketKeyword_18_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_18_1() { return cUtyExprParserRuleCall_18_1; }

		//"::"
		public Keyword getColonColonKeyword_18_2() { return cColonColonKeyword_18_2; }

		//expr=UtyExpr
		public Assignment getExprAssignment_18_3() { return cExprAssignment_18_3; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_18_3_0() { return cExprUtyExprParserRuleCall_18_3_0; }

		//"}"   
		//        //  | UtyExpr UtyExprSelectList
		//         //  | UtyExpr "." UtyExpr
		//          // | "(" OptUtyExpr "," tl=OptUtyExprList ")"
		//          // | "(" UtyExpr "?" tm=UtyExpr ":" s=UtyExpr ")"
		//           //| QName "(" OptUtyExprList ")"
		public Keyword getRightCurlyBracketKeyword_18_4() { return cRightCurlyBracketKeyword_18_4; }

		//"next" "(" UtyExpr ")"
		public Group getGroup_19() { return cGroup_19; }

		//"next"
		public Keyword getNextKeyword_19_0() { return cNextKeyword_19_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_19_1() { return cLeftParenthesisKeyword_19_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_19_2() { return cUtyExprParserRuleCall_19_2; }

		//")"
		public Keyword getRightParenthesisKeyword_19_3() { return cRightParenthesisKeyword_19_3; }

		//"nat2bv" "(" UtyExpr ")"
		public Group getGroup_20() { return cGroup_20; }

		//"nat2bv"
		public Keyword getNat2bvKeyword_20_0() { return cNat2bvKeyword_20_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_20_1() { return cLeftParenthesisKeyword_20_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_20_2() { return cUtyExprParserRuleCall_20_2; }

		//")"
		public Keyword getRightParenthesisKeyword_20_3() { return cRightParenthesisKeyword_20_3; }

		//"int2bv" "(" UtyExpr ")"
		public Group getGroup_21() { return cGroup_21; }

		//"int2bv"
		public Keyword getInt2bvKeyword_21_0() { return cInt2bvKeyword_21_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_21_1() { return cLeftParenthesisKeyword_21_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_21_2() { return cUtyExprParserRuleCall_21_2; }

		//")"
		public Keyword getRightParenthesisKeyword_21_3() { return cRightParenthesisKeyword_21_3; }

		//"arr2bv" "(" QName ")"
		public Group getGroup_22() { return cGroup_22; }

		//"arr2bv"
		public Keyword getArr2bvKeyword_22_0() { return cArr2bvKeyword_22_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_22_1() { return cLeftParenthesisKeyword_22_1; }

		//QName
		public RuleCall getQNameParserRuleCall_22_2() { return cQNameParserRuleCall_22_2; }

		//")"
		public Keyword getRightParenthesisKeyword_22_3() { return cRightParenthesisKeyword_22_3; }

		//"tup2bv" "(" UtyExpr ")"
		public Group getGroup_23() { return cGroup_23; }

		//"tup2bv"
		public Keyword getTup2bvKeyword_23_0() { return cTup2bvKeyword_23_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_23_1() { return cLeftParenthesisKeyword_23_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_23_2() { return cUtyExprParserRuleCall_23_2; }

		//")"
		public Keyword getRightParenthesisKeyword_23_3() { return cRightParenthesisKeyword_23_3; }

		//"bv2nat" "(" UtyExpr ")"
		public Group getGroup_24() { return cGroup_24; }

		//"bv2nat"
		public Keyword getBv2natKeyword_24_0() { return cBv2natKeyword_24_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_24_1() { return cLeftParenthesisKeyword_24_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_24_2() { return cUtyExprParserRuleCall_24_2; }

		//")"
		public Keyword getRightParenthesisKeyword_24_3() { return cRightParenthesisKeyword_24_3; }

		//"bv2int" "(" UtyExpr ")"
		public Group getGroup_25() { return cGroup_25; }

		//"bv2int"
		public Keyword getBv2intKeyword_25_0() { return cBv2intKeyword_25_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_25_1() { return cLeftParenthesisKeyword_25_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_25_2() { return cUtyExprParserRuleCall_25_2; }

		//")"
		public Keyword getRightParenthesisKeyword_25_3() { return cRightParenthesisKeyword_25_3; }

		//"nat2real" "(" UtyExpr ")"
		public Group getGroup_26() { return cGroup_26; }

		//"nat2real"
		public Keyword getNat2realKeyword_26_0() { return cNat2realKeyword_26_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_26_1() { return cLeftParenthesisKeyword_26_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_26_2() { return cUtyExprParserRuleCall_26_2; }

		//")"
		public Keyword getRightParenthesisKeyword_26_3() { return cRightParenthesisKeyword_26_3; }

		//"int2real" "(" UtyExpr ")"
		public Group getGroup_27() { return cGroup_27; }

		//"int2real"
		public Keyword getInt2realKeyword_27_0() { return cInt2realKeyword_27_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_27_1() { return cLeftParenthesisKeyword_27_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_27_2() { return cUtyExprParserRuleCall_27_2; }

		//")"
		public Keyword getRightParenthesisKeyword_27_3() { return cRightParenthesisKeyword_27_3; }

		//"sin" "(" UtyExpr ")"
		public Group getGroup_28() { return cGroup_28; }

		//"sin"
		public Keyword getSinKeyword_28_0() { return cSinKeyword_28_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_28_1() { return cLeftParenthesisKeyword_28_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_28_2() { return cUtyExprParserRuleCall_28_2; }

		//")"
		public Keyword getRightParenthesisKeyword_28_3() { return cRightParenthesisKeyword_28_3; }

		//"cos" "(" UtyExpr ")"
		public Group getGroup_29() { return cGroup_29; }

		//"cos"
		public Keyword getCosKeyword_29_0() { return cCosKeyword_29_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_29_1() { return cLeftParenthesisKeyword_29_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_29_2() { return cUtyExprParserRuleCall_29_2; }

		//")"
		public Keyword getRightParenthesisKeyword_29_3() { return cRightParenthesisKeyword_29_3; }

		//"exp" "(" UtyExpr "," expr=UtyExpr ")"
		public Group getGroup_30() { return cGroup_30; }

		//"exp"
		public Keyword getExpKeyword_30_0() { return cExpKeyword_30_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_30_1() { return cLeftParenthesisKeyword_30_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_30_2() { return cUtyExprParserRuleCall_30_2; }

		//","
		public Keyword getCommaKeyword_30_3() { return cCommaKeyword_30_3; }

		//expr=UtyExpr
		public Assignment getExprAssignment_30_4() { return cExprAssignment_30_4; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_30_4_0() { return cExprUtyExprParserRuleCall_30_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_30_5() { return cRightParenthesisKeyword_30_5; }

		//"log" "(" UtyExpr "," expr=UtyExpr ")"
		public Group getGroup_31() { return cGroup_31; }

		//"log"
		public Keyword getLogKeyword_31_0() { return cLogKeyword_31_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_31_1() { return cLeftParenthesisKeyword_31_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_31_2() { return cUtyExprParserRuleCall_31_2; }

		//","
		public Keyword getCommaKeyword_31_3() { return cCommaKeyword_31_3; }

		//expr=UtyExpr
		public Assignment getExprAssignment_31_4() { return cExprAssignment_31_4; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_31_4_0() { return cExprUtyExprParserRuleCall_31_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_31_5() { return cRightParenthesisKeyword_31_5; }

		//"sizeOf" "(" UtyExpr ")"
		public Group getGroup_32() { return cGroup_32; }

		//"sizeOf"
		public Keyword getSizeOfKeyword_32_0() { return cSizeOfKeyword_32_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_32_1() { return cLeftParenthesisKeyword_32_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_32_2() { return cUtyExprParserRuleCall_32_2; }

		//")"
		public Keyword getRightParenthesisKeyword_32_3() { return cRightParenthesisKeyword_32_3; }

		//"forall" Generic expr=UtyExpr
		public Group getGroup_33() { return cGroup_33; }

		//"forall"
		public Keyword getForallKeyword_33_0() { return cForallKeyword_33_0; }

		//Generic
		public RuleCall getGenericParserRuleCall_33_1() { return cGenericParserRuleCall_33_1; }

		//expr=UtyExpr
		public Assignment getExprAssignment_33_2() { return cExprAssignment_33_2; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_33_2_0() { return cExprUtyExprParserRuleCall_33_2_0; }

		//"exists" Generic expr=UtyExpr
		public Group getGroup_34() { return cGroup_34; }

		//"exists"
		public Keyword getExistsKeyword_34_0() { return cExistsKeyword_34_0; }

		//Generic
		public RuleCall getGenericParserRuleCall_34_1() { return cGenericParserRuleCall_34_1; }

		//expr=UtyExpr
		public Assignment getExprAssignment_34_2() { return cExprAssignment_34_2; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_34_2_0() { return cExprUtyExprParserRuleCall_34_2_0; }

		//"sum" Generic expr=UtyExpr       
		// / *         | "[" UtyExpr "SU" expr=UtyExpr "]"
		//          | "[" UtyExpr "SB" expr=UtyExpr "]"
		//          | "[" UtyExpr "SW" expr=UtyExpr "]"
		//          | "[" UtyExpr "WU" expr=UtyExpr "]"
		//          | "[" UtyExpr "WB" expr=UtyExpr "]"
		//          | "[" UtyExpr "WW" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSU" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSB" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSW" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMU" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMB" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMW" expr=UtyExpr "]"* /
		public Group getGroup_35() { return cGroup_35; }

		//"sum"
		public Keyword getSumKeyword_35_0() { return cSumKeyword_35_0; }

		//Generic
		public RuleCall getGenericParserRuleCall_35_1() { return cGenericParserRuleCall_35_1; }

		//expr=UtyExpr   
		// / *         | "[" UtyExpr "SU" expr=UtyExpr "]"
		//          | "[" UtyExpr "SB" expr=UtyExpr "]"
		//          | "[" UtyExpr "SW" expr=UtyExpr "]"
		//          | "[" UtyExpr "WU" expr=UtyExpr "]"
		//          | "[" UtyExpr "WB" expr=UtyExpr "]"
		//          | "[" UtyExpr "WW" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSU" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSB" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSW" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMU" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMB" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMW" expr=UtyExpr "]"* /
		public Assignment getExprAssignment_35_2() { return cExprAssignment_35_2; }

		//UtyExpr 
		// / *         | "[" UtyExpr "SU" expr=UtyExpr "]"
		//          | "[" UtyExpr "SB" expr=UtyExpr "]"
		//          | "[" UtyExpr "SW" expr=UtyExpr "]"
		//          | "[" UtyExpr "WU" expr=UtyExpr "]"
		//          | "[" UtyExpr "WB" expr=UtyExpr "]"
		//          | "[" UtyExpr "WW" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSU" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSB" expr=UtyExpr "]"
		//          | "[" UtyExpr "PSW" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMU" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMB" expr=UtyExpr "]"
		//          | "[" UtyExpr "PMW" expr=UtyExpr "]"* /
		public RuleCall getExprUtyExprParserRuleCall_35_2_0() { return cExprUtyExprParserRuleCall_35_2_0; }

		//"X" UtyExpr
		public Group getGroup_36() { return cGroup_36; }

		//"X"
		public Keyword getXKeyword_36_0() { return cXKeyword_36_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_36_1() { return cUtyExprParserRuleCall_36_1; }

		//"G" UtyExpr
		public Group getGroup_37() { return cGroup_37; }

		//"G"
		public Keyword getGKeyword_37_0() { return cGKeyword_37_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_37_1() { return cUtyExprParserRuleCall_37_1; }

		//"F" UtyExpr
		public Group getGroup_38() { return cGroup_38; }

		//"F"
		public Keyword getFKeyword_38_0() { return cFKeyword_38_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_38_1() { return cUtyExprParserRuleCall_38_1; }

		//"PA" UtyExpr
		public Group getGroup_39() { return cGroup_39; }

		//"PA"
		public Keyword getPAKeyword_39_0() { return cPAKeyword_39_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_39_1() { return cUtyExprParserRuleCall_39_1; }

		//"PF" UtyExpr
		public Group getGroup_40() { return cGroup_40; }

		//"PF"
		public Keyword getPFKeyword_40_0() { return cPFKeyword_40_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_40_1() { return cUtyExprParserRuleCall_40_1; }

		//"PSX" UtyExpr
		public Group getGroup_41() { return cGroup_41; }

		//"PSX"
		public Keyword getPSXKeyword_41_0() { return cPSXKeyword_41_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_41_1() { return cUtyExprParserRuleCall_41_1; }

		//"PMX" UtyExpr
		public Group getGroup_42() { return cGroup_42; }

		//"PMX"
		public Keyword getPMXKeyword_42_0() { return cPMXKeyword_42_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_42_1() { return cUtyExprParserRuleCall_42_1; }

		//"E" UtyExpr
		public Group getGroup_43() { return cGroup_43; }

		//"E"
		public Keyword getEKeyword_43_0() { return cEKeyword_43_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_43_1() { return cUtyExprParserRuleCall_43_1; }

		//"A" UtyExpr
		public Group getGroup_44() { return cGroup_44; }

		//"A"
		public Keyword getAKeyword_44_0() { return cAKeyword_44_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_44_1() { return cUtyExprParserRuleCall_44_1; }

		//"[]" UtyExpr
		public Group getGroup_45() { return cGroup_45; }

		//"[]"
		public Keyword getLeftSquareBracketRightSquareBracketKeyword_45_0() { return cLeftSquareBracketRightSquareBracketKeyword_45_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_45_1() { return cUtyExprParserRuleCall_45_1; }

		//"<>" UtyExpr
		public Group getGroup_46() { return cGroup_46; }

		//"<>"
		public Keyword getLessThanSignGreaterThanSignKeyword_46_0() { return cLessThanSignGreaterThanSignKeyword_46_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_46_1() { return cUtyExprParserRuleCall_46_1; }

		//"[:]" UtyExpr
		public Group getGroup_47() { return cGroup_47; }

		//"[:]"
		public Keyword getLeftSquareBracketColonRightSquareBracketKeyword_47_0() { return cLeftSquareBracketColonRightSquareBracketKeyword_47_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_47_1() { return cUtyExprParserRuleCall_47_1; }

		//"<:>" UtyExpr
		public Group getGroup_48() { return cGroup_48; }

		//"<:>"
		public Keyword getLessThanSignColonGreaterThanSignKeyword_48_0() { return cLessThanSignColonGreaterThanSignKeyword_48_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_48_1() { return cUtyExprParserRuleCall_48_1; }

		//"mu" name=QName "." expr=UtyExpr
		public Group getGroup_49() { return cGroup_49; }

		//"mu"
		public Keyword getMuKeyword_49_0() { return cMuKeyword_49_0; }

		//name=QName
		public Assignment getNameAssignment_49_1() { return cNameAssignment_49_1; }

		//QName
		public RuleCall getNameQNameParserRuleCall_49_1_0() { return cNameQNameParserRuleCall_49_1_0; }

		//"."
		public Keyword getFullStopKeyword_49_2() { return cFullStopKeyword_49_2; }

		//expr=UtyExpr
		public Assignment getExprAssignment_49_3() { return cExprAssignment_49_3; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_49_3_0() { return cExprUtyExprParserRuleCall_49_3_0; }

		//"nu" name=QName "." expr=UtyExpr
		public Group getGroup_50() { return cGroup_50; }

		//"nu"
		public Keyword getNuKeyword_50_0() { return cNuKeyword_50_0; }

		//name=QName
		public Assignment getNameAssignment_50_1() { return cNameAssignment_50_1; }

		//QName
		public RuleCall getNameQNameParserRuleCall_50_1_0() { return cNameQNameParserRuleCall_50_1_0; }

		//"."
		public Keyword getFullStopKeyword_50_2() { return cFullStopKeyword_50_2; }

		//expr=UtyExpr
		public Assignment getExprAssignment_50_3() { return cExprAssignment_50_3; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_50_3_0() { return cExprUtyExprParserRuleCall_50_3_0; }

		//"fixpoints" FixpointEqList "in" expr2=UtyExpr
		public Group getGroup_51() { return cGroup_51; }

		//"fixpoints"
		public Keyword getFixpointsKeyword_51_0() { return cFixpointsKeyword_51_0; }

		//FixpointEqList
		public RuleCall getFixpointEqListParserRuleCall_51_1() { return cFixpointEqListParserRuleCall_51_1; }

		//"in"
		public Keyword getInKeyword_51_2() { return cInKeyword_51_2; }

		//expr2=UtyExpr
		public Assignment getExpr2Assignment_51_3() { return cExpr2Assignment_51_3; }

		//UtyExpr
		public RuleCall getExpr2UtyExprParserRuleCall_51_3_0() { return cExpr2UtyExprParserRuleCall_51_3_0; }

		//"forall" name=QName ":" type=QType "." expr=UtyExpr
		public Group getGroup_52() { return cGroup_52; }

		//"forall"
		public Keyword getForallKeyword_52_0() { return cForallKeyword_52_0; }

		//name=QName
		public Assignment getNameAssignment_52_1() { return cNameAssignment_52_1; }

		//QName
		public RuleCall getNameQNameParserRuleCall_52_1_0() { return cNameQNameParserRuleCall_52_1_0; }

		//":"
		public Keyword getColonKeyword_52_2() { return cColonKeyword_52_2; }

		//type=QType
		public Assignment getTypeAssignment_52_3() { return cTypeAssignment_52_3; }

		//QType
		public RuleCall getTypeQTypeParserRuleCall_52_3_0() { return cTypeQTypeParserRuleCall_52_3_0; }

		//"."
		public Keyword getFullStopKeyword_52_4() { return cFullStopKeyword_52_4; }

		//expr=UtyExpr
		public Assignment getExprAssignment_52_5() { return cExprAssignment_52_5; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_52_5_0() { return cExprUtyExprParserRuleCall_52_5_0; }

		//"exists" name=QName ":" type=QType "." expr=UtyExpr
		public Group getGroup_53() { return cGroup_53; }

		//"exists"
		public Keyword getExistsKeyword_53_0() { return cExistsKeyword_53_0; }

		//name=QName
		public Assignment getNameAssignment_53_1() { return cNameAssignment_53_1; }

		//QName
		public RuleCall getNameQNameParserRuleCall_53_1_0() { return cNameQNameParserRuleCall_53_1_0; }

		//":"
		public Keyword getColonKeyword_53_2() { return cColonKeyword_53_2; }

		//type=QType
		public Assignment getTypeAssignment_53_3() { return cTypeAssignment_53_3; }

		//QType
		public RuleCall getTypeQTypeParserRuleCall_53_3_0() { return cTypeQTypeParserRuleCall_53_3_0; }

		//"."
		public Keyword getFullStopKeyword_53_4() { return cFullStopKeyword_53_4; }

		//expr=UtyExpr
		public Assignment getExprAssignment_53_5() { return cExprAssignment_53_5; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_53_5_0() { return cExprUtyExprParserRuleCall_53_5_0; }

		//"(" UtyExpr ")"
		public Group getGroup_54() { return cGroup_54; }

		//"("
		public Keyword getLeftParenthesisKeyword_54_0() { return cLeftParenthesisKeyword_54_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_54_1() { return cUtyExprParserRuleCall_54_1; }

		//")"
		public Keyword getRightParenthesisKeyword_54_2() { return cRightParenthesisKeyword_54_2; }
	}

	public class UtyActionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UtyAction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cEmitKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cNextKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final RuleCall cUtyExprParserRuleCall_0_3 = (RuleCall)cGroup_0.eContents().get(3);
		private final Keyword cRightParenthesisKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Keyword cNextKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final Keyword cEqualsSignKeyword_1_4 = (Keyword)cGroup_1.eContents().get(4);
		private final Assignment cT2Assignment_1_5 = (Assignment)cGroup_1.eContents().get(5);
		private final RuleCall cT2UtyExprParserRuleCall_1_5_0 = (RuleCall)cT2Assignment_1_5.eContents().get(0);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final Keyword cDerKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_2_2 = (RuleCall)cGroup_2.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Keyword cLessThanSignHyphenMinusKeyword_2_4 = (Keyword)cGroup_2.eContents().get(4);
		private final Assignment cT4Assignment_2_5 = (Assignment)cGroup_2.eContents().get(5);
		private final RuleCall cT4UtyExprParserRuleCall_2_5_0 = (RuleCall)cT4Assignment_2_5.eContents().get(0);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cAssumeKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_3_2 = (RuleCall)cGroup_3.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_3_3 = (Keyword)cGroup_3.eContents().get(3);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cAssertKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_4_1 = (Keyword)cGroup_4.eContents().get(1);
		private final RuleCall cUtyExprParserRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		
		//UtyAction:
		//  "emit" "next"? "(" UtyExpr ")"|"next" "(" UtyExpr ")" "=" t2=UtyExpr|"der" "(" UtyExpr ")"
		//  "<-" t4=UtyExpr|"assume" "(" UtyExpr ")"|"assert" "(" UtyExpr ")"; 
		//
		//            
		//            //| UtyExpr "=" t1=UtyExpr
		//                         
		//            //| UtyExpr "<-" t3=UtyExpr
		//                         
		//                    
		//                    
		//            //| RELEASECAN "(" UtyExpr ")"
		//           / *  | "release" "(" UtyExpr ")"
		//            | "constrainS" "(" UtyExpr ")"
		//            | "constrainM" "(" UtyExpr ")"
		//            | "constrainE" "(" UtyExpr ")"
		//            | "constrainSM" "(" UtyExpr ")"
		//            | "constrainSE" "(" UtyExpr ")"
		//            | "constrainME" "(" UtyExpr ")"
		//            | "constrainSME" "(" UtyExpr ")"* /
		//            //| QName ":" "assume" "(" expr=UtyExpr ")"
		//            // | QName ":" "assert" "(" expr=UtyExpr ")"
		public ParserRule getRule() { return rule; }

		//"emit" "next"? "(" UtyExpr ")"|"next" "(" UtyExpr ")" "=" t2=UtyExpr|"der" "(" UtyExpr ")"
		//"<-" t4=UtyExpr|"assume" "(" UtyExpr ")"|"assert" "(" UtyExpr ")" 
		//
		//            
		//            //| UtyExpr "=" t1=UtyExpr
		//                         
		//            //| UtyExpr "<-" t3=UtyExpr
		//                         
		//                    
		//                    
		//            //| RELEASECAN "(" UtyExpr ")"
		//           / *  | "release" "(" UtyExpr ")"
		//            | "constrainS" "(" UtyExpr ")"
		//            | "constrainM" "(" UtyExpr ")"
		//            | "constrainE" "(" UtyExpr ")"
		//            | "constrainSM" "(" UtyExpr ")"
		//            | "constrainSE" "(" UtyExpr ")"
		//            | "constrainME" "(" UtyExpr ")"
		//            | "constrainSME" "(" UtyExpr ")"* /
		//            //| QName ":" "assume" "(" expr=UtyExpr ")"
		//            // | QName ":" "assert" "(" expr=UtyExpr ")"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"emit" "next"? "(" UtyExpr ")"           
		//            //| UtyExpr "=" t1=UtyExpr
		public Group getGroup_0() { return cGroup_0; }

		//"emit"
		public Keyword getEmitKeyword_0_0() { return cEmitKeyword_0_0; }

		//"next"?
		public Keyword getNextKeyword_0_1() { return cNextKeyword_0_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_0_2() { return cLeftParenthesisKeyword_0_2; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_0_3() { return cUtyExprParserRuleCall_0_3; }

		//")"   
		//            //| UtyExpr "=" t1=UtyExpr
		public Keyword getRightParenthesisKeyword_0_4() { return cRightParenthesisKeyword_0_4; }

		//"next" "(" UtyExpr ")" "=" t2=UtyExpr             
		//            //| UtyExpr "<-" t3=UtyExpr
		public Group getGroup_1() { return cGroup_1; }

		//"next"
		public Keyword getNextKeyword_1_0() { return cNextKeyword_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_1_2() { return cUtyExprParserRuleCall_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }

		//"="
		public Keyword getEqualsSignKeyword_1_4() { return cEqualsSignKeyword_1_4; }

		//t2=UtyExpr   
		//            //| UtyExpr "<-" t3=UtyExpr
		public Assignment getT2Assignment_1_5() { return cT2Assignment_1_5; }

		//UtyExpr 
		//            //| UtyExpr "<-" t3=UtyExpr
		public RuleCall getT2UtyExprParserRuleCall_1_5_0() { return cT2UtyExprParserRuleCall_1_5_0; }

		//"der" "(" UtyExpr ")" "<-" t4=UtyExpr
		public Group getGroup_2() { return cGroup_2; }

		//"der"
		public Keyword getDerKeyword_2_0() { return cDerKeyword_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_1() { return cLeftParenthesisKeyword_2_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_2_2() { return cUtyExprParserRuleCall_2_2; }

		//")"
		public Keyword getRightParenthesisKeyword_2_3() { return cRightParenthesisKeyword_2_3; }

		//"<-"
		public Keyword getLessThanSignHyphenMinusKeyword_2_4() { return cLessThanSignHyphenMinusKeyword_2_4; }

		//t4=UtyExpr
		public Assignment getT4Assignment_2_5() { return cT4Assignment_2_5; }

		//UtyExpr
		public RuleCall getT4UtyExprParserRuleCall_2_5_0() { return cT4UtyExprParserRuleCall_2_5_0; }

		//"assume" "(" UtyExpr ")"
		public Group getGroup_3() { return cGroup_3; }

		//"assume"
		public Keyword getAssumeKeyword_3_0() { return cAssumeKeyword_3_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_3_1() { return cLeftParenthesisKeyword_3_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_3_2() { return cUtyExprParserRuleCall_3_2; }

		//")"
		public Keyword getRightParenthesisKeyword_3_3() { return cRightParenthesisKeyword_3_3; }

		//"assert" "(" UtyExpr ")"         
		//            //| RELEASECAN "(" UtyExpr ")"
		//           / *  | "release" "(" UtyExpr ")"
		//            | "constrainS" "(" UtyExpr ")"
		//            | "constrainM" "(" UtyExpr ")"
		//            | "constrainE" "(" UtyExpr ")"
		//            | "constrainSM" "(" UtyExpr ")"
		//            | "constrainSE" "(" UtyExpr ")"
		//            | "constrainME" "(" UtyExpr ")"
		//            | "constrainSME" "(" UtyExpr ")"* /
		//            //| QName ":" "assume" "(" expr=UtyExpr ")"
		//            // | QName ":" "assert" "(" expr=UtyExpr ")"
		public Group getGroup_4() { return cGroup_4; }

		//"assert"
		public Keyword getAssertKeyword_4_0() { return cAssertKeyword_4_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_4_1() { return cLeftParenthesisKeyword_4_1; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_4_2() { return cUtyExprParserRuleCall_4_2; }

		//")"   
		//            //| RELEASECAN "(" UtyExpr ")"
		//           / *  | "release" "(" UtyExpr ")"
		//            | "constrainS" "(" UtyExpr ")"
		//            | "constrainM" "(" UtyExpr ")"
		//            | "constrainE" "(" UtyExpr ")"
		//            | "constrainSM" "(" UtyExpr ")"
		//            | "constrainSE" "(" UtyExpr ")"
		//            | "constrainME" "(" UtyExpr ")"
		//            | "constrainSME" "(" UtyExpr ")"* /
		//            //| QName ":" "assume" "(" expr=UtyExpr ")"
		//            // | QName ":" "assert" "(" expr=UtyExpr ")"
		public Keyword getRightParenthesisKeyword_4_3() { return cRightParenthesisKeyword_4_3; }
	}

	public class Case_listElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "case_list");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpDUtyExprParserRuleCall_0_0 = (RuleCall)cExpAssignment_0.eContents().get(0);
		private final Keyword cDoKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cStmtAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStmtStmtParserRuleCall_2_0 = (RuleCall)cStmtAssignment_2.eContents().get(0);
		
		//case_list:
		//  (exp+=dUtyExpr "do" stmt+=Stmt)*;
		public ParserRule getRule() { return rule; }

		//(exp+=dUtyExpr "do" stmt+=Stmt)*
		public Group getGroup() { return cGroup; }

		//exp+=dUtyExpr
		public Assignment getExpAssignment_0() { return cExpAssignment_0; }

		//dUtyExpr
		public RuleCall getExpDUtyExprParserRuleCall_0_0() { return cExpDUtyExprParserRuleCall_0_0; }

		//"do"
		public Keyword getDoKeyword_1() { return cDoKeyword_1; }

		//stmt+=Stmt
		public Assignment getStmtAssignment_2() { return cStmtAssignment_2; }

		//Stmt
		public RuleCall getStmtStmtParserRuleCall_2_0() { return cStmtStmtParserRuleCall_2_0; }
	}

	public class DUtyExprElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dUtyExpr");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cUtyExprParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cRightParenthesisKeyword_2 = (Keyword)cGroup.eContents().get(2);
		
		//dUtyExpr:
		//  "(" UtyExpr ")";
		public ParserRule getRule() { return rule; }

		//"(" UtyExpr ")"
		public Group getGroup() { return cGroup; }

		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }

		//UtyExpr
		public RuleCall getUtyExprParserRuleCall_1() { return cUtyExprParserRuleCall_1; }

		//")"
		public Keyword getRightParenthesisKeyword_2() { return cRightParenthesisKeyword_2; }
	}

	public class DUtyExprsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "dUtyExprs");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cDUtyExprParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Keyword cSemicolonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		
		//dUtyExprs:
		//  dUtyExpr ";";
		public ParserRule getRule() { return rule; }

		//dUtyExpr ";"
		public Group getGroup() { return cGroup; }

		//dUtyExpr
		public RuleCall getDUtyExprParserRuleCall_0() { return cDUtyExprParserRuleCall_0; }

		//";"
		public Keyword getSemicolonKeyword_1() { return cSemicolonKeyword_1; }
	}

	public class GenericElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Generic");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final RuleCall cQNameParserRuleCall_1 = (RuleCall)cGroup.eContents().get(1);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cT6Assignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cT6UtyExprParserRuleCall_3_0 = (RuleCall)cT6Assignment_3.eContents().get(0);
		private final Keyword cFullStopFullStopKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cT5Assignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cT5UtyExprParserRuleCall_5_0 = (RuleCall)cT5Assignment_5.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_6 = (Keyword)cGroup.eContents().get(6);
		
		//Generic:
		//  "(" QName "=" t6=UtyExpr ".." t5=UtyExpr ")";
		public ParserRule getRule() { return rule; }

		//"(" QName "=" t6=UtyExpr ".." t5=UtyExpr ")"
		public Group getGroup() { return cGroup; }

		//"("
		public Keyword getLeftParenthesisKeyword_0() { return cLeftParenthesisKeyword_0; }

		//QName
		public RuleCall getQNameParserRuleCall_1() { return cQNameParserRuleCall_1; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//t6=UtyExpr
		public Assignment getT6Assignment_3() { return cT6Assignment_3; }

		//UtyExpr
		public RuleCall getT6UtyExprParserRuleCall_3_0() { return cT6UtyExprParserRuleCall_3_0; }

		//".."
		public Keyword getFullStopFullStopKeyword_4() { return cFullStopFullStopKeyword_4; }

		//t5=UtyExpr
		public Assignment getT5Assignment_5() { return cT5Assignment_5; }

		//UtyExpr
		public RuleCall getT5UtyExprParserRuleCall_5_0() { return cT5UtyExprParserRuleCall_5_0; }

		//")"
		public Keyword getRightParenthesisKeyword_6() { return cRightParenthesisKeyword_6; }
	}

	public class LocStmtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LocStmt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cLocalsAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cLocalsInterfaceListParserRuleCall_1_0_0 = (RuleCall)cLocalsAssignment_1_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cStmtAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cStmtStmtParserRuleCall_2_0 = (RuleCall)cStmtAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		
		//LocStmt:
		//  "{" (locals+=InterfaceList ";")* stmt=Stmt "}";
		public ParserRule getRule() { return rule; }

		//"{" (locals+=InterfaceList ";")* stmt=Stmt "}"
		public Group getGroup() { return cGroup; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_0() { return cLeftCurlyBracketKeyword_0; }

		//(locals+=InterfaceList ";")*
		public Group getGroup_1() { return cGroup_1; }

		//locals+=InterfaceList
		public Assignment getLocalsAssignment_1_0() { return cLocalsAssignment_1_0; }

		//InterfaceList
		public RuleCall getLocalsInterfaceListParserRuleCall_1_0_0() { return cLocalsInterfaceListParserRuleCall_1_0_0; }

		//";"
		public Keyword getSemicolonKeyword_1_1() { return cSemicolonKeyword_1_1; }

		//stmt=Stmt
		public Assignment getStmtAssignment_2() { return cStmtAssignment_2; }

		//Stmt
		public RuleCall getStmtStmtParserRuleCall_2_0() { return cStmtStmtParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }
	}

	public class SeqStmtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SeqStmt");
		private final Assignment cSAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cSAtomicStmtParserRuleCall_0 = (RuleCall)cSAssignment.eContents().get(0);
		
		//SeqStmt:
		//  s+=AtomicStmt+;
		public ParserRule getRule() { return rule; }

		//s+=AtomicStmt+
		public Assignment getSAssignment() { return cSAssignment; }

		//AtomicStmt
		public RuleCall getSAtomicStmtParserRuleCall_0() { return cSAtomicStmtParserRuleCall_0; }
	}

	public class StmtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Stmt");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLeftAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cLeftSeqStmtParserRuleCall_0_0 = (RuleCall)cLeftAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Alternatives cAlternatives_1_0 = (Alternatives)cGroup_1.eContents().get(0);
		private final Keyword cVerticalLineVerticalLineKeyword_1_0_0 = (Keyword)cAlternatives_1_0.eContents().get(0);
		private final Keyword cVerticalLineVerticalLineVerticalLineKeyword_1_0_1 = (Keyword)cAlternatives_1_0.eContents().get(1);
		private final RuleCall cORParserRuleCall_1_0_2 = (RuleCall)cAlternatives_1_0.eContents().get(2);
		private final Keyword cAmpersandAmpersandKeyword_1_0_3 = (Keyword)cAlternatives_1_0.eContents().get(3);
		private final Keyword cAmpersandAmpersandAmpersandKeyword_1_0_4 = (Keyword)cAlternatives_1_0.eContents().get(4);
		private final RuleCall cANDParserRuleCall_1_0_5 = (RuleCall)cAlternatives_1_0.eContents().get(5);
		private final Assignment cRightAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cRightSeqStmtParserRuleCall_1_1_0 = (RuleCall)cRightAssignment_1_1.eContents().get(0);
		
		//Stmt:
		//  left=SeqStmt (("||"|"|||"|OR|"&&"|"&&&"|AND) right+=SeqStmt)*;
		public ParserRule getRule() { return rule; }

		//left=SeqStmt (("||"|"|||"|OR|"&&"|"&&&"|AND) right+=SeqStmt)*
		public Group getGroup() { return cGroup; }

		//left=SeqStmt
		public Assignment getLeftAssignment_0() { return cLeftAssignment_0; }

		//SeqStmt
		public RuleCall getLeftSeqStmtParserRuleCall_0_0() { return cLeftSeqStmtParserRuleCall_0_0; }

		//(("||"|"|||"|OR|"&&"|"&&&"|AND) right+=SeqStmt)*
		public Group getGroup_1() { return cGroup_1; }

		//"||"|"|||"|OR|"&&"|"&&&"|AND
		public Alternatives getAlternatives_1_0() { return cAlternatives_1_0; }

		//"||"
		public Keyword getVerticalLineVerticalLineKeyword_1_0_0() { return cVerticalLineVerticalLineKeyword_1_0_0; }

		//"|||"
		public Keyword getVerticalLineVerticalLineVerticalLineKeyword_1_0_1() { return cVerticalLineVerticalLineVerticalLineKeyword_1_0_1; }

		//OR
		public RuleCall getORParserRuleCall_1_0_2() { return cORParserRuleCall_1_0_2; }

		//"&&"
		public Keyword getAmpersandAmpersandKeyword_1_0_3() { return cAmpersandAmpersandKeyword_1_0_3; }

		//"&&&"
		public Keyword getAmpersandAmpersandAmpersandKeyword_1_0_4() { return cAmpersandAmpersandAmpersandKeyword_1_0_4; }

		//AND
		public RuleCall getANDParserRuleCall_1_0_5() { return cANDParserRuleCall_1_0_5; }

		//right+=SeqStmt
		public Assignment getRightAssignment_1_1() { return cRightAssignment_1_1; }

		//SeqStmt
		public RuleCall getRightSeqStmtParserRuleCall_1_1_0() { return cRightSeqStmtParserRuleCall_1_1_0; }
	}

	public class AtomicStmtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AtomicStmt");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Keyword cNothingKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cSemicolonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cUtyActionParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cSemicolonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final RuleCall cNamedStmtParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Keyword cWeakKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cImmediateKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Keyword cAbortKeyword_3_2 = (Keyword)cGroup_3.eContents().get(2);
		private final RuleCall cAtomicStmtParserRuleCall_3_3 = (RuleCall)cGroup_3.eContents().get(3);
		private final Keyword cWhenKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Assignment cExprAssignment_3_5 = (Assignment)cGroup_3.eContents().get(5);
		private final RuleCall cExprDUtyExprsParserRuleCall_3_5_0 = (RuleCall)cExprAssignment_3_5.eContents().get(0);
		private final Group cGroup_4 = (Group)cAlternatives.eContents().get(4);
		private final Keyword cImmediateKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Alternatives cAlternatives_4_1 = (Alternatives)cGroup_4.eContents().get(1);
		private final Keyword cDuringKeyword_4_1_0 = (Keyword)cAlternatives_4_1.eContents().get(0);
		private final Keyword cFinalKeyword_4_1_1 = (Keyword)cAlternatives_4_1.eContents().get(1);
		private final RuleCall cAtomicStmtParserRuleCall_4_2 = (RuleCall)cGroup_4.eContents().get(2);
		private final Keyword cDoKeyword_4_3 = (Keyword)cGroup_4.eContents().get(3);
		private final Assignment cT03Assignment_4_4 = (Assignment)cGroup_4.eContents().get(4);
		private final RuleCall cT03AtomicStmtParserRuleCall_4_4_0 = (RuleCall)cT03Assignment_4_4.eContents().get(0);
		private final Group cGroup_5 = (Group)cAlternatives.eContents().get(5);
		private final Keyword cAbstractKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final RuleCall cAtomicStmtParserRuleCall_5_1 = (RuleCall)cGroup_5.eContents().get(1);
		private final Group cGroup_6 = (Group)cAlternatives.eContents().get(6);
		private final Keyword cCaseKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final RuleCall cCase_listParserRuleCall_6_1 = (RuleCall)cGroup_6.eContents().get(1);
		private final Keyword cDefaultKeyword_6_2 = (Keyword)cGroup_6.eContents().get(2);
		private final Assignment cT15Assignment_6_3 = (Assignment)cGroup_6.eContents().get(3);
		private final RuleCall cT15AtomicStmtParserRuleCall_6_3_0 = (RuleCall)cT15Assignment_6_3.eContents().get(0);
		private final Group cGroup_7 = (Group)cAlternatives.eContents().get(7);
		private final Keyword cChooseKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final RuleCall cGenericParserRuleCall_7_1 = (RuleCall)cGroup_7.eContents().get(1);
		private final Assignment cT23Assignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cT23AtomicStmtParserRuleCall_7_2_0 = (RuleCall)cT23Assignment_7_2.eContents().get(0);
		private final Group cGroup_8 = (Group)cAlternatives.eContents().get(8);
		private final Keyword cDoKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final RuleCall cAtomicStmtParserRuleCall_8_1 = (RuleCall)cGroup_8.eContents().get(1);
		private final Keyword cWhileKeyword_8_2 = (Keyword)cGroup_8.eContents().get(2);
		private final Assignment cT06Assignment_8_3 = (Assignment)cGroup_8.eContents().get(3);
		private final RuleCall cT06DUtyExprsParserRuleCall_8_3_0 = (RuleCall)cT06Assignment_8_3.eContents().get(0);
		private final Group cGroup_9 = (Group)cAlternatives.eContents().get(9);
		private final Keyword cForKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final RuleCall cGenericParserRuleCall_9_1 = (RuleCall)cGroup_9.eContents().get(1);
		private final Group cGroup_9_2 = (Group)cGroup_9.eContents().get(2);
		private final Keyword cDoKeyword_9_2_0 = (Keyword)cGroup_9_2.eContents().get(0);
		private final Alternatives cAlternatives_9_2_1 = (Alternatives)cGroup_9_2.eContents().get(1);
		private final Keyword cVerticalLineVerticalLineKeyword_9_2_1_0 = (Keyword)cAlternatives_9_2_1.eContents().get(0);
		private final Keyword cAmpersandAmpersandKeyword_9_2_1_1 = (Keyword)cAlternatives_9_2_1.eContents().get(1);
		private final Keyword cVerticalLineVerticalLineVerticalLineKeyword_9_2_1_2 = (Keyword)cAlternatives_9_2_1.eContents().get(2);
		private final Keyword cAmpersandAmpersandAmpersandKeyword_9_2_1_3 = (Keyword)cAlternatives_9_2_1.eContents().get(3);
		private final RuleCall cORParserRuleCall_9_2_1_4 = (RuleCall)cAlternatives_9_2_1.eContents().get(4);
		private final RuleCall cANDParserRuleCall_9_2_1_5 = (RuleCall)cAlternatives_9_2_1.eContents().get(5);
		private final Assignment cTAssignment_9_3 = (Assignment)cGroup_9.eContents().get(3);
		private final RuleCall cTAtomicStmtParserRuleCall_9_3_0 = (RuleCall)cTAssignment_9_3.eContents().get(0);
		private final Group cGroup_10 = (Group)cAlternatives.eContents().get(10);
		private final Keyword cIfKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final RuleCall cDUtyExprParserRuleCall_10_1 = (RuleCall)cGroup_10.eContents().get(1);
		private final Assignment cT13Assignment_10_2 = (Assignment)cGroup_10.eContents().get(2);
		private final RuleCall cT13AtomicStmtParserRuleCall_10_2_0 = (RuleCall)cT13Assignment_10_2.eContents().get(0);
		private final Keyword cElseKeyword_10_3 = (Keyword)cGroup_10.eContents().get(3);
		private final Assignment cT14Assignment_10_4 = (Assignment)cGroup_10.eContents().get(4);
		private final RuleCall cT14AtomicStmtParserRuleCall_10_4_0 = (RuleCall)cT14Assignment_10_4.eContents().get(0);
		private final Group cGroup_11 = (Group)cAlternatives.eContents().get(11);
		private final Keyword cLetKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final RuleCall cQNameParserRuleCall_11_2 = (RuleCall)cGroup_11.eContents().get(2);
		private final Keyword cEqualsSignKeyword_11_3 = (Keyword)cGroup_11.eContents().get(3);
		private final Assignment cExprAssignment_11_4 = (Assignment)cGroup_11.eContents().get(4);
		private final RuleCall cExprUtyExprParserRuleCall_11_4_0 = (RuleCall)cExprAssignment_11_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_11_5 = (Keyword)cGroup_11.eContents().get(5);
		private final Assignment cT24Assignment_11_6 = (Assignment)cGroup_11.eContents().get(6);
		private final RuleCall cT24AtomicStmtParserRuleCall_11_6_0 = (RuleCall)cT24Assignment_11_6.eContents().get(0);
		private final Group cGroup_12 = (Group)cAlternatives.eContents().get(12);
		private final Keyword cLoopKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final RuleCall cAtomicStmtParserRuleCall_12_1 = (RuleCall)cGroup_12.eContents().get(1);
		private final Group cGroup_13 = (Group)cAlternatives.eContents().get(13);
		private final Keyword cWhileKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final RuleCall cDUtyExprParserRuleCall_13_1 = (RuleCall)cGroup_13.eContents().get(1);
		private final Assignment cT07Assignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cT07AtomicStmtParserRuleCall_13_2_0 = (RuleCall)cT07Assignment_13_2.eContents().get(0);
		private final RuleCall cLocStmtParserRuleCall_14 = (RuleCall)cAlternatives.eContents().get(14);
		
		//AtomicStmt:
		//  "nothing" ";"|UtyAction ";"|NamedStmt|"weak"? "immediate"? "abort" AtomicStmt "when"
		//  expr=dUtyExprs|"immediate"? ("during"|"final") AtomicStmt "do" t03=AtomicStmt|
		//  "abstract" AtomicStmt|"case" case_list "default" t15=AtomicStmt|"choose" Generic t23=
		//  AtomicStmt|"do" AtomicStmt "while" t06=dUtyExprs|"for" Generic ("do" ("||"|"&&"|"|||"|
		//  "&&&"|OR|AND))? t=AtomicStmt|"if" dUtyExpr t13=AtomicStmt "else" t14=AtomicStmt|"let"
		//  "(" QName "=" expr=UtyExpr ")" t24=AtomicStmt|"loop" AtomicStmt|"while" dUtyExpr t07=
		//  AtomicStmt|LocStmt; 
		//
		//    
		//        
		//       
		//                
		//                  
		//        
		//            
		//   // | "choose" AtomicStmt "else" t16=AtomicStmt
		public ParserRule getRule() { return rule; }

		//"nothing" ";"|UtyAction ";"|NamedStmt|"weak"? "immediate"? "abort" AtomicStmt "when"
		//expr=dUtyExprs|"immediate"? ("during"|"final") AtomicStmt "do" t03=AtomicStmt|
		//"abstract" AtomicStmt|"case" case_list "default" t15=AtomicStmt|"choose" Generic t23=
		//AtomicStmt|"do" AtomicStmt "while" t06=dUtyExprs|"for" Generic ("do" ("||"|"&&"|"|||"|
		//"&&&"|OR|AND))? t=AtomicStmt|"if" dUtyExpr t13=AtomicStmt "else" t14=AtomicStmt|"let"
		//"(" QName "=" expr=UtyExpr ")" t24=AtomicStmt|"loop" AtomicStmt|"while" dUtyExpr t07=
		//AtomicStmt|LocStmt 
		//
		//    
		//        
		//       
		//                
		//                  
		//        
		//            
		//   // | "choose" AtomicStmt "else" t16=AtomicStmt
		public Alternatives getAlternatives() { return cAlternatives; }

		//"nothing" ";"
		public Group getGroup_0() { return cGroup_0; }

		//"nothing"
		public Keyword getNothingKeyword_0_0() { return cNothingKeyword_0_0; }

		//";"
		public Keyword getSemicolonKeyword_0_1() { return cSemicolonKeyword_0_1; }

		//UtyAction ";"
		public Group getGroup_1() { return cGroup_1; }

		//UtyAction
		public RuleCall getUtyActionParserRuleCall_1_0() { return cUtyActionParserRuleCall_1_0; }

		//";"
		public Keyword getSemicolonKeyword_1_1() { return cSemicolonKeyword_1_1; }

		//NamedStmt
		public RuleCall getNamedStmtParserRuleCall_2() { return cNamedStmtParserRuleCall_2; }

		//"weak"? "immediate"? "abort" AtomicStmt "when" expr=dUtyExprs
		public Group getGroup_3() { return cGroup_3; }

		//"weak"?
		public Keyword getWeakKeyword_3_0() { return cWeakKeyword_3_0; }

		//"immediate"?
		public Keyword getImmediateKeyword_3_1() { return cImmediateKeyword_3_1; }

		//"abort"
		public Keyword getAbortKeyword_3_2() { return cAbortKeyword_3_2; }

		//AtomicStmt
		public RuleCall getAtomicStmtParserRuleCall_3_3() { return cAtomicStmtParserRuleCall_3_3; }

		//"when"
		public Keyword getWhenKeyword_3_4() { return cWhenKeyword_3_4; }

		//expr=dUtyExprs
		public Assignment getExprAssignment_3_5() { return cExprAssignment_3_5; }

		//dUtyExprs
		public RuleCall getExprDUtyExprsParserRuleCall_3_5_0() { return cExprDUtyExprsParserRuleCall_3_5_0; }

		//"immediate"? ("during"|"final") AtomicStmt "do" t03=AtomicStmt
		public Group getGroup_4() { return cGroup_4; }

		//"immediate"?
		public Keyword getImmediateKeyword_4_0() { return cImmediateKeyword_4_0; }

		//"during"|"final"
		public Alternatives getAlternatives_4_1() { return cAlternatives_4_1; }

		//"during"
		public Keyword getDuringKeyword_4_1_0() { return cDuringKeyword_4_1_0; }

		//"final"
		public Keyword getFinalKeyword_4_1_1() { return cFinalKeyword_4_1_1; }

		//AtomicStmt
		public RuleCall getAtomicStmtParserRuleCall_4_2() { return cAtomicStmtParserRuleCall_4_2; }

		//"do"
		public Keyword getDoKeyword_4_3() { return cDoKeyword_4_3; }

		//t03=AtomicStmt
		public Assignment getT03Assignment_4_4() { return cT03Assignment_4_4; }

		//AtomicStmt
		public RuleCall getT03AtomicStmtParserRuleCall_4_4_0() { return cT03AtomicStmtParserRuleCall_4_4_0; }

		//"abstract" AtomicStmt
		public Group getGroup_5() { return cGroup_5; }

		//"abstract"
		public Keyword getAbstractKeyword_5_0() { return cAbstractKeyword_5_0; }

		//AtomicStmt
		public RuleCall getAtomicStmtParserRuleCall_5_1() { return cAtomicStmtParserRuleCall_5_1; }

		//"case" case_list "default" t15=AtomicStmt         
		//   // | "choose" AtomicStmt "else" t16=AtomicStmt
		public Group getGroup_6() { return cGroup_6; }

		//"case"
		public Keyword getCaseKeyword_6_0() { return cCaseKeyword_6_0; }

		//case_list
		public RuleCall getCase_listParserRuleCall_6_1() { return cCase_listParserRuleCall_6_1; }

		//"default"
		public Keyword getDefaultKeyword_6_2() { return cDefaultKeyword_6_2; }

		//t15=AtomicStmt   
		//   // | "choose" AtomicStmt "else" t16=AtomicStmt
		public Assignment getT15Assignment_6_3() { return cT15Assignment_6_3; }

		//AtomicStmt 
		//   // | "choose" AtomicStmt "else" t16=AtomicStmt
		public RuleCall getT15AtomicStmtParserRuleCall_6_3_0() { return cT15AtomicStmtParserRuleCall_6_3_0; }

		//"choose" Generic t23=AtomicStmt
		public Group getGroup_7() { return cGroup_7; }

		//"choose"
		public Keyword getChooseKeyword_7_0() { return cChooseKeyword_7_0; }

		//Generic
		public RuleCall getGenericParserRuleCall_7_1() { return cGenericParserRuleCall_7_1; }

		//t23=AtomicStmt
		public Assignment getT23Assignment_7_2() { return cT23Assignment_7_2; }

		//AtomicStmt
		public RuleCall getT23AtomicStmtParserRuleCall_7_2_0() { return cT23AtomicStmtParserRuleCall_7_2_0; }

		//"do" AtomicStmt "while" t06=dUtyExprs
		public Group getGroup_8() { return cGroup_8; }

		//"do"
		public Keyword getDoKeyword_8_0() { return cDoKeyword_8_0; }

		//AtomicStmt
		public RuleCall getAtomicStmtParserRuleCall_8_1() { return cAtomicStmtParserRuleCall_8_1; }

		//"while"
		public Keyword getWhileKeyword_8_2() { return cWhileKeyword_8_2; }

		//t06=dUtyExprs
		public Assignment getT06Assignment_8_3() { return cT06Assignment_8_3; }

		//dUtyExprs
		public RuleCall getT06DUtyExprsParserRuleCall_8_3_0() { return cT06DUtyExprsParserRuleCall_8_3_0; }

		//"for" Generic ("do" ("||"|"&&"|"|||"|"&&&"|OR|AND))? t=AtomicStmt
		public Group getGroup_9() { return cGroup_9; }

		//"for"
		public Keyword getForKeyword_9_0() { return cForKeyword_9_0; }

		//Generic
		public RuleCall getGenericParserRuleCall_9_1() { return cGenericParserRuleCall_9_1; }

		//("do" ("||"|"&&"|"|||"|"&&&"|OR|AND))?
		public Group getGroup_9_2() { return cGroup_9_2; }

		//"do"
		public Keyword getDoKeyword_9_2_0() { return cDoKeyword_9_2_0; }

		//"||"|"&&"|"|||"|"&&&"|OR|AND
		public Alternatives getAlternatives_9_2_1() { return cAlternatives_9_2_1; }

		//"||"
		public Keyword getVerticalLineVerticalLineKeyword_9_2_1_0() { return cVerticalLineVerticalLineKeyword_9_2_1_0; }

		//"&&"
		public Keyword getAmpersandAmpersandKeyword_9_2_1_1() { return cAmpersandAmpersandKeyword_9_2_1_1; }

		//"|||"
		public Keyword getVerticalLineVerticalLineVerticalLineKeyword_9_2_1_2() { return cVerticalLineVerticalLineVerticalLineKeyword_9_2_1_2; }

		//"&&&"
		public Keyword getAmpersandAmpersandAmpersandKeyword_9_2_1_3() { return cAmpersandAmpersandAmpersandKeyword_9_2_1_3; }

		//OR
		public RuleCall getORParserRuleCall_9_2_1_4() { return cORParserRuleCall_9_2_1_4; }

		//AND
		public RuleCall getANDParserRuleCall_9_2_1_5() { return cANDParserRuleCall_9_2_1_5; }

		//t=AtomicStmt
		public Assignment getTAssignment_9_3() { return cTAssignment_9_3; }

		//AtomicStmt
		public RuleCall getTAtomicStmtParserRuleCall_9_3_0() { return cTAtomicStmtParserRuleCall_9_3_0; }

		//"if" dUtyExpr t13=AtomicStmt "else" t14=AtomicStmt
		public Group getGroup_10() { return cGroup_10; }

		//"if"
		public Keyword getIfKeyword_10_0() { return cIfKeyword_10_0; }

		//dUtyExpr
		public RuleCall getDUtyExprParserRuleCall_10_1() { return cDUtyExprParserRuleCall_10_1; }

		//t13=AtomicStmt
		public Assignment getT13Assignment_10_2() { return cT13Assignment_10_2; }

		//AtomicStmt
		public RuleCall getT13AtomicStmtParserRuleCall_10_2_0() { return cT13AtomicStmtParserRuleCall_10_2_0; }

		//"else"
		public Keyword getElseKeyword_10_3() { return cElseKeyword_10_3; }

		//t14=AtomicStmt
		public Assignment getT14Assignment_10_4() { return cT14Assignment_10_4; }

		//AtomicStmt
		public RuleCall getT14AtomicStmtParserRuleCall_10_4_0() { return cT14AtomicStmtParserRuleCall_10_4_0; }

		//"let" "(" QName "=" expr=UtyExpr ")" t24=AtomicStmt
		public Group getGroup_11() { return cGroup_11; }

		//"let"
		public Keyword getLetKeyword_11_0() { return cLetKeyword_11_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_11_1() { return cLeftParenthesisKeyword_11_1; }

		//QName
		public RuleCall getQNameParserRuleCall_11_2() { return cQNameParserRuleCall_11_2; }

		//"="
		public Keyword getEqualsSignKeyword_11_3() { return cEqualsSignKeyword_11_3; }

		//expr=UtyExpr
		public Assignment getExprAssignment_11_4() { return cExprAssignment_11_4; }

		//UtyExpr
		public RuleCall getExprUtyExprParserRuleCall_11_4_0() { return cExprUtyExprParserRuleCall_11_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_11_5() { return cRightParenthesisKeyword_11_5; }

		//t24=AtomicStmt
		public Assignment getT24Assignment_11_6() { return cT24Assignment_11_6; }

		//AtomicStmt
		public RuleCall getT24AtomicStmtParserRuleCall_11_6_0() { return cT24AtomicStmtParserRuleCall_11_6_0; }

		//"loop" AtomicStmt
		public Group getGroup_12() { return cGroup_12; }

		//"loop"
		public Keyword getLoopKeyword_12_0() { return cLoopKeyword_12_0; }

		//AtomicStmt
		public RuleCall getAtomicStmtParserRuleCall_12_1() { return cAtomicStmtParserRuleCall_12_1; }

		//"while" dUtyExpr t07=AtomicStmt
		public Group getGroup_13() { return cGroup_13; }

		//"while"
		public Keyword getWhileKeyword_13_0() { return cWhileKeyword_13_0; }

		//dUtyExpr
		public RuleCall getDUtyExprParserRuleCall_13_1() { return cDUtyExprParserRuleCall_13_1; }

		//t07=AtomicStmt
		public Assignment getT07Assignment_13_2() { return cT07Assignment_13_2; }

		//AtomicStmt
		public RuleCall getT07AtomicStmtParserRuleCall_13_2_0() { return cT07AtomicStmtParserRuleCall_13_2_0; }

		//LocStmt
		public RuleCall getLocStmtParserRuleCall_14() { return cLocStmtParserRuleCall_14; }
	}

	public class NamedStmtElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamedStmt");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Group cGroup_0_0 = (Group)cGroup_0.eContents().get(0);
		private final RuleCall cQNameParserRuleCall_0_0_0 = (RuleCall)cGroup_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_0_1 = (Keyword)cGroup_0_0.eContents().get(1);
		private final Keyword cPauseKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Keyword cSemicolonKeyword_0_2 = (Keyword)cGroup_0.eContents().get(2);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cGroup_1.eContents().get(0);
		private final RuleCall cQNameParserRuleCall_1_0_0 = (RuleCall)cGroup_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_0_1 = (Keyword)cGroup_1_0.eContents().get(1);
		private final Keyword cHaltKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Keyword cSemicolonKeyword_1_2 = (Keyword)cGroup_1.eContents().get(2);
		private final Group cGroup_2 = (Group)cAlternatives.eContents().get(2);
		private final RuleCall cQNameParserRuleCall_2_0 = (RuleCall)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameQNameParserRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_2_3 = (Keyword)cGroup_2.eContents().get(3);
		private final Assignment cExprsAssignment_2_4 = (Assignment)cGroup_2.eContents().get(4);
		private final RuleCall cExprsOptUtyExprListParserRuleCall_2_4_0 = (RuleCall)cExprsAssignment_2_4.eContents().get(0);
		private final Keyword cRightParenthesisKeyword_2_5 = (Keyword)cGroup_2.eContents().get(5);
		private final Keyword cSemicolonKeyword_2_6 = (Keyword)cGroup_2.eContents().get(6);
		private final Group cGroup_3 = (Group)cAlternatives.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cGroup_3.eContents().get(0);
		private final RuleCall cQNameParserRuleCall_3_0_0 = (RuleCall)cGroup_3_0.eContents().get(0);
		private final Keyword cCommaKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Assignment cNameAssignment_3_0_2 = (Assignment)cGroup_3_0.eContents().get(2);
		private final RuleCall cNameQNameParserRuleCall_3_0_2_0 = (RuleCall)cNameAssignment_3_0_2.eContents().get(0);
		private final Keyword cColonKeyword_3_0_3 = (Keyword)cGroup_3_0.eContents().get(3);
		private final Keyword cEveryKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cExprAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cExprDUtyExprParserRuleCall_3_2_0 = (RuleCall)cExprAssignment_3_2.eContents().get(0);
		private final Assignment cT10Assignment_3_3 = (Assignment)cGroup_3.eContents().get(3);
		private final RuleCall cT10AtomicStmtParserRuleCall_3_3_0 = (RuleCall)cT10Assignment_3_3.eContents().get(0);
		
		//NamedStmt:
		//  (QName ":")? "pause" ";"|(QName ":")? "halt" ";"|QName ":" name=QName "(" exprs=
		//  OptUtyExprList ")" ";"|(QName "," name=QName ":")? "every" expr=dUtyExpr t10=AtomicStmt; 
		//     
		//       
		//
		//            
		//             
		//                   
		//    // | QName "(" exprs=OptUtyExprList ")" ";"
		//     // | (QName ":")? "immediate"? "await" expr=dUtyExprs
		//    //  | (QName ":")? "weak"? "immediate"? "suspend" stmt=Stmt "when" ts=dUtyExprs
		//    //  | (QName ":")? "each" expr=dUtyExpr t08=Stmt
		//    //  | (QName ":")? "immediate"? "always" stmt=Stmt
		//                    
		//         // tokens
		//         / *--------- comments and whitespaces --------------------- * / 
		//      / *      | [` ` `\t`  `\012`]  { Token lexbuf}         (* skip whitespace   *)
		//      | [`\n` `\r`]         { UtyExprs.ParsedLineNo := (!UtyExprs.ParsedLineNo)+1;
		//                              Token lexbuf}* /
		//      / * ---- boolean operators ------- * /
		public ParserRule getRule() { return rule; }

		//(QName ":")? "pause" ";"|(QName ":")? "halt" ";"|QName ":" name=QName "(" exprs=
		//OptUtyExprList ")" ";"|(QName "," name=QName ":")? "every" expr=dUtyExpr t10=AtomicStmt 
		//     
		//       
		//
		//            
		//             
		//                   
		//    // | QName "(" exprs=OptUtyExprList ")" ";"
		//     // | (QName ":")? "immediate"? "await" expr=dUtyExprs
		//    //  | (QName ":")? "weak"? "immediate"? "suspend" stmt=Stmt "when" ts=dUtyExprs
		//    //  | (QName ":")? "each" expr=dUtyExpr t08=Stmt
		//    //  | (QName ":")? "immediate"? "always" stmt=Stmt
		//                    
		//         // tokens
		//         / *--------- comments and whitespaces --------------------- * / 
		//      / *      | [` ` `\t`  `\012`]  { Token lexbuf}         (* skip whitespace   *)
		//      | [`\n` `\r`]         { UtyExprs.ParsedLineNo := (!UtyExprs.ParsedLineNo)+1;
		//                              Token lexbuf}* /
		//      / * ---- boolean operators ------- * /
		public Alternatives getAlternatives() { return cAlternatives; }

		//(QName ":")? "pause" ";"
		public Group getGroup_0() { return cGroup_0; }

		//(QName ":")?
		public Group getGroup_0_0() { return cGroup_0_0; }

		//QName
		public RuleCall getQNameParserRuleCall_0_0_0() { return cQNameParserRuleCall_0_0_0; }

		//":"
		public Keyword getColonKeyword_0_0_1() { return cColonKeyword_0_0_1; }

		//"pause"
		public Keyword getPauseKeyword_0_1() { return cPauseKeyword_0_1; }

		//";"
		public Keyword getSemicolonKeyword_0_2() { return cSemicolonKeyword_0_2; }

		//(QName ":")? "halt" ";"
		public Group getGroup_1() { return cGroup_1; }

		//(QName ":")?
		public Group getGroup_1_0() { return cGroup_1_0; }

		//QName
		public RuleCall getQNameParserRuleCall_1_0_0() { return cQNameParserRuleCall_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_0_1() { return cColonKeyword_1_0_1; }

		//"halt"
		public Keyword getHaltKeyword_1_1() { return cHaltKeyword_1_1; }

		//";"
		public Keyword getSemicolonKeyword_1_2() { return cSemicolonKeyword_1_2; }

		//QName ":" name=QName "(" exprs=OptUtyExprList ")" ";"               
		//    // | QName "(" exprs=OptUtyExprList ")" ";"
		//     // | (QName ":")? "immediate"? "await" expr=dUtyExprs
		//    //  | (QName ":")? "weak"? "immediate"? "suspend" stmt=Stmt "when" ts=dUtyExprs
		//    //  | (QName ":")? "each" expr=dUtyExpr t08=Stmt
		//    //  | (QName ":")? "immediate"? "always" stmt=Stmt
		public Group getGroup_2() { return cGroup_2; }

		//QName
		public RuleCall getQNameParserRuleCall_2_0() { return cQNameParserRuleCall_2_0; }

		//":"
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }

		//name=QName
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }

		//QName
		public RuleCall getNameQNameParserRuleCall_2_2_0() { return cNameQNameParserRuleCall_2_2_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_2_3() { return cLeftParenthesisKeyword_2_3; }

		//exprs=OptUtyExprList
		public Assignment getExprsAssignment_2_4() { return cExprsAssignment_2_4; }

		//OptUtyExprList
		public RuleCall getExprsOptUtyExprListParserRuleCall_2_4_0() { return cExprsOptUtyExprListParserRuleCall_2_4_0; }

		//")"
		public Keyword getRightParenthesisKeyword_2_5() { return cRightParenthesisKeyword_2_5; }

		//";"   
		//    // | QName "(" exprs=OptUtyExprList ")" ";"
		//     // | (QName ":")? "immediate"? "await" expr=dUtyExprs
		//    //  | (QName ":")? "weak"? "immediate"? "suspend" stmt=Stmt "when" ts=dUtyExprs
		//    //  | (QName ":")? "each" expr=dUtyExpr t08=Stmt
		//    //  | (QName ":")? "immediate"? "always" stmt=Stmt
		public Keyword getSemicolonKeyword_2_6() { return cSemicolonKeyword_2_6; }

		//(QName "," name=QName ":")? "every" expr=dUtyExpr t10=AtomicStmt
		public Group getGroup_3() { return cGroup_3; }

		//(QName "," name=QName ":")?
		public Group getGroup_3_0() { return cGroup_3_0; }

		//QName
		public RuleCall getQNameParserRuleCall_3_0_0() { return cQNameParserRuleCall_3_0_0; }

		//","
		public Keyword getCommaKeyword_3_0_1() { return cCommaKeyword_3_0_1; }

		//name=QName
		public Assignment getNameAssignment_3_0_2() { return cNameAssignment_3_0_2; }

		//QName
		public RuleCall getNameQNameParserRuleCall_3_0_2_0() { return cNameQNameParserRuleCall_3_0_2_0; }

		//":"
		public Keyword getColonKeyword_3_0_3() { return cColonKeyword_3_0_3; }

		//"every"
		public Keyword getEveryKeyword_3_1() { return cEveryKeyword_3_1; }

		//expr=dUtyExpr
		public Assignment getExprAssignment_3_2() { return cExprAssignment_3_2; }

		//dUtyExpr
		public RuleCall getExprDUtyExprParserRuleCall_3_2_0() { return cExprDUtyExprParserRuleCall_3_2_0; }

		//t10=AtomicStmt
		public Assignment getT10Assignment_3_3() { return cT10Assignment_3_3; }

		//AtomicStmt
		public RuleCall getT10AtomicStmtParserRuleCall_3_3_0() { return cT10AtomicStmtParserRuleCall_3_3_0; }
	}

	public class NOTElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NOT");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cNotKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//NOT returns ecore::EString:
		//  "!"|"not"; 
		//         // tokens
		//         / *--------- comments and whitespaces --------------------- * / 
		//      / *      | [` ` `\t`  `\012`]  { Token lexbuf}         (* skip whitespace   *)
		//      | [`\n` `\r`]         { UtyExprs.ParsedLineNo := (!UtyExprs.ParsedLineNo)+1;
		//                              Token lexbuf}* /
		//      / * ---- boolean operators ------- * /
		public ParserRule getRule() { return rule; }

		//"!"|"not" 
		//         // tokens
		//         / *--------- comments and whitespaces --------------------- * / 
		//      / *      | [` ` `\t`  `\012`]  { Token lexbuf}         (* skip whitespace   *)
		//      | [`\n` `\r`]         { UtyExprs.ParsedLineNo := (!UtyExprs.ParsedLineNo)+1;
		//                              Token lexbuf}* /
		//      / * ---- boolean operators ------- * /
		public Alternatives getAlternatives() { return cAlternatives; }

		//"!"
		public Keyword getExclamationMarkKeyword_0() { return cExclamationMarkKeyword_0; }

		//"not"
		public Keyword getNotKeyword_1() { return cNotKeyword_1; }
	}

	public class ANDElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AND");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cAmpersandKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cAndKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//AND returns ecore::EString:
		//  "&"|"and";
		public ParserRule getRule() { return rule; }

		//"&"|"and"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"&"
		public Keyword getAmpersandKeyword_0() { return cAmpersandKeyword_0; }

		//"and"
		public Keyword getAndKeyword_1() { return cAndKeyword_1; }
	}

	public class XORElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "XOR");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cCircumflexAccentKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cXorKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//XOR returns ecore::EString:
		//  "^"|"xor";
		public ParserRule getRule() { return rule; }

		//"^"|"xor"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"^"
		public Keyword getCircumflexAccentKeyword_0() { return cCircumflexAccentKeyword_0; }

		//"xor"
		public Keyword getXorKeyword_1() { return cXorKeyword_1; }
	}

	public class ORElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OR");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cVerticalLineKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cOrKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//OR returns ecore::EString:
		//  "|"|"or";
		public ParserRule getRule() { return rule; }

		//"|"|"or"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"|"
		public Keyword getVerticalLineKeyword_0() { return cVerticalLineKeyword_0; }

		//"or"
		public Keyword getOrKeyword_1() { return cOrKeyword_1; }
	}

	public class IMPElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "IMP");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cHyphenMinusGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cImpKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//IMP returns ecore::EString:
		//  "->"|"imp";
		public ParserRule getRule() { return rule; }

		//"->"|"imp"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"->"
		public Keyword getHyphenMinusGreaterThanSignKeyword_0() { return cHyphenMinusGreaterThanSignKeyword_0; }

		//"imp"
		public Keyword getImpKeyword_1() { return cImpKeyword_1; }
	}

	public class EQUElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EQU");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cLessThanSignHyphenMinusGreaterThanSignKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cEquKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		//EQU returns ecore::EString:
		//  "<->"|"equ";
		public ParserRule getRule() { return rule; }

		//"<->"|"equ"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"<->"
		public Keyword getLessThanSignHyphenMinusGreaterThanSignKeyword_0() { return cLessThanSignHyphenMinusGreaterThanSignKeyword_0; }

		//"equ"
		public Keyword getEquKeyword_1() { return cEquKeyword_1; }
	}
	
	
	private QrzFileElements pQrzFile;
	private PackagePathElements pPackagePath;
	private ImportListElements pImportList;
	private PointedNameElements pPointedName;
	private MacroDefElements pMacroDef;
	private QModuleElements pQModule;
	private NameElements pName;
	private QNameElements pQName;
	private QNameListElements pQNameList;
	private StorageElements pStorage;
	private QTypeElements pQType;
	private QTypeListElements pQTypeList;
	private DimListElements pDimList;
	private InOutNameElements pInOutName;
	private InOutNameListElements pInOutNameList;
	private InOutNameListCommaElements pInOutNameListComma;
	private InterfaceElements pInterface;
	private InterfaceCommaElements pInterfaceComma;
	private InterfaceListElements pInterfaceList;
	private VerifTaskElements pVerifTask;
	private ControlListElements pControlList;
	private AssumeListElements pAssumeList;
	private FixpointEqListElements pFixpointEqList;
	private OptUtyExprElements pOptUtyExpr;
	private OptUtyExprListElements pOptUtyExprList;
	private UtyExprSelectListElements pUtyExprSelectList;
	private UtyExprElements pUtyExpr;
	private UtyActionElements pUtyAction;
	private Case_listElements pCase_list;
	private DUtyExprElements pDUtyExpr;
	private DUtyExprsElements pDUtyExprs;
	private GenericElements pGeneric;
	private LocStmtElements pLocStmt;
	private SeqStmtElements pSeqStmt;
	private StmtElements pStmt;
	private AtomicStmtElements pAtomicStmt;
	private NamedStmtElements pNamedStmt;
	private NOTElements pNOT;
	private ANDElements pAND;
	private XORElements pXOR;
	private ORElements pOR;
	private IMPElements pIMP;
	private EQUElements pEQU;
	private TerminalRule tBVCONST;
	private TerminalRule tOCTCONST;
	private TerminalRule tHEXCONST;
	private TerminalRule tNATCONST;
	private TerminalRule tREALCONST;
	private TerminalRule tID;
	private TerminalRule tML_COMMENT;
	private TerminalRule tSL_COMMENT;
	private TerminalRule tWS;
	
	private final GrammarProvider grammarProvider;

	@Inject
	public QuartzGrammarAccess(GrammarProvider grammarProvider) {
		this.grammarProvider = grammarProvider;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	
	//QrzFile:
	//  PackagePath? imports=ImportList? macros+=MacroDef* module=QModule;
	public QrzFileElements getQrzFileAccess() {
		return (pQrzFile != null) ? pQrzFile : (pQrzFile = new QrzFileElements());
	}
	
	public ParserRule getQrzFileRule() {
		return getQrzFileAccess().getRule();
	}

	//PackagePath:
	//  "package" PointedName ";";
	public PackagePathElements getPackagePathAccess() {
		return (pPackagePath != null) ? pPackagePath : (pPackagePath = new PackagePathElements());
	}
	
	public ParserRule getPackagePathRule() {
		return getPackagePathAccess().getRule();
	}

	//ImportList:
	//  ("import" imp+=PointedName ";")+;
	public ImportListElements getImportListAccess() {
		return (pImportList != null) ? pImportList : (pImportList = new ImportListElements());
	}
	
	public ParserRule getImportListRule() {
		return getImportListAccess().getRule();
	}

	//PointedName:
	//  id=ID ("." name+=PointedName)* all?=".*";
	public PointedNameElements getPointedNameAccess() {
		return (pPointedName != null) ? pPointedName : (pPointedName = new PointedNameElements());
	}
	
	public ParserRule getPointedNameRule() {
		return getPointedNameAccess().getRule();
	}

	//MacroDef:
	//  "macro" name=QName "(" args=QNameList ")" "=" expr=UtyExpr ";"|"macro" name=QName "(" ")"
	//  "=" expr=UtyExpr ";";
	public MacroDefElements getMacroDefAccess() {
		return (pMacroDef != null) ? pMacroDef : (pMacroDef = new MacroDefElements());
	}
	
	public ParserRule getMacroDefRule() {
		return getMacroDefAccess().getRule();
	}

	//QModule:
	//  "module" name=Name "(" intf=InterfaceList ")" stmt=LocStmt?; 
	//
	//              // obs+=ObservedSpecList*;
	//
	////ObservedSpecList : //"satisfies" "{" "observer" "(" InterfaceList ")" "{" stmts=LocStmt "}" proofs=ProofGoalList "}" 
	//                  //| "satisfies" "{" "observer" "(" InterfaceList ")" "{" stmts=LocStmt "}" "}" 
	//                 // | 
	//                 //"satisfies" "{" ProofGoalList "}" ;
	public QModuleElements getQModuleAccess() {
		return (pQModule != null) ? pQModule : (pQModule = new QModuleElements());
	}
	
	public ParserRule getQModuleRule() {
		return getQModuleAccess().getRule();
	}

	//Name:
	//  id=ID; // obs+=ObservedSpecList*;
	//
	////ObservedSpecList : //"satisfies" "{" "observer" "(" InterfaceList ")" "{" stmts=LocStmt "}" proofs=ProofGoalList "}" 
	//                  //| "satisfies" "{" "observer" "(" InterfaceList ")" "{" stmts=LocStmt "}" "}" 
	//                 // | 
	//                 //"satisfies" "{" ProofGoalList "}" ;
	public NameElements getNameAccess() {
		return (pName != null) ? pName : (pName = new NameElements());
	}
	
	public ParserRule getNameRule() {
		return getNameAccess().getRule();
	}

	//QName:
	//  Name;
	public QNameElements getQNameAccess() {
		return (pQName != null) ? pQName : (pQName = new QNameElements());
	}
	
	public ParserRule getQNameRule() {
		return getQNameAccess().getRule();
	}

	//QNameList:
	//  name=QName ("," names+=QName)*;
	public QNameListElements getQNameListAccess() {
		return (pQNameList != null) ? pQNameList : (pQNameList = new QNameListElements());
	}
	
	public ParserRule getQNameListRule() {
		return getQNameListAccess().getRule();
	}

	//Storage returns ecore::EString:
	//  "event"|"mem";
	public StorageElements getStorageAccess() {
		return (pStorage != null) ? pStorage : (pStorage = new StorageElements());
	}
	
	public ParserRule getStorageRule() {
		return getStorageAccess().getRule();
	}

	//QType:
	//  ("bool"|"real"|"bv"|"bv" "{" ta=UtyExpr "}"|"nat"|"nat" "{" tb=UtyExpr "}"|"int"|"int"
	//  "{" tc=UtyExpr "}") dims=DimList?; 
	//        
	//    
	//            
	//            
	//                  
	//            
	//                  
	//            
	//                  
	//          //| "(" QTypeList ")"
	public QTypeElements getQTypeAccess() {
		return (pQType != null) ? pQType : (pQType = new QTypeElements());
	}
	
	public ParserRule getQTypeRule() {
		return getQTypeAccess().getRule();
	}

	//QTypeList:
	//  type=QType ("*" t+=QType)+;
	public QTypeListElements getQTypeListAccess() {
		return (pQTypeList != null) ? pQTypeList : (pQTypeList = new QTypeListElements());
	}
	
	public ParserRule getQTypeListRule() {
		return getQTypeListAccess().getRule();
	}

	//DimList:
	//  ("[" expr+=UtyExpr "]")+;
	public DimListElements getDimListAccess() {
		return (pDimList != null) ? pDimList : (pDimList = new DimListElements());
	}
	
	public ParserRule getDimListRule() {
		return getDimListAccess().getRule();
	}

	//InOutName:
	//  ("?"|"!")? QName;
	public InOutNameElements getInOutNameAccess() {
		return (pInOutName != null) ? pInOutName : (pInOutName = new InOutNameElements());
	}
	
	public ParserRule getInOutNameRule() {
		return getInOutNameAccess().getRule();
	}

	//InOutNameList:
	//  InOutName ("," names+=InOutName)*;
	public InOutNameListElements getInOutNameListAccess() {
		return (pInOutNameList != null) ? pInOutNameList : (pInOutNameList = new InOutNameListElements());
	}
	
	public ParserRule getInOutNameListRule() {
		return getInOutNameListAccess().getRule();
	}

	//InOutNameListComma:
	//  (names+=InOutName ",")+;
	public InOutNameListCommaElements getInOutNameListCommaAccess() {
		return (pInOutNameListComma != null) ? pInOutNameListComma : (pInOutNameListComma = new InOutNameListCommaElements());
	}
	
	public ParserRule getInOutNameListCommaRule() {
		return getInOutNameListCommaAccess().getRule();
	}

	//Interface:
	//  (Storage? type=QType|"event") names=InOutNameList;
	public InterfaceElements getInterfaceAccess() {
		return (pInterface != null) ? pInterface : (pInterface = new InterfaceElements());
	}
	
	public ParserRule getInterfaceRule() {
		return getInterfaceAccess().getRule();
	}

	//InterfaceComma:
	//  (Storage? type=QType|"event") names=InOutNameListComma;
	public InterfaceCommaElements getInterfaceCommaAccess() {
		return (pInterfaceComma != null) ? pInterfaceComma : (pInterfaceComma = new InterfaceCommaElements());
	}
	
	public ParserRule getInterfaceCommaRule() {
		return getInterfaceCommaAccess().getRule();
	}

	//InterfaceList:
	//  intf=Interface ("," interfaces+=Interface)*;
	public InterfaceListElements getInterfaceListAccess() {
		return (pInterfaceList != null) ? pInterfaceList : (pInterfaceList = new InterfaceListElements());
	}
	
	public ParserRule getInterfaceListRule() {
		return getInterfaceListAccess().getRule();
	}

	//VerifTask returns ecore::EString:
	//  "[" "ProveE" "]"|"[" "ProveA" "]"|"[" "DisProveE" "]"|"[" "DisProveA" "]";
	public VerifTaskElements getVerifTaskAccess() {
		return (pVerifTask != null) ? pVerifTask : (pVerifTask = new VerifTaskElements());
	}
	
	public ParserRule getVerifTaskRule() {
		return getVerifTaskAccess().getRule();
	}

	//ControlList:
	//  "{" QNameList "}";
	public ControlListElements getControlListAccess() {
		return (pControlList != null) ? pControlList : (pControlList = new ControlListElements());
	}
	
	public ParserRule getControlListRule() {
		return getControlListAccess().getRule();
	}

	//AssumeList:
	//  "with" "{" QNameList "}"; 
	//
	//          
	//
	////ProofGoalList : (name+=QName (":" "assume" expr+=UtyExpr ";" (goals+=ProofGoalList)?   ))+;          
	//               //| (ver+=VerifTask)? (ctrl+=ControlList)? ":" "assert" expr+=UtyExpr ass+=AssumeList? ";"))+;
	public AssumeListElements getAssumeListAccess() {
		return (pAssumeList != null) ? pAssumeList : (pAssumeList = new AssumeListElements());
	}
	
	public ParserRule getAssumeListRule() {
		return getAssumeListAccess().getRule();
	}

	//FixpointEqList:
	//  (("mu"|"nu") name+=QName "=" expr+=UtyExpr ";")*; 
	//
	////ProofGoalList : (name+=QName (":" "assume" expr+=UtyExpr ";" (goals+=ProofGoalList)?   ))+;          
	//               //| (ver+=VerifTask)? (ctrl+=ControlList)? ":" "assert" expr+=UtyExpr ass+=AssumeList? ";"))+;
	public FixpointEqListElements getFixpointEqListAccess() {
		return (pFixpointEqList != null) ? pFixpointEqList : (pFixpointEqList = new FixpointEqListElements());
	}
	
	public ParserRule getFixpointEqListRule() {
		return getFixpointEqListAccess().getRule();
	}

	//OptUtyExpr:
	//  "_"|tk=UtyExpr;
	public OptUtyExprElements getOptUtyExprAccess() {
		return (pOptUtyExpr != null) ? pOptUtyExpr : (pOptUtyExpr = new OptUtyExprElements());
	}
	
	public ParserRule getOptUtyExprRule() {
		return getOptUtyExprAccess().getRule();
	}

	//OptUtyExprList:
	//  (OptUtyExpr ("," exprs+=OptUtyExpr)*)?;
	public OptUtyExprListElements getOptUtyExprListAccess() {
		return (pOptUtyExprList != null) ? pOptUtyExprList : (pOptUtyExprList = new OptUtyExprListElements());
	}
	
	public ParserRule getOptUtyExprListRule() {
		return getOptUtyExprListAccess().getRule();
	}

	//UtyExprSelectList:
	//  ("[" tk=UtyExpr "]")+;
	public UtyExprSelectListElements getUtyExprSelectListAccess() {
		return (pUtyExprSelectList != null) ? pUtyExprSelectList : (pUtyExprSelectList = new UtyExprSelectListElements());
	}
	
	public ParserRule getUtyExprSelectListRule() {
		return getUtyExprSelectListAccess().getRule();
	}

	//UtyExpr:
	//  "instant"|"inside"|"terminate"|"true"|"false"|BVCONST|OCTCONST|HEXCONST|NATCONST
	//  |REALCONST|QName|op=NOT expr=UtyExpr|"+" UtyExpr|"-" UtyExpr|"abs" "(" UtyExpr ")"|
	//  "sat" "{" UtyExpr "}" "(" t7=UtyExpr ")"|"der" "(" UtyExpr ")"|"reverse" "(" UtyExpr ")"|"{"
	//  UtyExpr "::" expr=UtyExpr "}"|"next" "(" UtyExpr ")"|"nat2bv" "(" UtyExpr ")"|"int2bv" "("
	//  UtyExpr ")"|"arr2bv" "(" QName ")"|"tup2bv" "(" UtyExpr ")"|"bv2nat" "(" UtyExpr ")"|
	//  "bv2int" "(" UtyExpr ")"|"nat2real" "(" UtyExpr ")"|"int2real" "(" UtyExpr ")"|"sin" "("
	//  UtyExpr ")"|"cos" "(" UtyExpr ")"|"exp" "(" UtyExpr "," expr=UtyExpr ")"|"log" "(" UtyExpr
	//  "," expr=UtyExpr ")"|"sizeOf" "(" UtyExpr ")"|"forall" Generic expr=UtyExpr|"exists"
	//  Generic expr=UtyExpr|"sum" Generic expr=UtyExpr|"X" UtyExpr|"G" UtyExpr|"F" UtyExpr|
	//  "PA" UtyExpr|"PF" UtyExpr|"PSX" UtyExpr|"PMX" UtyExpr|"E" UtyExpr|"A" UtyExpr|"[]"
	//  UtyExpr|"<>" UtyExpr|"[:]" UtyExpr|"<:>" UtyExpr|"mu" name=QName "." expr=UtyExpr|"nu"
	//  name=QName "." expr=UtyExpr|"fixpoints" FixpointEqList "in" expr2=UtyExpr|"forall"
	//  name=QName ":" type=QType "." expr=UtyExpr|"exists" name=QName ":" type=QType "." expr=
	//  UtyExpr|"(" UtyExpr ")"; 
	//
	//    
	//            
	//            
	//            
	//            
	//            
	//            
	//            
	//            
	//            
	//            
	//        //  | UtyExpr EQU UtyExpr
	//          // | UtyExpr XOR UtyExpr
	//          // | UtyExpr IMP UtyExpr
	//         //  | UtyExpr OR UtyExpr
	//         //  | UtyExpr AND UtyExpr
	//               
	//        //  | UtyExpr "<" UtyExpr
	//         //  | UtyExpr "<=" UtyExpr
	//         //  | UtyExpr ">" UtyExpr
	//         //  | UtyExpr ">=" UtyExpr
	//        //  | UtyExpr "==" UtyExpr
	//         //  | UtyExpr "!=" UtyExpr
	//         //  | UtyExpr "-" UtyExpr
	//         //  | UtyExpr "+" UtyExpr
	//        //   | UtyExpr "%" UtyExpr
	//        //   | UtyExpr "/" UtyExpr
	//        //   | UtyExpr "*" UtyExpr
	//               
	//              
	//                  
	//                        
	//                  
	//         // | UtyExpr "{" UtyExpr "}"
	//         // | UtyExpr "@" UtyExpr
	//         //  | UtyExpr "{" UtyExpr ":" UtyExpr "}"
	//         //  | UtyExpr "{" UtyExpr ":" "}"
	//         //  | UtyExpr "{" ":" UtyExpr "}"
	//                   
	//                    
	//        //  | UtyExpr UtyExprSelectList
	//         //  | UtyExpr "." UtyExpr
	//          // | "(" OptUtyExpr "," tl=OptUtyExprList ")"
	//          // | "(" UtyExpr "?" tm=UtyExpr ":" s=UtyExpr ")"
	//           //| QName "(" OptUtyExprList ")"
	//                   
	//                  
	//                  
	//                  
	//                  
	//                  
	//                  
	//                  
	//                  
	//                  
	//                  
	//                      
	//                      
	//                  
	//                
	//                
	//                
	// / *         | "[" UtyExpr "SU" expr=UtyExpr "]"
	//          | "[" UtyExpr "SB" expr=UtyExpr "]"
	//          | "[" UtyExpr "SW" expr=UtyExpr "]"
	//          | "[" UtyExpr "WU" expr=UtyExpr "]"
	//          | "[" UtyExpr "WB" expr=UtyExpr "]"
	//          | "[" UtyExpr "WW" expr=UtyExpr "]"
	//          | "[" UtyExpr "PSU" expr=UtyExpr "]"
	//          | "[" UtyExpr "PSB" expr=UtyExpr "]"
	//          | "[" UtyExpr "PSW" expr=UtyExpr "]"
	//          | "[" UtyExpr "PMU" expr=UtyExpr "]"
	//          | "[" UtyExpr "PMB" expr=UtyExpr "]"
	//          | "[" UtyExpr "PMW" expr=UtyExpr "]"* /
	public UtyExprElements getUtyExprAccess() {
		return (pUtyExpr != null) ? pUtyExpr : (pUtyExpr = new UtyExprElements());
	}
	
	public ParserRule getUtyExprRule() {
		return getUtyExprAccess().getRule();
	}

	//UtyAction:
	//  "emit" "next"? "(" UtyExpr ")"|"next" "(" UtyExpr ")" "=" t2=UtyExpr|"der" "(" UtyExpr ")"
	//  "<-" t4=UtyExpr|"assume" "(" UtyExpr ")"|"assert" "(" UtyExpr ")"; 
	//
	//            
	//            //| UtyExpr "=" t1=UtyExpr
	//                         
	//            //| UtyExpr "<-" t3=UtyExpr
	//                         
	//                    
	//                    
	//            //| RELEASECAN "(" UtyExpr ")"
	//           / *  | "release" "(" UtyExpr ")"
	//            | "constrainS" "(" UtyExpr ")"
	//            | "constrainM" "(" UtyExpr ")"
	//            | "constrainE" "(" UtyExpr ")"
	//            | "constrainSM" "(" UtyExpr ")"
	//            | "constrainSE" "(" UtyExpr ")"
	//            | "constrainME" "(" UtyExpr ")"
	//            | "constrainSME" "(" UtyExpr ")"* /
	//            //| QName ":" "assume" "(" expr=UtyExpr ")"
	//            // | QName ":" "assert" "(" expr=UtyExpr ")"
	public UtyActionElements getUtyActionAccess() {
		return (pUtyAction != null) ? pUtyAction : (pUtyAction = new UtyActionElements());
	}
	
	public ParserRule getUtyActionRule() {
		return getUtyActionAccess().getRule();
	}

	//case_list:
	//  (exp+=dUtyExpr "do" stmt+=Stmt)*;
	public Case_listElements getCase_listAccess() {
		return (pCase_list != null) ? pCase_list : (pCase_list = new Case_listElements());
	}
	
	public ParserRule getCase_listRule() {
		return getCase_listAccess().getRule();
	}

	//dUtyExpr:
	//  "(" UtyExpr ")";
	public DUtyExprElements getDUtyExprAccess() {
		return (pDUtyExpr != null) ? pDUtyExpr : (pDUtyExpr = new DUtyExprElements());
	}
	
	public ParserRule getDUtyExprRule() {
		return getDUtyExprAccess().getRule();
	}

	//dUtyExprs:
	//  dUtyExpr ";";
	public DUtyExprsElements getDUtyExprsAccess() {
		return (pDUtyExprs != null) ? pDUtyExprs : (pDUtyExprs = new DUtyExprsElements());
	}
	
	public ParserRule getDUtyExprsRule() {
		return getDUtyExprsAccess().getRule();
	}

	//Generic:
	//  "(" QName "=" t6=UtyExpr ".." t5=UtyExpr ")";
	public GenericElements getGenericAccess() {
		return (pGeneric != null) ? pGeneric : (pGeneric = new GenericElements());
	}
	
	public ParserRule getGenericRule() {
		return getGenericAccess().getRule();
	}

	//LocStmt:
	//  "{" (locals+=InterfaceList ";")* stmt=Stmt "}";
	public LocStmtElements getLocStmtAccess() {
		return (pLocStmt != null) ? pLocStmt : (pLocStmt = new LocStmtElements());
	}
	
	public ParserRule getLocStmtRule() {
		return getLocStmtAccess().getRule();
	}

	//SeqStmt:
	//  s+=AtomicStmt+;
	public SeqStmtElements getSeqStmtAccess() {
		return (pSeqStmt != null) ? pSeqStmt : (pSeqStmt = new SeqStmtElements());
	}
	
	public ParserRule getSeqStmtRule() {
		return getSeqStmtAccess().getRule();
	}

	//Stmt:
	//  left=SeqStmt (("||"|"|||"|OR|"&&"|"&&&"|AND) right+=SeqStmt)*;
	public StmtElements getStmtAccess() {
		return (pStmt != null) ? pStmt : (pStmt = new StmtElements());
	}
	
	public ParserRule getStmtRule() {
		return getStmtAccess().getRule();
	}

	//AtomicStmt:
	//  "nothing" ";"|UtyAction ";"|NamedStmt|"weak"? "immediate"? "abort" AtomicStmt "when"
	//  expr=dUtyExprs|"immediate"? ("during"|"final") AtomicStmt "do" t03=AtomicStmt|
	//  "abstract" AtomicStmt|"case" case_list "default" t15=AtomicStmt|"choose" Generic t23=
	//  AtomicStmt|"do" AtomicStmt "while" t06=dUtyExprs|"for" Generic ("do" ("||"|"&&"|"|||"|
	//  "&&&"|OR|AND))? t=AtomicStmt|"if" dUtyExpr t13=AtomicStmt "else" t14=AtomicStmt|"let"
	//  "(" QName "=" expr=UtyExpr ")" t24=AtomicStmt|"loop" AtomicStmt|"while" dUtyExpr t07=
	//  AtomicStmt|LocStmt; 
	//
	//    
	//        
	//       
	//                
	//                  
	//        
	//            
	//   // | "choose" AtomicStmt "else" t16=AtomicStmt
	public AtomicStmtElements getAtomicStmtAccess() {
		return (pAtomicStmt != null) ? pAtomicStmt : (pAtomicStmt = new AtomicStmtElements());
	}
	
	public ParserRule getAtomicStmtRule() {
		return getAtomicStmtAccess().getRule();
	}

	//NamedStmt:
	//  (QName ":")? "pause" ";"|(QName ":")? "halt" ";"|QName ":" name=QName "(" exprs=
	//  OptUtyExprList ")" ";"|(QName "," name=QName ":")? "every" expr=dUtyExpr t10=AtomicStmt; 
	//     
	//       
	//
	//            
	//             
	//                   
	//    // | QName "(" exprs=OptUtyExprList ")" ";"
	//     // | (QName ":")? "immediate"? "await" expr=dUtyExprs
	//    //  | (QName ":")? "weak"? "immediate"? "suspend" stmt=Stmt "when" ts=dUtyExprs
	//    //  | (QName ":")? "each" expr=dUtyExpr t08=Stmt
	//    //  | (QName ":")? "immediate"? "always" stmt=Stmt
	//                    
	//         // tokens
	//         / *--------- comments and whitespaces --------------------- * / 
	//      / *      | [` ` `\t`  `\012`]  { Token lexbuf}         (* skip whitespace   *)
	//      | [`\n` `\r`]         { UtyExprs.ParsedLineNo := (!UtyExprs.ParsedLineNo)+1;
	//                              Token lexbuf}* /
	//      / * ---- boolean operators ------- * /
	public NamedStmtElements getNamedStmtAccess() {
		return (pNamedStmt != null) ? pNamedStmt : (pNamedStmt = new NamedStmtElements());
	}
	
	public ParserRule getNamedStmtRule() {
		return getNamedStmtAccess().getRule();
	}

	//NOT returns ecore::EString:
	//  "!"|"not"; 
	//         // tokens
	//         / *--------- comments and whitespaces --------------------- * / 
	//      / *      | [` ` `\t`  `\012`]  { Token lexbuf}         (* skip whitespace   *)
	//      | [`\n` `\r`]         { UtyExprs.ParsedLineNo := (!UtyExprs.ParsedLineNo)+1;
	//                              Token lexbuf}* /
	//      / * ---- boolean operators ------- * /
	public NOTElements getNOTAccess() {
		return (pNOT != null) ? pNOT : (pNOT = new NOTElements());
	}
	
	public ParserRule getNOTRule() {
		return getNOTAccess().getRule();
	}

	//AND returns ecore::EString:
	//  "&"|"and";
	public ANDElements getANDAccess() {
		return (pAND != null) ? pAND : (pAND = new ANDElements());
	}
	
	public ParserRule getANDRule() {
		return getANDAccess().getRule();
	}

	//XOR returns ecore::EString:
	//  "^"|"xor";
	public XORElements getXORAccess() {
		return (pXOR != null) ? pXOR : (pXOR = new XORElements());
	}
	
	public ParserRule getXORRule() {
		return getXORAccess().getRule();
	}

	//OR returns ecore::EString:
	//  "|"|"or";
	public ORElements getORAccess() {
		return (pOR != null) ? pOR : (pOR = new ORElements());
	}
	
	public ParserRule getORRule() {
		return getORAccess().getRule();
	}

	//IMP returns ecore::EString:
	//  "->"|"imp";
	public IMPElements getIMPAccess() {
		return (pIMP != null) ? pIMP : (pIMP = new IMPElements());
	}
	
	public ParserRule getIMPRule() {
		return getIMPAccess().getRule();
	}

	//EQU returns ecore::EString:
	//  "<->"|"equ";
	public EQUElements getEQUAccess() {
		return (pEQU != null) ? pEQU : (pEQU = new EQUElements());
	}
	
	public ParserRule getEQURule() {
		return getEQUAccess().getRule();
	}

	//terminal BVCONST:
	//  "0b"; 
	//
	//      // ('0' | '1')+;
	public TerminalRule getBVCONSTRule() {
		return (tBVCONST != null) ? tBVCONST : (tBVCONST = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "BVCONST"));
	} 

	//terminal OCTCONST:
	//  "0o" "0".."7"+;   // ('0' | '1')+;
	public TerminalRule getOCTCONSTRule() {
		return (tOCTCONST != null) ? tOCTCONST : (tOCTCONST = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "OCTCONST"));
	} 

	//terminal HEXCONST:
	//  "0x" ("0".."9" | "A".."F")+;
	public TerminalRule getHEXCONSTRule() {
		return (tHEXCONST != null) ? tHEXCONST : (tHEXCONST = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "HEXCONST"));
	} 

	//terminal NATCONST:
	//  "0".."9"*;
	public TerminalRule getNATCONSTRule() {
		return (tNATCONST != null) ? tNATCONST : (tNATCONST = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NATCONST"));
	} 

	//terminal REALCONST:
	//  ("+" | "-")? "0".."9"+ "." "0".."9"+ ("e" ("+" | "-")? "0".."9"+)?;
	public TerminalRule getREALCONSTRule() {
		return (tREALCONST != null) ? tREALCONST : (tREALCONST = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "REALCONST"));
	} 

	//terminal ID:
	//  ("a".."z" | "A".."Z") ("_"? ("a".."z" | "A".."Z" | "0".."9"))*;
	public TerminalRule getIDRule() {
		return (tID != null) ? tID : (tID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ID"));
	} 

	//terminal ML_COMMENT:
	//  "/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return (tML_COMMENT != null) ? tML_COMMENT : (tML_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "ML_COMMENT"));
	} 

	//terminal SL_COMMENT:
	//  "//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return (tSL_COMMENT != null) ? tSL_COMMENT : (tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "SL_COMMENT"));
	} 

	//terminal WS:
	//  (" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return (tWS != null) ? tWS : (tWS = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "WS"));
	} 
}
