import synccharts;
import annotations;
import expressions;
import s;
extension org::eclipse::xtend::util::stdlib::io;          // debug printouts
extension org::eclipse::xtend::util::stdlib::crossref;    // find elements that reference others
extension org::eclipse::xtend::util::stdlib::cloning;     // copy model elements and whole trees
extension org::eclipse::xtend::util::stdlib::tracing;     // create map between transformed objects
extension org::eclipse::xtend::util::stdlib::issues;      // pass messages back to java (e.g. to UI)

List[Instruction] getPauseInstruction(synccharts::State state):
	let out = {}:
	let pause = new Pause:
		if !(state.isFinal || state.outgoingTransitions.isEmpty) then
			out.add(pause)
		else
			null
		-> 
		out
;