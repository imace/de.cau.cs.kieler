Where the options are:

-d <dir|file>. 					Output directory. If there is a single input file, this can be a file. 
-m <mimeType>. 					Output mime type, one of image/png, image/jpeg, application/pdf, image/tiff. 
-w <width>. 					Output width. This is a floating point value. 
-h <height>. 					Output height. This is a floating point value. 
-maxw <width>. 					Maximum output width. This is a floating point value. 
-maxh <height>. 				Maximum output height. This is a floating point value. 
-a <area>. 						Output area. The format for <area> is x,y,w,h, where x, y, w and h are floating point values. 
-bg <color>. 					Uuput color. The format for <color> is a.r.g.b, where a, r, g and b are integer values. 
-cssMedia <media>.				CSS media type for which the source SVG files should be converted. 
-cssAlternate <alternate>. 		CSS alternate stylesheet to use when converting the source SVG files. 
-cssUser<userStylesheet>. 		CSS user stylesheet URI to apply to converted SVG documents in addition to any other referened or embeded stylesheets. 
-lang <userLanguage>. 			User language to use when converting SVG documents. 
-q <quality>. 					Quality for the output image. This is only relevant for the image/jpeg mime type. 
-dpi <resolution>. 				Resolution for the ouptut image. 
-validate 						Controls whether the source SVG files should be validated. 
-onload 						Controls if the source SVG files must be rasterize after dispatching the 'onload' event. 
-scriptSecurityOff 				Removes any security check on the scripts running as a result of dispatching the onload event. 
-scripts<listOfAllowedScripts> 	List of script types (i.e., values for the type attribute in the <script> tag) which should be loaded. 

For example:

java -jar batik-rasterizer.jar -d myDir -m image/jpeg samples/*.svg will generate JPEG images for all the SVG files found in the samples directory. 
NOTE: to run MIME type application/pdf need to have (see FOP) installed.
