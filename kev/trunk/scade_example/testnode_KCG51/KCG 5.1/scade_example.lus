/*$*************** SCADE Translator KCG Version 5.1.0 (build i4)  ****************
** Command :
** s2L -model       U:\shared\modelgui\trunk\scade_example\scade_example.saofdm
**         -node testnode
**         -lus U:\shared\modelgui\trunk\scade_example\testnode_KCG51\KCG 5.1/scade_example.lus
**         -opt 
** last modification date for U:\shared\modelgui\trunk\scade_example\scade_example.saofdm (MM/DD/YYYY): 01/11/2007 17:46:56
** last modification date for libdigital.saofdm (MM/DD/YYYY): 01/11/2007 17:46:56
** last modification date for liblinear.saofdm (MM/DD/YYYY): 01/11/2007 17:46:56
** last modification date for libmath.saofdm (MM/DD/YYYY): 01/11/2007 17:46:56
** last modification date for libmathadvanced.saofdm (MM/DD/YYYY): 01/11/2007 17:46:56
** last modification date for libpwlinear.saofdm (MM/DD/YYYY): 01/11/2007 17:46:56
** last modification date for libverification.saofdm (MM/DD/YYYY): 01/11/2007 17:46:56
** last modification date for libssm.saofdm (MM/DD/YYYY): 01/11/2007 17:46:56
** date of generation (MM/DD/YYYY): 01/11/2007 17:45:47
*****************************************************$*/

type
/*let type TypeBlock1*/
    intArray10 = [int , int , int , int , int , int , int , int , int , int] ; 
    guiControlData = [integer_val : int , float_val : real , boolean_val : bool] ; 
    guiDisplayData = [waterlevel : int] ; 
    states = int    /*0 : state0 , 1 : state1*/ ; 
/*tel  ; */


const 
/*Enumerated constants*/
    state0 = 0 /*! enum */ ; 
    state1 = 1 /*! enum */ ; 
node SAOCounter_0(Incr : int ; /*hidden */Reset : bool) 
	returns (Count : int) /*! notes "Tracabilite_1" { Tracabilite = "Instantiate from Counter" } */ ;

var
_L45_testnode : int ;
let
/*let equa eq_counter[ , ]*/

Count = ((if Reset then (_L45_testnode) else (fby(Count , 1 , _L45_testnode)))) + Incr ;

_L45_testnode = Incr - Incr ;
/*tel ;*/
tel ;/* End of blocks of node :  SAOCounter_0*/


node testnode(guiControlData : guiControlData) 
	returns (guiDisplayData : guiDisplayData) ;

var
boolean_val : bool ;
enumeration_val : states ;
float_val : real ;
integer_val : int ;
_L20_testnode : int ;
let
/*let equa eq_testnode_1[ , ]*/

guiDisplayData = _TO_guiDisplayData(_L20_testnode) /*! occ "1" */  ;

integer_val , float_val , boolean_val = _FROM_guiControlData(guiControlData) /*! occ "1" */  ;

_L20_testnode = SAOCounter_0(1 , fby(_L20_testnode >= 100 , 1 , true)) /*! occ "1" */  ;
/*tel ;*/
tel ;/* End of blocks of node :  testnode*/


/*$*************** SCADE Translator KCG Version 5.1.0 (build i4)  ****************
** End of file U:\shared\modelgui\trunk\scade_example\testnode_KCG51\KCG 5.1/scade_example.lus
** End of generation (MM/DD/YYYY): 01/11/2007 17:45:48
*****************************************************$*/

