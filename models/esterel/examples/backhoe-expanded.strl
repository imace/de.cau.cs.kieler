module BACKHOE :
relation BOOM_OUT # BOOM_IN;
relation STICK_OUT # STICK_IN;
relation BUCKET_OUT # BUCKET_IN;
relation LEGS_OUT # LEGS_IN; input   BOOM_OUT, BOOM_IN,
        STICK_OUT, STICK_IN,
        BUCKET_OUT, BUCKET_IN,
        LEGS_OUT, LEGS_IN; input   STOP_BUTTON, EXTEND_BUTTON, RETRACT_BUTTON;

input   FSECOND;

output  ALARM_LAMP,
        DONE_LAMP,
        CANCEL_LAMP;

output  BOOM_PUSH, BOOM_PULL, BOOM_DRIVE;
output  STICK_PUSH, STICK_PULL, STICK_DRIVE;
output  BUCKET_PUSH, BUCKET_PULL, BUCKET_DRIVE;
output  LEGS_RAISE, LEGS_LOWER, LEGS_STOP;

input FSECOND;
output ALARM_LAMP: boolean;

abort
  loop
    signal T in
    weak abort
      loop
        await
          case immediate STOP_BUTTON do emit LEGS_STOP
          case immediate EXTEND_BUTTON do emit LEGS_LOWER
          case immediate RETRACT_BUTTON do emit LEGS_RAISE
        end await
each [STOP_BUTTON or EXTEND_BUTTON or RETRACT_BUTTON]
    ||
      loop
        abort
          await 2 FSECOND;
          emit T; halt
        when LEGS_IN
      end loop
    when T end signal;
      emit ALARM_LAMP;
      emit LEGS_RAISE;
      await LEGS_IN;
      await FSECOND end loop
when LEGS_OUT;
emit LEGS_STOP;
emit DONE_LAMP;

abort
  loop
    abort
      await EXTEND_BUTTON;
      abort
        sustain STICK_PULL || sustain  STICK_DRIVE
        || sustain BUCKET_PULL || sustain BUCKET_DRIVE
        || pause;
    suspend
      loop
        emit ALARM_LAMP;
        pause;
        pause end loop
when [not FSECOND]
when [STICK_OUT and BUCKET_OUT];
      [sustain BOOM_PUSH || sustain  BOOM_DRIVE]
    when RETRACT_BUTTON;
    emit CANCEL_LAMP;
    abort
      sustain STICK_PUSH || sustain  STICK_DRIVE
      || sustain BUCKET_PUSH || sustain BUCKET_DRIVE
      || sustain BOOM_PUSH || sustain  BOOM_DRIVE
    when [STICK_IN and BUCKET_IN and BOOM_IN]
  end loop
when BOOM_OUT;
abort
  sustain STICK_PUSH || sustain STICK_DRIVE
  || sustain BUCKET_PUSH || sustain BUCKET_DRIVE
when [STICK_IN and BUCKET_IN];
await RETRACT_BUTTON;
abort
  [sustain BOOM_PULL || sustain BOOM_DRIVE]
when BOOM_IN

end module